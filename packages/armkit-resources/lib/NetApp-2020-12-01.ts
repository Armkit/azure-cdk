            // generated by armkit
            import { ArmResource } from '@yetics/armkit-core';
            import { Construct } from 'constructs';

            /**
             * Microsoft.NetApp/netAppAccounts
             *
             * @schema Microsoft.NetApp.netAppAccounts
             */
            export class NetAppAccounts extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/backupPolicies
             *
             * @schema Microsoft.NetApp.netAppAccounts_backupPolicies
             */
            export class NetAppAccountsBackupPolicies extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_backupPolicies" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsBackupPoliciesOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_backupPolicies',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools
             */
            export class NetAppAccountsCapacityPools extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_capacityPools" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsCapacityPoolsOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_capacityPools',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes
             */
            export class NetAppAccountsCapacityPoolsVolumes extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_capacityPools_volumes" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsCapacityPoolsVolumesOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_capacityPools_volumes',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups
             */
            export class NetAppAccountsCapacityPoolsVolumesBackups extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsCapacityPoolsVolumesBackupsOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_capacityPools_volumes_backups',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots
             */
            export class NetAppAccountsCapacityPoolsVolumesSnapshots extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsCapacityPoolsVolumesSnapshotsOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_capacityPools_volumes_snapshots',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/snapshotPolicies
             *
             * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies
             */
            export class NetAppAccountsSnapshotPolicies extends ArmResource {
              /**
               * Defines a "Microsoft.NetApp.netAppAccounts_snapshotPolicies" Arm Template object
               * @param scope the scope in which to define this object
               * @param name a scope-local name for the object
               * @param options configuration options
               */
              public constructor(scope: Construct, name: string, options: NetAppAccountsSnapshotPoliciesOptions) {
                super(scope, name, {
                  ...options,
                  armResourceType: 'netAppAccounts_snapshotPolicies',
                });
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts
             *
             * @schema Microsoft.NetApp.netAppAccounts
             */
            export interface NetAppAccountsOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts#location
               */
              readonly location: string;

              /**
               * The name of the NetApp account
               *
               * @schema Microsoft.NetApp.netAppAccounts#name
               */
              readonly name: string;

              /**
               * NetApp account properties
               *
               * @schema Microsoft.NetApp.netAppAccounts#properties
               */
              readonly properties: AccountProperties;

              /**
               * @schema Microsoft.NetApp.netAppAccounts#resources
               */
              readonly resources?: MicrosoftNetAppNetAppAccountsResources[];

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema Microsoft.NetApp.netAppAccounts#tags
               */
              readonly tags?: MicrosoftNetAppNetAppAccountsTags;

              /**
               * @schema Microsoft.NetApp.netAppAccounts#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/backupPolicies
             *
             * @schema Microsoft.NetApp.netAppAccounts_backupPolicies
             */
            export interface NetAppAccountsBackupPoliciesOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsBackupPoliciesApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#location
               */
              readonly location: string;

              /**
               * Backup policy Name which uniquely identify backup policy.
               *
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#name
               */
              readonly name: string;

              /**
               * Backup policy properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#properties
               */
              readonly properties: BackupPolicyProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#tags
               */
              readonly tags?: MicrosoftNetAppNetAppAccountsBackupPoliciesTags;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_backupPolicies#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsBackupPoliciesType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools
             */
            export interface NetAppAccountsCapacityPoolsOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsCapacityPoolsApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#location
               */
              readonly location: string;

              /**
               * The name of the capacity pool
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#name
               */
              readonly name: MicrosoftNetAppNetAppAccountsCapacityPoolsNamePattern;

              /**
               * Pool properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#properties
               */
              readonly properties: PoolProperties;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#resources
               */
              readonly resources?: NetAppAccountsCapacityPoolsVolumesChildResource[];

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#tags
               */
              readonly tags?: MicrosoftNetAppNetAppAccountsCapacityPoolsTags;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsCapacityPoolsType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes
             */
            export interface NetAppAccountsCapacityPoolsVolumesOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#location
               */
              readonly location: string;

              /**
               * The name of the volume
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#name
               */
              readonly name: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesNamePattern;

              /**
               * Volume properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#properties
               */
              readonly properties: VolumeProperties;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#resources
               */
              readonly resources?: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources[];

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#tags
               */
              readonly tags?: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesTags;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups
             */
            export interface NetAppAccountsCapacityPoolsVolumesBackupsOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups#location
               */
              readonly location: string;

              /**
               * The name of the backup
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups#name
               */
              readonly name: string;

              /**
               * Backup properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups#properties
               */
              readonly properties: BackupProperties;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_backups#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
             *
             * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots
             */
            export interface NetAppAccountsCapacityPoolsVolumesSnapshotsOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots#location
               */
              readonly location: string;

              /**
               * The name of the mount target
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots#name
               */
              readonly name: string;

              /**
               * Snapshot properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots#properties
               */
              readonly properties: SnapshotProperties;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_capacityPools_volumes_snapshots#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/snapshotPolicies
             *
             * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies
             */
            export interface NetAppAccountsSnapshotPoliciesOptions {
              /**
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#apiVersion
               */
              readonly apiVersion?: MicrosoftNetAppNetAppAccountsSnapshotPoliciesApiVersion;

              /**
               * Resource location
               *
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#location
               */
              readonly location: string;

              /**
               * The name of the snapshot policy target
               *
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#name
               */
              readonly name: string;

              /**
               * Snapshot policy properties
               *
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#properties
               */
              readonly properties: SnapshotPolicyProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#tags
               */
              readonly tags?: MicrosoftNetAppNetAppAccountsSnapshotPoliciesTags;

              /**
               * @schema Microsoft.NetApp.netAppAccounts_snapshotPolicies#type
               */
              readonly type: MicrosoftNetAppNetAppAccountsSnapshotPoliciesType;

            }

            export enum MicrosoftNetAppNetAppAccountsApiVersion {
              "MicrosoftNetAppNetAppAccountsApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * NetApp account properties
             *
             * @schema #/definitions/AccountProperties
             */
            export interface AccountProperties {
              /**
               * Active Directories
               *
               * @schema #/definitions/AccountProperties#activeDirectories
               */
              readonly activeDirectories?: ActiveDirectory[];

              /**
               * Encryption settings
               *
               * @schema #/definitions/AccountProperties#encryption
               */
              readonly encryption?: AccountEncryption;

            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsResources
             */
            export class MicrosoftNetAppNetAppAccountsResources {
              public static fromNetAppAccountsCapacityPoolsChildResource(value: NetAppAccountsCapacityPoolsChildResource): MicrosoftNetAppNetAppAccountsResources {
                return new MicrosoftNetAppNetAppAccountsResources(value);
              }
              public static fromNetAppAccountsSnapshotPoliciesChildResource(value: NetAppAccountsSnapshotPoliciesChildResource): MicrosoftNetAppNetAppAccountsResources {
                return new MicrosoftNetAppNetAppAccountsResources(value);
              }
              public static fromNetAppAccountsBackupPoliciesChildResource(value: NetAppAccountsBackupPoliciesChildResource): MicrosoftNetAppNetAppAccountsResources {
                return new MicrosoftNetAppNetAppAccountsResources(value);
              }
              private constructor(value: any) {
                Object.defineProperty(this, 'resolve', { value: () => value });
              }
            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsTags
             */
            export interface MicrosoftNetAppNetAppAccountsTags {
            }

            export enum MicrosoftNetAppNetAppAccountsType {
              "MicrosoftNetAppNetAppAccountsType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS" = 'Microsoft.NetApp/netAppAccounts',
            }

            export enum MicrosoftNetAppNetAppAccountsBackupPoliciesApiVersion {
              "MicrosoftNetAppNetAppAccountsBackupPoliciesApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * Backup policy properties
             *
             * @schema #/definitions/BackupPolicyProperties
             */
            export interface BackupPolicyProperties {
              /**
               * Daily backups count to keep
               *
               * @schema #/definitions/BackupPolicyProperties#dailyBackupsToKeep
               */
              readonly dailyBackupsToKeep?: number;

              /**
               * The property to decide policy is enabled or not
               *
               * @schema #/definitions/BackupPolicyProperties#enabled
               */
              readonly enabled?: boolean;

              /**
               * Monthly backups count to keep
               *
               * @schema #/definitions/BackupPolicyProperties#monthlyBackupsToKeep
               */
              readonly monthlyBackupsToKeep?: number;

              /**
               * A list of volumes assigned to this policy
               *
               * @schema #/definitions/BackupPolicyProperties#volumeBackups
               */
              readonly volumeBackups?: VolumeBackups[];

              /**
               * Volumes using current backup policy
               *
               * @schema #/definitions/BackupPolicyProperties#volumesAssigned
               */
              readonly volumesAssigned?: number;

              /**
               * Weekly backups count to keep
               *
               * @schema #/definitions/BackupPolicyProperties#weeklyBackupsToKeep
               */
              readonly weeklyBackupsToKeep?: number;

              /**
               * Yearly backups count to keep
               *
               * @schema #/definitions/BackupPolicyProperties#yearlyBackupsToKeep
               */
              readonly yearlyBackupsToKeep?: number;

            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsBackupPoliciesTags
             */
            export interface MicrosoftNetAppNetAppAccountsBackupPoliciesTags {
            }

            export enum MicrosoftNetAppNetAppAccountsBackupPoliciesType {
              "MicrosoftNetAppNetAppAccountsBackupPoliciesType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_BACKUP_POLICIES" = 'Microsoft.NetApp/netAppAccounts/backupPolicies',
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsApiVersion {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsCapacityPoolsName
             */
            export class MicrosoftNetAppNetAppAccountsCapacityPoolsNamePattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * Pool properties
             *
             * @schema #/definitions/PoolProperties
             */
            export interface PoolProperties {
              /**
               * The qos type of the pool.
               *
               * @schema #/definitions/PoolProperties#qosType
               */
              readonly qosType?: PoolPropertiesQosType;

              /**
               * The service level of the file system.
               *
               * @schema #/definitions/PoolProperties#serviceLevel
               */
              readonly serviceLevel: PoolPropertiesServiceLevel;

              /**
               * Provisioned size of the pool (in bytes). Allowed values are in 4TiB chunks (value must be multiply of 4398046511104).
               *
               * @schema #/definitions/PoolProperties#size
               */
              readonly size: number;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes
             *
             * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource
             */
            export interface NetAppAccountsCapacityPoolsVolumesChildResource {
              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsCapacityPoolsVolumesChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#location
               */
              readonly location: string;

              /**
               * The name of the volume
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#name
               */
              readonly name: NetAppAccountsCapacityPoolsVolumesChildResourceNamePattern;

              /**
               * Volume properties
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#properties
               */
              readonly properties: VolumeProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#tags
               */
              readonly tags?: NetAppAccountsCapacityPoolsVolumesChildResourceTags;

              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_childResource#type
               */
              readonly type: NetAppAccountsCapacityPoolsVolumesChildResourceType;

            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsCapacityPoolsTags
             */
            export interface MicrosoftNetAppNetAppAccountsCapacityPoolsTags {
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsType {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_CAPACITY_POOLS" = 'Microsoft.NetApp/netAppAccounts/capacityPools',
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesApiVersion {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesName
             */
            export class MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesNamePattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * Volume properties
             *
             * @schema #/definitions/VolumeProperties
             */
            export interface VolumeProperties {
              /**
               * UUID v4 or resource identifier used to identify the Backup.
               *
               * @schema #/definitions/VolumeProperties#backupId
               */
              readonly backupId?: VolumePropertiesBackupIdPattern;

              /**
               * A unique file path for the volume. Used when creating mount targets
               *
               * @schema #/definitions/VolumeProperties#creationToken
               */
              readonly creationToken: VolumePropertiesCreationTokenPattern;

              /**
               * DataProtection type volumes include an object containing details of the replication
               *
               * @schema #/definitions/VolumeProperties#dataProtection
               */
              readonly dataProtection?: VolumePropertiesDataProtection;

              /**
               * Encryption Key Source. Possible values are: 'Microsoft.NetApp'
               *
               * @schema #/definitions/VolumeProperties#encryptionKeySource
               */
              readonly encryptionKeySource?: string;

              /**
               * Set of export policy rules
               *
               * @schema #/definitions/VolumeProperties#exportPolicy
               */
              readonly exportPolicy?: VolumePropertiesExportPolicy;

              /**
               * Restoring
               *
               * @schema #/definitions/VolumeProperties#isRestoring
               */
              readonly isRestoring?: boolean;

              /**
               * Describe if a volume is KerberosEnabled. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/VolumeProperties#kerberosEnabled
               */
              readonly kerberosEnabled?: boolean;

              /**
               * Specifies whether LDAP is enabled or not for a given NFS volume.
               *
               * @schema #/definitions/VolumeProperties#ldapEnabled
               */
              readonly ldapEnabled?: boolean;

              /**
               * Set of protocol types, default NFSv3, CIFS for SMB protocol
               *
               * @schema #/definitions/VolumeProperties#protocolTypes
               */
              readonly protocolTypes?: string[];

              /**
               * The security style of volume, default unix, defaults to ntfs for dual protocol or CIFS protocol.
               *
               * @schema #/definitions/VolumeProperties#securityStyle
               */
              readonly securityStyle?: VolumePropertiesSecurityStyle;

              /**
               * The service level of the file system.
               *
               * @schema #/definitions/VolumeProperties#serviceLevel
               */
              readonly serviceLevel?: VolumePropertiesServiceLevel;

              /**
               * Enables continuously available share property for smb volume. Only applicable for SMB volume
               *
               * @schema #/definitions/VolumeProperties#smbContinuouslyAvailable
               */
              readonly smbContinuouslyAvailable?: boolean;

              /**
               * Enables encryption for in-flight smb3 data. Only applicable for SMB/DualProtocol volume. To be used with swagger version 2020-08-01 or later
               *
               * @schema #/definitions/VolumeProperties#smbEncryption
               */
              readonly smbEncryption?: boolean;

              /**
               * If enabled (true) the volume will contain a read-only snapshot directory which provides access to each of the volume's snapshots (default to true).
               *
               * @schema #/definitions/VolumeProperties#snapshotDirectoryVisible
               */
              readonly snapshotDirectoryVisible?: boolean;

              /**
               * UUID v4 or resource identifier used to identify the Snapshot.
               *
               * @schema #/definitions/VolumeProperties#snapshotId
               */
              readonly snapshotId?: VolumePropertiesSnapshotIdPattern;

              /**
               * The Azure Resource URI for a delegated subnet. Must have the delegation Microsoft.NetApp/volumes
               *
               * @schema #/definitions/VolumeProperties#subnetId
               */
              readonly subnetId: string;

              /**
               * @schema #/definitions/VolumeProperties#throughputMibps
               */
              readonly throughputMibps?: number;

              /**
               * Maximum storage quota allowed for a file system in bytes. This is a soft quota used for alerting only. Minimum size is 100 GiB. Upper limit is 100TiB. Specified in bytes.
               *
               * @schema #/definitions/VolumeProperties#usageThreshold
               */
              readonly usageThreshold: number;

              /**
               * What type of volume is this
               *
               * @schema #/definitions/VolumeProperties#volumeType
               */
              readonly volumeType?: string;

            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources
             */
            export class MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources {
              public static fromNetAppAccountsCapacityPoolsVolumesSnapshotsChildResource(value: NetAppAccountsCapacityPoolsVolumesSnapshotsChildResource): MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources {
                return new MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources(value);
              }
              public static fromNetAppAccountsCapacityPoolsVolumesBackupsChildResource(value: NetAppAccountsCapacityPoolsVolumesBackupsChildResource): MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources {
                return new MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesResources(value);
              }
              private constructor(value: any) {
                Object.defineProperty(this, 'resolve', { value: () => value });
              }
            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesTags
             */
            export interface MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesTags {
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesType {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_CAPACITY_POOLS_VOLUMES" = 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes',
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsApiVersion {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * Backup properties
             *
             * @schema #/definitions/BackupProperties
             */
            export interface BackupProperties {
              /**
               * Label for backup
               *
               * @schema #/definitions/BackupProperties#label
               */
              readonly label?: string;

            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsType {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesBackupsType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_CAPACITY_POOLS_VOLUMES_BACKUPS" = 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups',
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsApiVersion {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * Snapshot properties
             *
             * @schema #/definitions/SnapshotProperties
             */
            export interface SnapshotProperties {
            }

            export enum MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsType {
              "MicrosoftNetAppNetAppAccountsCapacityPoolsVolumesSnapshotsType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_CAPACITY_POOLS_VOLUMES_SNAPSHOTS" = 'Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots',
            }

            export enum MicrosoftNetAppNetAppAccountsSnapshotPoliciesApiVersion {
              "MicrosoftNetAppNetAppAccountsSnapshotPoliciesApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * Snapshot policy properties
             *
             * @schema #/definitions/SnapshotPolicyProperties
             */
            export interface SnapshotPolicyProperties {
              /**
               * Daily Schedule properties
               *
               * @schema #/definitions/SnapshotPolicyProperties#dailySchedule
               */
              readonly dailySchedule?: DailySchedule;

              /**
               * The property to decide policy is enabled or not
               *
               * @schema #/definitions/SnapshotPolicyProperties#enabled
               */
              readonly enabled?: boolean;

              /**
               * Hourly Schedule properties
               *
               * @schema #/definitions/SnapshotPolicyProperties#hourlySchedule
               */
              readonly hourlySchedule?: HourlySchedule;

              /**
               * Monthly Schedule properties
               *
               * @schema #/definitions/SnapshotPolicyProperties#monthlySchedule
               */
              readonly monthlySchedule?: MonthlySchedule;

              /**
               * Weekly Schedule properties, make a snapshot every week at a specific day or days
               *
               * @schema #/definitions/SnapshotPolicyProperties#weeklySchedule
               */
              readonly weeklySchedule?: WeeklySchedule;

            }

            /**
             * @schema MicrosoftNetAppNetAppAccountsSnapshotPoliciesTags
             */
            export interface MicrosoftNetAppNetAppAccountsSnapshotPoliciesTags {
            }

            export enum MicrosoftNetAppNetAppAccountsSnapshotPoliciesType {
              "MicrosoftNetAppNetAppAccountsSnapshotPoliciesType_MICROSOFT_NET_APP_NET_APP_ACCOUNTS_SNAPSHOT_POLICIES" = 'Microsoft.NetApp/netAppAccounts/snapshotPolicies',
            }

            /**
             * Active Directory
             *
             * @schema #/definitions/ActiveDirectory
             */
            export interface ActiveDirectory {
              /**
               * Id of the Active Directory
               *
               * @schema #/definitions/ActiveDirectory#activeDirectoryId
               */
              readonly activeDirectoryId?: string;

              /**
               * Name of the active directory machine. This optional parameter is used only while creating kerberos volume
               *
               * @schema #/definitions/ActiveDirectory#adName
               */
              readonly adName?: string;

              /**
               * If enabled, AES encryption will be enabled for SMB communication.
               *
               * @schema #/definitions/ActiveDirectory#aesEncryption
               */
              readonly aesEncryption?: boolean;

              /**
               *  If enabled, NFS client local users can also (in addition to LDAP users) access the NFS volumes.
               *
               * @schema #/definitions/ActiveDirectory#allowLocalNfsUsersWithLdap
               */
              readonly allowLocalNfsUsersWithLdap?: boolean;

              /**
               * Users to be added to the Built-in Backup Operator active directory group. A list of unique usernames without domain specifier
               *
               * @schema #/definitions/ActiveDirectory#backupOperators
               */
              readonly backupOperators?: string[];

              /**
               * Comma separated list of DNS server IP addresses (IPv4 only) for the Active Directory domain
               *
               * @schema #/definitions/ActiveDirectory#dns
               */
              readonly dns?: ActiveDirectoryDnsPattern;

              /**
               * Name of the Active Directory domain
               *
               * @schema #/definitions/ActiveDirectory#domain
               */
              readonly domain?: string;

              /**
               * kdc server IP addresses for the active directory machine. This optional parameter is used only while creating kerberos volume.
               *
               * @schema #/definitions/ActiveDirectory#kdcIP
               */
              readonly kdcIP?: ActiveDirectoryKdcIpPattern;

              /**
               * Specifies whether or not the LDAP traffic needs to be secured via TLS.
               *
               * @schema #/definitions/ActiveDirectory#ldapOverTLS
               */
              readonly ldapOverTLS?: boolean;

              /**
               * Specifies whether or not the LDAP traffic needs to be signed.
               *
               * @schema #/definitions/ActiveDirectory#ldapSigning
               */
              readonly ldapSigning?: boolean;

              /**
               * The Organizational Unit (OU) within the Windows Active Directory
               *
               * @schema #/definitions/ActiveDirectory#organizationalUnit
               */
              readonly organizationalUnit?: string;

              /**
               * Plain text password of Active Directory domain administrator, value is masked in the response
               *
               * @schema #/definitions/ActiveDirectory#password
               */
              readonly password?: string;

              /**
               * Domain Users in the Active directory to be given SeSecurityPrivilege privilege (Needed for SMB Continuously available shares for SQL). A list of unique usernames without domain specifier
               *
               * @schema #/definitions/ActiveDirectory#securityOperators
               */
              readonly securityOperators?: string[];

              /**
               * When LDAP over SSL/TLS is enabled, the LDAP client is required to have base64 encoded Active Directory Certificate Service's self-signed root CA certificate, this optional parameter is used only for dual protocol with LDAP user-mapping volumes.
               *
               * @schema #/definitions/ActiveDirectory#serverRootCACertificate
               */
              readonly serverRootCACertificate?: string;

              /**
               * The Active Directory site the service will limit Domain Controller discovery to
               *
               * @schema #/definitions/ActiveDirectory#site
               */
              readonly site?: string;

              /**
               * NetBIOS name of the SMB server. This name will be registered as a computer account in the AD and used to mount volumes
               *
               * @schema #/definitions/ActiveDirectory#smbServerName
               */
              readonly smbServerName?: string;

              /**
               * Username of Active Directory domain administrator
               *
               * @schema #/definitions/ActiveDirectory#username
               */
              readonly username?: string;

            }

            /**
             * Encryption settings
             *
             * @schema #/definitions/AccountEncryption
             */
            export interface AccountEncryption {
              /**
               * Encryption Key Source. Possible values are: 'Microsoft.NetApp'.
               *
               * @schema #/definitions/AccountEncryption#keySource
               */
              readonly keySource?: string;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools
             *
             * @schema #/definitions/netAppAccounts_capacityPools_childResource
             */
            export interface NetAppAccountsCapacityPoolsChildResource {
              /**
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsCapacityPoolsChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#location
               */
              readonly location: string;

              /**
               * The name of the capacity pool
               *
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#name
               */
              readonly name: NetAppAccountsCapacityPoolsChildResourceNamePattern;

              /**
               * Pool properties
               *
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#properties
               */
              readonly properties: PoolProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#tags
               */
              readonly tags?: NetAppAccountsCapacityPoolsChildResourceTags;

              /**
               * @schema #/definitions/netAppAccounts_capacityPools_childResource#type
               */
              readonly type: NetAppAccountsCapacityPoolsChildResourceType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/snapshotPolicies
             *
             * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource
             */
            export interface NetAppAccountsSnapshotPoliciesChildResource {
              /**
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsSnapshotPoliciesChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#location
               */
              readonly location: string;

              /**
               * The name of the snapshot policy target
               *
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#name
               */
              readonly name: string;

              /**
               * Snapshot policy properties
               *
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#properties
               */
              readonly properties: SnapshotPolicyProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#tags
               */
              readonly tags?: NetAppAccountsSnapshotPoliciesChildResourceTags;

              /**
               * @schema #/definitions/netAppAccounts_snapshotPolicies_childResource#type
               */
              readonly type: NetAppAccountsSnapshotPoliciesChildResourceType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/backupPolicies
             *
             * @schema #/definitions/netAppAccounts_backupPolicies_childResource
             */
            export interface NetAppAccountsBackupPoliciesChildResource {
              /**
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsBackupPoliciesChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#location
               */
              readonly location: string;

              /**
               * Backup policy Name which uniquely identify backup policy.
               *
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#name
               */
              readonly name: string;

              /**
               * Backup policy properties
               *
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#properties
               */
              readonly properties: BackupPolicyProperties;

              /**
               * Tags are a list of key-value pairs that describe the resource
               *
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#tags
               */
              readonly tags?: NetAppAccountsBackupPoliciesChildResourceTags;

              /**
               * @schema #/definitions/netAppAccounts_backupPolicies_childResource#type
               */
              readonly type: NetAppAccountsBackupPoliciesChildResourceType;

            }

            /**
             * Volume details using the backup policy
             *
             * @schema #/definitions/VolumeBackups
             */
            export interface VolumeBackups {
              /**
               * Total count of backups for volume
               *
               * @schema #/definitions/VolumeBackups#backupsCount
               */
              readonly backupsCount?: number;

              /**
               * Policy enabled
               *
               * @schema #/definitions/VolumeBackups#policyEnabled
               */
              readonly policyEnabled?: boolean;

              /**
               * Volume name
               *
               * @schema #/definitions/VolumeBackups#volumeName
               */
              readonly volumeName?: string;

            }

            export enum PoolPropertiesQosType {
              AUTO = 'Auto',
              MANUAL = 'Manual',
            }

            export enum PoolPropertiesServiceLevel {
              STANDARD = 'Standard',
              PREMIUM = 'Premium',
              ULTRA = 'Ultra',
            }

            export enum NetAppAccountsCapacityPoolsVolumesChildResourceApiVersion {
              "NetAppAccountsCapacityPoolsVolumesChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema #/definitions/netAppAccountsCapacityPoolsVolumesChildResourceName
             */
            export class NetAppAccountsCapacityPoolsVolumesChildResourceNamePattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * @schema #/definitions/netAppAccountsCapacityPoolsVolumesChildResourceTags
             */
            export interface NetAppAccountsCapacityPoolsVolumesChildResourceTags {
            }

            export enum NetAppAccountsCapacityPoolsVolumesChildResourceType {
              VOLUMES = 'volumes',
            }

            /**
             * @schema #/definitions/volumePropertiesBackupId
             */
            export class VolumePropertiesBackupIdPattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * @schema #/definitions/volumePropertiesCreationToken
             */
            export class VolumePropertiesCreationTokenPattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * DataProtection type volumes include an object containing details of the replication
             *
             * @schema #/definitions/VolumePropertiesDataProtection
             */
            export interface VolumePropertiesDataProtection {
              /**
               * Volume Backup Properties
               *
               * @schema #/definitions/VolumePropertiesDataProtection#backup
               */
              readonly backup?: VolumeBackupProperties;

              /**
               * Replication properties
               *
               * @schema #/definitions/VolumePropertiesDataProtection#replication
               */
              readonly replication?: ReplicationObject;

              /**
               * Volume Snapshot Properties
               *
               * @schema #/definitions/VolumePropertiesDataProtection#snapshot
               */
              readonly snapshot?: VolumeSnapshotProperties;

            }

            /**
             * Set of export policy rules
             *
             * @schema #/definitions/VolumePropertiesExportPolicy
             */
            export interface VolumePropertiesExportPolicy {
              /**
               * Export policy rule
               *
               * @schema #/definitions/VolumePropertiesExportPolicy#rules
               */
              readonly rules?: ExportPolicyRule[];

            }

            export enum VolumePropertiesSecurityStyle {
              NTFS = 'ntfs',
              UNIX = 'unix',
            }

            export enum VolumePropertiesServiceLevel {
              STANDARD = 'Standard',
              PREMIUM = 'Premium',
              ULTRA = 'Ultra',
            }

            /**
             * @schema #/definitions/volumePropertiesSnapshotId
             */
            export class VolumePropertiesSnapshotIdPattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/snapshots
             *
             * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource
             */
            export interface NetAppAccountsCapacityPoolsVolumesSnapshotsChildResource {
              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsCapacityPoolsVolumesSnapshotsChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource#location
               */
              readonly location: string;

              /**
               * The name of the mount target
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource#name
               */
              readonly name: string;

              /**
               * Snapshot properties
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource#properties
               */
              readonly properties: SnapshotProperties;

              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_snapshots_childResource#type
               */
              readonly type: NetAppAccountsCapacityPoolsVolumesSnapshotsChildResourceType;

            }

            /**
             * Microsoft.NetApp/netAppAccounts/capacityPools/volumes/backups
             *
             * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource
             */
            export interface NetAppAccountsCapacityPoolsVolumesBackupsChildResource {
              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource#apiVersion
               */
              readonly apiVersion: NetAppAccountsCapacityPoolsVolumesBackupsChildResourceApiVersion;

              /**
               * Resource location
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource#location
               */
              readonly location: string;

              /**
               * The name of the backup
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource#name
               */
              readonly name: string;

              /**
               * Backup properties
               *
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource#properties
               */
              readonly properties: BackupProperties;

              /**
               * @schema #/definitions/netAppAccounts_capacityPools_volumes_backups_childResource#type
               */
              readonly type: NetAppAccountsCapacityPoolsVolumesBackupsChildResourceType;

            }

            /**
             * Daily Schedule properties
             *
             * @schema #/definitions/DailySchedule
             */
            export interface DailySchedule {
              /**
               * Indicates which hour in UTC timezone a snapshot should be taken
               *
               * @schema #/definitions/DailySchedule#hour
               */
              readonly hour?: number;

              /**
               * Indicates which minute snapshot should be taken
               *
               * @schema #/definitions/DailySchedule#minute
               */
              readonly minute?: number;

              /**
               * Daily snapshot count to keep
               *
               * @schema #/definitions/DailySchedule#snapshotsToKeep
               */
              readonly snapshotsToKeep?: number;

              /**
               * Resource size in bytes, current storage usage for the volume in bytes
               *
               * @schema #/definitions/DailySchedule#usedBytes
               */
              readonly usedBytes?: number;

            }

            /**
             * Hourly Schedule properties
             *
             * @schema #/definitions/HourlySchedule
             */
            export interface HourlySchedule {
              /**
               * Indicates which minute snapshot should be taken
               *
               * @schema #/definitions/HourlySchedule#minute
               */
              readonly minute?: number;

              /**
               * Hourly snapshot count to keep
               *
               * @schema #/definitions/HourlySchedule#snapshotsToKeep
               */
              readonly snapshotsToKeep?: number;

              /**
               * Resource size in bytes, current storage usage for the volume in bytes
               *
               * @schema #/definitions/HourlySchedule#usedBytes
               */
              readonly usedBytes?: number;

            }

            /**
             * Monthly Schedule properties
             *
             * @schema #/definitions/MonthlySchedule
             */
            export interface MonthlySchedule {
              /**
               * Indicates which days of the month snapshot should be taken. A comma delimited string.
               *
               * @schema #/definitions/MonthlySchedule#daysOfMonth
               */
              readonly daysOfMonth?: string;

              /**
               * Indicates which hour in UTC timezone a snapshot should be taken
               *
               * @schema #/definitions/MonthlySchedule#hour
               */
              readonly hour?: number;

              /**
               * Indicates which minute snapshot should be taken
               *
               * @schema #/definitions/MonthlySchedule#minute
               */
              readonly minute?: number;

              /**
               * Monthly snapshot count to keep
               *
               * @schema #/definitions/MonthlySchedule#snapshotsToKeep
               */
              readonly snapshotsToKeep?: number;

              /**
               * Resource size in bytes, current storage usage for the volume in bytes
               *
               * @schema #/definitions/MonthlySchedule#usedBytes
               */
              readonly usedBytes?: number;

            }

            /**
             * Weekly Schedule properties, make a snapshot every week at a specific day or days
             *
             * @schema #/definitions/WeeklySchedule
             */
            export interface WeeklySchedule {
              /**
               * Indicates which weekdays snapshot should be taken, accepts a comma separated list of week day names in english
               *
               * @schema #/definitions/WeeklySchedule#day
               */
              readonly day?: string;

              /**
               * Indicates which hour in UTC timezone a snapshot should be taken
               *
               * @schema #/definitions/WeeklySchedule#hour
               */
              readonly hour?: number;

              /**
               * Indicates which minute snapshot should be taken
               *
               * @schema #/definitions/WeeklySchedule#minute
               */
              readonly minute?: number;

              /**
               * Weekly snapshot count to keep
               *
               * @schema #/definitions/WeeklySchedule#snapshotsToKeep
               */
              readonly snapshotsToKeep?: number;

              /**
               * Resource size in bytes, current storage usage for the volume in bytes
               *
               * @schema #/definitions/WeeklySchedule#usedBytes
               */
              readonly usedBytes?: number;

            }

            /**
             * @schema #/definitions/activeDirectoryDns
             */
            export class ActiveDirectoryDnsPattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * @schema #/definitions/activeDirectoryKdcIp
             */
            export class ActiveDirectoryKdcIpPattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            export enum NetAppAccountsCapacityPoolsChildResourceApiVersion {
              "NetAppAccountsCapacityPoolsChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema #/definitions/netAppAccountsCapacityPoolsChildResourceName
             */
            export class NetAppAccountsCapacityPoolsChildResourceNamePattern {
              public static pattern(value: string): string {
                return value;
              }
            }

            /**
             * @schema #/definitions/netAppAccountsCapacityPoolsChildResourceTags
             */
            export interface NetAppAccountsCapacityPoolsChildResourceTags {
            }

            export enum NetAppAccountsCapacityPoolsChildResourceType {
              CAPACITY_POOLS = 'capacityPools',
            }

            export enum NetAppAccountsSnapshotPoliciesChildResourceApiVersion {
              "NetAppAccountsSnapshotPoliciesChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema #/definitions/netAppAccountsSnapshotPoliciesChildResourceTags
             */
            export interface NetAppAccountsSnapshotPoliciesChildResourceTags {
            }

            export enum NetAppAccountsSnapshotPoliciesChildResourceType {
              SNAPSHOT_POLICIES = 'snapshotPolicies',
            }

            export enum NetAppAccountsBackupPoliciesChildResourceApiVersion {
              "NetAppAccountsBackupPoliciesChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            /**
             * @schema #/definitions/netAppAccountsBackupPoliciesChildResourceTags
             */
            export interface NetAppAccountsBackupPoliciesChildResourceTags {
            }

            export enum NetAppAccountsBackupPoliciesChildResourceType {
              BACKUP_POLICIES = 'backupPolicies',
            }

            /**
             * Volume Backup Properties
             *
             * @schema #/definitions/VolumeBackupProperties
             */
            export interface VolumeBackupProperties {
              /**
               * Backup Enabled
               *
               * @schema #/definitions/VolumeBackupProperties#backupEnabled
               */
              readonly backupEnabled?: boolean;

              /**
               * Backup Policy Resource ID
               *
               * @schema #/definitions/VolumeBackupProperties#backupPolicyId
               */
              readonly backupPolicyId?: string;

              /**
               * Policy Enforced
               *
               * @schema #/definitions/VolumeBackupProperties#policyEnforced
               */
              readonly policyEnforced?: boolean;

              /**
               * Vault Resource ID
               *
               * @schema #/definitions/VolumeBackupProperties#vaultId
               */
              readonly vaultId?: string;

            }

            /**
             * Replication properties
             *
             * @schema #/definitions/ReplicationObject
             */
            export interface ReplicationObject {
              /**
               * Indicates whether the local volume is the source or destination for the Volume Replication.
               *
               * @schema #/definitions/ReplicationObject#endpointType
               */
              readonly endpointType?: ReplicationObjectEndpointType;

              /**
               * The remote region for the other end of the Volume Replication.
               *
               * @schema #/definitions/ReplicationObject#remoteVolumeRegion
               */
              readonly remoteVolumeRegion?: string;

              /**
               * The resource ID of the remote volume.
               *
               * @schema #/definitions/ReplicationObject#remoteVolumeResourceId
               */
              readonly remoteVolumeResourceId: string;

              /**
               * Id
               *
               * @schema #/definitions/ReplicationObject#replicationId
               */
              readonly replicationId?: string;

              /**
               * Schedule.
               *
               * @schema #/definitions/ReplicationObject#replicationSchedule
               */
              readonly replicationSchedule: ReplicationObjectReplicationSchedule;

            }

            /**
             * Volume Snapshot Properties
             *
             * @schema #/definitions/VolumeSnapshotProperties
             */
            export interface VolumeSnapshotProperties {
              /**
               * Snapshot Policy ResourceId
               *
               * @schema #/definitions/VolumeSnapshotProperties#snapshotPolicyId
               */
              readonly snapshotPolicyId?: string;

            }

            /**
             * Volume Export Policy Rule
             *
             * @schema #/definitions/ExportPolicyRule
             */
            export interface ExportPolicyRule {
              /**
               * Client ingress specification as comma separated string with IPv4 CIDRs, IPv4 host addresses and host names
               *
               * @schema #/definitions/ExportPolicyRule#allowedClients
               */
              readonly allowedClients?: string;

              /**
               * Allows CIFS protocol
               *
               * @schema #/definitions/ExportPolicyRule#cifs
               */
              readonly cifs?: boolean;

              /**
               * Has root access to volume
               *
               * @schema #/definitions/ExportPolicyRule#hasRootAccess
               */
              readonly hasRootAccess?: boolean;

              /**
               * Kerberos5i Read only access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5iReadOnly
               */
              readonly kerberos5iReadOnly?: boolean;

              /**
               * Kerberos5i Read and write access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5iReadWrite
               */
              readonly kerberos5iReadWrite?: boolean;

              /**
               * Kerberos5p Read only access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5pReadOnly
               */
              readonly kerberos5pReadOnly?: boolean;

              /**
               * Kerberos5p Read and write access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5pReadWrite
               */
              readonly kerberos5pReadWrite?: boolean;

              /**
               * Kerberos5 Read only access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5ReadOnly
               */
              readonly kerberos5ReadOnly?: boolean;

              /**
               * Kerberos5 Read and write access. To be use with swagger version 2020-05-01 or later
               *
               * @schema #/definitions/ExportPolicyRule#kerberos5ReadWrite
               */
              readonly kerberos5ReadWrite?: boolean;

              /**
               * Allows NFSv3 protocol. Enable only for NFSv3 type volumes
               *
               * @schema #/definitions/ExportPolicyRule#nfsv3
               */
              readonly nfsv3?: boolean;

              /**
               * Allows NFSv4.1 protocol. Enable only for NFSv4.1 type volumes
               *
               * @schema #/definitions/ExportPolicyRule#nfsv41
               */
              readonly nfsv41?: boolean;

              /**
               * Order index
               *
               * @schema #/definitions/ExportPolicyRule#ruleIndex
               */
              readonly ruleIndex?: number;

              /**
               * Read only access
               *
               * @schema #/definitions/ExportPolicyRule#unixReadOnly
               */
              readonly unixReadOnly?: boolean;

              /**
               * Read and write access
               *
               * @schema #/definitions/ExportPolicyRule#unixReadWrite
               */
              readonly unixReadWrite?: boolean;

            }

            export enum NetAppAccountsCapacityPoolsVolumesSnapshotsChildResourceApiVersion {
              "NetAppAccountsCapacityPoolsVolumesSnapshotsChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            export enum NetAppAccountsCapacityPoolsVolumesSnapshotsChildResourceType {
              SNAPSHOTS = 'snapshots',
            }

            export enum NetAppAccountsCapacityPoolsVolumesBackupsChildResourceApiVersion {
              "NetAppAccountsCapacityPoolsVolumesBackupsChildResourceApiVersion_2020_12_01" = '2020-12-01',
            }

            export enum NetAppAccountsCapacityPoolsVolumesBackupsChildResourceType {
              BACKUPS = 'backups',
            }

            export enum ReplicationObjectEndpointType {
              SRC = 'src',
              DST = 'dst',
            }

            export enum ReplicationObjectReplicationSchedule {
              "ReplicationObjectReplicationSchedule_10MINUTELY" = '_10minutely',
              HOURLY = 'hourly',
              DAILY = 'daily',
            }

