// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Advisor/configurations
 *
 * @schema Microsoft.Advisor.configurations
 */
export class Configurations extends ArmResource {
  /**
   * Defines a "Microsoft.Advisor.configurations" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ConfigurationsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'configurations',
    });
  }
}

/**
 * Microsoft.Advisor/suppressions
 *
 * @schema Microsoft.Advisor.recommendations_suppressions
 */
export class RecommendationsSuppressions extends ArmResource {
  /**
   * Defines a "Microsoft.Advisor.recommendations_suppressions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: RecommendationsSuppressionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'recommendations_suppressions',
    });
  }
}

/**
 * Microsoft.Advisor/configurations
 *
 * @schema Microsoft.Advisor.configurations
 */
export interface ConfigurationsOptions {
  /**
   * @schema Microsoft.Advisor.configurations#apiVersion
   */
  readonly apiVersion?: MicrosoftAdvisorConfigurationsApiVersion;

  /**
   * Advisor configuration name. Value must be 'default'
   *
   * @schema Microsoft.Advisor.configurations#name
   */
  readonly name: MicrosoftAdvisorConfigurationsName;

  /**
   * Configuration data properties
   *
   * @schema Microsoft.Advisor.configurations#properties
   */
  readonly properties: ConfigDataProperties;

  /**
   * @schema Microsoft.Advisor.configurations#type
   */
  readonly type: MicrosoftAdvisorConfigurationsType;

}

/**
 * Microsoft.Advisor/suppressions
 *
 * @schema Microsoft.Advisor.recommendations_suppressions
 */
export interface RecommendationsSuppressionsOptions {
  /**
   * @schema Microsoft.Advisor.recommendations_suppressions#apiVersion
   */
  readonly apiVersion?: MicrosoftAdvisorRecommendationsSuppressionsApiVersion;

  /**
   * The name of the suppression.
   *
   * @schema Microsoft.Advisor.recommendations_suppressions#name
   */
  readonly name: string;

  /**
   * The properties of the suppression.
   *
   * @schema Microsoft.Advisor.recommendations_suppressions#properties
   */
  readonly properties: SuppressionProperties;

  /**
   * @schema Microsoft.Advisor.recommendations_suppressions#type
   */
  readonly type: MicrosoftAdvisorRecommendationsSuppressionsType;

}

export enum MicrosoftAdvisorConfigurationsApiVersion {
  "MicrosoftAdvisorConfigurationsApiVersion_2020_01_01" = '2020-01-01',
}

export enum MicrosoftAdvisorConfigurationsName {
  DEFAULT = 'default',
}

/**
 * Configuration data properties
 *
 * @schema #/definitions/ConfigDataProperties
 */
export interface ConfigDataProperties {
  /**
   * Advisor digest configuration. Valid only for subscriptions
   *
   * @schema #/definitions/ConfigDataProperties#digests
   */
  readonly digests?: DigestConfig[];

  /**
   * Exclude the resource from Advisor evaluations. Valid values: False (default) or True.
   *
   * @schema #/definitions/ConfigDataProperties#exclude
   */
  readonly exclude?: boolean;

  /**
   * Minimum percentage threshold for Advisor low CPU utilization evaluation. Valid only for subscriptions. Valid values: 5 (default), 10, 15 or 20.
   *
   * @schema #/definitions/ConfigDataProperties#lowCpuThreshold
   */
  readonly lowCpuThreshold?: ConfigDataPropertiesLowCpuThreshold;

}

export enum MicrosoftAdvisorConfigurationsType {
  "MicrosoftAdvisorConfigurationsType_MICROSOFT_ADVISOR_CONFIGURATIONS" = 'Microsoft.Advisor/configurations',
}

export enum MicrosoftAdvisorRecommendationsSuppressionsApiVersion {
  "MicrosoftAdvisorRecommendationsSuppressionsApiVersion_2020_01_01" = '2020-01-01',
}

/**
 * The properties of the suppression.
 *
 * @schema #/definitions/SuppressionProperties
 */
export interface SuppressionProperties {
  /**
   * The GUID of the suppression.
   *
   * @schema #/definitions/SuppressionProperties#suppressionId
   */
  readonly suppressionId?: string;

  /**
   * The duration for which the suppression is valid.
   *
   * @schema #/definitions/SuppressionProperties#ttl
   */
  readonly ttl?: string;

}

export enum MicrosoftAdvisorRecommendationsSuppressionsType {
  "MicrosoftAdvisorRecommendationsSuppressionsType_MICROSOFT_ADVISOR_SUPPRESSIONS" = 'Microsoft.Advisor/suppressions',
}

/**
 * Advisor Digest configuration entity
 *
 * @schema #/definitions/DigestConfig
 */
export interface DigestConfig {
  /**
   * Action group resource id used by digest.
   *
   * @schema #/definitions/DigestConfig#actionGroupResourceId
   */
  readonly actionGroupResourceId?: string;

  /**
   * Categories to send digest for. If categories are not provided, then digest will be sent for all categories.
   *
   * @schema #/definitions/DigestConfig#categories
   */
  readonly categories?: DigestConfigCategories[];

  /**
   * Frequency that digest will be triggered, in days. Value must be between 7 and 30 days inclusive.
   *
   * @schema #/definitions/DigestConfig#frequency
   */
  readonly frequency?: number;

  /**
   * Language for digest content body. Value must be ISO 639-1 code for one of Azure portal supported languages. Otherwise, it will be converted into one. Default value is English (en).
   *
   * @schema #/definitions/DigestConfig#language
   */
  readonly language?: string;

  /**
   * Name of digest configuration. Value is case-insensitive and must be unique within a subscription.
   *
   * @schema #/definitions/DigestConfig#name
   */
  readonly name?: string;

  /**
   * State of digest configuration.
   *
   * @schema #/definitions/DigestConfig#state
   */
  readonly state?: DigestConfigState;

}

export enum ConfigDataPropertiesLowCpuThreshold {
  "ConfigDataPropertiesLowCpuThreshold_5" = '5',
  "ConfigDataPropertiesLowCpuThreshold_10" = '10',
  "ConfigDataPropertiesLowCpuThreshold_15" = '15',
  "ConfigDataPropertiesLowCpuThreshold_20" = '20',
}

export enum DigestConfigCategories {
  HIGH_AVAILABILITY = 'HighAvailability',
  SECURITY = 'Security',
  PERFORMANCE = 'Performance',
  COST = 'Cost',
  OPERATIONAL_EXCELLENCE = 'OperationalExcellence',
}

export enum DigestConfigState {
  ACTIVE = 'Active',
  DISABLED = 'Disabled',
}

