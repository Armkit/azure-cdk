// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.Batch/batchAccounts
 *
 * @schema Microsoft.Batch.batchAccounts
 */
export class BatchAccounts extends ArmResource {
  /**
   * Defines a "Microsoft.Batch.batchAccounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: BatchAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'batchAccounts',
    });
  }
}

/**
 * Microsoft.Batch/batchAccounts/applications
 *
 * @schema Microsoft.Batch.batchAccounts_applications
 */
export class BatchAccountsApplications extends ArmResource {
  /**
   * Defines a "Microsoft.Batch.batchAccounts_applications" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: BatchAccountsApplicationsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'batchAccounts_applications',
    });
  }
}

/**
 * Microsoft.Batch/batchAccounts/applications/versions
 *
 * @schema Microsoft.Batch.batchAccounts_applications_versions
 */
export class BatchAccountsApplicationsVersions extends ArmResource {
  /**
   * Defines a "Microsoft.Batch.batchAccounts_applications_versions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: BatchAccountsApplicationsVersionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'batchAccounts_applications_versions',
    });
  }
}

/**
 * Microsoft.Batch/batchAccounts/certificates
 *
 * @schema Microsoft.Batch.batchAccounts_certificates
 */
export class BatchAccountsCertificates extends ArmResource {
  /**
   * Defines a "Microsoft.Batch.batchAccounts_certificates" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: BatchAccountsCertificatesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'batchAccounts_certificates',
    });
  }
}

/**
 * Microsoft.Batch/batchAccounts/pools
 *
 * @schema Microsoft.Batch.batchAccounts_pools
 */
export class BatchAccountsPools extends ArmResource {
  /**
   * Defines a "Microsoft.Batch.batchAccounts_pools" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: BatchAccountsPoolsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'batchAccounts_pools',
    });
  }
}

/**
 * Microsoft.Batch/batchAccounts
 *
 * @schema Microsoft.Batch.batchAccounts
 */
export interface BatchAccountsOptions {
  /**
   * @schema Microsoft.Batch.batchAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftBatchBatchAccountsApiVersion;

  /**
   * The identity of the Batch account, if configured. This is only used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration.
   *
   * @schema Microsoft.Batch.batchAccounts#identity
   */
  readonly identity?: BatchAccountIdentity;

  /**
   * The region in which to create the account.
   *
   * @schema Microsoft.Batch.batchAccounts#location
   */
  readonly location: string;

  /**
   * A name for the Batch account which must be unique within the region. Batch account names must be between 3 and 24 characters in length and must use only numbers and lowercase letters. This name is used as part of the DNS name that is used to access the Batch service in the region in which the account is created. For example: http://accountname.region.batch.azure.com/.
   *
   * @schema Microsoft.Batch.batchAccounts#name
   */
  readonly name: MicrosoftBatchBatchAccountsNamePattern;

  /**
   * The properties of a Batch account.
   *
   * @schema Microsoft.Batch.batchAccounts#properties
   */
  readonly properties: BatchAccountCreateProperties;

  /**
   * @schema Microsoft.Batch.batchAccounts#resources
   */
  readonly resources?: MicrosoftBatchBatchAccountsResources[];

  /**
   * The user-specified tags associated with the account.
   *
   * @schema Microsoft.Batch.batchAccounts#tags
   */
  readonly tags?: MicrosoftBatchBatchAccountsTags;

  /**
   * @schema Microsoft.Batch.batchAccounts#type
   */
  readonly type: MicrosoftBatchBatchAccountsType;

}

/**
 * Microsoft.Batch/batchAccounts/applications
 *
 * @schema Microsoft.Batch.batchAccounts_applications
 */
export interface BatchAccountsApplicationsOptions {
  /**
   * @schema Microsoft.Batch.batchAccounts_applications#apiVersion
   */
  readonly apiVersion?: MicrosoftBatchBatchAccountsApplicationsApiVersion;

  /**
   * The name of the application. This must be unique within the account.
   *
   * @schema Microsoft.Batch.batchAccounts_applications#name
   */
  readonly name: MicrosoftBatchBatchAccountsApplicationsNamePattern;

  /**
   * The properties associated with the Application.
   *
   * @schema Microsoft.Batch.batchAccounts_applications#properties
   */
  readonly properties: ApplicationProperties;

  /**
   * @schema Microsoft.Batch.batchAccounts_applications#resources
   */
  readonly resources?: BatchAccountsApplicationsVersionsChildResource[];

  /**
   * @schema Microsoft.Batch.batchAccounts_applications#type
   */
  readonly type: MicrosoftBatchBatchAccountsApplicationsType;

}

/**
 * Microsoft.Batch/batchAccounts/applications/versions
 *
 * @schema Microsoft.Batch.batchAccounts_applications_versions
 */
export interface BatchAccountsApplicationsVersionsOptions {
  /**
   * @schema Microsoft.Batch.batchAccounts_applications_versions#apiVersion
   */
  readonly apiVersion?: MicrosoftBatchBatchAccountsApplicationsVersionsApiVersion;

  /**
   * The version of the application.
   *
   * @schema Microsoft.Batch.batchAccounts_applications_versions#name
   */
  readonly name: MicrosoftBatchBatchAccountsApplicationsVersionsNamePattern;

  /**
   * Properties of an application package
   *
   * @schema Microsoft.Batch.batchAccounts_applications_versions#properties
   */
  readonly properties: ApplicationPackageProperties;

  /**
   * @schema Microsoft.Batch.batchAccounts_applications_versions#type
   */
  readonly type: MicrosoftBatchBatchAccountsApplicationsVersionsType;

}

/**
 * Microsoft.Batch/batchAccounts/certificates
 *
 * @schema Microsoft.Batch.batchAccounts_certificates
 */
export interface BatchAccountsCertificatesOptions {
  /**
   * @schema Microsoft.Batch.batchAccounts_certificates#apiVersion
   */
  readonly apiVersion?: MicrosoftBatchBatchAccountsCertificatesApiVersion;

  /**
   * The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
   *
   * @schema Microsoft.Batch.batchAccounts_certificates#name
   */
  readonly name: MicrosoftBatchBatchAccountsCertificatesNamePattern;

  /**
   * Certificate properties for create operations
   *
   * @schema Microsoft.Batch.batchAccounts_certificates#properties
   */
  readonly properties: CertificateCreateOrUpdateProperties;

  /**
   * @schema Microsoft.Batch.batchAccounts_certificates#type
   */
  readonly type: MicrosoftBatchBatchAccountsCertificatesType;

}

/**
 * Microsoft.Batch/batchAccounts/pools
 *
 * @schema Microsoft.Batch.batchAccounts_pools
 */
export interface BatchAccountsPoolsOptions {
  /**
   * @schema Microsoft.Batch.batchAccounts_pools#apiVersion
   */
  readonly apiVersion?: MicrosoftBatchBatchAccountsPoolsApiVersion;

  /**
   * The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities
   *
   * @schema Microsoft.Batch.batchAccounts_pools#identity
   */
  readonly identity?: BatchPoolIdentity;

  /**
   * The pool name. This must be unique within the account.
   *
   * @schema Microsoft.Batch.batchAccounts_pools#name
   */
  readonly name: MicrosoftBatchBatchAccountsPoolsNamePattern;

  /**
   * Pool properties.
   *
   * @schema Microsoft.Batch.batchAccounts_pools#properties
   */
  readonly properties: PoolProperties;

  /**
   * @schema Microsoft.Batch.batchAccounts_pools#type
   */
  readonly type: MicrosoftBatchBatchAccountsPoolsType;

}

export enum MicrosoftBatchBatchAccountsApiVersion {
  "MicrosoftBatchBatchAccountsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * The identity of the Batch account, if configured. This is only used when the user specifies 'Microsoft.KeyVault' as their Batch account encryption configuration.
 *
 * @schema #/definitions/BatchAccountIdentity
 */
export interface BatchAccountIdentity {
  /**
   * The type of identity used for the Batch account.
   *
   * @schema #/definitions/BatchAccountIdentity#type
   */
  readonly type: BatchAccountIdentityType;

  /**
   * The list of user identities associated with the Batch account. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   *
   * @schema #/definitions/BatchAccountIdentity#userAssignedIdentities
   */
  readonly userAssignedIdentities?: BatchAccountIdentityUserAssignedIdentities;

}

/**
 * @schema MicrosoftBatchBatchAccountsName
 */
export class MicrosoftBatchBatchAccountsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties of a Batch account.
 *
 * @schema #/definitions/BatchAccountCreateProperties
 */
export interface BatchAccountCreateProperties {
  /**
   * The properties related to the auto-storage account.
   *
   * @schema #/definitions/BatchAccountCreateProperties#autoStorage
   */
  readonly autoStorage?: AutoStorageBaseProperties;

  /**
   * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
   *
   * @schema #/definitions/BatchAccountCreateProperties#encryption
   */
  readonly encryption?: EncryptionProperties;

  /**
   * Identifies the Azure key vault associated with a Batch account.
   *
   * @schema #/definitions/BatchAccountCreateProperties#keyVaultReference
   */
  readonly keyVaultReference?: KeyVaultReference;

  /**
   * The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the mode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is UserSubscription, clients must use Azure Active Directory. The default is BatchService.
   *
   * @schema #/definitions/BatchAccountCreateProperties#poolAllocationMode
   */
  readonly poolAllocationMode?: BatchAccountCreatePropertiesPoolAllocationMode;

  /**
   * If not specified, the default value is 'enabled'.
   *
   * @schema #/definitions/BatchAccountCreateProperties#publicNetworkAccess
   */
  readonly publicNetworkAccess?: BatchAccountCreatePropertiesPublicNetworkAccess;

}

/**
 * @schema MicrosoftBatchBatchAccountsResources
 */
export class MicrosoftBatchBatchAccountsResources {
  public static fromBatchAccountsApplicationsChildResource(value: BatchAccountsApplicationsChildResource): MicrosoftBatchBatchAccountsResources {
    return new MicrosoftBatchBatchAccountsResources(value);
  }
  public static fromBatchAccountsCertificatesChildResource(value: BatchAccountsCertificatesChildResource): MicrosoftBatchBatchAccountsResources {
    return new MicrosoftBatchBatchAccountsResources(value);
  }
  public static fromBatchAccountsPoolsChildResource(value: BatchAccountsPoolsChildResource): MicrosoftBatchBatchAccountsResources {
    return new MicrosoftBatchBatchAccountsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftBatchBatchAccountsTags
 */
export interface MicrosoftBatchBatchAccountsTags {
}

export enum MicrosoftBatchBatchAccountsType {
  "MicrosoftBatchBatchAccountsType_MICROSOFT_BATCH_BATCH_ACCOUNTS" = 'Microsoft.Batch/batchAccounts',
}

export enum MicrosoftBatchBatchAccountsApplicationsApiVersion {
  "MicrosoftBatchBatchAccountsApplicationsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema MicrosoftBatchBatchAccountsApplicationsName
 */
export class MicrosoftBatchBatchAccountsApplicationsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties associated with the Application.
 *
 * @schema #/definitions/ApplicationProperties
 */
export interface ApplicationProperties {
  /**
   * A value indicating whether packages within the application may be overwritten using the same version string.
   *
   * @schema #/definitions/ApplicationProperties#allowUpdates
   */
  readonly allowUpdates?: boolean;

  /**
   * The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
   *
   * @schema #/definitions/ApplicationProperties#defaultVersion
   */
  readonly defaultVersion?: string;

  /**
   * The display name for the application.
   *
   * @schema #/definitions/ApplicationProperties#displayName
   */
  readonly displayName?: string;

}

/**
 * Microsoft.Batch/batchAccounts/applications/versions
 *
 * @schema #/definitions/batchAccounts_applications_versions_childResource
 */
export interface BatchAccountsApplicationsVersionsChildResource {
  /**
   * @schema #/definitions/batchAccounts_applications_versions_childResource#apiVersion
   */
  readonly apiVersion: BatchAccountsApplicationsVersionsChildResourceApiVersion;

  /**
   * The version of the application.
   *
   * @schema #/definitions/batchAccounts_applications_versions_childResource#name
   */
  readonly name: BatchAccountsApplicationsVersionsChildResourceNamePattern;

  /**
   * Properties of an application package
   *
   * @schema #/definitions/batchAccounts_applications_versions_childResource#properties
   */
  readonly properties: ApplicationPackageProperties;

  /**
   * @schema #/definitions/batchAccounts_applications_versions_childResource#type
   */
  readonly type: BatchAccountsApplicationsVersionsChildResourceType;

}

export enum MicrosoftBatchBatchAccountsApplicationsType {
  "MicrosoftBatchBatchAccountsApplicationsType_MICROSOFT_BATCH_BATCH_ACCOUNTS_APPLICATIONS" = 'Microsoft.Batch/batchAccounts/applications',
}

export enum MicrosoftBatchBatchAccountsApplicationsVersionsApiVersion {
  "MicrosoftBatchBatchAccountsApplicationsVersionsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema MicrosoftBatchBatchAccountsApplicationsVersionsName
 */
export class MicrosoftBatchBatchAccountsApplicationsVersionsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of an application package
 *
 * @schema #/definitions/ApplicationPackageProperties
 */
export interface ApplicationPackageProperties {
}

export enum MicrosoftBatchBatchAccountsApplicationsVersionsType {
  "MicrosoftBatchBatchAccountsApplicationsVersionsType_MICROSOFT_BATCH_BATCH_ACCOUNTS_APPLICATIONS_VERSIONS" = 'Microsoft.Batch/batchAccounts/applications/versions',
}

export enum MicrosoftBatchBatchAccountsCertificatesApiVersion {
  "MicrosoftBatchBatchAccountsCertificatesApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema MicrosoftBatchBatchAccountsCertificatesName
 */
export class MicrosoftBatchBatchAccountsCertificatesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Certificate properties for create operations
 *
 * @schema #/definitions/CertificateCreateOrUpdateProperties
 */
export interface CertificateCreateOrUpdateProperties {
  /**
   * The maximum size is 10KB.
   *
   * @schema #/definitions/CertificateCreateOrUpdateProperties#data
   */
  readonly data: string;

  /**
   * The format of the certificate - either Pfx or Cer. If omitted, the default is Pfx.
   *
   * @schema #/definitions/CertificateCreateOrUpdateProperties#format
   */
  readonly format?: CertificateCreateOrUpdatePropertiesFormat;

  /**
   * This must not be specified if the certificate format is Cer.
   *
   * @schema #/definitions/CertificateCreateOrUpdateProperties#password
   */
  readonly password?: string;

  /**
   * This must match the thumbprint from the name.
   *
   * @schema #/definitions/CertificateCreateOrUpdateProperties#thumbprint
   */
  readonly thumbprint?: string;

  /**
   * This must match the first portion of the certificate name. Currently required to be 'SHA1'.
   *
   * @schema #/definitions/CertificateCreateOrUpdateProperties#thumbprintAlgorithm
   */
  readonly thumbprintAlgorithm?: string;

}

export enum MicrosoftBatchBatchAccountsCertificatesType {
  "MicrosoftBatchBatchAccountsCertificatesType_MICROSOFT_BATCH_BATCH_ACCOUNTS_CERTIFICATES" = 'Microsoft.Batch/batchAccounts/certificates',
}

export enum MicrosoftBatchBatchAccountsPoolsApiVersion {
  "MicrosoftBatchBatchAccountsPoolsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities
 *
 * @schema #/definitions/BatchPoolIdentity
 */
export interface BatchPoolIdentity {
  /**
   * The type of identity used for the Batch Pool.
   *
   * @schema #/definitions/BatchPoolIdentity#type
   */
  readonly type: BatchPoolIdentityType;

  /**
   * The list of user identities associated with the Batch pool. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   *
   * @schema #/definitions/BatchPoolIdentity#userAssignedIdentities
   */
  readonly userAssignedIdentities?: BatchPoolIdentityUserAssignedIdentities;

}

/**
 * @schema MicrosoftBatchBatchAccountsPoolsName
 */
export class MicrosoftBatchBatchAccountsPoolsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Pool properties.
 *
 * @schema #/definitions/PoolProperties
 */
export interface PoolProperties {
  /**
   * The list of application licenses must be a subset of available Batch service application licenses. If a license is requested which is not supported, pool creation will fail.
   *
   * @schema #/definitions/PoolProperties#applicationLicenses
   */
  readonly applicationLicenses?: string[];

  /**
   * Changes to application package references affect all new compute nodes joining the pool, but do not affect compute nodes that are already in the pool until they are rebooted or reimaged. There is a maximum of 10 application package references on any given pool.
   *
   * @schema #/definitions/PoolProperties#applicationPackages
   */
  readonly applicationPackages?: ApplicationPackageReference[];

  /**
   * For Windows compute nodes, the Batch service installs the certificates to the specified certificate store and location. For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
   *
   * @schema #/definitions/PoolProperties#certificates
   */
  readonly certificates?: CertificateReference[];

  /**
   * @schema #/definitions/PoolProperties#deploymentConfiguration
   */
  readonly deploymentConfiguration?: DeploymentConfiguration;

  /**
   * The display name need not be unique and can contain any Unicode characters up to a maximum length of 1024.
   *
   * @schema #/definitions/PoolProperties#displayName
   */
  readonly displayName?: string;

  /**
   * This imposes restrictions on which nodes can be assigned to the pool. Enabling this value can reduce the chance of the requested number of nodes to be allocated in the pool. If not specified, this value defaults to 'Disabled'.
   *
   * @schema #/definitions/PoolProperties#interNodeCommunication
   */
  readonly interNodeCommunication?: PoolPropertiesInterNodeCommunication;

  /**
   * The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
   *
   * @schema #/definitions/PoolProperties#metadata
   */
  readonly metadata?: MetadataItem[];

  /**
   * This supports Azure Files, NFS, CIFS/SMB, and Blobfuse.
   *
   * @schema #/definitions/PoolProperties#mountConfiguration
   */
  readonly mountConfiguration?: MountConfiguration[];

  /**
   * The network configuration for a pool.
   *
   * @schema #/definitions/PoolProperties#networkConfiguration
   */
  readonly networkConfiguration?: NetworkConfiguration;

  /**
   * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
   *
   * @schema #/definitions/PoolProperties#scaleSettings
   */
  readonly scaleSettings?: ScaleSettings;

  /**
   * In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.
   *
   * @schema #/definitions/PoolProperties#startTask
   */
  readonly startTask?: StartTask;

  /**
   * @schema #/definitions/PoolProperties#taskSchedulingPolicy
   */
  readonly taskSchedulingPolicy?: TaskSchedulingPolicy;

  /**
   * The default value is 1. The maximum value is the smaller of 4 times the number of cores of the vmSize of the pool or 256.
   *
   * @schema #/definitions/PoolProperties#taskSlotsPerNode
   */
  readonly taskSlotsPerNode?: number;

  /**
   * @schema #/definitions/PoolProperties#userAccounts
   */
  readonly userAccounts?: UserAccount[];

  /**
   * For information about available sizes of virtual machines for Cloud Services pools (pools created with cloudServiceConfiguration), see Sizes for Cloud Services (https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/). Batch supports all Cloud Services VM sizes except ExtraSmall. For information about available VM sizes for pools using images from the Virtual Machines Marketplace (pools created with virtualMachineConfiguration) see Sizes for Virtual Machines (Linux) (https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/) or Sizes for Virtual Machines (Windows) (https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/). Batch supports all Azure VM sizes except STANDARD_A0 and those with premium storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).
   *
   * @schema #/definitions/PoolProperties#vmSize
   */
  readonly vmSize?: string;

}

export enum MicrosoftBatchBatchAccountsPoolsType {
  "MicrosoftBatchBatchAccountsPoolsType_MICROSOFT_BATCH_BATCH_ACCOUNTS_POOLS" = 'Microsoft.Batch/batchAccounts/pools',
}

export enum BatchAccountIdentityType {
  SYSTEM_ASSIGNED = 'SystemAssigned',
  USER_ASSIGNED = 'UserAssigned',
  NONE = 'None',
}

/**
 * @schema #/definitions/batchAccountIdentityUserAssignedIdentities
 */
export interface BatchAccountIdentityUserAssignedIdentities {
}

/**
 * The properties related to the auto-storage account.
 *
 * @schema #/definitions/AutoStorageBaseProperties
 */
export interface AutoStorageBaseProperties {
  /**
   * The resource ID of the storage account to be used for auto-storage account.
   *
   * @schema #/definitions/AutoStorageBaseProperties#storageAccountId
   */
  readonly storageAccountId: string;

}

/**
 * Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using a Microsoft managed key. For additional control, a customer-managed key can be used instead.
 *
 * @schema #/definitions/EncryptionProperties
 */
export interface EncryptionProperties {
  /**
   * Type of the key source.
   *
   * @schema #/definitions/EncryptionProperties#keySource
   */
  readonly keySource?: EncryptionPropertiesKeySource;

  /**
   * KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
   *
   * @schema #/definitions/EncryptionProperties#keyVaultProperties
   */
  readonly keyVaultProperties?: KeyVaultProperties;

}

/**
 * Identifies the Azure key vault associated with a Batch account.
 *
 * @schema #/definitions/KeyVaultReference
 */
export interface KeyVaultReference {
  /**
   * The resource ID of the Azure key vault associated with the Batch account.
   *
   * @schema #/definitions/KeyVaultReference#id
   */
  readonly id: string;

  /**
   * The URL of the Azure key vault associated with the Batch account.
   *
   * @schema #/definitions/KeyVaultReference#url
   */
  readonly url: string;

}

export enum BatchAccountCreatePropertiesPoolAllocationMode {
  BATCH_SERVICE = 'BatchService',
  USER_SUBSCRIPTION = 'UserSubscription',
}

export enum BatchAccountCreatePropertiesPublicNetworkAccess {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * Microsoft.Batch/batchAccounts/applications
 *
 * @schema #/definitions/batchAccounts_applications_childResource
 */
export interface BatchAccountsApplicationsChildResource {
  /**
   * @schema #/definitions/batchAccounts_applications_childResource#apiVersion
   */
  readonly apiVersion: BatchAccountsApplicationsChildResourceApiVersion;

  /**
   * The name of the application. This must be unique within the account.
   *
   * @schema #/definitions/batchAccounts_applications_childResource#name
   */
  readonly name: BatchAccountsApplicationsChildResourceNamePattern;

  /**
   * The properties associated with the Application.
   *
   * @schema #/definitions/batchAccounts_applications_childResource#properties
   */
  readonly properties: ApplicationProperties;

  /**
   * @schema #/definitions/batchAccounts_applications_childResource#type
   */
  readonly type: BatchAccountsApplicationsChildResourceType;

}

/**
 * Microsoft.Batch/batchAccounts/certificates
 *
 * @schema #/definitions/batchAccounts_certificates_childResource
 */
export interface BatchAccountsCertificatesChildResource {
  /**
   * @schema #/definitions/batchAccounts_certificates_childResource#apiVersion
   */
  readonly apiVersion: BatchAccountsCertificatesChildResourceApiVersion;

  /**
   * The identifier for the certificate. This must be made up of algorithm and thumbprint separated by a dash, and must match the certificate data in the request. For example SHA1-a3d1c5.
   *
   * @schema #/definitions/batchAccounts_certificates_childResource#name
   */
  readonly name: BatchAccountsCertificatesChildResourceNamePattern;

  /**
   * Certificate properties for create operations
   *
   * @schema #/definitions/batchAccounts_certificates_childResource#properties
   */
  readonly properties: CertificateCreateOrUpdateProperties;

  /**
   * @schema #/definitions/batchAccounts_certificates_childResource#type
   */
  readonly type: BatchAccountsCertificatesChildResourceType;

}

/**
 * Microsoft.Batch/batchAccounts/pools
 *
 * @schema #/definitions/batchAccounts_pools_childResource
 */
export interface BatchAccountsPoolsChildResource {
  /**
   * @schema #/definitions/batchAccounts_pools_childResource#apiVersion
   */
  readonly apiVersion: BatchAccountsPoolsChildResourceApiVersion;

  /**
   * The identity of the Batch pool, if configured. If the pool identity is updated during update an existing pool, only the new vms which are created after the pool shrinks to 0 will have the updated identities
   *
   * @schema #/definitions/batchAccounts_pools_childResource#identity
   */
  readonly identity?: BatchPoolIdentity;

  /**
   * The pool name. This must be unique within the account.
   *
   * @schema #/definitions/batchAccounts_pools_childResource#name
   */
  readonly name: BatchAccountsPoolsChildResourceNamePattern;

  /**
   * Pool properties.
   *
   * @schema #/definitions/batchAccounts_pools_childResource#properties
   */
  readonly properties: PoolProperties;

  /**
   * @schema #/definitions/batchAccounts_pools_childResource#type
   */
  readonly type: BatchAccountsPoolsChildResourceType;

}

export enum BatchAccountsApplicationsVersionsChildResourceApiVersion {
  "BatchAccountsApplicationsVersionsChildResourceApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema #/definitions/batchAccountsApplicationsVersionsChildResourceName
 */
export class BatchAccountsApplicationsVersionsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum BatchAccountsApplicationsVersionsChildResourceType {
  VERSIONS = 'versions',
}

export enum CertificateCreateOrUpdatePropertiesFormat {
  PFX = 'Pfx',
  CER = 'Cer',
}

export enum BatchPoolIdentityType {
  USER_ASSIGNED = 'UserAssigned',
  NONE = 'None',
}

/**
 * @schema #/definitions/batchPoolIdentityUserAssignedIdentities
 */
export interface BatchPoolIdentityUserAssignedIdentities {
}

/**
 * @schema #/definitions/ApplicationPackageReference
 */
export interface ApplicationPackageReference {
  /**
   * @schema #/definitions/ApplicationPackageReference#id
   */
  readonly id: string;

  /**
   * If this is omitted, and no default version is specified for this application, the request fails with the error code InvalidApplicationPackageReferences. If you are calling the REST API directly, the HTTP status code is 409.
   *
   * @schema #/definitions/ApplicationPackageReference#version
   */
  readonly version?: string;

}

/**
 * @schema #/definitions/CertificateReference
 */
export interface CertificateReference {
  /**
   * @schema #/definitions/CertificateReference#id
   */
  readonly id: string;

  /**
   * The default value is currentUser. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). For Linux compute nodes, the certificates are stored in a directory inside the task working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to the task to query for this location. For certificates with visibility of 'remoteUser', a 'certs' directory is created in the user's home directory (e.g., /home/{user-name}/certs) and certificates are placed in that directory.
   *
   * @schema #/definitions/CertificateReference#storeLocation
   */
  readonly storeLocation?: CertificateReferenceStoreLocation;

  /**
   * This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: My, Root, CA, Trust, Disallowed, TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be used. The default value is My.
   *
   * @schema #/definitions/CertificateReference#storeName
   */
  readonly storeName?: string;

  /**
   * @schema #/definitions/CertificateReference#visibility
   */
  readonly visibility?: CertificateReferenceVisibility[];

}

/**
 * @schema #/definitions/DeploymentConfiguration
 */
export interface DeploymentConfiguration {
  /**
   * @schema #/definitions/DeploymentConfiguration#cloudServiceConfiguration
   */
  readonly cloudServiceConfiguration?: CloudServiceConfiguration;

  /**
   * @schema #/definitions/DeploymentConfiguration#virtualMachineConfiguration
   */
  readonly virtualMachineConfiguration?: VirtualMachineConfiguration;

}

export enum PoolPropertiesInterNodeCommunication {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The Batch service does not assign any meaning to this metadata; it is solely for the use of user code.
 *
 * @schema #/definitions/MetadataItem
 */
export interface MetadataItem {
  /**
   * @schema #/definitions/MetadataItem#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/MetadataItem#value
   */
  readonly value: string;

}

/**
 * @schema #/definitions/MountConfiguration
 */
export interface MountConfiguration {
  /**
   * @schema #/definitions/MountConfiguration#azureBlobFileSystemConfiguration
   */
  readonly azureBlobFileSystemConfiguration?: AzureBlobFileSystemConfiguration;

  /**
   * @schema #/definitions/MountConfiguration#azureFileShareConfiguration
   */
  readonly azureFileShareConfiguration?: AzureFileShareConfiguration;

  /**
   * @schema #/definitions/MountConfiguration#cifsMountConfiguration
   */
  readonly cifsMountConfiguration?: CifsMountConfiguration;

  /**
   * @schema #/definitions/MountConfiguration#nfsMountConfiguration
   */
  readonly nfsMountConfiguration?: NfsMountConfiguration;

}

/**
 * The network configuration for a pool.
 *
 * @schema #/definitions/NetworkConfiguration
 */
export interface NetworkConfiguration {
  /**
   * @schema #/definitions/NetworkConfiguration#endpointConfiguration
   */
  readonly endpointConfiguration?: PoolEndpointConfiguration;

  /**
   * The public IP Address configuration of the networking configuration of a Pool.
   *
   * @schema #/definitions/NetworkConfiguration#publicIPAddressConfiguration
   */
  readonly publicIPAddressConfiguration?: PublicIpAddressConfiguration;

  /**
   * The virtual network must be in the same region and subscription as the Azure Batch account. The specified subnet should have enough free IP addresses to accommodate the number of nodes in the pool. If the subnet doesn't have enough free IP addresses, the pool will partially allocate compute nodes and a resize error will occur. The 'MicrosoftAzureBatch' service principal must have the 'Classic Virtual Machine Contributor' Role-Based Access Control (RBAC) role for the specified VNet. The specified subnet must allow communication from the Azure Batch service to be able to schedule tasks on the compute nodes. This can be verified by checking if the specified VNet has any associated Network Security Groups (NSG). If communication to the compute nodes in the specified subnet is denied by an NSG, then the Batch service will set the state of the compute nodes to unusable. If the specified VNet has any associated Network Security Groups (NSG), then a few reserved system ports must be enabled for inbound communication. For pools created with a virtual machine configuration, enable ports 29876 and 29877, as well as port 22 for Linux and port 3389 for Windows. For pools created with a cloud service configuration, enable ports 10100, 20100, and 30100. Also enable outbound connections to Azure Storage on port 443. For cloudServiceConfiguration pools, only 'classic' VNETs are supported. For more details see: https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration
   *
   * @schema #/definitions/NetworkConfiguration#subnetId
   */
  readonly subnetId?: string;

}

/**
 * Defines the desired size of the pool. This can either be 'fixedScale' where the requested targetDedicatedNodes is specified, or 'autoScale' which defines a formula which is periodically reevaluated. If this property is not specified, the pool will have a fixed scale with 0 targetDedicatedNodes.
 *
 * @schema #/definitions/ScaleSettings
 */
export interface ScaleSettings {
  /**
   * @schema #/definitions/ScaleSettings#autoScale
   */
  readonly autoScale?: AutoScaleSettings;

  /**
   * @schema #/definitions/ScaleSettings#fixedScale
   */
  readonly fixedScale?: FixedScaleSettings;

}

/**
 * In some cases the start task may be re-run even though the node was not rebooted. Due to this, start tasks should be idempotent and exit gracefully if the setup they're performing has already been done. Special care should be taken to avoid start tasks which create breakaway process or install/launch services from the start task working directory, as this will block Batch from being able to re-run the start task.
 *
 * @schema #/definitions/StartTask
 */
export interface StartTask {
  /**
   * The command line does not run under a shell, and therefore cannot take advantage of shell features such as environment variable expansion. If you want to take advantage of such features, you should invoke the shell in the command line, for example using "cmd /c MyCommand" in Windows or "/bin/sh -c MyCommand" in Linux. Required if any other properties of the startTask are specified.
   *
   * @schema #/definitions/StartTask#commandLine
   */
  readonly commandLine?: string;

  /**
   * @schema #/definitions/StartTask#containerSettings
   */
  readonly containerSettings?: TaskContainerSettings;

  /**
   * @schema #/definitions/StartTask#environmentSettings
   */
  readonly environmentSettings?: EnvironmentSetting[];

  /**
   * The Batch service retries a task if its exit code is nonzero. Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
   *
   * @schema #/definitions/StartTask#maxTaskRetryCount
   */
  readonly maxTaskRetryCount?: number;

  /**
   * @schema #/definitions/StartTask#resourceFiles
   */
  readonly resourceFiles?: ResourceFile[];

  /**
   * Specify either the userName or autoUser property, but not both.
   *
   * @schema #/definitions/StartTask#userIdentity
   */
  readonly userIdentity?: UserIdentity;

  /**
   * If true and the start task fails on a compute node, the Batch service retries the start task up to its maximum retry count (maxTaskRetryCount). If the task has still not completed successfully after all retries, then the Batch service marks the compute node unusable, and will not schedule tasks to it. This condition can be detected via the node state and scheduling error detail. If false, the Batch service will not wait for the start task to complete. In this case, other tasks can start executing on the compute node while the start task is still running; and even if the start task fails, new tasks will continue to be scheduled on the node. The default is true.
   *
   * @schema #/definitions/StartTask#waitForSuccess
   */
  readonly waitForSuccess?: boolean;

}

/**
 * @schema #/definitions/TaskSchedulingPolicy
 */
export interface TaskSchedulingPolicy {
  /**
   * @schema #/definitions/TaskSchedulingPolicy#nodeFillType
   */
  readonly nodeFillType: TaskSchedulingPolicyNodeFillType;

}

/**
 * @schema #/definitions/UserAccount
 */
export interface UserAccount {
  /**
   * nonAdmin - The auto user is a standard user without elevated access. admin - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
   *
   * @schema #/definitions/UserAccount#elevationLevel
   */
  readonly elevationLevel?: UserAccountElevationLevel;

  /**
   * @schema #/definitions/UserAccount#linuxUserConfiguration
   */
  readonly linuxUserConfiguration?: LinuxUserConfiguration;

  /**
   * @schema #/definitions/UserAccount#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/UserAccount#password
   */
  readonly password: string;

  /**
   * @schema #/definitions/UserAccount#windowsUserConfiguration
   */
  readonly windowsUserConfiguration?: WindowsUserConfiguration;

}

export enum EncryptionPropertiesKeySource {
  "EncryptionPropertiesKeySource_MICROSOFT_BATCH" = 'Microsoft.Batch',
  "EncryptionPropertiesKeySource_MICROSOFT_KEY_VAULT" = 'Microsoft.KeyVault',
}

/**
 * KeyVault configuration when using an encryption KeySource of Microsoft.KeyVault.
 *
 * @schema #/definitions/KeyVaultProperties
 */
export interface KeyVaultProperties {
  /**
   * Full path to the versioned secret. Example https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following prerequisites must be met:

 The Batch Account has a System Assigned identity
 The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions
 The KeyVault has soft-delete and purge protection enabled
   *
   * @schema #/definitions/KeyVaultProperties#keyIdentifier
   */
  readonly keyIdentifier?: string;

}

export enum BatchAccountsApplicationsChildResourceApiVersion {
  "BatchAccountsApplicationsChildResourceApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema #/definitions/batchAccountsApplicationsChildResourceName
 */
export class BatchAccountsApplicationsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum BatchAccountsApplicationsChildResourceType {
  APPLICATIONS = 'applications',
}

export enum BatchAccountsCertificatesChildResourceApiVersion {
  "BatchAccountsCertificatesChildResourceApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema #/definitions/batchAccountsCertificatesChildResourceName
 */
export class BatchAccountsCertificatesChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum BatchAccountsCertificatesChildResourceType {
  CERTIFICATES = 'certificates',
}

export enum BatchAccountsPoolsChildResourceApiVersion {
  "BatchAccountsPoolsChildResourceApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema #/definitions/batchAccountsPoolsChildResourceName
 */
export class BatchAccountsPoolsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum BatchAccountsPoolsChildResourceType {
  POOLS = 'pools',
}

export enum CertificateReferenceStoreLocation {
  CURRENT_USER = 'CurrentUser',
  LOCAL_MACHINE = 'LocalMachine',
}

export enum CertificateReferenceVisibility {
  START_TASK = 'StartTask',
  TASK = 'Task',
  REMOTE_USER = 'RemoteUser',
}

/**
 * @schema #/definitions/CloudServiceConfiguration
 */
export interface CloudServiceConfiguration {
  /**
   * Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. 6 - OS Family 6, equivalent to Windows Server 2019. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
   *
   * @schema #/definitions/CloudServiceConfiguration#osFamily
   */
  readonly osFamily: string;

  /**
   * The default value is * which specifies the latest operating system version for the specified OS family.
   *
   * @schema #/definitions/CloudServiceConfiguration#osVersion
   */
  readonly osVersion?: string;

}

/**
 * @schema #/definitions/VirtualMachineConfiguration
 */
export interface VirtualMachineConfiguration {
  /**
   * @schema #/definitions/VirtualMachineConfiguration#containerConfiguration
   */
  readonly containerConfiguration?: ContainerConfiguration;

  /**
   * This property must be specified if the compute nodes in the pool need to have empty data disks attached to them.
   *
   * @schema #/definitions/VirtualMachineConfiguration#dataDisks
   */
  readonly dataDisks?: DataDisk[];

  /**
   * The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image.
   *
   * @schema #/definitions/VirtualMachineConfiguration#diskEncryptionConfiguration
   */
  readonly diskEncryptionConfiguration?: DiskEncryptionConfiguration;

  /**
   * If specified, the extensions mentioned in this configuration will be installed on each node.
   *
   * @schema #/definitions/VirtualMachineConfiguration#extensions
   */
  readonly extensions?: VmExtension[];

  /**
   * @schema #/definitions/VirtualMachineConfiguration#imageReference
   */
  readonly imageReference: ImageReference;

  /**
   * This only applies to images that contain the Windows operating system, and should only be used when you hold valid on-premises licenses for the nodes which will be deployed. If omitted, no on-premises licensing discount is applied. Values are:

 Windows_Server - The on-premises license is for Windows Server.
 Windows_Client - The on-premises license is for Windows Client.

   *
   * @schema #/definitions/VirtualMachineConfiguration#licenseType
   */
  readonly licenseType?: string;

  /**
   * The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems. You must specify a node agent SKU which matches the selected image reference. To get the list of supported node agent SKUs along with their list of verified image references, see the 'List supported node agent SKUs' operation.
   *
   * @schema #/definitions/VirtualMachineConfiguration#nodeAgentSkuId
   */
  readonly nodeAgentSkuId: string;

  /**
   * Allocation configuration used by Batch Service to provision the nodes.
   *
   * @schema #/definitions/VirtualMachineConfiguration#nodePlacementConfiguration
   */
  readonly nodePlacementConfiguration?: NodePlacementConfiguration;

  /**
   * @schema #/definitions/VirtualMachineConfiguration#windowsConfiguration
   */
  readonly windowsConfiguration?: WindowsConfiguration;

}

/**
 * @schema #/definitions/AzureBlobFileSystemConfiguration
 */
export interface AzureBlobFileSystemConfiguration {
  /**
   * This property is mutually exclusive with sasKey and one must be specified.
   *
   * @schema #/definitions/AzureBlobFileSystemConfiguration#accountKey
   */
  readonly accountKey?: string;

  /**
   * @schema #/definitions/AzureBlobFileSystemConfiguration#accountName
   */
  readonly accountName: string;

  /**
   * These are 'net use' options in Windows and 'mount' options in Linux.
   *
   * @schema #/definitions/AzureBlobFileSystemConfiguration#blobfuseOptions
   */
  readonly blobfuseOptions?: string;

  /**
   * @schema #/definitions/AzureBlobFileSystemConfiguration#containerName
   */
  readonly containerName: string;

  /**
   * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   *
   * @schema #/definitions/AzureBlobFileSystemConfiguration#relativeMountPath
   */
  readonly relativeMountPath: string;

  /**
   * This property is mutually exclusive with accountKey and one must be specified.
   *
   * @schema #/definitions/AzureBlobFileSystemConfiguration#sasKey
   */
  readonly sasKey?: string;

}

/**
 * @schema #/definitions/AzureFileShareConfiguration
 */
export interface AzureFileShareConfiguration {
  /**
   * @schema #/definitions/AzureFileShareConfiguration#accountKey
   */
  readonly accountKey: string;

  /**
   * @schema #/definitions/AzureFileShareConfiguration#accountName
   */
  readonly accountName: string;

  /**
   * This is of the form 'https://{account}.file.core.windows.net/'.
   *
   * @schema #/definitions/AzureFileShareConfiguration#azureFileUrl
   */
  readonly azureFileUrl: string;

  /**
   * These are 'net use' options in Windows and 'mount' options in Linux.
   *
   * @schema #/definitions/AzureFileShareConfiguration#mountOptions
   */
  readonly mountOptions?: string;

  /**
   * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   *
   * @schema #/definitions/AzureFileShareConfiguration#relativeMountPath
   */
  readonly relativeMountPath: string;

}

/**
 * @schema #/definitions/CIFSMountConfiguration
 */
export interface CifsMountConfiguration {
  /**
   * These are 'net use' options in Windows and 'mount' options in Linux.
   *
   * @schema #/definitions/CIFSMountConfiguration#mountOptions
   */
  readonly mountOptions?: string;

  /**
   * @schema #/definitions/CIFSMountConfiguration#password
   */
  readonly password: string;

  /**
   * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   *
   * @schema #/definitions/CIFSMountConfiguration#relativeMountPath
   */
  readonly relativeMountPath: string;

  /**
   * @schema #/definitions/CIFSMountConfiguration#source
   */
  readonly source: string;

  /**
   * @schema #/definitions/CIFSMountConfiguration#username
   */
  readonly username: string;

}

/**
 * @schema #/definitions/NFSMountConfiguration
 */
export interface NfsMountConfiguration {
  /**
   * These are 'net use' options in Windows and 'mount' options in Linux.
   *
   * @schema #/definitions/NFSMountConfiguration#mountOptions
   */
  readonly mountOptions?: string;

  /**
   * All file systems are mounted relative to the Batch mounts directory, accessible via the AZ_BATCH_NODE_MOUNTS_DIR environment variable.
   *
   * @schema #/definitions/NFSMountConfiguration#relativeMountPath
   */
  readonly relativeMountPath: string;

  /**
   * @schema #/definitions/NFSMountConfiguration#source
   */
  readonly source: string;

}

/**
 * @schema #/definitions/PoolEndpointConfiguration
 */
export interface PoolEndpointConfiguration {
  /**
   * The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400. This cannot be specified if the IPAddressProvisioningType is NoPublicIPAddresses.
   *
   * @schema #/definitions/PoolEndpointConfiguration#inboundNatPools
   */
  readonly inboundNatPools: InboundNatPool[];

}

/**
 * The public IP Address configuration of the networking configuration of a Pool.
 *
 * @schema #/definitions/PublicIPAddressConfiguration
 */
export interface PublicIpAddressConfiguration {
  /**
   * The number of IPs specified here limits the maximum size of the Pool - 100 dedicated nodes or 100 low-priority nodes can be allocated for each public IP. For example, a pool needing 250 dedicated VMs would need at least 3 public IPs specified. Each element of this collection is of the form: /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
   *
   * @schema #/definitions/PublicIPAddressConfiguration#ipAddressIds
   */
  readonly ipAddressIds?: string[];

  /**
   * The default value is BatchManaged.
   *
   * @schema #/definitions/PublicIPAddressConfiguration#provision
   */
  readonly provision?: PublicIpAddressConfigurationProvision;

}

/**
 * @schema #/definitions/AutoScaleSettings
 */
export interface AutoScaleSettings {
  /**
   * If omitted, the default value is 15 minutes (PT15M).
   *
   * @schema #/definitions/AutoScaleSettings#evaluationInterval
   */
  readonly evaluationInterval?: string;

  /**
   * @schema #/definitions/AutoScaleSettings#formula
   */
  readonly formula: string;

}

/**
 * @schema #/definitions/FixedScaleSettings
 */
export interface FixedScaleSettings {
  /**
   * If omitted, the default value is Requeue.
   *
   * @schema #/definitions/FixedScaleSettings#nodeDeallocationOption
   */
  readonly nodeDeallocationOption?: FixedScaleSettingsNodeDeallocationOption;

  /**
   * The default value is 15 minutes. Timeout values use ISO 8601 format. For example, use PT10M for 10 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service rejects the request with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
   *
   * @schema #/definitions/FixedScaleSettings#resizeTimeout
   */
  readonly resizeTimeout?: string;

  /**
   * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
   *
   * @schema #/definitions/FixedScaleSettings#targetDedicatedNodes
   */
  readonly targetDedicatedNodes?: number;

  /**
   * At least one of targetDedicatedNodes, targetLowPriorityNodes must be set.
   *
   * @schema #/definitions/FixedScaleSettings#targetLowPriorityNodes
   */
  readonly targetLowPriorityNodes?: number;

}

/**
 * @schema #/definitions/TaskContainerSettings
 */
export interface TaskContainerSettings {
  /**
   * These additional options are supplied as arguments to the "docker create" command, in addition to those controlled by the Batch Service.
   *
   * @schema #/definitions/TaskContainerSettings#containerRunOptions
   */
  readonly containerRunOptions?: string;

  /**
   * This is the full image reference, as would be specified to "docker pull". If no tag is provided as part of the image name, the tag ":latest" is used as a default.
   *
   * @schema #/definitions/TaskContainerSettings#imageName
   */
  readonly imageName: string;

  /**
   * @schema #/definitions/TaskContainerSettings#registry
   */
  readonly registry?: ContainerRegistry;

  /**
   * @schema #/definitions/TaskContainerSettings#workingDirectory
   */
  readonly workingDirectory?: TaskContainerSettingsWorkingDirectory;

}

/**
 * @schema #/definitions/EnvironmentSetting
 */
export interface EnvironmentSetting {
  /**
   * @schema #/definitions/EnvironmentSetting#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/EnvironmentSetting#value
   */
  readonly value?: string;

}

/**
 * @schema #/definitions/ResourceFile
 */
export interface ResourceFile {
  /**
   * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified.
   *
   * @schema #/definitions/ResourceFile#autoStorageContainerName
   */
  readonly autoStorageContainerName?: string;

  /**
   * The property is valid only when autoStorageContainerName or storageContainerUrl is used. This prefix can be a partial filename or a subdirectory. If a prefix is not specified, all the files in the container will be downloaded.
   *
   * @schema #/definitions/ResourceFile#blobPrefix
   */
  readonly blobPrefix?: string;

  /**
   * This property applies only to files being downloaded to Linux compute nodes. It will be ignored if it is specified for a resourceFile which will be downloaded to a Windows node. If this property is not specified for a Linux node, then a default value of 0770 is applied to the file.
   *
   * @schema #/definitions/ResourceFile#fileMode
   */
  readonly fileMode?: string;

  /**
   * If the httpUrl property is specified, the filePath is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the autoStorageContainerName or storageContainerUrl property is specified, filePath is optional and is the directory to download the files to. In the case where filePath is used as a directory, any directory structure already associated with the input data will be retained in full and appended to the specified filePath directory. The specified relative path cannot break out of the task's working directory (for example by using '..').
   *
   * @schema #/definitions/ResourceFile#filePath
   */
  readonly filePath?: string;

  /**
   * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. If the URL is Azure Blob Storage, it must be readable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read permissions on the blob, or set the ACL for the blob or its container to allow public access.
   *
   * @schema #/definitions/ResourceFile#httpUrl
   */
  readonly httpUrl?: string;

  /**
   * The autoStorageContainerName, storageContainerUrl and httpUrl properties are mutually exclusive and one of them must be specified. This URL must be readable and listable using anonymous access; that is, the Batch service does not present any credentials when downloading the blob. There are two ways to get such a URL for a blob in Azure storage: include a Shared Access Signature (SAS) granting read and list permissions on the blob, or set the ACL for the blob or its container to allow public access.
   *
   * @schema #/definitions/ResourceFile#storageContainerUrl
   */
  readonly storageContainerUrl?: string;

}

/**
 * Specify either the userName or autoUser property, but not both.
 *
 * @schema #/definitions/UserIdentity
 */
export interface UserIdentity {
  /**
   * @schema #/definitions/UserIdentity#autoUser
   */
  readonly autoUser?: AutoUserSpecification;

  /**
   * The userName and autoUser properties are mutually exclusive; you must specify one but not both.
   *
   * @schema #/definitions/UserIdentity#userName
   */
  readonly userName?: string;

}

export enum TaskSchedulingPolicyNodeFillType {
  SPREAD = 'Spread',
  PACK = 'Pack',
}

export enum UserAccountElevationLevel {
  NON_ADMIN = 'NonAdmin',
  ADMIN = 'Admin',
}

/**
 * @schema #/definitions/LinuxUserConfiguration
 */
export interface LinuxUserConfiguration {
  /**
   * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the gid.
   *
   * @schema #/definitions/LinuxUserConfiguration#gid
   */
  readonly gid?: number;

  /**
   * The private key must not be password protected. The private key is used to automatically configure asymmetric-key based authentication for SSH between nodes in a Linux pool when the pool's enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication is false). It does this by placing the key pair into the user's .ssh directory. If not specified, password-less SSH is not configured between nodes (no modification of the user's .ssh directory is done).
   *
   * @schema #/definitions/LinuxUserConfiguration#sshPrivateKey
   */
  readonly sshPrivateKey?: string;

  /**
   * The uid and gid properties must be specified together or not at all. If not specified the underlying operating system picks the uid.
   *
   * @schema #/definitions/LinuxUserConfiguration#uid
   */
  readonly uid?: number;

}

/**
 * @schema #/definitions/WindowsUserConfiguration
 */
export interface WindowsUserConfiguration {
  /**
   * Specifies login mode for the user. The default value for VirtualMachineConfiguration pools is interactive mode and for CloudServiceConfiguration pools is batch mode.
   *
   * @schema #/definitions/WindowsUserConfiguration#loginMode
   */
  readonly loginMode?: WindowsUserConfigurationLoginMode;

}

/**
 * @schema #/definitions/ContainerConfiguration
 */
export interface ContainerConfiguration {
  /**
   * This is the full image reference, as would be specified to "docker pull". An image will be sourced from the default Docker registry unless the image is fully qualified with an alternative registry.
   *
   * @schema #/definitions/ContainerConfiguration#containerImageNames
   */
  readonly containerImageNames?: string[];

  /**
   * If any images must be downloaded from a private registry which requires credentials, then those credentials must be provided here.
   *
   * @schema #/definitions/ContainerConfiguration#containerRegistries
   */
  readonly containerRegistries?: ContainerRegistry[];

  /**
   * @schema #/definitions/ContainerConfiguration#type
   */
  readonly type: ContainerConfigurationType;

}

/**
 * Settings which will be used by the data disks associated to Compute Nodes in the Pool. When using attached data disks, you need to mount and format the disks from within a VM to use them.
 *
 * @schema #/definitions/DataDisk
 */
export interface DataDisk {
  /**
   * Values are:

 none - The caching mode for the disk is not enabled.
 readOnly - The caching mode for the disk is read only.
 readWrite - The caching mode for the disk is read and write.

 The default value for caching is none. For information about the caching options see: https://blogs.msdn.microsoft.com/windowsazurestorage/2012/06/27/exploring-windows-azure-drives-disks-and-images/.
   *
   * @schema #/definitions/DataDisk#caching
   */
  readonly caching?: DataDiskCaching;

  /**
   * @schema #/definitions/DataDisk#diskSizeGB
   */
  readonly diskSizeGB: number;

  /**
   * The lun is used to uniquely identify each data disk. If attaching multiple disks, each should have a distinct lun. The value must be between 0 and 63, inclusive.
   *
   * @schema #/definitions/DataDisk#lun
   */
  readonly lun: number;

  /**
   * If omitted, the default is "Standard_LRS". Values are:

 Standard_LRS - The data disk should use standard locally redundant storage.
 Premium_LRS - The data disk should use premium locally redundant storage.
   *
   * @schema #/definitions/DataDisk#storageAccountType
   */
  readonly storageAccountType?: DataDiskStorageAccountType;

}

/**
 * The disk encryption configuration applied on compute nodes in the pool. Disk encryption configuration is not supported on Linux pool created with Virtual Machine Image or Shared Image Gallery Image.
 *
 * @schema #/definitions/DiskEncryptionConfiguration
 */
export interface DiskEncryptionConfiguration {
  /**
   * On Linux pool, only "TemporaryDisk" is supported; on Windows pool, "OsDisk" and "TemporaryDisk" must be specified.
   *
   * @schema #/definitions/DiskEncryptionConfiguration#targets
   */
  readonly targets?: DiskEncryptionConfigurationTargets[];

}

/**
 * @schema #/definitions/VMExtension
 */
export interface VmExtension {
  /**
   * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
   *
   * @schema #/definitions/VMExtension#autoUpgradeMinorVersion
   */
  readonly autoUpgradeMinorVersion?: boolean;

  /**
   * @schema #/definitions/VMExtension#name
   */
  readonly name: string;

  /**
   * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. 
   *
   * @schema #/definitions/VMExtension#protectedSettings
   */
  readonly protectedSettings?: VmExtensionProtectedSettings;

  /**
   * Collection of extension names after which this extension needs to be provisioned.
   *
   * @schema #/definitions/VMExtension#provisionAfterExtensions
   */
  readonly provisionAfterExtensions?: string[];

  /**
   * @schema #/definitions/VMExtension#publisher
   */
  readonly publisher: string;

  /**
   * @schema #/definitions/VMExtension#settings
   */
  readonly settings?: VmExtensionSettings;

  /**
   * @schema #/definitions/VMExtension#type
   */
  readonly type: string;

  /**
   * @schema #/definitions/VMExtension#typeHandlerVersion
   */
  readonly typeHandlerVersion?: string;

}

/**
 * @schema #/definitions/ImageReference
 */
export interface ImageReference {
  /**
   * This property is mutually exclusive with other properties. The Shared Image Gallery image must have replicas in the same region as the Azure Batch account. For information about the firewall settings for the Batch node agent to communicate with the Batch service see https://docs.microsoft.com/en-us/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration.
   *
   * @schema #/definitions/ImageReference#id
   */
  readonly id?: string;

  /**
   * For example, UbuntuServer or WindowsServer.
   *
   * @schema #/definitions/ImageReference#offer
   */
  readonly offer?: string;

  /**
   * For example, Canonical or MicrosoftWindowsServer.
   *
   * @schema #/definitions/ImageReference#publisher
   */
  readonly publisher?: string;

  /**
   * For example, 18.04-LTS or 2019-Datacenter.
   *
   * @schema #/definitions/ImageReference#sku
   */
  readonly sku?: string;

  /**
   * A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.
   *
   * @schema #/definitions/ImageReference#version
   */
  readonly version?: string;

}

/**
 * Allocation configuration used by Batch Service to provision the nodes.
 *
 * @schema #/definitions/NodePlacementConfiguration
 */
export interface NodePlacementConfiguration {
  /**
   * Allocation policy used by Batch Service to provision the nodes. If not specified, Batch will use the regional policy.
   *
   * @schema #/definitions/NodePlacementConfiguration#policy
   */
  readonly policy?: NodePlacementConfigurationPolicy;

}

/**
 * @schema #/definitions/WindowsConfiguration
 */
export interface WindowsConfiguration {
  /**
   * If omitted, the default value is true.
   *
   * @schema #/definitions/WindowsConfiguration#enableAutomaticUpdates
   */
  readonly enableAutomaticUpdates?: boolean;

}

/**
 * @schema #/definitions/InboundNatPool
 */
export interface InboundNatPool {
  /**
   * This must be unique within a Batch pool. Acceptable values are between 1 and 65535 except for 22, 3389, 29876 and 29877 as these are reserved. If any reserved values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/InboundNatPool#backendPort
   */
  readonly backendPort: number;

  /**
   * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/InboundNatPool#frontendPortRangeEnd
   */
  readonly frontendPortRangeEnd: number;

  /**
   * Acceptable values range between 1 and 65534 except ports from 50000 to 55000 which are reserved. All ranges within a pool must be distinct and cannot overlap. If any reserved or overlapping values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/InboundNatPool#frontendPortRangeStart
   */
  readonly frontendPortRangeStart: number;

  /**
   * The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters.  If any invalid values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/InboundNatPool#name
   */
  readonly name: string;

  /**
   * The maximum number of rules that can be specified across all the endpoints on a Batch pool is 25. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. If the maximum number of network security group rules is exceeded the request fails with HTTP status code 400.
   *
   * @schema #/definitions/InboundNatPool#networkSecurityGroupRules
   */
  readonly networkSecurityGroupRules?: NetworkSecurityGroupRule[];

  /**
   * @schema #/definitions/InboundNatPool#protocol
   */
  readonly protocol: InboundNatPoolProtocol;

}

export enum PublicIpAddressConfigurationProvision {
  BATCH_MANAGED = 'BatchManaged',
  USER_MANAGED = 'UserManaged',
  NO_PUBLIC_IP_ADDRESSES = 'NoPublicIPAddresses',
}

export enum FixedScaleSettingsNodeDeallocationOption {
  REQUEUE = 'Requeue',
  TERMINATE = 'Terminate',
  TASK_COMPLETION = 'TaskCompletion',
  RETAINED_DATA = 'RetainedData',
}

/**
 * @schema #/definitions/ContainerRegistry
 */
export interface ContainerRegistry {
  /**
   * @schema #/definitions/ContainerRegistry#password
   */
  readonly password: string;

  /**
   * If omitted, the default is "docker.io".
   *
   * @schema #/definitions/ContainerRegistry#registryServer
   */
  readonly registryServer?: string;

  /**
   * @schema #/definitions/ContainerRegistry#username
   */
  readonly username: string;

}

export enum TaskContainerSettingsWorkingDirectory {
  TASK_WORKING_DIRECTORY = 'TaskWorkingDirectory',
  CONTAINER_IMAGE_DEFAULT = 'ContainerImageDefault',
}

/**
 * @schema #/definitions/AutoUserSpecification
 */
export interface AutoUserSpecification {
  /**
   * The default value is nonAdmin.
   *
   * @schema #/definitions/AutoUserSpecification#elevationLevel
   */
  readonly elevationLevel?: AutoUserSpecificationElevationLevel;

  /**
   * The default value is Pool. If the pool is running Windows a value of Task should be specified if stricter isolation between tasks is required. For example, if the task mutates the registry in a way which could impact other tasks, or if certificates have been specified on the pool which should not be accessible by normal tasks but should be accessible by start tasks.
   *
   * @schema #/definitions/AutoUserSpecification#scope
   */
  readonly scope?: AutoUserSpecificationScope;

}

export enum WindowsUserConfigurationLoginMode {
  BATCH = 'Batch',
  INTERACTIVE = 'Interactive',
}

export enum ContainerConfigurationType {
  DOCKER_COMPATIBLE = 'DockerCompatible',
}

export enum DataDiskCaching {
  NONE = 'None',
  READ_ONLY = 'ReadOnly',
  READ_WRITE = 'ReadWrite',
}

export enum DataDiskStorageAccountType {
  STANDARD_LRS = 'Standard_LRS',
  PREMIUM_LRS = 'Premium_LRS',
}

export enum DiskEncryptionConfigurationTargets {
  OS_DISK = 'OsDisk',
  TEMPORARY_DISK = 'TemporaryDisk',
}

/**
 * The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all. 
 *
 * @schema #/definitions/vmExtensionProtectedSettings
 */
export interface VmExtensionProtectedSettings {
}

/**
 * @schema #/definitions/vmExtensionSettings
 */
export interface VmExtensionSettings {
}

export enum NodePlacementConfigurationPolicy {
  REGIONAL = 'Regional',
  ZONAL = 'Zonal',
}

/**
 * @schema #/definitions/NetworkSecurityGroupRule
 */
export interface NetworkSecurityGroupRule {
  /**
   * @schema #/definitions/NetworkSecurityGroupRule#access
   */
  readonly access: NetworkSecurityGroupRuleAccess;

  /**
   * Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 4096. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/NetworkSecurityGroupRule#priority
   */
  readonly priority: number;

  /**
   * Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
   *
   * @schema #/definitions/NetworkSecurityGroupRule#sourceAddressPrefix
   */
  readonly sourceAddressPrefix: string;

  /**
   * Valid values are '*' (for all ports 0 - 65535) or arrays of ports or port ranges (i.e. 100-200). The ports should in the range of 0 to 65535 and the port ranges or ports can't overlap. If any other values are provided the request fails with HTTP status code 400. Default value will be *.
   *
   * @schema #/definitions/NetworkSecurityGroupRule#sourcePortRanges
   */
  readonly sourcePortRanges?: string[];

}

export enum InboundNatPoolProtocol {
  TCP = 'TCP',
  UDP = 'UDP',
}

export enum AutoUserSpecificationElevationLevel {
  NON_ADMIN = 'NonAdmin',
  ADMIN = 'Admin',
}

export enum AutoUserSpecificationScope {
  TASK = 'Task',
  POOL = 'Pool',
}

export enum NetworkSecurityGroupRuleAccess {
  ALLOW = 'Allow',
  DENY = 'Deny',
}

