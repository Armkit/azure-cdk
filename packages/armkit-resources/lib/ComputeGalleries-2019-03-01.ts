      // generated by armkit
      import { ArmResource } from '@yetics/armkit-core';
      import { Construct } from 'constructs';

      /**
       * Microsoft.Compute/galleries
       *
       * @schema Microsoft.Compute.galleries
       */
      export class Galleries extends ArmResource {
        /**
         * Defines a "Microsoft.Compute.galleries" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: GalleriesOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'galleries',
          });
        }
      }

      /**
       * Microsoft.Compute/galleries/images
       *
       * @schema Microsoft.Compute.galleries_images
       */
      export class GalleriesImages extends ArmResource {
        /**
         * Defines a "Microsoft.Compute.galleries_images" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: GalleriesImagesOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'galleries_images',
          });
        }
      }

      /**
       * Microsoft.Compute/galleries/images/versions
       *
       * @schema Microsoft.Compute.galleries_images_versions
       */
      export class GalleriesImagesVersions extends ArmResource {
        /**
         * Defines a "Microsoft.Compute.galleries_images_versions" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: GalleriesImagesVersionsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'galleries_images_versions',
          });
        }
      }

      /**
       * Microsoft.Compute/galleries
       *
       * @schema Microsoft.Compute.galleries
       */
      export interface GalleriesOptions {
        /**
         * @schema Microsoft.Compute.galleries#name
         */
        readonly name: string;

        /**
         * @schema Microsoft.Compute.galleries#type
         */
        readonly type: MicrosoftComputeGalleriesType;

        /**
         * @schema Microsoft.Compute.galleries#apiVersion
         */
        readonly apiVersion?: MicrosoftComputeGalleriesApiVersion;

        /**
         * Resource location
         *
         * @schema Microsoft.Compute.galleries#location
         */
        readonly location: string;

        /**
         * Resource tags
         *
         * @schema Microsoft.Compute.galleries#tags
         */
        readonly tags?: { [key: string]: string };

        /**
         * @schema Microsoft.Compute.galleries#properties
         */
        readonly properties: GalleryProperties;

        /**
         * @schema Microsoft.Compute.galleries#resources
         */
        readonly resources?: GalleriesImagesChildResource[];

      }

      /**
       * Microsoft.Compute/galleries/images
       *
       * @schema Microsoft.Compute.galleries_images
       */
      export interface GalleriesImagesOptions {
        /**
         * @schema Microsoft.Compute.galleries_images#name
         */
        readonly name: string;

        /**
         * @schema Microsoft.Compute.galleries_images#type
         */
        readonly type: MicrosoftComputeGalleriesImagesType;

        /**
         * @schema Microsoft.Compute.galleries_images#apiVersion
         */
        readonly apiVersion?: MicrosoftComputeGalleriesImagesApiVersion;

        /**
         * Resource location
         *
         * @schema Microsoft.Compute.galleries_images#location
         */
        readonly location: string;

        /**
         * Resource tags
         *
         * @schema Microsoft.Compute.galleries_images#tags
         */
        readonly tags?: { [key: string]: string };

        /**
         * @schema Microsoft.Compute.galleries_images#properties
         */
        readonly properties: GalleryImageProperties;

        /**
         * @schema Microsoft.Compute.galleries_images#resources
         */
        readonly resources?: GalleriesImagesVersionsChildResource[];

      }

      /**
       * Microsoft.Compute/galleries/images/versions
       *
       * @schema Microsoft.Compute.galleries_images_versions
       */
      export interface GalleriesImagesVersionsOptions {
        /**
         * @schema Microsoft.Compute.galleries_images_versions#name
         */
        readonly name: string;

        /**
         * @schema Microsoft.Compute.galleries_images_versions#type
         */
        readonly type: MicrosoftComputeGalleriesImagesVersionsType;

        /**
         * @schema Microsoft.Compute.galleries_images_versions#apiVersion
         */
        readonly apiVersion?: MicrosoftComputeGalleriesImagesVersionsApiVersion;

        /**
         * Resource location
         *
         * @schema Microsoft.Compute.galleries_images_versions#location
         */
        readonly location: string;

        /**
         * Resource tags
         *
         * @schema Microsoft.Compute.galleries_images_versions#tags
         */
        readonly tags?: { [key: string]: string };

        /**
         * @schema Microsoft.Compute.galleries_images_versions#properties
         */
        readonly properties: GalleryImageVersionProperties;

      }

      export enum MicrosoftComputeGalleriesType {
        "MicrosoftComputeGalleriesType_MICROSOFT_COMPUTE_GALLERIES" = 'Microsoft.Compute/galleries',
      }

      export enum MicrosoftComputeGalleriesApiVersion {
        "MicrosoftComputeGalleriesApiVersion_2019_03_01" = '2019-03-01',
      }

      /**
       * Describes the properties of a Shared Image Gallery.
       *
       * @schema #/definitions/GalleryProperties
       */
      export interface GalleryProperties {
        /**
         * The description of this Shared Image Gallery resource. This property is updatable.
         *
         * @schema #/definitions/GalleryProperties#description
         */
        readonly description?: string;

        /**
         * @schema #/definitions/GalleryProperties#identifier
         */
        readonly identifier?: string;

      }

      /**
       * Microsoft.Compute/galleries/images
       *
       * @schema #/definitions/galleries_images_childResource
       */
      export interface GalleriesImagesChildResource {
        /**
         * @schema #/definitions/galleries_images_childResource#name
         */
        readonly name: string;

        /**
         * @schema #/definitions/galleries_images_childResource#type
         */
        readonly type: GalleriesImagesChildResourceType;

        /**
         * @schema #/definitions/galleries_images_childResource#apiVersion
         */
        readonly apiVersion: GalleriesImagesChildResourceApiVersion;

        /**
         * Resource location
         *
         * @schema #/definitions/galleries_images_childResource#location
         */
        readonly location: string;

        /**
         * Resource tags
         *
         * @schema #/definitions/galleries_images_childResource#tags
         */
        readonly tags?: { [key: string]: string };

        /**
         * @schema #/definitions/galleries_images_childResource#properties
         */
        readonly properties: GalleryImageProperties;

        /**
         * @schema #/definitions/galleries_images_childResource#resources
         */
        readonly resources?: GalleriesImagesVersionsChildResource[];

      }

      export enum MicrosoftComputeGalleriesImagesType {
        "MicrosoftComputeGalleriesImagesType_MICROSOFT_COMPUTE_GALLERIES_IMAGES" = 'Microsoft.Compute/galleries/images',
      }

      export enum MicrosoftComputeGalleriesImagesApiVersion {
        "MicrosoftComputeGalleriesImagesApiVersion_2019_03_01" = '2019-03-01',
      }

      /**
       * Describes the properties of a gallery Image Definition.
       *
       * @schema #/definitions/GalleryImageProperties
       */
      export interface GalleryImageProperties {
        /**
         * The description of this gallery Image Definition resource. This property is updatable.
         *
         * @schema #/definitions/GalleryImageProperties#description
         */
        readonly description?: string;

        /**
         * The Eula agreement for the gallery Image Definition.
         *
         * @schema #/definitions/GalleryImageProperties#eula
         */
        readonly eula?: string;

        /**
         * The privacy statement uri.
         *
         * @schema #/definitions/GalleryImageProperties#privacyStatementUri
         */
        readonly privacyStatementUri?: string;

        /**
         * The release note uri.
         *
         * @schema #/definitions/GalleryImageProperties#releaseNoteUri
         */
        readonly releaseNoteUri?: string;

        /**
         * This property allows you to specify the type of the OS that is included in the disk when creating a VM from a managed image. <br><br> Possible values are: <br><br> **Windows** <br><br> **Linux**.
         *
         * @schema #/definitions/GalleryImageProperties#osType
         */
        readonly osType: GalleryImagePropertiesOsType;

        /**
         * The allowed values for OS State are 'Generalized'.
         *
         * @schema #/definitions/GalleryImageProperties#osState
         */
        readonly osState: GalleryImagePropertiesOsState;

        /**
         * The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable.
         *
         * @schema #/definitions/GalleryImageProperties#endOfLifeDate
         */
        readonly endOfLifeDate?: Date;

        /**
         * @schema #/definitions/GalleryImageProperties#identifier
         */
        readonly identifier: GalleryImageIdentifier;

        /**
         * @schema #/definitions/GalleryImageProperties#recommended
         */
        readonly recommended?: RecommendedMachineConfiguration;

        /**
         * @schema #/definitions/GalleryImageProperties#disallowed
         */
        readonly disallowed?: Disallowed;

        /**
         * @schema #/definitions/GalleryImageProperties#purchasePlan
         */
        readonly purchasePlan?: ImagePurchasePlan;

      }

      /**
       * Microsoft.Compute/galleries/images/versions
       *
       * @schema #/definitions/galleries_images_versions_childResource
       */
      export interface GalleriesImagesVersionsChildResource {
        /**
         * @schema #/definitions/galleries_images_versions_childResource#name
         */
        readonly name: string;

        /**
         * @schema #/definitions/galleries_images_versions_childResource#type
         */
        readonly type: GalleriesImagesVersionsChildResourceType;

        /**
         * @schema #/definitions/galleries_images_versions_childResource#apiVersion
         */
        readonly apiVersion: GalleriesImagesVersionsChildResourceApiVersion;

        /**
         * Resource location
         *
         * @schema #/definitions/galleries_images_versions_childResource#location
         */
        readonly location: string;

        /**
         * Resource tags
         *
         * @schema #/definitions/galleries_images_versions_childResource#tags
         */
        readonly tags?: { [key: string]: string };

        /**
         * @schema #/definitions/galleries_images_versions_childResource#properties
         */
        readonly properties: GalleryImageVersionProperties;

      }

      export enum MicrosoftComputeGalleriesImagesVersionsType {
        "MicrosoftComputeGalleriesImagesVersionsType_MICROSOFT_COMPUTE_GALLERIES_IMAGES_VERSIONS" = 'Microsoft.Compute/galleries/images/versions',
      }

      export enum MicrosoftComputeGalleriesImagesVersionsApiVersion {
        "MicrosoftComputeGalleriesImagesVersionsApiVersion_2019_03_01" = '2019-03-01',
      }

      /**
       * Describes the properties of a gallery Image Version.
       *
       * @schema #/definitions/GalleryImageVersionProperties
       */
      export interface GalleryImageVersionProperties {
        /**
         * @schema #/definitions/GalleryImageVersionProperties#publishingProfile
         */
        readonly publishingProfile: GalleryImageVersionPublishingProfile;

      }

      export enum GalleriesImagesChildResourceType {
        IMAGES = 'images',
      }

      export enum GalleriesImagesChildResourceApiVersion {
        "GalleriesImagesChildResourceApiVersion_2019_03_01" = '2019-03-01',
      }

      export enum GalleryImagePropertiesOsType {
        WINDOWS = 'Windows',
        LINUX = 'Linux',
      }

      export enum GalleryImagePropertiesOsState {
        GENERALIZED = 'Generalized',
        SPECIALIZED = 'Specialized',
      }

      /**
       * This is the gallery Image Definition identifier.
       *
       * @schema #/definitions/GalleryImageIdentifier
       */
      export interface GalleryImageIdentifier {
        /**
         * The name of the gallery Image Definition publisher.
         *
         * @schema #/definitions/GalleryImageIdentifier#publisher
         */
        readonly publisher: string;

        /**
         * The name of the gallery Image Definition offer.
         *
         * @schema #/definitions/GalleryImageIdentifier#offer
         */
        readonly offer: string;

        /**
         * The name of the gallery Image Definition SKU.
         *
         * @schema #/definitions/GalleryImageIdentifier#sku
         */
        readonly sku: string;

      }

      /**
       * The properties describe the recommended machine configuration for this Image Definition. These properties are updatable.
       *
       * @schema #/definitions/RecommendedMachineConfiguration
       */
      export interface RecommendedMachineConfiguration {
        /**
         * @schema #/definitions/RecommendedMachineConfiguration#vCPUs
         */
        readonly vCPUs?: ResourceRange;

        /**
         * @schema #/definitions/RecommendedMachineConfiguration#memory
         */
        readonly memory?: ResourceRange;

      }

      /**
       * Describes the disallowed disk types.
       *
       * @schema #/definitions/Disallowed
       */
      export interface Disallowed {
        /**
         * A list of disk types.
         *
         * @schema #/definitions/Disallowed#diskTypes
         */
        readonly diskTypes?: string[];

      }

      /**
       * Describes the gallery Image Definition purchase plan. This is used by marketplace images.
       *
       * @schema #/definitions/ImagePurchasePlan
       */
      export interface ImagePurchasePlan {
        /**
         * The plan ID.
         *
         * @schema #/definitions/ImagePurchasePlan#name
         */
        readonly name?: string;

        /**
         * The publisher ID.
         *
         * @schema #/definitions/ImagePurchasePlan#publisher
         */
        readonly publisher?: string;

        /**
         * The product ID.
         *
         * @schema #/definitions/ImagePurchasePlan#product
         */
        readonly product?: string;

      }

      export enum GalleriesImagesVersionsChildResourceType {
        VERSIONS = 'versions',
      }

      export enum GalleriesImagesVersionsChildResourceApiVersion {
        "GalleriesImagesVersionsChildResourceApiVersion_2019_03_01" = '2019-03-01',
      }

      /**
       * The publishing profile of a gallery Image Version.
       *
       * @schema #/definitions/GalleryImageVersionPublishingProfile
       */
      export interface GalleryImageVersionPublishingProfile {
        /**
         * The target regions where the Image Version is going to be replicated to. This property is updatable.
         *
         * @schema #/definitions/GalleryImageVersionPublishingProfile#targetRegions
         */
        readonly targetRegions?: TargetRegion[];

        /**
         * @schema #/definitions/GalleryImageVersionPublishingProfile#source
         */
        readonly source: GalleryArtifactSource;

        /**
         * The number of replicas of the Image Version to be created per region. This property would take effect for a region when regionalReplicaCount is not specified. This property is updatable.
         *
         * @schema #/definitions/GalleryImageVersionPublishingProfile#replicaCount
         */
        readonly replicaCount?: number;

        /**
         * If set to true, Virtual Machines deployed from the latest version of the Image Definition won't use this Image Version.
         *
         * @schema #/definitions/GalleryImageVersionPublishingProfile#excludeFromLatest
         */
        readonly excludeFromLatest?: boolean;

        /**
         * The end of life date of the gallery Image Version. This property can be used for decommissioning purposes. This property is updatable.
         *
         * @schema #/definitions/GalleryImageVersionPublishingProfile#endOfLifeDate
         */
        readonly endOfLifeDate?: Date;

        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         *
         * @schema #/definitions/GalleryImageVersionPublishingProfile#storageAccountType
         */
        readonly storageAccountType?: GalleryImageVersionPublishingProfileStorageAccountType;

      }

      /**
       * Describes the resource range.
       *
       * @schema #/definitions/ResourceRange
       */
      export interface ResourceRange {
        /**
         * The minimum number of the resource.
         *
         * @schema #/definitions/ResourceRange#min
         */
        readonly min?: number;

        /**
         * The maximum number of the resource.
         *
         * @schema #/definitions/ResourceRange#max
         */
        readonly max?: number;

      }

      /**
       * Describes the target region information.
       *
       * @schema #/definitions/TargetRegion
       */
      export interface TargetRegion {
        /**
         * The name of the region.
         *
         * @schema #/definitions/TargetRegion#name
         */
        readonly name: string;

        /**
         * The number of replicas of the Image Version to be created per region. This property is updatable.
         *
         * @schema #/definitions/TargetRegion#regionalReplicaCount
         */
        readonly regionalReplicaCount?: number;

        /**
         * Specifies the storage account type to be used to store the image. This property is not updatable.
         *
         * @schema #/definitions/TargetRegion#storageAccountType
         */
        readonly storageAccountType?: TargetRegionStorageAccountType;

      }

      /**
       * The source image from which the Image Version is going to be created.
       *
       * @schema #/definitions/GalleryArtifactSource
       */
      export interface GalleryArtifactSource {
        /**
         * @schema #/definitions/GalleryArtifactSource#managedImage
         */
        readonly managedImage: ManagedArtifact;

      }

      export enum GalleryImageVersionPublishingProfileStorageAccountType {
        STANDARD_LRS = 'Standard_LRS',
        STANDARD_ZRS = 'Standard_ZRS',
      }

      export enum TargetRegionStorageAccountType {
        STANDARD_LRS = 'Standard_LRS',
        STANDARD_ZRS = 'Standard_ZRS',
      }

      /**
       * The managed artifact.
       *
       * @schema #/definitions/ManagedArtifact
       */
      export interface ManagedArtifact {
        /**
         * The managed artifact id.
         *
         * @schema #/definitions/ManagedArtifact#id
         */
        readonly id: string;

      }

