// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.AVS/privateClouds
 *
 * @schema Microsoft.AVS.privateClouds
 */
export class PrivateClouds extends ArmResource {
  /**
   * Defines a "Microsoft.AVS.privateClouds" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: PrivateCloudsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'privateClouds',
    });
  }
}

/**
 * Microsoft.AVS/privateClouds/authorizations
 *
 * @schema Microsoft.AVS.privateClouds_authorizations
 */
export class PrivateCloudsAuthorizations extends ArmResource {
  /**
   * Defines a "Microsoft.AVS.privateClouds_authorizations" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: PrivateCloudsAuthorizationsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'privateClouds_authorizations',
    });
  }
}

/**
 * Microsoft.AVS/privateClouds/clusters
 *
 * @schema Microsoft.AVS.privateClouds_clusters
 */
export class PrivateCloudsClusters extends ArmResource {
  /**
   * Defines a "Microsoft.AVS.privateClouds_clusters" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: PrivateCloudsClustersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'privateClouds_clusters',
    });
  }
}

/**
 * Microsoft.AVS/privateClouds/hcxEnterpriseSites
 *
 * @schema Microsoft.AVS.privateClouds_hcxEnterpriseSites
 */
export class PrivateCloudsHcxEnterpriseSites extends ArmResource {
  /**
   * Defines a "Microsoft.AVS.privateClouds_hcxEnterpriseSites" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: PrivateCloudsHcxEnterpriseSitesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'privateClouds_hcxEnterpriseSites',
    });
  }
}

/**
 * Microsoft.AVS/privateClouds
 *
 * @schema Microsoft.AVS.privateClouds
 */
export interface PrivateCloudsOptions {
  /**
   * @schema Microsoft.AVS.privateClouds#apiVersion
   */
  readonly apiVersion?: MicrosoftAvsPrivateCloudsApiVersion;

  /**
   * Resource location
   *
   * @schema Microsoft.AVS.privateClouds#location
   */
  readonly location?: string;

  /**
   * Name of the private cloud
   *
   * @schema Microsoft.AVS.privateClouds#name
   */
  readonly name: string;

  /**
   * The properties of a private cloud resource
   *
   * @schema Microsoft.AVS.privateClouds#properties
   */
  readonly properties: PrivateCloudProperties;

  /**
   * @schema Microsoft.AVS.privateClouds#resources
   */
  readonly resources?: MicrosoftAvsPrivateCloudsResources[];

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.AVS.privateClouds#sku
   */
  readonly sku: Sku;

  /**
   * Resource tags
   *
   * @schema Microsoft.AVS.privateClouds#tags
   */
  readonly tags?: MicrosoftAvsPrivateCloudsTags;

  /**
   * @schema Microsoft.AVS.privateClouds#type
   */
  readonly type: MicrosoftAvsPrivateCloudsType;

}

/**
 * Microsoft.AVS/privateClouds/authorizations
 *
 * @schema Microsoft.AVS.privateClouds_authorizations
 */
export interface PrivateCloudsAuthorizationsOptions {
  /**
   * @schema Microsoft.AVS.privateClouds_authorizations#apiVersion
   */
  readonly apiVersion?: MicrosoftAvsPrivateCloudsAuthorizationsApiVersion;

  /**
   * Name of the ExpressRoute Circuit Authorization in the private cloud
   *
   * @schema Microsoft.AVS.privateClouds_authorizations#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.AVS.privateClouds_authorizations#type
   */
  readonly type: MicrosoftAvsPrivateCloudsAuthorizationsType;

}

/**
 * Microsoft.AVS/privateClouds/clusters
 *
 * @schema Microsoft.AVS.privateClouds_clusters
 */
export interface PrivateCloudsClustersOptions {
  /**
   * @schema Microsoft.AVS.privateClouds_clusters#apiVersion
   */
  readonly apiVersion?: MicrosoftAvsPrivateCloudsClustersApiVersion;

  /**
   * Name of the cluster in the private cloud
   *
   * @schema Microsoft.AVS.privateClouds_clusters#name
   */
  readonly name: string;

  /**
   * The properties of a cluster
   *
   * @schema Microsoft.AVS.privateClouds_clusters#properties
   */
  readonly properties: ClusterProperties;

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.AVS.privateClouds_clusters#sku
   */
  readonly sku: Sku;

  /**
   * @schema Microsoft.AVS.privateClouds_clusters#type
   */
  readonly type: MicrosoftAvsPrivateCloudsClustersType;

}

/**
 * Microsoft.AVS/privateClouds/hcxEnterpriseSites
 *
 * @schema Microsoft.AVS.privateClouds_hcxEnterpriseSites
 */
export interface PrivateCloudsHcxEnterpriseSitesOptions {
  /**
   * @schema Microsoft.AVS.privateClouds_hcxEnterpriseSites#apiVersion
   */
  readonly apiVersion?: MicrosoftAvsPrivateCloudsHcxEnterpriseSitesApiVersion;

  /**
   * Name of the HCX Enterprise Site in the private cloud
   *
   * @schema Microsoft.AVS.privateClouds_hcxEnterpriseSites#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.AVS.privateClouds_hcxEnterpriseSites#type
   */
  readonly type: MicrosoftAvsPrivateCloudsHcxEnterpriseSitesType;

}

export enum MicrosoftAvsPrivateCloudsApiVersion {
  "MicrosoftAvsPrivateCloudsApiVersion_2020_03_20" = '2020-03-20',
}

/**
 * The properties of a private cloud resource
 *
 * @schema #/definitions/PrivateCloudProperties
 */
export interface PrivateCloudProperties {
  /**
   * An ExpressRoute Circuit
   *
   * @schema #/definitions/PrivateCloudProperties#circuit
   */
  readonly circuit?: Circuit;

  /**
   * vCenter Single Sign On Identity Sources
   *
   * @schema #/definitions/PrivateCloudProperties#identitySources
   */
  readonly identitySources?: IdentitySource[];

  /**
   * Connectivity to internet is enabled or disabled.
   *
   * @schema #/definitions/PrivateCloudProperties#internet
   */
  readonly internet?: PrivateCloudPropertiesInternet;

  /**
   * The properties of a default cluster
   *
   * @schema #/definitions/PrivateCloudProperties#managementCluster
   */
  readonly managementCluster?: ManagementCluster;

  /**
   * The block of addresses should be unique across VNet in your subscription as well as on-premise. Make sure the CIDR format is conformed to (A.B.C.D/X) where A,B,C,D are between 0 and 255, and X is between 0 and 22
   *
   * @schema #/definitions/PrivateCloudProperties#networkBlock
   */
  readonly networkBlock: string;

  /**
   * Optionally, set the NSX-T Manager password when the private cloud is created
   *
   * @schema #/definitions/PrivateCloudProperties#nsxtPassword
   */
  readonly nsxtPassword?: string;

  /**
   * Optionally, set the vCenter admin password when the private cloud is created
   *
   * @schema #/definitions/PrivateCloudProperties#vcenterPassword
   */
  readonly vcenterPassword?: string;

}

/**
 * @schema MicrosoftAvsPrivateCloudsResources
 */
export class MicrosoftAvsPrivateCloudsResources {
  public static fromPrivateCloudsClustersChildResource(value: PrivateCloudsClustersChildResource): MicrosoftAvsPrivateCloudsResources {
    return new MicrosoftAvsPrivateCloudsResources(value);
  }
  public static fromPrivateCloudsHcxEnterpriseSitesChildResource(value: PrivateCloudsHcxEnterpriseSitesChildResource): MicrosoftAvsPrivateCloudsResources {
    return new MicrosoftAvsPrivateCloudsResources(value);
  }
  public static fromPrivateCloudsAuthorizationsChildResource(value: PrivateCloudsAuthorizationsChildResource): MicrosoftAvsPrivateCloudsResources {
    return new MicrosoftAvsPrivateCloudsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * The resource model definition representing SKU
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * The name of the SKU.
   *
   * @schema #/definitions/Sku#name
   */
  readonly name: string;

}

/**
 * @schema MicrosoftAvsPrivateCloudsTags
 */
export interface MicrosoftAvsPrivateCloudsTags {
}

export enum MicrosoftAvsPrivateCloudsType {
  "MicrosoftAvsPrivateCloudsType_MICROSOFT_AVS_PRIVATE_CLOUDS" = 'Microsoft.AVS/privateClouds',
}

export enum MicrosoftAvsPrivateCloudsAuthorizationsApiVersion {
  "MicrosoftAvsPrivateCloudsAuthorizationsApiVersion_2020_03_20" = '2020-03-20',
}

export enum MicrosoftAvsPrivateCloudsAuthorizationsType {
  "MicrosoftAvsPrivateCloudsAuthorizationsType_MICROSOFT_AVS_PRIVATE_CLOUDS_AUTHORIZATIONS" = 'Microsoft.AVS/privateClouds/authorizations',
}

export enum MicrosoftAvsPrivateCloudsClustersApiVersion {
  "MicrosoftAvsPrivateCloudsClustersApiVersion_2020_03_20" = '2020-03-20',
}

/**
 * The properties of a cluster
 *
 * @schema #/definitions/ClusterProperties
 */
export interface ClusterProperties {
  /**
   * The cluster size
   *
   * @schema #/definitions/ClusterProperties#clusterSize
   */
  readonly clusterSize?: number;

  /**
   * The state of the cluster provisioning.
   *
   * @schema #/definitions/ClusterProperties#provisioningState
   */
  readonly provisioningState?: ClusterPropertiesProvisioningState;

}

export enum MicrosoftAvsPrivateCloudsClustersType {
  "MicrosoftAvsPrivateCloudsClustersType_MICROSOFT_AVS_PRIVATE_CLOUDS_CLUSTERS" = 'Microsoft.AVS/privateClouds/clusters',
}

export enum MicrosoftAvsPrivateCloudsHcxEnterpriseSitesApiVersion {
  "MicrosoftAvsPrivateCloudsHcxEnterpriseSitesApiVersion_2020_03_20" = '2020-03-20',
}

export enum MicrosoftAvsPrivateCloudsHcxEnterpriseSitesType {
  "MicrosoftAvsPrivateCloudsHcxEnterpriseSitesType_MICROSOFT_AVS_PRIVATE_CLOUDS_HCX_ENTERPRISE_SITES" = 'Microsoft.AVS/privateClouds/hcxEnterpriseSites',
}

/**
 * An ExpressRoute Circuit
 *
 * @schema #/definitions/Circuit
 */
export interface Circuit {
}

/**
 * vCenter Single Sign On Identity Source
 *
 * @schema #/definitions/IdentitySource
 */
export interface IdentitySource {
  /**
   * The domain's NetBIOS name
   *
   * @schema #/definitions/IdentitySource#alias
   */
  readonly alias?: string;

  /**
   * The base distinguished name for groups
   *
   * @schema #/definitions/IdentitySource#baseGroupDN
   */
  readonly baseGroupDN?: string;

  /**
   * The base distinguished name for users
   *
   * @schema #/definitions/IdentitySource#baseUserDN
   */
  readonly baseUserDN?: string;

  /**
   * The domain's dns name
   *
   * @schema #/definitions/IdentitySource#domain
   */
  readonly domain?: string;

  /**
   * The name of the identity source
   *
   * @schema #/definitions/IdentitySource#name
   */
  readonly name?: string;

  /**
   * The password of the Active Directory user with a minimum of read-only access to Base DN for users and groups.
   *
   * @schema #/definitions/IdentitySource#password
   */
  readonly password?: string;

  /**
   * Primary server URL
   *
   * @schema #/definitions/IdentitySource#primaryServer
   */
  readonly primaryServer?: string;

  /**
   * Secondary server URL
   *
   * @schema #/definitions/IdentitySource#secondaryServer
   */
  readonly secondaryServer?: string;

  /**
   * Protect LDAP communication using SSL certificate (LDAPS).
   *
   * @schema #/definitions/IdentitySource#ssl
   */
  readonly ssl?: IdentitySourceSsl;

  /**
   * The ID of an Active Directory user with a minimum of read-only access to Base DN for users and group
   *
   * @schema #/definitions/IdentitySource#username
   */
  readonly username?: string;

}

export enum PrivateCloudPropertiesInternet {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The properties of a default cluster
 *
 * @schema #/definitions/ManagementCluster
 */
export interface ManagementCluster {
  /**
   * The cluster size
   *
   * @schema #/definitions/ManagementCluster#clusterSize
   */
  readonly clusterSize?: number;

  /**
   * The state of the cluster provisioning.
   *
   * @schema #/definitions/ManagementCluster#provisioningState
   */
  readonly provisioningState?: ManagementClusterProvisioningState;

}

/**
 * Microsoft.AVS/privateClouds/clusters
 *
 * @schema #/definitions/privateClouds_clusters_childResource
 */
export interface PrivateCloudsClustersChildResource {
  /**
   * @schema #/definitions/privateClouds_clusters_childResource#apiVersion
   */
  readonly apiVersion: PrivateCloudsClustersChildResourceApiVersion;

  /**
   * Name of the cluster in the private cloud
   *
   * @schema #/definitions/privateClouds_clusters_childResource#name
   */
  readonly name: string;

  /**
   * The properties of a cluster
   *
   * @schema #/definitions/privateClouds_clusters_childResource#properties
   */
  readonly properties: ClusterProperties;

  /**
   * The resource model definition representing SKU
   *
   * @schema #/definitions/privateClouds_clusters_childResource#sku
   */
  readonly sku: Sku;

  /**
   * @schema #/definitions/privateClouds_clusters_childResource#type
   */
  readonly type: PrivateCloudsClustersChildResourceType;

}

/**
 * Microsoft.AVS/privateClouds/hcxEnterpriseSites
 *
 * @schema #/definitions/privateClouds_hcxEnterpriseSites_childResource
 */
export interface PrivateCloudsHcxEnterpriseSitesChildResource {
  /**
   * @schema #/definitions/privateClouds_hcxEnterpriseSites_childResource#apiVersion
   */
  readonly apiVersion: PrivateCloudsHcxEnterpriseSitesChildResourceApiVersion;

  /**
   * Name of the HCX Enterprise Site in the private cloud
   *
   * @schema #/definitions/privateClouds_hcxEnterpriseSites_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/privateClouds_hcxEnterpriseSites_childResource#type
   */
  readonly type: PrivateCloudsHcxEnterpriseSitesChildResourceType;

}

/**
 * Microsoft.AVS/privateClouds/authorizations
 *
 * @schema #/definitions/privateClouds_authorizations_childResource
 */
export interface PrivateCloudsAuthorizationsChildResource {
  /**
   * @schema #/definitions/privateClouds_authorizations_childResource#apiVersion
   */
  readonly apiVersion: PrivateCloudsAuthorizationsChildResourceApiVersion;

  /**
   * Name of the ExpressRoute Circuit Authorization in the private cloud
   *
   * @schema #/definitions/privateClouds_authorizations_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/privateClouds_authorizations_childResource#type
   */
  readonly type: PrivateCloudsAuthorizationsChildResourceType;

}

export enum ClusterPropertiesProvisioningState {
  SUCCEEDED = 'Succeeded',
  FAILED = 'Failed',
  CANCELLED = 'Cancelled',
  DELETING = 'Deleting',
  UPDATING = 'Updating',
}

export enum IdentitySourceSsl {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum ManagementClusterProvisioningState {
  SUCCEEDED = 'Succeeded',
  FAILED = 'Failed',
  CANCELLED = 'Cancelled',
  DELETING = 'Deleting',
  UPDATING = 'Updating',
}

export enum PrivateCloudsClustersChildResourceApiVersion {
  "PrivateCloudsClustersChildResourceApiVersion_2020_03_20" = '2020-03-20',
}

export enum PrivateCloudsClustersChildResourceType {
  CLUSTERS = 'clusters',
}

export enum PrivateCloudsHcxEnterpriseSitesChildResourceApiVersion {
  "PrivateCloudsHcxEnterpriseSitesChildResourceApiVersion_2020_03_20" = '2020-03-20',
}

export enum PrivateCloudsHcxEnterpriseSitesChildResourceType {
  HCX_ENTERPRISE_SITES = 'hcxEnterpriseSites',
}

export enum PrivateCloudsAuthorizationsChildResourceApiVersion {
  "PrivateCloudsAuthorizationsChildResourceApiVersion_2020_03_20" = '2020-03-20',
}

export enum PrivateCloudsAuthorizationsChildResourceType {
  AUTHORIZATIONS = 'authorizations',
}

