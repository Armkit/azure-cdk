// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.MixedReality/remoteRenderingAccounts
 *
 * @schema Microsoft.MixedReality.remoteRenderingAccounts
 */
export class RemoteRenderingAccounts extends ArmResource {
  /**
   * Defines a "Microsoft.MixedReality.remoteRenderingAccounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: RemoteRenderingAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'remoteRenderingAccounts',
    });
  }
}

/**
 * Microsoft.MixedReality/spatialAnchorsAccounts
 *
 * @schema Microsoft.MixedReality.spatialAnchorsAccounts
 */
export class SpatialAnchorsAccounts extends ArmResource {
  /**
   * Defines a "Microsoft.MixedReality.spatialAnchorsAccounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: SpatialAnchorsAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'spatialAnchorsAccounts',
    });
  }
}

/**
 * Microsoft.MixedReality/remoteRenderingAccounts
 *
 * @schema Microsoft.MixedReality.remoteRenderingAccounts
 */
export interface RemoteRenderingAccountsOptions {
  /**
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftMixedRealityRemoteRenderingAccountsApiVersion;

  /**
   * Identity for the resource.
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#identity
   */
  readonly identity?: Identity;

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#kind
   */
  readonly kind?: Sku;

  /**
   * The geo-location where the resource lives
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#location
   */
  readonly location: string;

  /**
   * Name of an Mixed Reality Account.
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#name
   */
  readonly name: MicrosoftMixedRealityRemoteRenderingAccountsNamePattern;

  /**
   * Identity for the resource.
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#plan
   */
  readonly plan?: Identity;

  /**
   * Common Properties shared by Mixed Reality Accounts
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#properties
   */
  readonly properties: MixedRealityAccountProperties;

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#sku
   */
  readonly sku?: Sku;

  /**
   * Metadata pertaining to creation and last modification of the resource.
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#systemData
   */
  readonly systemData?: SystemData;

  /**
   * Resource tags.
   *
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#tags
   */
  readonly tags?: MicrosoftMixedRealityRemoteRenderingAccountsTags;

  /**
   * @schema Microsoft.MixedReality.remoteRenderingAccounts#type
   */
  readonly type: MicrosoftMixedRealityRemoteRenderingAccountsType;

}

/**
 * Microsoft.MixedReality/spatialAnchorsAccounts
 *
 * @schema Microsoft.MixedReality.spatialAnchorsAccounts
 */
export interface SpatialAnchorsAccountsOptions {
  /**
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftMixedRealitySpatialAnchorsAccountsApiVersion;

  /**
   * Identity for the resource.
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#identity
   */
  readonly identity?: Identity;

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#kind
   */
  readonly kind?: Sku;

  /**
   * The geo-location where the resource lives
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#location
   */
  readonly location: string;

  /**
   * Name of an Mixed Reality Account.
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#name
   */
  readonly name: MicrosoftMixedRealitySpatialAnchorsAccountsNamePattern;

  /**
   * Identity for the resource.
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#plan
   */
  readonly plan?: Identity;

  /**
   * Common Properties shared by Mixed Reality Accounts
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#properties
   */
  readonly properties: MixedRealityAccountProperties;

  /**
   * The resource model definition representing SKU
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#sku
   */
  readonly sku?: Sku;

  /**
   * Metadata pertaining to creation and last modification of the resource.
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#systemData
   */
  readonly systemData?: SystemData;

  /**
   * Resource tags.
   *
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#tags
   */
  readonly tags?: MicrosoftMixedRealitySpatialAnchorsAccountsTags;

  /**
   * @schema Microsoft.MixedReality.spatialAnchorsAccounts#type
   */
  readonly type: MicrosoftMixedRealitySpatialAnchorsAccountsType;

}

export enum MicrosoftMixedRealityRemoteRenderingAccountsApiVersion {
  "MicrosoftMixedRealityRemoteRenderingAccountsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * Identity for the resource.
 *
 * @schema #/definitions/Identity
 */
export interface Identity {
  /**
   * The identity type.
   *
   * @schema #/definitions/Identity#type
   */
  readonly type?: IdentityType;

}

/**
 * The resource model definition representing SKU
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.
   *
   * @schema #/definitions/Sku#capacity
   */
  readonly capacity?: number;

  /**
   * If the service has different generations of hardware, for the same SKU, then that can be captured here.
   *
   * @schema #/definitions/Sku#family
   */
  readonly family?: string;

  /**
   * The name of the SKU. Ex - P3. It is typically a letter+number code
   *
   * @schema #/definitions/Sku#name
   */
  readonly name: string;

  /**
   * The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. 
   *
   * @schema #/definitions/Sku#size
   */
  readonly size?: string;

  /**
   * This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.
   *
   * @schema #/definitions/Sku#tier
   */
  readonly tier?: SkuTier;

}

/**
 * @schema MicrosoftMixedRealityRemoteRenderingAccountsName
 */
export class MicrosoftMixedRealityRemoteRenderingAccountsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Common Properties shared by Mixed Reality Accounts
 *
 * @schema #/definitions/MixedRealityAccountProperties
 */
export interface MixedRealityAccountProperties {
  /**
   * The name of the storage account associated with this accountId
   *
   * @schema #/definitions/MixedRealityAccountProperties#storageAccountName
   */
  readonly storageAccountName?: string;

}

/**
 * Metadata pertaining to creation and last modification of the resource.
 *
 * @schema #/definitions/SystemData
 */
export interface SystemData {
  /**
   * The timestamp of resource creation (UTC).
   *
   * @schema #/definitions/SystemData#createdAt
   */
  readonly createdAt?: Date;

  /**
   * The identity that created the resource.
   *
   * @schema #/definitions/SystemData#createdBy
   */
  readonly createdBy?: string;

  /**
   * The type of identity that created the resource.
   *
   * @schema #/definitions/SystemData#createdByType
   */
  readonly createdByType?: SystemDataCreatedByType;

  /**
   * The timestamp of resource last modification (UTC)
   *
   * @schema #/definitions/SystemData#lastModifiedAt
   */
  readonly lastModifiedAt?: Date;

  /**
   * The identity that last modified the resource.
   *
   * @schema #/definitions/SystemData#lastModifiedBy
   */
  readonly lastModifiedBy?: string;

  /**
   * The type of identity that last modified the resource.
   *
   * @schema #/definitions/SystemData#lastModifiedByType
   */
  readonly lastModifiedByType?: SystemDataLastModifiedByType;

}

/**
 * @schema MicrosoftMixedRealityRemoteRenderingAccountsTags
 */
export interface MicrosoftMixedRealityRemoteRenderingAccountsTags {
}

export enum MicrosoftMixedRealityRemoteRenderingAccountsType {
  "MicrosoftMixedRealityRemoteRenderingAccountsType_MICROSOFT_MIXED_REALITY_REMOTE_RENDERING_ACCOUNTS" = 'Microsoft.MixedReality/remoteRenderingAccounts',
}

export enum MicrosoftMixedRealitySpatialAnchorsAccountsApiVersion {
  "MicrosoftMixedRealitySpatialAnchorsAccountsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * @schema MicrosoftMixedRealitySpatialAnchorsAccountsName
 */
export class MicrosoftMixedRealitySpatialAnchorsAccountsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * @schema MicrosoftMixedRealitySpatialAnchorsAccountsTags
 */
export interface MicrosoftMixedRealitySpatialAnchorsAccountsTags {
}

export enum MicrosoftMixedRealitySpatialAnchorsAccountsType {
  "MicrosoftMixedRealitySpatialAnchorsAccountsType_MICROSOFT_MIXED_REALITY_SPATIAL_ANCHORS_ACCOUNTS" = 'Microsoft.MixedReality/spatialAnchorsAccounts',
}

export enum IdentityType {
  SYSTEM_ASSIGNED = 'SystemAssigned',
}

export enum SkuTier {
  FREE = 'Free',
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
}

export enum SystemDataCreatedByType {
  USER = 'User',
  APPLICATION = 'Application',
  MANAGED_IDENTITY = 'ManagedIdentity',
  KEY = 'Key',
}

export enum SystemDataLastModifiedByType {
  USER = 'User',
  APPLICATION = 'Application',
  MANAGED_IDENTITY = 'ManagedIdentity',
  KEY = 'Key',
}

