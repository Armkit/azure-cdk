// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.Logic/workflows
 *
 * @schema Microsoft.Logic.workflows
 */
export class Workflows extends ArmResource {
  /**
   * Defines a "Microsoft.Logic.workflows" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: WorkflowsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'workflows',
    });
  }
}

/**
 * Microsoft.Logic/workflows
 *
 * @schema Microsoft.Logic.workflows
 */
export interface WorkflowsOptions {
  /**
   * @schema Microsoft.Logic.workflows#type
   */
  readonly type: MicrosoftLogicWorkflowsType;

  /**
   * @schema Microsoft.Logic.workflows#apiVersion
   */
  readonly apiVersion?: MicrosoftLogicWorkflowsApiVersion;

  /**
   * The resource id.
   *
   * @schema Microsoft.Logic.workflows#id
   */
  readonly id?: string;

  /**
   * Gets the resource name.
   *
   * @schema Microsoft.Logic.workflows#name
   */
  readonly name?: string;

  /**
   * The resource location.
   *
   * @schema Microsoft.Logic.workflows#location
   */
  readonly location?: string;

  /**
   * The resource tags.
   *
   * @schema Microsoft.Logic.workflows#tags
   */
  readonly tags?: { [key: string]: string };

  /**
   * The workflow properties.
   *
   * @schema Microsoft.Logic.workflows#properties
   */
  readonly properties: WorkflowProperties;

}

export enum MicrosoftLogicWorkflowsType {
  "MicrosoftLogicWorkflowsType_MICROSOFT_LOGIC_WORKFLOWS" = 'Microsoft.Logic/workflows',
}

export enum MicrosoftLogicWorkflowsApiVersion {
  "MicrosoftLogicWorkflowsApiVersion_2017_07_01" = '2017-07-01',
}

/**
 * @schema #/definitions/WorkflowProperties
 */
export interface WorkflowProperties {
  /**
   * The state.
   *
   * @schema #/definitions/WorkflowProperties#state
   */
  readonly state?: WorkflowPropertiesState;

  /**
   * The integration account.
   *
   * @schema #/definitions/WorkflowProperties#integrationAccount
   */
  readonly integrationAccount?: ResourceReference;

  /**
   * The definition.
   *
   * @schema #/definitions/WorkflowProperties#definition
   */
  readonly definition?: any;

  /**
   * The parameters.
   *
   * @schema #/definitions/WorkflowProperties#parameters
   */
  readonly parameters?: { [key: string]: WorkflowParameter };

}

export enum WorkflowPropertiesState {
  NOT_SPECIFIED = 'NotSpecified',
  COMPLETED = 'Completed',
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
  DELETED = 'Deleted',
  SUSPENDED = 'Suspended',
}

/**
 * @schema #/definitions/ResourceReference
 */
export interface ResourceReference {
  /**
   * The resource id.
   *
   * @schema #/definitions/ResourceReference#id
   */
  readonly id?: string;

}

/**
 * @schema #/definitions/WorkflowParameter
 */
export interface WorkflowParameter {
  /**
   * The type.
   *
   * @schema #/definitions/WorkflowParameter#type
   */
  readonly type?: WorkflowParameterType;

  /**
   * The value.
   *
   * @schema #/definitions/WorkflowParameter#value
   */
  readonly value?: any;

  /**
   * The metadata.
   *
   * @schema #/definitions/WorkflowParameter#metadata
   */
  readonly metadata?: any;

  /**
   * The description.
   *
   * @schema #/definitions/WorkflowParameter#description
   */
  readonly description?: string;

}

export enum WorkflowParameterType {
  NOT_SPECIFIED = 'NotSpecified',
  STRING = 'String',
  SECURE_STRING = 'SecureString',
  INT = 'Int',
  FLOAT = 'Float',
  BOOL = 'Bool',
  ARRAY = 'Array',
  OBJECT = 'Object',
  SECURE_OBJECT = 'SecureObject',
}

