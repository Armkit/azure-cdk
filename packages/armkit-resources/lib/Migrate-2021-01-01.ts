// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Migrate/moveCollections
 *
 * @schema Microsoft.Migrate.moveCollections
 */
export class MoveCollections extends ArmResource {
  /**
   * Defines a "Microsoft.Migrate.moveCollections" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: MoveCollectionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'moveCollections',
    });
  }
}

/**
 * Microsoft.Migrate/moveCollections/moveResources
 *
 * @schema Microsoft.Migrate.moveCollections_moveResources
 */
export class MoveCollectionsMoveResources extends ArmResource {
  /**
   * Defines a "Microsoft.Migrate.moveCollections_moveResources" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: MoveCollectionsMoveResourcesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'moveCollections_moveResources',
    });
  }
}

/**
 * Microsoft.Migrate/moveCollections
 *
 * @schema Microsoft.Migrate.moveCollections
 */
export interface MoveCollectionsOptions {
  /**
   * @schema Microsoft.Migrate.moveCollections#apiVersion
   */
  readonly apiVersion?: MicrosoftMigrateMoveCollectionsApiVersion;

  /**
   * Defines the MSI properties of the Move Collection.
   *
   * @schema Microsoft.Migrate.moveCollections#identity
   */
  readonly identity?: Identity;

  /**
   * The geo-location where the resource lives.
   *
   * @schema Microsoft.Migrate.moveCollections#location
   */
  readonly location?: string;

  /**
   * The Move Collection Name.
   *
   * @schema Microsoft.Migrate.moveCollections#name
   */
  readonly name: string;

  /**
   * Defines the move collection properties.
   *
   * @schema Microsoft.Migrate.moveCollections#properties
   */
  readonly properties: MoveCollectionProperties;

  /**
   * @schema Microsoft.Migrate.moveCollections#resources
   */
  readonly resources?: MoveCollectionsMoveResourcesChildResource[];

  /**
   * Resource tags.
   *
   * @schema Microsoft.Migrate.moveCollections#tags
   */
  readonly tags?: MicrosoftMigrateMoveCollectionsTags;

  /**
   * @schema Microsoft.Migrate.moveCollections#type
   */
  readonly type: MicrosoftMigrateMoveCollectionsType;

}

/**
 * Microsoft.Migrate/moveCollections/moveResources
 *
 * @schema Microsoft.Migrate.moveCollections_moveResources
 */
export interface MoveCollectionsMoveResourcesOptions {
  /**
   * @schema Microsoft.Migrate.moveCollections_moveResources#apiVersion
   */
  readonly apiVersion?: MicrosoftMigrateMoveCollectionsMoveResourcesApiVersion;

  /**
   * The Move Resource Name.
   *
   * @schema Microsoft.Migrate.moveCollections_moveResources#name
   */
  readonly name: string;

  /**
   * Defines the move resource properties.
   *
   * @schema Microsoft.Migrate.moveCollections_moveResources#properties
   */
  readonly properties: MoveResourceProperties;

  /**
   * @schema Microsoft.Migrate.moveCollections_moveResources#type
   */
  readonly type: MicrosoftMigrateMoveCollectionsMoveResourcesType;

}

export enum MicrosoftMigrateMoveCollectionsApiVersion {
  "MicrosoftMigrateMoveCollectionsApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * Defines the MSI properties of the Move Collection.
 *
 * @schema #/definitions/Identity
 */
export interface Identity {
  /**
   * Gets or sets the principal id.
   *
   * @schema #/definitions/Identity#principalId
   */
  readonly principalId?: string;

  /**
   * Gets or sets the tenant id.
   *
   * @schema #/definitions/Identity#tenantId
   */
  readonly tenantId?: string;

  /**
   * @schema #/definitions/Identity#type
   */
  readonly type?: IdentityType;

}

/**
 * Defines the move collection properties.
 *
 * @schema #/definitions/MoveCollectionProperties
 */
export interface MoveCollectionProperties {
  /**
   * @schema #/definitions/MoveCollectionProperties#provisioningState
   */
  readonly provisioningState?: MoveCollectionPropertiesProvisioningState;

  /**
   * Gets or sets the source region.
   *
   * @schema #/definitions/MoveCollectionProperties#sourceRegion
   */
  readonly sourceRegion: string;

  /**
   * Gets or sets the target region.
   *
   * @schema #/definitions/MoveCollectionProperties#targetRegion
   */
  readonly targetRegion: string;

}

/**
 * Microsoft.Migrate/moveCollections/moveResources
 *
 * @schema #/definitions/moveCollections_moveResources_childResource
 */
export interface MoveCollectionsMoveResourcesChildResource {
  /**
   * @schema #/definitions/moveCollections_moveResources_childResource#apiVersion
   */
  readonly apiVersion: MoveCollectionsMoveResourcesChildResourceApiVersion;

  /**
   * The Move Resource Name.
   *
   * @schema #/definitions/moveCollections_moveResources_childResource#name
   */
  readonly name: string;

  /**
   * Defines the move resource properties.
   *
   * @schema #/definitions/moveCollections_moveResources_childResource#properties
   */
  readonly properties: MoveResourceProperties;

  /**
   * @schema #/definitions/moveCollections_moveResources_childResource#type
   */
  readonly type: MoveCollectionsMoveResourcesChildResourceType;

}

/**
 * @schema MicrosoftMigrateMoveCollectionsTags
 */
export interface MicrosoftMigrateMoveCollectionsTags {
}

export enum MicrosoftMigrateMoveCollectionsType {
  "MicrosoftMigrateMoveCollectionsType_MICROSOFT_MIGRATE_MOVE_COLLECTIONS" = 'Microsoft.Migrate/moveCollections',
}

export enum MicrosoftMigrateMoveCollectionsMoveResourcesApiVersion {
  "MicrosoftMigrateMoveCollectionsMoveResourcesApiVersion_2021_01_01" = '2021-01-01',
}

/**
 * Defines the move resource properties.
 *
 * @schema #/definitions/MoveResourceProperties
 */
export interface MoveResourceProperties {
  /**
   * Gets or sets the move resource dependencies overrides.
   *
   * @schema #/definitions/MoveResourceProperties#dependsOnOverrides
   */
  readonly dependsOnOverrides?: MoveResourceDependencyOverride[];

  /**
   * Gets or sets the existing target ARM Id of the resource.
   *
   * @schema #/definitions/MoveResourceProperties#existingTargetId
   */
  readonly existingTargetId?: string;

  /**
   * @schema #/definitions/MoveResourceProperties#provisioningState
   */
  readonly provisioningState?: MoveResourcePropertiesProvisioningState;

  /**
   * Gets or sets the resource settings.
   *
   * @schema #/definitions/MoveResourceProperties#resourceSettings
   */
  readonly resourceSettings?: ResourceSettings;

  /**
   * Gets or sets the Source ARM Id of the resource.
   *
   * @schema #/definitions/MoveResourceProperties#sourceId
   */
  readonly sourceId: string;

}

export enum MicrosoftMigrateMoveCollectionsMoveResourcesType {
  "MicrosoftMigrateMoveCollectionsMoveResourcesType_MICROSOFT_MIGRATE_MOVE_COLLECTIONS_MOVE_RESOURCES" = 'Microsoft.Migrate/moveCollections/moveResources',
}

export enum IdentityType {
  NONE = 'None',
  SYSTEM_ASSIGNED = 'SystemAssigned',
  USER_ASSIGNED = 'UserAssigned',
}

export enum MoveCollectionPropertiesProvisioningState {
  SUCCEEDED = 'Succeeded',
  UPDATING = 'Updating',
  CREATING = 'Creating',
  FAILED = 'Failed',
}

export enum MoveCollectionsMoveResourcesChildResourceApiVersion {
  "MoveCollectionsMoveResourcesChildResourceApiVersion_2021_01_01" = '2021-01-01',
}

export enum MoveCollectionsMoveResourcesChildResourceType {
  MOVE_RESOURCES = 'moveResources',
}

/**
 * Defines the dependency override of the move resource.
 *
 * @schema #/definitions/MoveResourceDependencyOverride
 */
export interface MoveResourceDependencyOverride {
  /**
   * Gets or sets the ARM ID of the dependent resource.
   *
   * @schema #/definitions/MoveResourceDependencyOverride#id
   */
  readonly id?: string;

  /**
   * Gets or sets the resource ARM id of either the MoveResource or the resource ARM ID of
the dependent resource.
   *
   * @schema #/definitions/MoveResourceDependencyOverride#targetId
   */
  readonly targetId?: string;

}

export enum MoveResourcePropertiesProvisioningState {
  SUCCEEDED = 'Succeeded',
  UPDATING = 'Updating',
  CREATING = 'Creating',
  FAILED = 'Failed',
}

/**
 * Gets or sets the resource settings.
 *
 * @schema #/definitions/ResourceSettings
 */
export class ResourceSettings {
  public static fromVirtualMachineResourceSettings(value: VirtualMachineResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromAvailabilitySetResourceSettings(value: AvailabilitySetResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromVirtualNetworkResourceSettings(value: VirtualNetworkResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromNetworkInterfaceResourceSettings(value: NetworkInterfaceResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromNetworkSecurityGroupResourceSettings(value: NetworkSecurityGroupResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromLoadBalancerResourceSettings(value: LoadBalancerResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromSqlServerResourceSettings(value: SqlServerResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromSqlElasticPoolResourceSettings(value: SqlElasticPoolResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromSqlDatabaseResourceSettings(value: SqlDatabaseResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromResourceGroupResourceSettings(value: ResourceGroupResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromPublicIpAddressResourceSettings(value: PublicIpAddressResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromKeyVaultResourceSettings(value: KeyVaultResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  public static fromDiskEncryptionSetResourceSettings(value: DiskEncryptionSetResourceSettings): ResourceSettings {
    return new ResourceSettings(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Gets or sets the virtual machine resource settings.
 *
 * @schema #/definitions/VirtualMachineResourceSettings
 */
export interface VirtualMachineResourceSettings {
  /**
   * @schema #/definitions/VirtualMachineResourceSettings#resourceType
   */
  readonly resourceType: VirtualMachineResourceSettingsResourceType;

  /**
   * Gets or sets the target availability set id for virtual machines not in an availability set at source.
   *
   * @schema #/definitions/VirtualMachineResourceSettings#targetAvailabilitySetId
   */
  readonly targetAvailabilitySetId?: string;

  /**
   * Gets or sets the target availability zone.
   *
   * @schema #/definitions/VirtualMachineResourceSettings#targetAvailabilityZone
   */
  readonly targetAvailabilityZone?: VirtualMachineResourceSettingsTargetAvailabilityZone;

  /**
   * Gets or sets the target virtual machine size.
   *
   * @schema #/definitions/VirtualMachineResourceSettings#targetVmSize
   */
  readonly targetVmSize?: string;

}

/**
 * Gets or sets the availability set resource settings.
 *
 * @schema #/definitions/AvailabilitySetResourceSettings
 */
export interface AvailabilitySetResourceSettings {
  /**
   * Gets or sets the target fault domain.
   *
   * @schema #/definitions/AvailabilitySetResourceSettings#faultDomain
   */
  readonly faultDomain?: number;

  /**
   * @schema #/definitions/AvailabilitySetResourceSettings#resourceType
   */
  readonly resourceType: AvailabilitySetResourceSettingsResourceType;

  /**
   * Gets or sets the target update domain.
   *
   * @schema #/definitions/AvailabilitySetResourceSettings#updateDomain
   */
  readonly updateDomain?: number;

}

/**
 * Defines the virtual network resource settings.
 *
 * @schema #/definitions/VirtualNetworkResourceSettings
 */
export interface VirtualNetworkResourceSettings {
  /**
   * Gets or sets the address prefixes for the virtual network.
   *
   * @schema #/definitions/VirtualNetworkResourceSettings#addressSpace
   */
  readonly addressSpace?: string[];

  /**
   * Gets or sets DHCPOptions that contains an array of DNS servers available to VMs
deployed in the virtual network.
   *
   * @schema #/definitions/VirtualNetworkResourceSettings#dnsServers
   */
  readonly dnsServers?: string[];

  /**
   * Gets or sets a value indicating whether gets or sets whether the
DDOS protection should be switched on.
   *
   * @schema #/definitions/VirtualNetworkResourceSettings#enableDdosProtection
   */
  readonly enableDdosProtection?: boolean;

  /**
   * @schema #/definitions/VirtualNetworkResourceSettings#resourceType
   */
  readonly resourceType: VirtualNetworkResourceSettingsResourceType;

  /**
   * Gets or sets List of subnets in a VirtualNetwork.
   *
   * @schema #/definitions/VirtualNetworkResourceSettings#subnets
   */
  readonly subnets?: SubnetResourceSettings[];

}

/**
 * Defines the network interface resource settings.
 *
 * @schema #/definitions/NetworkInterfaceResourceSettings
 */
export interface NetworkInterfaceResourceSettings {
  /**
   * Gets or sets a value indicating whether accelerated networking is enabled.
   *
   * @schema #/definitions/NetworkInterfaceResourceSettings#enableAcceleratedNetworking
   */
  readonly enableAcceleratedNetworking?: boolean;

  /**
   * Gets or sets the IP configurations of the NIC.
   *
   * @schema #/definitions/NetworkInterfaceResourceSettings#ipConfigurations
   */
  readonly ipConfigurations?: NicIpConfigurationResourceSettings[];

  /**
   * @schema #/definitions/NetworkInterfaceResourceSettings#resourceType
   */
  readonly resourceType: NetworkInterfaceResourceSettingsResourceType;

}

/**
 * Defines the NSG resource settings.
 *
 * @schema #/definitions/NetworkSecurityGroupResourceSettings
 */
export interface NetworkSecurityGroupResourceSettings {
  /**
   * @schema #/definitions/NetworkSecurityGroupResourceSettings#resourceType
   */
  readonly resourceType: NetworkSecurityGroupResourceSettingsResourceType;

  /**
   * Gets or sets Security rules of network security group.
   *
   * @schema #/definitions/NetworkSecurityGroupResourceSettings#securityRules
   */
  readonly securityRules?: NsgSecurityRule[];

}

/**
 * Defines the load balancer resource settings.
 *
 * @schema #/definitions/LoadBalancerResourceSettings
 */
export interface LoadBalancerResourceSettings {
  /**
   * Gets or sets the backend address pools of the load balancer.
   *
   * @schema #/definitions/LoadBalancerResourceSettings#backendAddressPools
   */
  readonly backendAddressPools?: LbBackendAddressPoolResourceSettings[];

  /**
   * Gets or sets the frontend IP configurations of the load balancer.
   *
   * @schema #/definitions/LoadBalancerResourceSettings#frontendIPConfigurations
   */
  readonly frontendIPConfigurations?: LbFrontendIpConfigurationResourceSettings[];

  /**
   * @schema #/definitions/LoadBalancerResourceSettings#resourceType
   */
  readonly resourceType: LoadBalancerResourceSettingsResourceType;

  /**
   * Gets or sets load balancer sku (Basic/Standard).
   *
   * @schema #/definitions/LoadBalancerResourceSettings#sku
   */
  readonly sku?: string;

  /**
   * Gets or sets the csv list of zones common for all frontend IP configurations. Note this is given
 precedence only if frontend IP configurations settings are not present.
   *
   * @schema #/definitions/LoadBalancerResourceSettings#zones
   */
  readonly zones?: string;

}

/**
 * Defines the SQL Server resource settings.
 *
 * @schema #/definitions/SqlServerResourceSettings
 */
export interface SqlServerResourceSettings {
  /**
   * @schema #/definitions/SqlServerResourceSettings#resourceType
   */
  readonly resourceType: SqlServerResourceSettingsResourceType;

}

/**
 * Defines the Sql ElasticPool resource settings.
 *
 * @schema #/definitions/SqlElasticPoolResourceSettings
 */
export interface SqlElasticPoolResourceSettings {
  /**
   * @schema #/definitions/SqlElasticPoolResourceSettings#resourceType
   */
  readonly resourceType: SqlElasticPoolResourceSettingsResourceType;

  /**
   * @schema #/definitions/SqlElasticPoolResourceSettings#zoneRedundant
   */
  readonly zoneRedundant?: SqlElasticPoolResourceSettingsZoneRedundant;

}

/**
 * Defines the Sql Database resource settings.
 *
 * @schema #/definitions/SqlDatabaseResourceSettings
 */
export interface SqlDatabaseResourceSettings {
  /**
   * @schema #/definitions/SqlDatabaseResourceSettings#resourceType
   */
  readonly resourceType: SqlDatabaseResourceSettingsResourceType;

  /**
   * @schema #/definitions/SqlDatabaseResourceSettings#zoneRedundant
   */
  readonly zoneRedundant?: SqlDatabaseResourceSettingsZoneRedundant;

}

/**
 * Defines the resource group resource settings.
 *
 * @schema #/definitions/ResourceGroupResourceSettings
 */
export interface ResourceGroupResourceSettings {
  /**
   * @schema #/definitions/ResourceGroupResourceSettings#resourceType
   */
  readonly resourceType: ResourceGroupResourceSettingsResourceType;

}

/**
 * Defines the public IP address resource settings.
 *
 * @schema #/definitions/PublicIPAddressResourceSettings
 */
export interface PublicIpAddressResourceSettings {
  /**
   * Gets or sets the domain name label.
   *
   * @schema #/definitions/PublicIPAddressResourceSettings#domainNameLabel
   */
  readonly domainNameLabel?: string;

  /**
   * Gets or sets the fully qualified domain name.
   *
   * @schema #/definitions/PublicIPAddressResourceSettings#fqdn
   */
  readonly fqdn?: string;

  /**
   * Gets or sets public IP allocation method.
   *
   * @schema #/definitions/PublicIPAddressResourceSettings#publicIpAllocationMethod
   */
  readonly publicIpAllocationMethod?: string;

  /**
   * @schema #/definitions/PublicIPAddressResourceSettings#resourceType
   */
  readonly resourceType: PublicIpAddressResourceSettingsResourceType;

  /**
   * Gets or sets public IP sku.
   *
   * @schema #/definitions/PublicIPAddressResourceSettings#sku
   */
  readonly sku?: string;

  /**
   * Gets or sets public IP zones.
   *
   * @schema #/definitions/PublicIPAddressResourceSettings#zones
   */
  readonly zones?: string;

}

/**
 * Defines the key vault resource settings.
 *
 * @schema #/definitions/KeyVaultResourceSettings
 */
export interface KeyVaultResourceSettings {
  /**
   * @schema #/definitions/KeyVaultResourceSettings#resourceType
   */
  readonly resourceType: KeyVaultResourceSettingsResourceType;

}

/**
 * Defines the disk encryption set resource settings.
 *
 * @schema #/definitions/DiskEncryptionSetResourceSettings
 */
export interface DiskEncryptionSetResourceSettings {
  /**
   * @schema #/definitions/DiskEncryptionSetResourceSettings#resourceType
   */
  readonly resourceType: DiskEncryptionSetResourceSettingsResourceType;

}

export enum VirtualMachineResourceSettingsResourceType {
  "VirtualMachineResourceSettingsResourceType_MICROSOFT_COMPUTE_VIRTUAL_MACHINES" = 'Microsoft.Compute/virtualMachines',
}

export enum VirtualMachineResourceSettingsTargetAvailabilityZone {
  "VirtualMachineResourceSettingsTargetAvailabilityZone_1" = '1',
  "VirtualMachineResourceSettingsTargetAvailabilityZone_2" = '2',
  "VirtualMachineResourceSettingsTargetAvailabilityZone_3" = '3',
  NA = 'NA',
}

export enum AvailabilitySetResourceSettingsResourceType {
  "AvailabilitySetResourceSettingsResourceType_MICROSOFT_COMPUTE_AVAILABILITY_SETS" = 'Microsoft.Compute/availabilitySets',
}

export enum VirtualNetworkResourceSettingsResourceType {
  "VirtualNetworkResourceSettingsResourceType_MICROSOFT_NETWORK_VIRTUAL_NETWORKS" = 'Microsoft.Network/virtualNetworks',
}

/**
 * Defines the virtual network subnets resource settings.
 *
 * @schema #/definitions/SubnetResourceSettings
 */
export interface SubnetResourceSettings {
  /**
   * Gets or sets address prefix for the subnet.
   *
   * @schema #/definitions/SubnetResourceSettings#addressPrefix
   */
  readonly addressPrefix?: string;

  /**
   * Gets or sets the Subnet name.
   *
   * @schema #/definitions/SubnetResourceSettings#name
   */
  readonly name?: string;

  /**
   * Defines reference to NSG.
   *
   * @schema #/definitions/SubnetResourceSettings#networkSecurityGroup
   */
  readonly networkSecurityGroup?: NsgReference;

}

/**
 * Defines NIC IP configuration properties.
 *
 * @schema #/definitions/NicIpConfigurationResourceSettings
 */
export interface NicIpConfigurationResourceSettings {
  /**
   * Gets or sets the references of the load balancer backend address pools.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#loadBalancerBackendAddressPools
   */
  readonly loadBalancerBackendAddressPools?: LoadBalancerBackendAddressPoolReference[];

  /**
   * Gets or sets the references of the load balancer NAT rules.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#loadBalancerNatRules
   */
  readonly loadBalancerNatRules?: LoadBalancerNatRuleReference[];

  /**
   * Gets or sets the IP configuration name.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#name
   */
  readonly name?: string;

  /**
   * Gets or sets a value indicating whether this IP configuration is the primary.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#primary
   */
  readonly primary?: boolean;

  /**
   * Gets or sets the private IP address of the network interface IP Configuration.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#privateIpAddress
   */
  readonly privateIpAddress?: string;

  /**
   * Gets or sets the private IP address allocation method.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#privateIpAllocationMethod
   */
  readonly privateIpAllocationMethod?: string;

  /**
   * Defines reference to a public IP.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#publicIp
   */
  readonly publicIp?: PublicIpReference;

  /**
   * Defines reference to subnet.
   *
   * @schema #/definitions/NicIpConfigurationResourceSettings#subnet
   */
  readonly subnet?: SubnetReference;

}

export enum NetworkInterfaceResourceSettingsResourceType {
  "NetworkInterfaceResourceSettingsResourceType_MICROSOFT_NETWORK_NETWORK_INTERFACES" = 'Microsoft.Network/networkInterfaces',
}

export enum NetworkSecurityGroupResourceSettingsResourceType {
  "NetworkSecurityGroupResourceSettingsResourceType_MICROSOFT_NETWORK_NETWORK_SECURITY_GROUPS" = 'Microsoft.Network/networkSecurityGroups',
}

/**
 * Security Rule data model for Network Security Groups.
 *
 * @schema #/definitions/NsgSecurityRule
 */
export interface NsgSecurityRule {
  /**
   * Gets or sets whether network traffic is allowed or denied.
Possible values are “Allow” and “Deny”.
   *
   * @schema #/definitions/NsgSecurityRule#access
   */
  readonly access?: string;

  /**
   * Gets or sets a description for this rule. Restricted to 140 chars.
   *
   * @schema #/definitions/NsgSecurityRule#description
   */
  readonly description?: string;

  /**
   * Gets or sets destination address prefix. CIDR or source IP range.
 A “*” can also be used to match all source IPs. Default tags such
as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used.
   *
   * @schema #/definitions/NsgSecurityRule#destinationAddressPrefix
   */
  readonly destinationAddressPrefix?: string;

  /**
   * Gets or sets Destination Port or Range. Integer or range between
0 and 65535. A “*” can also be used to match all ports.
   *
   * @schema #/definitions/NsgSecurityRule#destinationPortRange
   */
  readonly destinationPortRange?: string;

  /**
   * Gets or sets the direction of the rule.InBound or Outbound. The
direction specifies if rule will be evaluated on incoming or outgoing traffic.
   *
   * @schema #/definitions/NsgSecurityRule#direction
   */
  readonly direction?: string;

  /**
   * Gets or sets the Security rule name.
   *
   * @schema #/definitions/NsgSecurityRule#name
   */
  readonly name?: string;

  /**
   * Gets or sets the priority of the rule. The value can be between
100 and 4096. The priority number must be unique for each rule in the collection.
The lower the priority number, the higher the priority of the rule.
   *
   * @schema #/definitions/NsgSecurityRule#priority
   */
  readonly priority?: number;

  /**
   * Gets or sets Network protocol this rule applies to. Can be Tcp, Udp or All(*).
   *
   * @schema #/definitions/NsgSecurityRule#protocol
   */
  readonly protocol?: string;

  /**
   * Gets or sets source address prefix. CIDR or source IP range. A
“*” can also be used to match all source IPs.  Default tags such as ‘VirtualNetwork’,
‘AzureLoadBalancer’ and ‘Internet’ can also be used. If this is an ingress
rule, specifies where network traffic originates from.
   *
   * @schema #/definitions/NsgSecurityRule#sourceAddressPrefix
   */
  readonly sourceAddressPrefix?: string;

  /**
   * Gets or sets Source Port or Range. Integer or range between 0 and
65535. A “*” can also be used to match all ports.
   *
   * @schema #/definitions/NsgSecurityRule#sourcePortRange
   */
  readonly sourcePortRange?: string;

}

/**
 * Defines load balancer backend address pool properties.
 *
 * @schema #/definitions/LBBackendAddressPoolResourceSettings
 */
export interface LbBackendAddressPoolResourceSettings {
  /**
   * Gets or sets the backend address pool name.
   *
   * @schema #/definitions/LBBackendAddressPoolResourceSettings#name
   */
  readonly name?: string;

}

/**
 * Defines load balancer frontend IP configuration properties.
 *
 * @schema #/definitions/LBFrontendIPConfigurationResourceSettings
 */
export interface LbFrontendIpConfigurationResourceSettings {
  /**
   * Gets or sets the frontend IP configuration name.
   *
   * @schema #/definitions/LBFrontendIPConfigurationResourceSettings#name
   */
  readonly name?: string;

  /**
   * Gets or sets the IP address of the Load Balancer.This is only specified if a specific
private IP address shall be allocated from the subnet specified in subnetRef.
   *
   * @schema #/definitions/LBFrontendIPConfigurationResourceSettings#privateIpAddress
   */
  readonly privateIpAddress?: string;

  /**
   * Gets or sets PrivateIP allocation method (Static/Dynamic).
   *
   * @schema #/definitions/LBFrontendIPConfigurationResourceSettings#privateIpAllocationMethod
   */
  readonly privateIpAllocationMethod?: string;

  /**
   * Defines reference to subnet.
   *
   * @schema #/definitions/LBFrontendIPConfigurationResourceSettings#subnet
   */
  readonly subnet?: SubnetReference;

  /**
   * Gets or sets the csv list of zones.
   *
   * @schema #/definitions/LBFrontendIPConfigurationResourceSettings#zones
   */
  readonly zones?: string;

}

export enum LoadBalancerResourceSettingsResourceType {
  "LoadBalancerResourceSettingsResourceType_MICROSOFT_NETWORK_LOAD_BALANCERS" = 'Microsoft.Network/loadBalancers',
}

export enum SqlServerResourceSettingsResourceType {
  "SqlServerResourceSettingsResourceType_MICROSOFT_SQL_SERVERS" = 'Microsoft.Sql/servers',
}

export enum SqlElasticPoolResourceSettingsResourceType {
  "SqlElasticPoolResourceSettingsResourceType_MICROSOFT_SQL_SERVERS_ELASTIC_POOLS" = 'Microsoft.Sql/servers/elasticPools',
}

export enum SqlElasticPoolResourceSettingsZoneRedundant {
  ENABLE = 'Enable',
  DISABLE = 'Disable',
}

export enum SqlDatabaseResourceSettingsResourceType {
  "SqlDatabaseResourceSettingsResourceType_MICROSOFT_SQL_SERVERS_DATABASES" = 'Microsoft.Sql/servers/databases',
}

export enum SqlDatabaseResourceSettingsZoneRedundant {
  ENABLE = 'Enable',
  DISABLE = 'Disable',
}

export enum ResourceGroupResourceSettingsResourceType {
  RESOURCE_GROUPS = 'resourceGroups',
}

export enum PublicIpAddressResourceSettingsResourceType {
  "PublicIpAddressResourceSettingsResourceType_MICROSOFT_NETWORK_PUBLIC_IP_ADDRESSES" = 'Microsoft.Network/publicIPAddresses',
}

export enum KeyVaultResourceSettingsResourceType {
  "KeyVaultResourceSettingsResourceType_MICROSOFT_KEY_VAULT_VAULTS" = 'Microsoft.KeyVault/vaults',
}

export enum DiskEncryptionSetResourceSettingsResourceType {
  "DiskEncryptionSetResourceSettingsResourceType_MICROSOFT_COMPUTE_DISK_ENCRYPTION_SETS" = 'Microsoft.Compute/diskEncryptionSets',
}

/**
 * Defines reference to NSG.
 *
 * @schema #/definitions/NsgReference
 */
export interface NsgReference {
  /**
   * Gets the ARM resource ID of the tracked resource being referenced.
   *
   * @schema #/definitions/NsgReference#sourceArmResourceId
   */
  readonly sourceArmResourceId: string;

}

/**
 * Defines reference to load balancer backend address pools.
 *
 * @schema #/definitions/LoadBalancerBackendAddressPoolReference
 */
export interface LoadBalancerBackendAddressPoolReference {
  /**
   * Gets the name of the proxy resource on the target side.
   *
   * @schema #/definitions/LoadBalancerBackendAddressPoolReference#name
   */
  readonly name?: string;

  /**
   * Gets the ARM resource ID of the tracked resource being referenced.
   *
   * @schema #/definitions/LoadBalancerBackendAddressPoolReference#sourceArmResourceId
   */
  readonly sourceArmResourceId: string;

}

/**
 * Defines reference to load balancer NAT rules.
 *
 * @schema #/definitions/LoadBalancerNatRuleReference
 */
export interface LoadBalancerNatRuleReference {
  /**
   * Gets the name of the proxy resource on the target side.
   *
   * @schema #/definitions/LoadBalancerNatRuleReference#name
   */
  readonly name?: string;

  /**
   * Gets the ARM resource ID of the tracked resource being referenced.
   *
   * @schema #/definitions/LoadBalancerNatRuleReference#sourceArmResourceId
   */
  readonly sourceArmResourceId: string;

}

/**
 * Defines reference to a public IP.
 *
 * @schema #/definitions/PublicIpReference
 */
export interface PublicIpReference {
  /**
   * Gets the ARM resource ID of the tracked resource being referenced.
   *
   * @schema #/definitions/PublicIpReference#sourceArmResourceId
   */
  readonly sourceArmResourceId: string;

}

/**
 * Defines reference to subnet.
 *
 * @schema #/definitions/SubnetReference
 */
export interface SubnetReference {
  /**
   * Gets the name of the proxy resource on the target side.
   *
   * @schema #/definitions/SubnetReference#name
   */
  readonly name?: string;

  /**
   * Gets the ARM resource ID of the tracked resource being referenced.
   *
   * @schema #/definitions/SubnetReference#sourceArmResourceId
   */
  readonly sourceArmResourceId: string;

}

