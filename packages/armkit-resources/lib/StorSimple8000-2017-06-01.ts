              // generated by armkit
              import { ArmResource } from '@yetics/armkit-core';
              import { Construct } from 'constructs';

              /**
               * Microsoft.StorSimple/managers
               *
               * @schema Microsoft.StorSimple.managers
               */
              export class Managers extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/accessControlRecords
               *
               * @schema Microsoft.StorSimple.managers_accessControlRecords
               */
              export class ManagersAccessControlRecords extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_accessControlRecords" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersAccessControlRecordsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_accessControlRecords',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/bandwidthSettings
               *
               * @schema Microsoft.StorSimple.managers_bandwidthSettings
               */
              export class ManagersBandwidthSettings extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_bandwidthSettings" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersBandwidthSettingsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_bandwidthSettings',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/alertSettings
               *
               * @schema Microsoft.StorSimple.managers_devices_alertSettings
               */
              export class ManagersDevicesAlertSettings extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_alertSettings" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesAlertSettingsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_alertSettings',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/backupPolicies
               *
               * @schema Microsoft.StorSimple.managers_devices_backupPolicies
               */
              export class ManagersDevicesBackupPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_backupPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesBackupPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_backupPolicies',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/backupPolicies/schedules
               *
               * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules
               */
              export class ManagersDevicesBackupPoliciesSchedules extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_backupPolicies_schedules" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesBackupPoliciesSchedulesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_backupPolicies_schedules',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/timeSettings
               *
               * @schema Microsoft.StorSimple.managers_devices_timeSettings
               */
              export class ManagersDevicesTimeSettings extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_timeSettings" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesTimeSettingsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_timeSettings',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/volumeContainers
               *
               * @schema Microsoft.StorSimple.managers_devices_volumeContainers
               */
              export class ManagersDevicesVolumeContainers extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_volumeContainers" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesVolumeContainersOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_volumeContainers',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/devices/volumeContainers/volumes
               *
               * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes
               */
              export class ManagersDevicesVolumeContainersVolumes extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_devices_volumeContainers_volumes" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersDevicesVolumeContainersVolumesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_devices_volumeContainers_volumes',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/extendedInformation
               *
               * @schema Microsoft.StorSimple.managers_extendedInformation
               */
              export class ManagersExtendedInformation extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_extendedInformation" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersExtendedInformationOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_extendedInformation',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers/storageAccountCredentials
               *
               * @schema Microsoft.StorSimple.managers_storageAccountCredentials
               */
              export class ManagersStorageAccountCredentials extends ArmResource {
                /**
                 * Defines a "Microsoft.StorSimple.managers_storageAccountCredentials" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: ManagersStorageAccountCredentialsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'managers_storageAccountCredentials',
                  });
                }
              }

              /**
               * Microsoft.StorSimple/managers
               *
               * @schema Microsoft.StorSimple.managers
               */
              export interface ManagersOptions {
                /**
                 * @schema Microsoft.StorSimple.managers#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersApiVersion;

                /**
                 * The etag of the manager.
                 *
                 * @schema Microsoft.StorSimple.managers#etag
                 */
                readonly etag?: string;

                /**
                 * The geo location of the resource.
                 *
                 * @schema Microsoft.StorSimple.managers#location
                 */
                readonly location: string;

                /**
                 * The manager name
                 *
                 * @schema Microsoft.StorSimple.managers#name
                 */
                readonly name: string;

                /**
                 * The properties of the StorSimple Manager.
                 *
                 * @schema Microsoft.StorSimple.managers#properties
                 */
                readonly properties: ManagerProperties;

                /**
                 * @schema Microsoft.StorSimple.managers#resources
                 */
                readonly resources?: MicrosoftStorSimpleManagersResources[];

                /**
                 * The tags attached to the resource.
                 *
                 * @schema Microsoft.StorSimple.managers#tags
                 */
                readonly tags?: MicrosoftStorSimpleManagersTags;

                /**
                 * @schema Microsoft.StorSimple.managers#type
                 */
                readonly type: MicrosoftStorSimpleManagersType;

              }

              /**
               * Microsoft.StorSimple/managers/accessControlRecords
               *
               * @schema Microsoft.StorSimple.managers_accessControlRecords
               */
              export interface ManagersAccessControlRecordsOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_accessControlRecords#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersAccessControlRecordsApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_accessControlRecords#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersAccessControlRecordsKind;

                /**
                 * The name of the access control record.
                 *
                 * @schema Microsoft.StorSimple.managers_accessControlRecords#name
                 */
                readonly name: string;

                /**
                 * The properties of access control record.
                 *
                 * @schema Microsoft.StorSimple.managers_accessControlRecords#properties
                 */
                readonly properties: AccessControlRecordProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_accessControlRecords#type
                 */
                readonly type: MicrosoftStorSimpleManagersAccessControlRecordsType;

              }

              /**
               * Microsoft.StorSimple/managers/bandwidthSettings
               *
               * @schema Microsoft.StorSimple.managers_bandwidthSettings
               */
              export interface ManagersBandwidthSettingsOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_bandwidthSettings#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersBandwidthSettingsApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_bandwidthSettings#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersBandwidthSettingsKind;

                /**
                 * The bandwidth setting name.
                 *
                 * @schema Microsoft.StorSimple.managers_bandwidthSettings#name
                 */
                readonly name: string;

                /**
                 * The properties of the bandwidth setting.
                 *
                 * @schema Microsoft.StorSimple.managers_bandwidthSettings#properties
                 */
                readonly properties: BandwidthRateSettingProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_bandwidthSettings#type
                 */
                readonly type: MicrosoftStorSimpleManagersBandwidthSettingsType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/alertSettings
               *
               * @schema Microsoft.StorSimple.managers_devices_alertSettings
               */
              export interface ManagersDevicesAlertSettingsOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_alertSettings#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_alertSettings#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesAlertSettingsKind;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_alertSettings#name
                 */
                readonly name: MicrosoftStorSimpleManagersDevicesAlertSettingsNamePattern;

                /**
                 * The properties of the alert notification settings.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_alertSettings#properties
                 */
                readonly properties: AlertNotificationProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_alertSettings#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesAlertSettingsType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/backupPolicies
               *
               * @schema Microsoft.StorSimple.managers_devices_backupPolicies
               */
              export interface ManagersDevicesBackupPoliciesOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesBackupPoliciesApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesBackupPoliciesKind;

                /**
                 * The name of the backup policy to be created/updated.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#name
                 */
                readonly name: string;

                /**
                 * The properties of the backup policy.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#properties
                 */
                readonly properties: BackupPolicyProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#resources
                 */
                readonly resources?: ManagersDevicesBackupPoliciesSchedulesChildResource[];

                /**
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesBackupPoliciesType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/backupPolicies/schedules
               *
               * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules
               */
              export interface ManagersDevicesBackupPoliciesSchedulesOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesKind;

                /**
                 * The backup schedule name.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules#name
                 */
                readonly name: string;

                /**
                 * The properties of the backup schedule.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules#properties
                 */
                readonly properties: BackupScheduleProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_backupPolicies_schedules#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/timeSettings
               *
               * @schema Microsoft.StorSimple.managers_devices_timeSettings
               */
              export interface ManagersDevicesTimeSettingsOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_timeSettings#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesTimeSettingsApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_timeSettings#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesTimeSettingsKind;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_timeSettings#name
                 */
                readonly name: MicrosoftStorSimpleManagersDevicesTimeSettingsNamePattern;

                /**
                 * The properties of time settings of a device.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_timeSettings#properties
                 */
                readonly properties: TimeSettingsProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_timeSettings#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesTimeSettingsType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/volumeContainers
               *
               * @schema Microsoft.StorSimple.managers_devices_volumeContainers
               */
              export interface ManagersDevicesVolumeContainersOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesVolumeContainersApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesVolumeContainersKind;

                /**
                 * The name of the volume container.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#name
                 */
                readonly name: string;

                /**
                 * The properties of volume container.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#properties
                 */
                readonly properties: VolumeContainerProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#resources
                 */
                readonly resources?: ManagersDevicesVolumeContainersVolumesChildResource[];

                /**
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesVolumeContainersType;

              }

              /**
               * Microsoft.StorSimple/managers/devices/volumeContainers/volumes
               *
               * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes
               */
              export interface ManagersDevicesVolumeContainersVolumesOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesKind;

                /**
                 * The volume name.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes#name
                 */
                readonly name: string;

                /**
                 * The properties of volume.
                 *
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes#properties
                 */
                readonly properties: VolumeProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_devices_volumeContainers_volumes#type
                 */
                readonly type: MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesType;

              }

              /**
               * Microsoft.StorSimple/managers/extendedInformation
               *
               * @schema Microsoft.StorSimple.managers_extendedInformation
               */
              export interface ManagersExtendedInformationOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_extendedInformation#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersExtendedInformationApiVersion;

                /**
                 * The etag of the resource.
                 *
                 * @schema Microsoft.StorSimple.managers_extendedInformation#etag
                 */
                readonly etag?: string;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_extendedInformation#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersExtendedInformationKind;

                /**
                 * @schema Microsoft.StorSimple.managers_extendedInformation#name
                 */
                readonly name: MicrosoftStorSimpleManagersExtendedInformationNamePattern;

                /**
                 * The properties of the manager extended info.
                 *
                 * @schema Microsoft.StorSimple.managers_extendedInformation#properties
                 */
                readonly properties: ManagerExtendedInfoProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_extendedInformation#type
                 */
                readonly type: MicrosoftStorSimpleManagersExtendedInformationType;

              }

              /**
               * Microsoft.StorSimple/managers/storageAccountCredentials
               *
               * @schema Microsoft.StorSimple.managers_storageAccountCredentials
               */
              export interface ManagersStorageAccountCredentialsOptions {
                /**
                 * @schema Microsoft.StorSimple.managers_storageAccountCredentials#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema Microsoft.StorSimple.managers_storageAccountCredentials#kind
                 */
                readonly kind?: MicrosoftStorSimpleManagersStorageAccountCredentialsKind;

                /**
                 * The storage account credential name.
                 *
                 * @schema Microsoft.StorSimple.managers_storageAccountCredentials#name
                 */
                readonly name: string;

                /**
                 * The storage account credential properties.
                 *
                 * @schema Microsoft.StorSimple.managers_storageAccountCredentials#properties
                 */
                readonly properties: StorageAccountCredentialProperties;

                /**
                 * @schema Microsoft.StorSimple.managers_storageAccountCredentials#type
                 */
                readonly type: MicrosoftStorSimpleManagersStorageAccountCredentialsType;

              }

              export enum MicrosoftStorSimpleManagersApiVersion {
                "MicrosoftStorSimpleManagersApiVersion_2017_06_01" = '2017-06-01',
              }

              /**
               * The properties of the StorSimple Manager.
               *
               * @schema #/definitions/ManagerProperties
               */
              export interface ManagerProperties {
                /**
                 * Intrinsic settings which refers to the type of the StorSimple Manager.
                 *
                 * @schema #/definitions/ManagerProperties#cisIntrinsicSettings
                 */
                readonly cisIntrinsicSettings?: ManagerIntrinsicSettings;

                /**
                 * Specifies the state of the resource as it is getting provisioned. Value of "Succeeded" means the Manager was successfully created.
                 *
                 * @schema #/definitions/ManagerProperties#provisioningState
                 */
                readonly provisioningState?: string;

                /**
                 * The Sku.
                 *
                 * @schema #/definitions/ManagerProperties#sku
                 */
                readonly sku?: ManagerSku;

              }

              /**
               * @schema MicrosoftStorSimpleManagersResources
               */
              export class MicrosoftStorSimpleManagersResources {
                public static fromManagersExtendedInformationChildResource(value: ManagersExtendedInformationChildResource): MicrosoftStorSimpleManagersResources {
                  return new MicrosoftStorSimpleManagersResources(value);
                }
                public static fromManagersAccessControlRecordsChildResource(value: ManagersAccessControlRecordsChildResource): MicrosoftStorSimpleManagersResources {
                  return new MicrosoftStorSimpleManagersResources(value);
                }
                public static fromManagersBandwidthSettingsChildResource(value: ManagersBandwidthSettingsChildResource): MicrosoftStorSimpleManagersResources {
                  return new MicrosoftStorSimpleManagersResources(value);
                }
                public static fromManagersStorageAccountCredentialsChildResource(value: ManagersStorageAccountCredentialsChildResource): MicrosoftStorSimpleManagersResources {
                  return new MicrosoftStorSimpleManagersResources(value);
                }
                private constructor(value: any) {
                  Object.defineProperty(this, 'resolve', { value: () => value });
                }
              }

              /**
               * @schema MicrosoftStorSimpleManagersTags
               */
              export interface MicrosoftStorSimpleManagersTags {
              }

              export enum MicrosoftStorSimpleManagersType {
                "MicrosoftStorSimpleManagersType_MICROSOFT_STOR_SIMPLE_MANAGERS" = 'Microsoft.StorSimple/managers',
              }

              export enum MicrosoftStorSimpleManagersAccessControlRecordsApiVersion {
                "MicrosoftStorSimpleManagersAccessControlRecordsApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersAccessControlRecordsKind {
                "MicrosoftStorSimpleManagersAccessControlRecordsKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of access control record.
               *
               * @schema #/definitions/AccessControlRecordProperties
               */
              export interface AccessControlRecordProperties {
                /**
                 * The iSCSI initiator name (IQN).
                 *
                 * @schema #/definitions/AccessControlRecordProperties#initiatorName
                 */
                readonly initiatorName: string;

              }

              export enum MicrosoftStorSimpleManagersAccessControlRecordsType {
                "MicrosoftStorSimpleManagersAccessControlRecordsType_MICROSOFT_STOR_SIMPLE_MANAGERS_ACCESS_CONTROL_RECORDS" = 'Microsoft.StorSimple/managers/accessControlRecords',
              }

              export enum MicrosoftStorSimpleManagersBandwidthSettingsApiVersion {
                "MicrosoftStorSimpleManagersBandwidthSettingsApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersBandwidthSettingsKind {
                "MicrosoftStorSimpleManagersBandwidthSettingsKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of the bandwidth setting.
               *
               * @schema #/definitions/BandwidthRateSettingProperties
               */
              export interface BandwidthRateSettingProperties {
                /**
                 * The schedules.
                 *
                 * @schema #/definitions/BandwidthRateSettingProperties#schedules
                 */
                readonly schedules: BandwidthSchedule[];

              }

              export enum MicrosoftStorSimpleManagersBandwidthSettingsType {
                "MicrosoftStorSimpleManagersBandwidthSettingsType_MICROSOFT_STOR_SIMPLE_MANAGERS_BANDWIDTH_SETTINGS" = 'Microsoft.StorSimple/managers/bandwidthSettings',
              }

              export enum MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion {
                "MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesAlertSettingsKind {
                "MicrosoftStorSimpleManagersDevicesAlertSettingsKind_SERIES8000" = 'Series8000',
              }

              /**
               * @schema MicrosoftStorSimpleManagersDevicesAlertSettingsName
               */
              export class MicrosoftStorSimpleManagersDevicesAlertSettingsNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of the alert notification settings.
               *
               * @schema #/definitions/AlertNotificationProperties
               */
              export interface AlertNotificationProperties {
                /**
                 * The alert notification email list.
                 *
                 * @schema #/definitions/AlertNotificationProperties#additionalRecipientEmailList
                 */
                readonly additionalRecipientEmailList?: string[];

                /**
                 * The alert notification culture.
                 *
                 * @schema #/definitions/AlertNotificationProperties#alertNotificationCulture
                 */
                readonly alertNotificationCulture?: string;

                /**
                 * Indicates whether email notification enabled or not.
                 *
                 * @schema #/definitions/AlertNotificationProperties#emailNotification
                 */
                readonly emailNotification: AlertNotificationPropertiesEmailNotification;

                /**
                 * The value indicating whether alert notification enabled for admin or not.
                 *
                 * @schema #/definitions/AlertNotificationProperties#notificationToServiceOwners
                 */
                readonly notificationToServiceOwners?: AlertNotificationPropertiesNotificationToServiceOwners;

              }

              export enum MicrosoftStorSimpleManagersDevicesAlertSettingsType {
                "MicrosoftStorSimpleManagersDevicesAlertSettingsType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_ALERT_SETTINGS" = 'Microsoft.StorSimple/managers/devices/alertSettings',
              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesApiVersion {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesKind {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of the backup policy.
               *
               * @schema #/definitions/BackupPolicyProperties
               */
              export interface BackupPolicyProperties {
                /**
                 * The path IDs of the volumes which are part of the backup policy.
                 *
                 * @schema #/definitions/BackupPolicyProperties#volumeIds
                 */
                readonly volumeIds: string[];

              }

              /**
               * Microsoft.StorSimple/managers/devices/backupPolicies/schedules
               *
               * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource
               */
              export interface ManagersDevicesBackupPoliciesSchedulesChildResource {
                /**
                 * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource#apiVersion
                 */
                readonly apiVersion: ManagersDevicesBackupPoliciesSchedulesChildResourceApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource#kind
                 */
                readonly kind?: ManagersDevicesBackupPoliciesSchedulesChildResourceKind;

                /**
                 * The backup schedule name.
                 *
                 * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of the backup schedule.
                 *
                 * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource#properties
                 */
                readonly properties: BackupScheduleProperties;

                /**
                 * @schema #/definitions/managers_devices_backupPolicies_schedules_childResource#type
                 */
                readonly type: ManagersDevicesBackupPoliciesSchedulesChildResourceType;

              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesType {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_BACKUP_POLICIES" = 'Microsoft.StorSimple/managers/devices/backupPolicies',
              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesApiVersion {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesKind {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of the backup schedule.
               *
               * @schema #/definitions/BackupScheduleProperties
               */
              export interface BackupScheduleProperties {
                /**
                 * The type of backup which needs to be taken.
                 *
                 * @schema #/definitions/BackupScheduleProperties#backupType
                 */
                readonly backupType: BackupSchedulePropertiesBackupType;

                /**
                 * The number of backups to be retained.
                 *
                 * @schema #/definitions/BackupScheduleProperties#retentionCount
                 */
                readonly retentionCount: number;

                /**
                 * The schedule recurrence.
                 *
                 * @schema #/definitions/BackupScheduleProperties#scheduleRecurrence
                 */
                readonly scheduleRecurrence: ScheduleRecurrence;

                /**
                 * The schedule status.
                 *
                 * @schema #/definitions/BackupScheduleProperties#scheduleStatus
                 */
                readonly scheduleStatus: BackupSchedulePropertiesScheduleStatus;

                /**
                 * The start time of the schedule.
                 *
                 * @schema #/definitions/BackupScheduleProperties#startTime
                 */
                readonly startTime: Date;

              }

              export enum MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesType {
                "MicrosoftStorSimpleManagersDevicesBackupPoliciesSchedulesType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_BACKUP_POLICIES_SCHEDULES" = 'Microsoft.StorSimple/managers/devices/backupPolicies/schedules',
              }

              export enum MicrosoftStorSimpleManagersDevicesTimeSettingsApiVersion {
                "MicrosoftStorSimpleManagersDevicesTimeSettingsApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesTimeSettingsKind {
                "MicrosoftStorSimpleManagersDevicesTimeSettingsKind_SERIES8000" = 'Series8000',
              }

              /**
               * @schema MicrosoftStorSimpleManagersDevicesTimeSettingsName
               */
              export class MicrosoftStorSimpleManagersDevicesTimeSettingsNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of time settings of a device.
               *
               * @schema #/definitions/TimeSettingsProperties
               */
              export interface TimeSettingsProperties {
                /**
                 * The primary Network Time Protocol (NTP) server name, like 'time.windows.com'.
                 *
                 * @schema #/definitions/TimeSettingsProperties#primaryTimeServer
                 */
                readonly primaryTimeServer?: string;

                /**
                 * The secondary Network Time Protocol (NTP) server name, like 'time.contoso.com'. It's optional.
                 *
                 * @schema #/definitions/TimeSettingsProperties#secondaryTimeServer
                 */
                readonly secondaryTimeServer?: string[];

                /**
                 * The timezone of device, like '(UTC -06:00) Central America'
                 *
                 * @schema #/definitions/TimeSettingsProperties#timeZone
                 */
                readonly timeZone: string;

              }

              export enum MicrosoftStorSimpleManagersDevicesTimeSettingsType {
                "MicrosoftStorSimpleManagersDevicesTimeSettingsType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_TIME_SETTINGS" = 'Microsoft.StorSimple/managers/devices/timeSettings',
              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersApiVersion {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersKind {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of volume container.
               *
               * @schema #/definitions/VolumeContainerProperties
               */
              export interface VolumeContainerProperties {
                /**
                 * The bandwidth-rate set on the volume container.
                 *
                 * @schema #/definitions/VolumeContainerProperties#bandWidthRateInMbps
                 */
                readonly bandWidthRateInMbps?: number;

                /**
                 * The ID of the bandwidth setting associated with the volume container.
                 *
                 * @schema #/definitions/VolumeContainerProperties#bandwidthSettingId
                 */
                readonly bandwidthSettingId?: string;

                /**
                 * Represent the secrets intended for encryption with asymmetric key pair.
                 *
                 * @schema #/definitions/VolumeContainerProperties#encryptionKey
                 */
                readonly encryptionKey?: AsymmetricEncryptedSecret;

                /**
                 * The path ID of storage account associated with the volume container.
                 *
                 * @schema #/definitions/VolumeContainerProperties#storageAccountCredentialId
                 */
                readonly storageAccountCredentialId: string;

              }

              /**
               * Microsoft.StorSimple/managers/devices/volumeContainers/volumes
               *
               * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource
               */
              export interface ManagersDevicesVolumeContainersVolumesChildResource {
                /**
                 * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource#apiVersion
                 */
                readonly apiVersion: ManagersDevicesVolumeContainersVolumesChildResourceApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource#kind
                 */
                readonly kind?: ManagersDevicesVolumeContainersVolumesChildResourceKind;

                /**
                 * The volume name.
                 *
                 * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of volume.
                 *
                 * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource#properties
                 */
                readonly properties: VolumeProperties;

                /**
                 * @schema #/definitions/managers_devices_volumeContainers_volumes_childResource#type
                 */
                readonly type: ManagersDevicesVolumeContainersVolumesChildResourceType;

              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersType {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_VOLUME_CONTAINERS" = 'Microsoft.StorSimple/managers/devices/volumeContainers',
              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesApiVersion {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesKind {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesKind_SERIES8000" = 'Series8000',
              }

              /**
               * The properties of volume.
               *
               * @schema #/definitions/VolumeProperties
               */
              export interface VolumeProperties {
                /**
                 * The IDs of the access control records, associated with the volume.
                 *
                 * @schema #/definitions/VolumeProperties#accessControlRecordIds
                 */
                readonly accessControlRecordIds: string[];

                /**
                 * The monitoring status of the volume.
                 *
                 * @schema #/definitions/VolumeProperties#monitoringStatus
                 */
                readonly monitoringStatus: VolumePropertiesMonitoringStatus;

                /**
                 * The size of the volume in bytes.
                 *
                 * @schema #/definitions/VolumeProperties#sizeInBytes
                 */
                readonly sizeInBytes: number;

                /**
                 * The volume status.
                 *
                 * @schema #/definitions/VolumeProperties#volumeStatus
                 */
                readonly volumeStatus: VolumePropertiesVolumeStatus;

                /**
                 * The type of the volume.
                 *
                 * @schema #/definitions/VolumeProperties#volumeType
                 */
                readonly volumeType: VolumePropertiesVolumeType;

              }

              export enum MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesType {
                "MicrosoftStorSimpleManagersDevicesVolumeContainersVolumesType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_VOLUME_CONTAINERS_VOLUMES" = 'Microsoft.StorSimple/managers/devices/volumeContainers/volumes',
              }

              export enum MicrosoftStorSimpleManagersExtendedInformationApiVersion {
                "MicrosoftStorSimpleManagersExtendedInformationApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersExtendedInformationKind {
                "MicrosoftStorSimpleManagersExtendedInformationKind_SERIES8000" = 'Series8000',
              }

              /**
               * @schema MicrosoftStorSimpleManagersExtendedInformationName
               */
              export class MicrosoftStorSimpleManagersExtendedInformationNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of the manager extended info.
               *
               * @schema #/definitions/ManagerExtendedInfoProperties
               */
              export interface ManagerExtendedInfoProperties {
                /**
                 * Represents the encryption algorithm used to encrypt the keys. None - if Key is saved in plain text format. Algorithm name - if key is encrypted
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#algorithm
                 */
                readonly algorithm: string;

                /**
                 * Represents the CEK of the resource.
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#encryptionKey
                 */
                readonly encryptionKey?: string;

                /**
                 * Represents the Cert thumbprint that was used to encrypt the CEK.
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#encryptionKeyThumbprint
                 */
                readonly encryptionKeyThumbprint?: string;

                /**
                 * Represents the CIK of the resource.
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#integrityKey
                 */
                readonly integrityKey: string;

                /**
                 * Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#portalCertificateThumbprint
                 */
                readonly portalCertificateThumbprint?: string;

                /**
                 * The version of the extended info being persisted.
                 *
                 * @schema #/definitions/ManagerExtendedInfoProperties#version
                 */
                readonly version?: string;

              }

              export enum MicrosoftStorSimpleManagersExtendedInformationType {
                "MicrosoftStorSimpleManagersExtendedInformationType_MICROSOFT_STOR_SIMPLE_MANAGERS_EXTENDED_INFORMATION" = 'Microsoft.StorSimple/managers/extendedInformation',
              }

              export enum MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion {
                "MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum MicrosoftStorSimpleManagersStorageAccountCredentialsKind {
                "MicrosoftStorSimpleManagersStorageAccountCredentialsKind_SERIES8000" = 'Series8000',
              }

              /**
               * The storage account credential properties.
               *
               * @schema #/definitions/StorageAccountCredentialProperties
               */
              export interface StorageAccountCredentialProperties {
                /**
                 * Represent the secrets intended for encryption with asymmetric key pair.
                 *
                 * @schema #/definitions/StorageAccountCredentialProperties#accessKey
                 */
                readonly accessKey?: AsymmetricEncryptedSecret;

                /**
                 * The storage endpoint
                 *
                 * @schema #/definitions/StorageAccountCredentialProperties#endPoint
                 */
                readonly endPoint: string;

                /**
                 * Signifies whether SSL needs to be enabled or not.
                 *
                 * @schema #/definitions/StorageAccountCredentialProperties#sslStatus
                 */
                readonly sslStatus: StorageAccountCredentialPropertiesSslStatus;

              }

              export enum MicrosoftStorSimpleManagersStorageAccountCredentialsType {
                "MicrosoftStorSimpleManagersStorageAccountCredentialsType_MICROSOFT_STOR_SIMPLE_MANAGERS_STORAGE_ACCOUNT_CREDENTIALS" = 'Microsoft.StorSimple/managers/storageAccountCredentials',
              }

              /**
               * Intrinsic settings which refers to the type of the StorSimple Manager.
               *
               * @schema #/definitions/ManagerIntrinsicSettings
               */
              export interface ManagerIntrinsicSettings {
                /**
                 * The type of StorSimple Manager.
                 *
                 * @schema #/definitions/ManagerIntrinsicSettings#type
                 */
                readonly type: ManagerIntrinsicSettingsType;

              }

              /**
               * The Sku.
               *
               * @schema #/definitions/ManagerSku
               */
              export interface ManagerSku {
                /**
                 * Refers to the sku name which should be "Standard"
                 *
                 * @schema #/definitions/ManagerSku#name
                 */
                readonly name: ManagerSkuName;

              }

              /**
               * Microsoft.StorSimple/managers/extendedInformation
               *
               * @schema #/definitions/managers_extendedInformation_childResource
               */
              export interface ManagersExtendedInformationChildResource {
                /**
                 * @schema #/definitions/managers_extendedInformation_childResource#apiVersion
                 */
                readonly apiVersion: ManagersExtendedInformationChildResourceApiVersion;

                /**
                 * The etag of the resource.
                 *
                 * @schema #/definitions/managers_extendedInformation_childResource#etag
                 */
                readonly etag?: string;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_extendedInformation_childResource#kind
                 */
                readonly kind?: ManagersExtendedInformationChildResourceKind;

                /**
                 * @schema #/definitions/managers_extendedInformation_childResource#name
                 */
                readonly name: ManagersExtendedInformationChildResourceName;

                /**
                 * The properties of the manager extended info.
                 *
                 * @schema #/definitions/managers_extendedInformation_childResource#properties
                 */
                readonly properties: ManagerExtendedInfoProperties;

                /**
                 * @schema #/definitions/managers_extendedInformation_childResource#type
                 */
                readonly type: ManagersExtendedInformationChildResourceType;

              }

              /**
               * Microsoft.StorSimple/managers/accessControlRecords
               *
               * @schema #/definitions/managers_accessControlRecords_childResource
               */
              export interface ManagersAccessControlRecordsChildResource {
                /**
                 * @schema #/definitions/managers_accessControlRecords_childResource#apiVersion
                 */
                readonly apiVersion: ManagersAccessControlRecordsChildResourceApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_accessControlRecords_childResource#kind
                 */
                readonly kind?: ManagersAccessControlRecordsChildResourceKind;

                /**
                 * The name of the access control record.
                 *
                 * @schema #/definitions/managers_accessControlRecords_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of access control record.
                 *
                 * @schema #/definitions/managers_accessControlRecords_childResource#properties
                 */
                readonly properties: AccessControlRecordProperties;

                /**
                 * @schema #/definitions/managers_accessControlRecords_childResource#type
                 */
                readonly type: ManagersAccessControlRecordsChildResourceType;

              }

              /**
               * Microsoft.StorSimple/managers/bandwidthSettings
               *
               * @schema #/definitions/managers_bandwidthSettings_childResource
               */
              export interface ManagersBandwidthSettingsChildResource {
                /**
                 * @schema #/definitions/managers_bandwidthSettings_childResource#apiVersion
                 */
                readonly apiVersion: ManagersBandwidthSettingsChildResourceApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_bandwidthSettings_childResource#kind
                 */
                readonly kind?: ManagersBandwidthSettingsChildResourceKind;

                /**
                 * The bandwidth setting name.
                 *
                 * @schema #/definitions/managers_bandwidthSettings_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of the bandwidth setting.
                 *
                 * @schema #/definitions/managers_bandwidthSettings_childResource#properties
                 */
                readonly properties: BandwidthRateSettingProperties;

                /**
                 * @schema #/definitions/managers_bandwidthSettings_childResource#type
                 */
                readonly type: ManagersBandwidthSettingsChildResourceType;

              }

              /**
               * Microsoft.StorSimple/managers/storageAccountCredentials
               *
               * @schema #/definitions/managers_storageAccountCredentials_childResource
               */
              export interface ManagersStorageAccountCredentialsChildResource {
                /**
                 * @schema #/definitions/managers_storageAccountCredentials_childResource#apiVersion
                 */
                readonly apiVersion: ManagersStorageAccountCredentialsChildResourceApiVersion;

                /**
                 * The Kind of the object. Currently only Series8000 is supported.
                 *
                 * @schema #/definitions/managers_storageAccountCredentials_childResource#kind
                 */
                readonly kind?: ManagersStorageAccountCredentialsChildResourceKind;

                /**
                 * The storage account credential name.
                 *
                 * @schema #/definitions/managers_storageAccountCredentials_childResource#name
                 */
                readonly name: string;

                /**
                 * The storage account credential properties.
                 *
                 * @schema #/definitions/managers_storageAccountCredentials_childResource#properties
                 */
                readonly properties: StorageAccountCredentialProperties;

                /**
                 * @schema #/definitions/managers_storageAccountCredentials_childResource#type
                 */
                readonly type: ManagersStorageAccountCredentialsChildResourceType;

              }

              /**
               * The schedule for bandwidth setting.
               *
               * @schema #/definitions/BandwidthSchedule
               */
              export interface BandwidthSchedule {
                /**
                 * The days of the week when this schedule is applicable.
                 *
                 * @schema #/definitions/BandwidthSchedule#days
                 */
                readonly days: BandwidthScheduleDays[];

                /**
                 * The rate in Mbps.
                 *
                 * @schema #/definitions/BandwidthSchedule#rateInMbps
                 */
                readonly rateInMbps: number;

                /**
                 * The time.
                 *
                 * @schema #/definitions/BandwidthSchedule#start
                 */
                readonly start: Time;

                /**
                 * The time.
                 *
                 * @schema #/definitions/BandwidthSchedule#stop
                 */
                readonly stop: Time;

              }

              export enum AlertNotificationPropertiesEmailNotification {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              export enum AlertNotificationPropertiesNotificationToServiceOwners {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              export enum ManagersDevicesBackupPoliciesSchedulesChildResourceApiVersion {
                "ManagersDevicesBackupPoliciesSchedulesChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersDevicesBackupPoliciesSchedulesChildResourceKind {
                "ManagersDevicesBackupPoliciesSchedulesChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersDevicesBackupPoliciesSchedulesChildResourceType {
                SCHEDULES = 'schedules',
              }

              export enum BackupSchedulePropertiesBackupType {
                LOCAL_SNAPSHOT = 'LocalSnapshot',
                CLOUD_SNAPSHOT = 'CloudSnapshot',
              }

              /**
               * The schedule recurrence.
               *
               * @schema #/definitions/ScheduleRecurrence
               */
              export interface ScheduleRecurrence {
                /**
                 * The recurrence type.
                 *
                 * @schema #/definitions/ScheduleRecurrence#recurrenceType
                 */
                readonly recurrenceType: ScheduleRecurrenceRecurrenceType;

                /**
                 * The recurrence value.
                 *
                 * @schema #/definitions/ScheduleRecurrence#recurrenceValue
                 */
                readonly recurrenceValue: number;

                /**
                 * The week days list. Applicable only for schedules of recurrence type 'weekly'.
                 *
                 * @schema #/definitions/ScheduleRecurrence#weeklyDaysList
                 */
                readonly weeklyDaysList?: ScheduleRecurrenceWeeklyDaysList[];

              }

              export enum BackupSchedulePropertiesScheduleStatus {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              /**
               * Represent the secrets intended for encryption with asymmetric key pair.
               *
               * @schema #/definitions/AsymmetricEncryptedSecret
               */
              export interface AsymmetricEncryptedSecret {
                /**
                 * The algorithm used to encrypt "Value".
                 *
                 * @schema #/definitions/AsymmetricEncryptedSecret#encryptionAlgorithm
                 */
                readonly encryptionAlgorithm: AsymmetricEncryptedSecretEncryptionAlgorithm;

                /**
                 * Thumbprint certificate that was used to encrypt "Value". If the value in unencrypted, it will be null.
                 *
                 * @schema #/definitions/AsymmetricEncryptedSecret#encryptionCertThumbprint
                 */
                readonly encryptionCertThumbprint?: string;

                /**
                 * The value of the secret.
                 *
                 * @schema #/definitions/AsymmetricEncryptedSecret#value
                 */
                readonly value: string;

              }

              export enum ManagersDevicesVolumeContainersVolumesChildResourceApiVersion {
                "ManagersDevicesVolumeContainersVolumesChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersDevicesVolumeContainersVolumesChildResourceKind {
                "ManagersDevicesVolumeContainersVolumesChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersDevicesVolumeContainersVolumesChildResourceType {
                VOLUMES = 'volumes',
              }

              export enum VolumePropertiesMonitoringStatus {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              export enum VolumePropertiesVolumeStatus {
                ONLINE = 'Online',
                OFFLINE = 'Offline',
              }

              export enum VolumePropertiesVolumeType {
                TIERED = 'Tiered',
                ARCHIVAL = 'Archival',
                LOCALLY_PINNED = 'LocallyPinned',
              }

              export enum StorageAccountCredentialPropertiesSslStatus {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              export enum ManagerIntrinsicSettingsType {
                "ManagerIntrinsicSettingsType_GARDA_V1" = 'GardaV1',
                "ManagerIntrinsicSettingsType_HELSINKI_V1" = 'HelsinkiV1',
              }

              export enum ManagerSkuName {
                STANDARD = 'Standard',
              }

              export enum ManagersExtendedInformationChildResourceApiVersion {
                "ManagersExtendedInformationChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersExtendedInformationChildResourceKind {
                "ManagersExtendedInformationChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersExtendedInformationChildResourceName {
                VAULT_EXTENDED_INFO = 'vaultExtendedInfo',
              }

              export enum ManagersExtendedInformationChildResourceType {
                EXTENDED_INFORMATION = 'extendedInformation',
              }

              export enum ManagersAccessControlRecordsChildResourceApiVersion {
                "ManagersAccessControlRecordsChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersAccessControlRecordsChildResourceKind {
                "ManagersAccessControlRecordsChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersAccessControlRecordsChildResourceType {
                ACCESS_CONTROL_RECORDS = 'accessControlRecords',
              }

              export enum ManagersBandwidthSettingsChildResourceApiVersion {
                "ManagersBandwidthSettingsChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersBandwidthSettingsChildResourceKind {
                "ManagersBandwidthSettingsChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersBandwidthSettingsChildResourceType {
                BANDWIDTH_SETTINGS = 'bandwidthSettings',
              }

              export enum ManagersStorageAccountCredentialsChildResourceApiVersion {
                "ManagersStorageAccountCredentialsChildResourceApiVersion_2017_06_01" = '2017-06-01',
              }

              export enum ManagersStorageAccountCredentialsChildResourceKind {
                "ManagersStorageAccountCredentialsChildResourceKind_SERIES8000" = 'Series8000',
              }

              export enum ManagersStorageAccountCredentialsChildResourceType {
                STORAGE_ACCOUNT_CREDENTIALS = 'storageAccountCredentials',
              }

              export enum BandwidthScheduleDays {
                SUNDAY = 'Sunday',
                MONDAY = 'Monday',
                TUESDAY = 'Tuesday',
                WEDNESDAY = 'Wednesday',
                THURSDAY = 'Thursday',
                FRIDAY = 'Friday',
                SATURDAY = 'Saturday',
              }

              /**
               * The time.
               *
               * @schema #/definitions/Time
               */
              export interface Time {
                /**
                 * The hour.
                 *
                 * @schema #/definitions/Time#hours
                 */
                readonly hours: number;

                /**
                 * The minute.
                 *
                 * @schema #/definitions/Time#minutes
                 */
                readonly minutes: number;

                /**
                 * The second.
                 *
                 * @schema #/definitions/Time#seconds
                 */
                readonly seconds: number;

              }

              export enum ScheduleRecurrenceRecurrenceType {
                MINUTES = 'Minutes',
                HOURLY = 'Hourly',
                DAILY = 'Daily',
                WEEKLY = 'Weekly',
              }

              export enum ScheduleRecurrenceWeeklyDaysList {
                SUNDAY = 'Sunday',
                MONDAY = 'Monday',
                TUESDAY = 'Tuesday',
                WEDNESDAY = 'Wednesday',
                THURSDAY = 'Thursday',
                FRIDAY = 'Friday',
                SATURDAY = 'Saturday',
              }

              export enum AsymmetricEncryptedSecretEncryptionAlgorithm {
                NONE = 'None',
                "AsymmetricEncryptedSecretEncryptionAlgorithm_AES256" = 'AES256',
                "AsymmetricEncryptedSecretEncryptionAlgorithm_RSAES_PKCS1_V_1_5" = 'RSAES_PKCS1_v_1_5',
              }

