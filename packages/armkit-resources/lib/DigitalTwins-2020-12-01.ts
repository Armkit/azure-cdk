      // generated by armkit
      import { ArmResource } from '@yetics/armkit-core';
      import { Construct } from 'constructs';

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances
       */
      export class DigitalTwinsInstances extends ArmResource {
        /**
         * Defines a "Microsoft.DigitalTwins.digitalTwinsInstances" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: DigitalTwinsInstancesOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'digitalTwinsInstances',
          });
        }
      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/endpoints
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints
       */
      export class DigitalTwinsInstancesEndpoints extends ArmResource {
        /**
         * Defines a "Microsoft.DigitalTwins.digitalTwinsInstances_endpoints" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: DigitalTwinsInstancesEndpointsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'digitalTwinsInstances_endpoints',
          });
        }
      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections
       */
      export class DigitalTwinsInstancesPrivateEndpointConnections extends ArmResource {
        /**
         * Defines a "Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: DigitalTwinsInstancesPrivateEndpointConnectionsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'digitalTwinsInstances_privateEndpointConnections',
          });
        }
      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances
       */
      export interface DigitalTwinsInstancesOptions {
        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#apiVersion
         */
        readonly apiVersion?: MicrosoftDigitalTwinsDigitalTwinsInstancesApiVersion;

        /**
         * The managed identity for the DigitalTwinsInstance.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#identity
         */
        readonly identity?: DigitalTwinsIdentity;

        /**
         * The resource location.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#location
         */
        readonly location: string;

        /**
         * The name of the DigitalTwinsInstance.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#name
         */
        readonly name: MicrosoftDigitalTwinsDigitalTwinsInstancesNamePattern;

        /**
         * The properties of a DigitalTwinsInstance.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#properties
         */
        readonly properties: DigitalTwinsProperties;

        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#resources
         */
        readonly resources?: MicrosoftDigitalTwinsDigitalTwinsInstancesResources[];

        /**
         * The resource tags.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#tags
         */
        readonly tags?: MicrosoftDigitalTwinsDigitalTwinsInstancesTags;

        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances#type
         */
        readonly type: MicrosoftDigitalTwinsDigitalTwinsInstancesType;

      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/endpoints
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints
       */
      export interface DigitalTwinsInstancesEndpointsOptions {
        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints#apiVersion
         */
        readonly apiVersion?: MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsApiVersion;

        /**
         * Name of Endpoint Resource.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints#name
         */
        readonly name: MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsNamePattern;

        /**
         * Properties related to Digital Twins Endpoint
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints#properties
         */
        readonly properties: DigitalTwinsEndpointResourceProperties;

        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_endpoints#type
         */
        readonly type: MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsType;

      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections
       *
       * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections
       */
      export interface DigitalTwinsInstancesPrivateEndpointConnectionsOptions {
        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections#apiVersion
         */
        readonly apiVersion?: MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsApiVersion;

        /**
         * The name of the private endpoint connection.
         *
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections#name
         */
        readonly name: string;

        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

        /**
         * @schema Microsoft.DigitalTwins.digitalTwinsInstances_privateEndpointConnections#type
         */
        readonly type: MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsType;

      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesApiVersion {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesApiVersion_2020_12_01" = '2020-12-01',
      }

      /**
       * The managed identity for the DigitalTwinsInstance.
       *
       * @schema #/definitions/DigitalTwinsIdentity
       */
      export interface DigitalTwinsIdentity {
        /**
         * The type of Managed Identity used by the DigitalTwinsInstance. Only SystemAssigned is supported.
         *
         * @schema #/definitions/DigitalTwinsIdentity#type
         */
        readonly type?: DigitalTwinsIdentityType;

      }

      /**
       * @schema MicrosoftDigitalTwinsDigitalTwinsInstancesName
       */
      export class MicrosoftDigitalTwinsDigitalTwinsInstancesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      /**
       * The properties of a DigitalTwinsInstance.
       *
       * @schema #/definitions/DigitalTwinsProperties
       */
      export interface DigitalTwinsProperties {
        /**
         * @schema #/definitions/DigitalTwinsProperties#privateEndpointConnections
         */
        readonly privateEndpointConnections?: PrivateEndpointConnection[];

        /**
         * Public network access for the DigitalTwinsInstance.
         *
         * @schema #/definitions/DigitalTwinsProperties#publicNetworkAccess
         */
        readonly publicNetworkAccess?: DigitalTwinsPropertiesPublicNetworkAccess;

      }

      /**
       * @schema MicrosoftDigitalTwinsDigitalTwinsInstancesResources
       */
      export class MicrosoftDigitalTwinsDigitalTwinsInstancesResources {
        public static fromDigitalTwinsInstancesEndpointsChildResource(value: DigitalTwinsInstancesEndpointsChildResource): MicrosoftDigitalTwinsDigitalTwinsInstancesResources {
          return new MicrosoftDigitalTwinsDigitalTwinsInstancesResources(value);
        }
        public static fromDigitalTwinsInstancesPrivateEndpointConnectionsChildResource(value: DigitalTwinsInstancesPrivateEndpointConnectionsChildResource): MicrosoftDigitalTwinsDigitalTwinsInstancesResources {
          return new MicrosoftDigitalTwinsDigitalTwinsInstancesResources(value);
        }
        private constructor(value: any) {
          Object.defineProperty(this, 'resolve', { value: () => value });
        }
      }

      /**
       * @schema MicrosoftDigitalTwinsDigitalTwinsInstancesTags
       */
      export interface MicrosoftDigitalTwinsDigitalTwinsInstancesTags {
      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesType {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesType_MICROSOFT_DIGITAL_TWINS_DIGITAL_TWINS_INSTANCES" = 'Microsoft.DigitalTwins/digitalTwinsInstances',
      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsApiVersion {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsApiVersion_2020_12_01" = '2020-12-01',
      }

      /**
       * @schema MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsName
       */
      export class MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      /**
       * Properties related to Digital Twins Endpoint
       *
       * @schema #/definitions/DigitalTwinsEndpointResourceProperties
       */
      export class DigitalTwinsEndpointResourceProperties {
        public static fromServiceBus(value: ServiceBus): DigitalTwinsEndpointResourceProperties {
          return new DigitalTwinsEndpointResourceProperties(value);
        }
        public static fromEventHub(value: EventHub): DigitalTwinsEndpointResourceProperties {
          return new DigitalTwinsEndpointResourceProperties(value);
        }
        public static fromEventGrid(value: EventGrid): DigitalTwinsEndpointResourceProperties {
          return new DigitalTwinsEndpointResourceProperties(value);
        }
        private constructor(value: any) {
          Object.defineProperty(this, 'resolve', { value: () => value });
        }
      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsType {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesEndpointsType_MICROSOFT_DIGITAL_TWINS_DIGITAL_TWINS_INSTANCES_ENDPOINTS" = 'Microsoft.DigitalTwins/digitalTwinsInstances/endpoints',
      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsApiVersion {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsApiVersion_2020_12_01" = '2020-12-01',
      }

      /**
       * @schema #/definitions/PrivateEndpointConnectionProperties
       */
      export interface PrivateEndpointConnectionProperties {
        /**
         * The list of group ids for the private endpoint connection.
         *
         * @schema #/definitions/PrivateEndpointConnectionProperties#groupIds
         */
        readonly groupIds?: string[];

        /**
         * @schema #/definitions/PrivateEndpointConnectionProperties#privateEndpoint
         */
        readonly privateEndpoint?: ConnectionPropertiesPrivateEndpoint;

        /**
         * @schema #/definitions/PrivateEndpointConnectionProperties#privateLinkServiceConnectionState
         */
        readonly privateLinkServiceConnectionState?: ConnectionPropertiesPrivateLinkServiceConnectionState;

      }

      export enum MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsType {
        "MicrosoftDigitalTwinsDigitalTwinsInstancesPrivateEndpointConnectionsType_MICROSOFT_DIGITAL_TWINS_DIGITAL_TWINS_INSTANCES_PRIVATE_ENDPOINT_CONNECTIONS" = 'Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections',
      }

      export enum DigitalTwinsIdentityType {
        NONE = 'None',
        SYSTEM_ASSIGNED = 'SystemAssigned',
      }

      /**
       * The private endpoint connection of a Digital Twin.
       *
       * @schema #/definitions/PrivateEndpointConnection
       */
      export interface PrivateEndpointConnection {
        /**
         * @schema #/definitions/PrivateEndpointConnection#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

      }

      export enum DigitalTwinsPropertiesPublicNetworkAccess {
        ENABLED = 'Enabled',
        DISABLED = 'Disabled',
      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/endpoints
       *
       * @schema #/definitions/digitalTwinsInstances_endpoints_childResource
       */
      export interface DigitalTwinsInstancesEndpointsChildResource {
        /**
         * @schema #/definitions/digitalTwinsInstances_endpoints_childResource#apiVersion
         */
        readonly apiVersion: DigitalTwinsInstancesEndpointsChildResourceApiVersion;

        /**
         * Name of Endpoint Resource.
         *
         * @schema #/definitions/digitalTwinsInstances_endpoints_childResource#name
         */
        readonly name: DigitalTwinsInstancesEndpointsChildResourceNamePattern;

        /**
         * Properties related to Digital Twins Endpoint
         *
         * @schema #/definitions/digitalTwinsInstances_endpoints_childResource#properties
         */
        readonly properties: DigitalTwinsEndpointResourceProperties;

        /**
         * @schema #/definitions/digitalTwinsInstances_endpoints_childResource#type
         */
        readonly type: DigitalTwinsInstancesEndpointsChildResourceType;

      }

      /**
       * Microsoft.DigitalTwins/digitalTwinsInstances/privateEndpointConnections
       *
       * @schema #/definitions/digitalTwinsInstances_privateEndpointConnections_childResource
       */
      export interface DigitalTwinsInstancesPrivateEndpointConnectionsChildResource {
        /**
         * @schema #/definitions/digitalTwinsInstances_privateEndpointConnections_childResource#apiVersion
         */
        readonly apiVersion: DigitalTwinsInstancesPrivateEndpointConnectionsChildResourceApiVersion;

        /**
         * The name of the private endpoint connection.
         *
         * @schema #/definitions/digitalTwinsInstances_privateEndpointConnections_childResource#name
         */
        readonly name: string;

        /**
         * @schema #/definitions/digitalTwinsInstances_privateEndpointConnections_childResource#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

        /**
         * @schema #/definitions/digitalTwinsInstances_privateEndpointConnections_childResource#type
         */
        readonly type: DigitalTwinsInstancesPrivateEndpointConnectionsChildResourceType;

      }

      /**
       * Properties related to ServiceBus.
       *
       * @schema #/definitions/ServiceBus
       */
      export interface ServiceBus {
        /**
         * @schema #/definitions/ServiceBus#endpointType
         */
        readonly endpointType: ServiceBusEndpointType;

        /**
         * The URL of the ServiceBus namespace for identity-based authentication. It must include the protocol sb://
         *
         * @schema #/definitions/ServiceBus#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * The ServiceBus Topic name for identity-based authentication
         *
         * @schema #/definitions/ServiceBus#entityPath
         */
        readonly entityPath?: string;

        /**
         * PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
         *
         * @schema #/definitions/ServiceBus#primaryConnectionString
         */
        readonly primaryConnectionString?: string;

        /**
         * SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
         *
         * @schema #/definitions/ServiceBus#secondaryConnectionString
         */
        readonly secondaryConnectionString?: string;

      }

      /**
       * Properties related to EventHub.
       *
       * @schema #/definitions/EventHub
       */
      export interface EventHub {
        /**
         * PrimaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
         *
         * @schema #/definitions/EventHub#connectionStringPrimaryKey
         */
        readonly connectionStringPrimaryKey?: string;

        /**
         * SecondaryConnectionString of the endpoint for key-based authentication. Will be obfuscated during read.
         *
         * @schema #/definitions/EventHub#connectionStringSecondaryKey
         */
        readonly connectionStringSecondaryKey?: string;

        /**
         * @schema #/definitions/EventHub#endpointType
         */
        readonly endpointType: EventHubEndpointType;

        /**
         * The URL of the EventHub namespace for identity-based authentication. It must include the protocol sb://
         *
         * @schema #/definitions/EventHub#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * The EventHub name in the EventHub namespace for identity-based authentication.
         *
         * @schema #/definitions/EventHub#entityPath
         */
        readonly entityPath?: string;

      }

      /**
       * Properties related to EventGrid.
       *
       * @schema #/definitions/EventGrid
       */
      export interface EventGrid {
        /**
         * EventGrid secondary accesskey. Will be obfuscated during read.
         *
         * @schema #/definitions/EventGrid#accessKey1
         */
        readonly accessKey1: string;

        /**
         * EventGrid secondary accesskey. Will be obfuscated during read.
         *
         * @schema #/definitions/EventGrid#accessKey2
         */
        readonly accessKey2?: string;

        /**
         * @schema #/definitions/EventGrid#endpointType
         */
        readonly endpointType: EventGridEndpointType;

        /**
         * EventGrid Topic Endpoint
         *
         * @schema #/definitions/EventGrid#TopicEndpoint
         */
        readonly topicEndpoint?: string;

      }

      /**
       * @schema #/definitions/ConnectionPropertiesPrivateEndpoint
       */
      export interface ConnectionPropertiesPrivateEndpoint {
      }

      /**
       * @schema #/definitions/ConnectionPropertiesPrivateLinkServiceConnectionState
       */
      export interface ConnectionPropertiesPrivateLinkServiceConnectionState {
        /**
         * Actions required for a private endpoint connection.
         *
         * @schema #/definitions/ConnectionPropertiesPrivateLinkServiceConnectionState#actionsRequired
         */
        readonly actionsRequired?: string;

        /**
         * The description for the current state of a private endpoint connection.
         *
         * @schema #/definitions/ConnectionPropertiesPrivateLinkServiceConnectionState#description
         */
        readonly description: string;

        /**
         * The status of a private endpoint connection.
         *
         * @schema #/definitions/ConnectionPropertiesPrivateLinkServiceConnectionState#status
         */
        readonly status: ConnectionPropertiesPrivateLinkServiceConnectionStateStatus;

      }

      export enum DigitalTwinsInstancesEndpointsChildResourceApiVersion {
        "DigitalTwinsInstancesEndpointsChildResourceApiVersion_2020_12_01" = '2020-12-01',
      }

      /**
       * @schema #/definitions/digitalTwinsInstancesEndpointsChildResourceName
       */
      export class DigitalTwinsInstancesEndpointsChildResourceNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum DigitalTwinsInstancesEndpointsChildResourceType {
        ENDPOINTS = 'endpoints',
      }

      export enum DigitalTwinsInstancesPrivateEndpointConnectionsChildResourceApiVersion {
        "DigitalTwinsInstancesPrivateEndpointConnectionsChildResourceApiVersion_2020_12_01" = '2020-12-01',
      }

      export enum DigitalTwinsInstancesPrivateEndpointConnectionsChildResourceType {
        PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
      }

      export enum ServiceBusEndpointType {
        SERVICE_BUS = 'ServiceBus',
      }

      export enum EventHubEndpointType {
        EVENT_HUB = 'EventHub',
      }

      export enum EventGridEndpointType {
        EVENT_GRID = 'EventGrid',
      }

      export enum ConnectionPropertiesPrivateLinkServiceConnectionStateStatus {
        PENDING = 'Pending',
        APPROVED = 'Approved',
        REJECTED = 'Rejected',
        DISCONNECTED = 'Disconnected',
      }

