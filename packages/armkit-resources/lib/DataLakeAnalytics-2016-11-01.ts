// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.DataLakeAnalytics/accounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts
 */
export class Accounts extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeAnalytics.accounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts',
    });
  }
}

/**
 * Microsoft.DataLakeAnalytics/accounts/computePolicies
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies
 */
export class AccountsComputePolicies extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeAnalytics.accounts_computePolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsComputePoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_computePolicies',
    });
  }
}

/**
 * Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts
 */
export class AccountsDataLakeStoreAccounts extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsDataLakeStoreAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_dataLakeStoreAccounts',
    });
  }
}

/**
 * Microsoft.DataLakeAnalytics/accounts/firewallRules
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules
 */
export class AccountsFirewallRules extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeAnalytics.accounts_firewallRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsFirewallRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_firewallRules',
    });
  }
}

/**
 * Microsoft.DataLakeAnalytics/accounts/storageAccounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts
 */
export class AccountsStorageAccounts extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeAnalytics.accounts_storageAccounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsStorageAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_storageAccounts',
    });
  }
}

/**
 * Microsoft.DataLakeAnalytics/accounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts
 */
export interface AccountsOptions {
  /**
   * @schema Microsoft.DataLakeAnalytics.accounts#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeAnalyticsAccountsApiVersion;

  /**
   * The resource location.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts#location
   */
  readonly location: string;

  /**
   * The name of the Data Lake Analytics account.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts#properties
   */
  readonly properties: CreateDataLakeAnalyticsAccountProperties;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts#resources
   */
  readonly resources?: MicrosoftDataLakeAnalyticsAccountsResources[];

  /**
   * The resource tags.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts#tags
   */
  readonly tags?: MicrosoftDataLakeAnalyticsAccountsTags;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts#type
   */
  readonly type: MicrosoftDataLakeAnalyticsAccountsType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/computePolicies
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies
 */
export interface AccountsComputePoliciesOptions {
  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeAnalyticsAccountsComputePoliciesApiVersion;

  /**
   * The name of the compute policy to create or update.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies#name
   */
  readonly name: string;

  /**
   * The compute policy properties to use when creating a new compute policy.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies#properties
   */
  readonly properties: CreateOrUpdateComputePolicyProperties;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_computePolicies#type
   */
  readonly type: MicrosoftDataLakeAnalyticsAccountsComputePoliciesType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts
 */
export interface AccountsDataLakeStoreAccountsOptions {
  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsApiVersion;

  /**
   * The name of the Data Lake Store account to add.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts#name
   */
  readonly name: string;

  /**
   * The Data Lake Store account properties to use when adding a new Data Lake Store account.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts#properties
   */
  readonly properties: AddDataLakeStoreProperties;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_dataLakeStoreAccounts#type
   */
  readonly type: MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/firewallRules
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules
 */
export interface AccountsFirewallRulesOptions {
  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeAnalyticsAccountsFirewallRulesApiVersion;

  /**
   * The name of the firewall rule to create or update.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_firewallRules#type
   */
  readonly type: MicrosoftDataLakeAnalyticsAccountsFirewallRulesType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/storageAccounts
 *
 * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts
 */
export interface AccountsStorageAccountsOptions {
  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeAnalyticsAccountsStorageAccountsApiVersion;

  /**
   * The name of the Azure Storage account to add
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts#name
   */
  readonly name: string;

  /**
   * The Azure Storage account properties to use when adding a new Azure Storage account.
   *
   * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts#properties
   */
  readonly properties: AddStorageAccountProperties;

  /**
   * @schema Microsoft.DataLakeAnalytics.accounts_storageAccounts#type
   */
  readonly type: MicrosoftDataLakeAnalyticsAccountsStorageAccountsType;

}

export enum MicrosoftDataLakeAnalyticsAccountsApiVersion {
  "MicrosoftDataLakeAnalyticsAccountsApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties
 */
export interface CreateDataLakeAnalyticsAccountProperties {
  /**
   * The list of compute policies associated with this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#computePolicies
   */
  readonly computePolicies?: CreateComputePolicyWithAccountParameters[];

  /**
   * The list of Data Lake Store accounts associated with this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#dataLakeStoreAccounts
   */
  readonly dataLakeStoreAccounts: AddDataLakeStoreWithAccountParameters[];

  /**
   * The default Data Lake Store account associated with this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#defaultDataLakeStoreAccount
   */
  readonly defaultDataLakeStoreAccount: string;

  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#firewallAllowAzureIps
   */
  readonly firewallAllowAzureIps?: CreateDataLakeAnalyticsAccountPropertiesFirewallAllowAzureIps;

  /**
   * The list of firewall rules associated with this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#firewallRules
   */
  readonly firewallRules?: CreateFirewallRuleWithAccountParameters[];

  /**
   * The current state of the IP address firewall for this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#firewallState
   */
  readonly firewallState?: CreateDataLakeAnalyticsAccountPropertiesFirewallState;

  /**
   * The maximum supported degree of parallelism for this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#maxDegreeOfParallelism
   */
  readonly maxDegreeOfParallelism?: number;

  /**
   * The maximum supported degree of parallelism per job for this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#maxDegreeOfParallelismPerJob
   */
  readonly maxDegreeOfParallelismPerJob?: number;

  /**
   * The maximum supported jobs running under the account at the same time.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#maxJobCount
   */
  readonly maxJobCount?: number;

  /**
   * The minimum supported priority per job for this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#minPriorityPerJob
   */
  readonly minPriorityPerJob?: number;

  /**
   * The commitment tier for the next month.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#newTier
   */
  readonly newTier?: CreateDataLakeAnalyticsAccountPropertiesNewTier;

  /**
   * The number of days that job metadata is retained.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#queryStoreRetention
   */
  readonly queryStoreRetention?: number;

  /**
   * The list of Azure Blob Storage accounts associated with this account.
   *
   * @schema #/definitions/CreateDataLakeAnalyticsAccountProperties#storageAccounts
   */
  readonly storageAccounts?: AddStorageAccountWithAccountParameters[];

}

/**
 * @schema MicrosoftDataLakeAnalyticsAccountsResources
 */
export class MicrosoftDataLakeAnalyticsAccountsResources {
  public static fromAccountsDataLakeStoreAccountsChildResource(value: AccountsDataLakeStoreAccountsChildResource): MicrosoftDataLakeAnalyticsAccountsResources {
    return new MicrosoftDataLakeAnalyticsAccountsResources(value);
  }
  public static fromAccountsStorageAccountsChildResource(value: AccountsStorageAccountsChildResource): MicrosoftDataLakeAnalyticsAccountsResources {
    return new MicrosoftDataLakeAnalyticsAccountsResources(value);
  }
  public static fromAccountsComputePoliciesChildResource(value: AccountsComputePoliciesChildResource): MicrosoftDataLakeAnalyticsAccountsResources {
    return new MicrosoftDataLakeAnalyticsAccountsResources(value);
  }
  public static fromAccountsFirewallRulesChildResource(value: AccountsFirewallRulesChildResource): MicrosoftDataLakeAnalyticsAccountsResources {
    return new MicrosoftDataLakeAnalyticsAccountsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftDataLakeAnalyticsAccountsTags
 */
export interface MicrosoftDataLakeAnalyticsAccountsTags {
}

export enum MicrosoftDataLakeAnalyticsAccountsType {
  "MicrosoftDataLakeAnalyticsAccountsType_MICROSOFT_DATA_LAKE_ANALYTICS_ACCOUNTS" = 'Microsoft.DataLakeAnalytics/accounts',
}

export enum MicrosoftDataLakeAnalyticsAccountsComputePoliciesApiVersion {
  "MicrosoftDataLakeAnalyticsAccountsComputePoliciesApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The compute policy properties to use when creating a new compute policy.
 *
 * @schema #/definitions/CreateOrUpdateComputePolicyProperties
 */
export interface CreateOrUpdateComputePolicyProperties {
  /**
   * The maximum degree of parallelism per job this user can use to submit jobs. This property, the min priority per job property, or both must be passed.
   *
   * @schema #/definitions/CreateOrUpdateComputePolicyProperties#maxDegreeOfParallelismPerJob
   */
  readonly maxDegreeOfParallelismPerJob?: number;

  /**
   * The minimum priority per job this user can use to submit jobs. This property, the max degree of parallelism per job property, or both must be passed.
   *
   * @schema #/definitions/CreateOrUpdateComputePolicyProperties#minPriorityPerJob
   */
  readonly minPriorityPerJob?: number;

  /**
   * The AAD object identifier for the entity to create a policy for.
   *
   * @schema #/definitions/CreateOrUpdateComputePolicyProperties#objectId
   */
  readonly objectId: CreateOrUpdateComputePolicyPropertiesObjectIdPattern;

  /**
   * The type of AAD object the object identifier refers to.
   *
   * @schema #/definitions/CreateOrUpdateComputePolicyProperties#objectType
   */
  readonly objectType: CreateOrUpdateComputePolicyPropertiesObjectType;

}

export enum MicrosoftDataLakeAnalyticsAccountsComputePoliciesType {
  "MicrosoftDataLakeAnalyticsAccountsComputePoliciesType_MICROSOFT_DATA_LAKE_ANALYTICS_ACCOUNTS_COMPUTE_POLICIES" = 'Microsoft.DataLakeAnalytics/accounts/computePolicies',
}

export enum MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsApiVersion {
  "MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The Data Lake Store account properties to use when adding a new Data Lake Store account.
 *
 * @schema #/definitions/AddDataLakeStoreProperties
 */
export interface AddDataLakeStoreProperties {
  /**
   * The optional suffix for the Data Lake Store account.
   *
   * @schema #/definitions/AddDataLakeStoreProperties#suffix
   */
  readonly suffix?: string;

}

export enum MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsType {
  "MicrosoftDataLakeAnalyticsAccountsDataLakeStoreAccountsType_MICROSOFT_DATA_LAKE_ANALYTICS_ACCOUNTS_DATA_LAKE_STORE_ACCOUNTS" = 'Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts',
}

export enum MicrosoftDataLakeAnalyticsAccountsFirewallRulesApiVersion {
  "MicrosoftDataLakeAnalyticsAccountsFirewallRulesApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The firewall rule properties to use when creating a new firewall rule.
 *
 * @schema #/definitions/CreateOrUpdateFirewallRuleProperties
 */
export interface CreateOrUpdateFirewallRuleProperties {
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   *
   * @schema #/definitions/CreateOrUpdateFirewallRuleProperties#endIpAddress
   */
  readonly endIpAddress: string;

  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   *
   * @schema #/definitions/CreateOrUpdateFirewallRuleProperties#startIpAddress
   */
  readonly startIpAddress: string;

}

export enum MicrosoftDataLakeAnalyticsAccountsFirewallRulesType {
  "MicrosoftDataLakeAnalyticsAccountsFirewallRulesType_MICROSOFT_DATA_LAKE_ANALYTICS_ACCOUNTS_FIREWALL_RULES" = 'Microsoft.DataLakeAnalytics/accounts/firewallRules',
}

export enum MicrosoftDataLakeAnalyticsAccountsStorageAccountsApiVersion {
  "MicrosoftDataLakeAnalyticsAccountsStorageAccountsApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The Azure Storage account properties to use when adding a new Azure Storage account.
 *
 * @schema #/definitions/AddStorageAccountProperties
 */
export interface AddStorageAccountProperties {
  /**
   * The access key associated with this Azure Storage account that will be used to connect to it.
   *
   * @schema #/definitions/AddStorageAccountProperties#accessKey
   */
  readonly accessKey: string;

  /**
   * The optional suffix for the storage account.
   *
   * @schema #/definitions/AddStorageAccountProperties#suffix
   */
  readonly suffix?: string;

}

export enum MicrosoftDataLakeAnalyticsAccountsStorageAccountsType {
  "MicrosoftDataLakeAnalyticsAccountsStorageAccountsType_MICROSOFT_DATA_LAKE_ANALYTICS_ACCOUNTS_STORAGE_ACCOUNTS" = 'Microsoft.DataLakeAnalytics/accounts/storageAccounts',
}

/**
 * The parameters used to create a new compute policy while creating a new Data Lake Analytics account.
 *
 * @schema #/definitions/CreateComputePolicyWithAccountParameters
 */
export interface CreateComputePolicyWithAccountParameters {
  /**
   * The unique name of the compute policy to create.
   *
   * @schema #/definitions/CreateComputePolicyWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The compute policy properties to use when creating a new compute policy.
   *
   * @schema #/definitions/CreateComputePolicyWithAccountParameters#properties
   */
  readonly properties: CreateOrUpdateComputePolicyProperties;

}

/**
 * The parameters used to add a new Data Lake Store account while creating a new Data Lake Analytics account.
 *
 * @schema #/definitions/AddDataLakeStoreWithAccountParameters
 */
export interface AddDataLakeStoreWithAccountParameters {
  /**
   * The unique name of the Data Lake Store account to add.
   *
   * @schema #/definitions/AddDataLakeStoreWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The Data Lake Store account properties to use when adding a new Data Lake Store account.
   *
   * @schema #/definitions/AddDataLakeStoreWithAccountParameters#properties
   */
  readonly properties?: AddDataLakeStoreProperties;

}

export enum CreateDataLakeAnalyticsAccountPropertiesFirewallAllowAzureIps {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The parameters used to create a new firewall rule while creating a new Data Lake Analytics account.
 *
 * @schema #/definitions/CreateFirewallRuleWithAccountParameters
 */
export interface CreateFirewallRuleWithAccountParameters {
  /**
   * The unique name of the firewall rule to create.
   *
   * @schema #/definitions/CreateFirewallRuleWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema #/definitions/CreateFirewallRuleWithAccountParameters#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

}

export enum CreateDataLakeAnalyticsAccountPropertiesFirewallState {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum CreateDataLakeAnalyticsAccountPropertiesNewTier {
  CONSUMPTION = 'Consumption',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_100_AU_HOURS" = 'Commitment_100AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_500_AU_HOURS" = 'Commitment_500AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_1000_AU_HOURS" = 'Commitment_1000AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_5000_AU_HOURS" = 'Commitment_5000AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_10000_AU_HOURS" = 'Commitment_10000AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_50000_AU_HOURS" = 'Commitment_50000AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_100000_AU_HOURS" = 'Commitment_100000AUHours',
  "CreateDataLakeAnalyticsAccountPropertiesNewTier_COMMITMENT_500000_AU_HOURS" = 'Commitment_500000AUHours',
}

/**
 * The parameters used to add a new Azure Storage account while creating a new Data Lake Analytics account.
 *
 * @schema #/definitions/AddStorageAccountWithAccountParameters
 */
export interface AddStorageAccountWithAccountParameters {
  /**
   * The unique name of the Azure Storage account to add.
   *
   * @schema #/definitions/AddStorageAccountWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The Azure Storage account properties to use when adding a new Azure Storage account.
   *
   * @schema #/definitions/AddStorageAccountWithAccountParameters#properties
   */
  readonly properties: AddStorageAccountProperties;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/dataLakeStoreAccounts
 *
 * @schema #/definitions/accounts_dataLakeStoreAccounts_childResource
 */
export interface AccountsDataLakeStoreAccountsChildResource {
  /**
   * @schema #/definitions/accounts_dataLakeStoreAccounts_childResource#apiVersion
   */
  readonly apiVersion: AccountsDataLakeStoreAccountsChildResourceApiVersion;

  /**
   * The name of the Data Lake Store account to add.
   *
   * @schema #/definitions/accounts_dataLakeStoreAccounts_childResource#name
   */
  readonly name: string;

  /**
   * The Data Lake Store account properties to use when adding a new Data Lake Store account.
   *
   * @schema #/definitions/accounts_dataLakeStoreAccounts_childResource#properties
   */
  readonly properties: AddDataLakeStoreProperties;

  /**
   * @schema #/definitions/accounts_dataLakeStoreAccounts_childResource#type
   */
  readonly type: AccountsDataLakeStoreAccountsChildResourceType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/storageAccounts
 *
 * @schema #/definitions/accounts_storageAccounts_childResource
 */
export interface AccountsStorageAccountsChildResource {
  /**
   * @schema #/definitions/accounts_storageAccounts_childResource#apiVersion
   */
  readonly apiVersion: AccountsStorageAccountsChildResourceApiVersion;

  /**
   * The name of the Azure Storage account to add
   *
   * @schema #/definitions/accounts_storageAccounts_childResource#name
   */
  readonly name: string;

  /**
   * The Azure Storage account properties to use when adding a new Azure Storage account.
   *
   * @schema #/definitions/accounts_storageAccounts_childResource#properties
   */
  readonly properties: AddStorageAccountProperties;

  /**
   * @schema #/definitions/accounts_storageAccounts_childResource#type
   */
  readonly type: AccountsStorageAccountsChildResourceType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/computePolicies
 *
 * @schema #/definitions/accounts_computePolicies_childResource
 */
export interface AccountsComputePoliciesChildResource {
  /**
   * @schema #/definitions/accounts_computePolicies_childResource#apiVersion
   */
  readonly apiVersion: AccountsComputePoliciesChildResourceApiVersion;

  /**
   * The name of the compute policy to create or update.
   *
   * @schema #/definitions/accounts_computePolicies_childResource#name
   */
  readonly name: string;

  /**
   * The compute policy properties to use when creating a new compute policy.
   *
   * @schema #/definitions/accounts_computePolicies_childResource#properties
   */
  readonly properties: CreateOrUpdateComputePolicyProperties;

  /**
   * @schema #/definitions/accounts_computePolicies_childResource#type
   */
  readonly type: AccountsComputePoliciesChildResourceType;

}

/**
 * Microsoft.DataLakeAnalytics/accounts/firewallRules
 *
 * @schema #/definitions/accounts_firewallRules_childResource
 */
export interface AccountsFirewallRulesChildResource {
  /**
   * @schema #/definitions/accounts_firewallRules_childResource#apiVersion
   */
  readonly apiVersion: AccountsFirewallRulesChildResourceApiVersion;

  /**
   * The name of the firewall rule to create or update.
   *
   * @schema #/definitions/accounts_firewallRules_childResource#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema #/definitions/accounts_firewallRules_childResource#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

  /**
   * @schema #/definitions/accounts_firewallRules_childResource#type
   */
  readonly type: AccountsFirewallRulesChildResourceType;

}

/**
 * @schema #/definitions/createOrUpdateComputePolicyPropertiesObjectId
 */
export class CreateOrUpdateComputePolicyPropertiesObjectIdPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum CreateOrUpdateComputePolicyPropertiesObjectType {
  USER = 'User',
  GROUP = 'Group',
  SERVICE_PRINCIPAL = 'ServicePrincipal',
}

export enum AccountsDataLakeStoreAccountsChildResourceApiVersion {
  "AccountsDataLakeStoreAccountsChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsDataLakeStoreAccountsChildResourceType {
  DATA_LAKE_STORE_ACCOUNTS = 'dataLakeStoreAccounts',
}

export enum AccountsStorageAccountsChildResourceApiVersion {
  "AccountsStorageAccountsChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsStorageAccountsChildResourceType {
  STORAGE_ACCOUNTS = 'storageAccounts',
}

export enum AccountsComputePoliciesChildResourceApiVersion {
  "AccountsComputePoliciesChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsComputePoliciesChildResourceType {
  COMPUTE_POLICIES = 'computePolicies',
}

export enum AccountsFirewallRulesChildResourceApiVersion {
  "AccountsFirewallRulesChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsFirewallRulesChildResourceType {
  FIREWALL_RULES = 'firewallRules',
}

