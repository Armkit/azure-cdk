// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.NotificationHubs/namespaces
 *
 * @schema Microsoft.NotificationHubs.namespaces
 */
export class Namespaces extends ArmResource {
  /**
   * Defines a "Microsoft.NotificationHubs.namespaces" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces',
    });
  }
}

/**
 * Microsoft.NotificationHubs/namespaces/AuthorizationRules
 *
 * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules
 */
export class NamespacesAuthorizationRules extends ArmResource {
  /**
   * Defines a "Microsoft.NotificationHubs.namespaces_AuthorizationRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesAuthorizationRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_AuthorizationRules',
    });
  }
}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs
 *
 * @schema Microsoft.NotificationHubs.namespaces_notificationHubs
 */
export class NamespacesNotificationHubs extends ArmResource {
  /**
   * Defines a "Microsoft.NotificationHubs.namespaces_notificationHubs" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesNotificationHubsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_notificationHubs',
    });
  }
}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules
 *
 * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules
 */
export class NamespacesNotificationHubsAuthorizationRules extends ArmResource {
  /**
   * Defines a "Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesNotificationHubsAuthorizationRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_notificationHubs_AuthorizationRules',
    });
  }
}

/**
 * Microsoft.NotificationHubs/namespaces
 *
 * @schema Microsoft.NotificationHubs.namespaces
 */
export interface NamespacesOptions {
  /**
   * @schema Microsoft.NotificationHubs.namespaces#apiVersion
   */
  readonly apiVersion?: MicrosoftNotificationHubsNamespacesApiVersion;

  /**
   * Resource location
   *
   * @schema Microsoft.NotificationHubs.namespaces#location
   */
  readonly location?: string;

  /**
   * The namespace name.
   *
   * @schema Microsoft.NotificationHubs.namespaces#name
   */
  readonly name: string;

  /**
   * Namespace properties.
   *
   * @schema Microsoft.NotificationHubs.namespaces#properties
   */
  readonly properties: NamespaceProperties;

  /**
   * @schema Microsoft.NotificationHubs.namespaces#resources
   */
  readonly resources?: MicrosoftNotificationHubsNamespacesResources[];

  /**
   * The Sku description for a namespace
   *
   * @schema Microsoft.NotificationHubs.namespaces#sku
   */
  readonly sku?: Sku;

  /**
   * Resource tags
   *
   * @schema Microsoft.NotificationHubs.namespaces#tags
   */
  readonly tags?: MicrosoftNotificationHubsNamespacesTags;

  /**
   * @schema Microsoft.NotificationHubs.namespaces#type
   */
  readonly type: MicrosoftNotificationHubsNamespacesType;

}

/**
 * Microsoft.NotificationHubs/namespaces/AuthorizationRules
 *
 * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules
 */
export interface NamespacesAuthorizationRulesOptions {
  /**
   * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules#apiVersion
   */
  readonly apiVersion?: MicrosoftNotificationHubsNamespacesAuthorizationRulesApiVersion;

  /**
   * Authorization Rule Name.
   *
   * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules#name
   */
  readonly name: string;

  /**
   * SharedAccessAuthorizationRule properties.
   *
   * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules#properties
   */
  readonly properties: SharedAccessAuthorizationRuleProperties;

  /**
   * @schema Microsoft.NotificationHubs.namespaces_AuthorizationRules#type
   */
  readonly type: MicrosoftNotificationHubsNamespacesAuthorizationRulesType;

}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs
 *
 * @schema Microsoft.NotificationHubs.namespaces_notificationHubs
 */
export interface NamespacesNotificationHubsOptions {
  /**
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#apiVersion
   */
  readonly apiVersion?: MicrosoftNotificationHubsNamespacesNotificationHubsApiVersion;

  /**
   * Resource location
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#location
   */
  readonly location?: string;

  /**
   * The notification hub name.
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#name
   */
  readonly name: string;

  /**
   * NotificationHub properties.
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#properties
   */
  readonly properties: NotificationHubProperties;

  /**
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#resources
   */
  readonly resources?: NamespacesNotificationHubsAuthorizationRulesChildResource[];

  /**
   * The Sku description for a namespace
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#sku
   */
  readonly sku?: Sku;

  /**
   * Resource tags
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#tags
   */
  readonly tags?: MicrosoftNotificationHubsNamespacesNotificationHubsTags;

  /**
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs#type
   */
  readonly type: MicrosoftNotificationHubsNamespacesNotificationHubsType;

}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules
 *
 * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules
 */
export interface NamespacesNotificationHubsAuthorizationRulesOptions {
  /**
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules#apiVersion
   */
  readonly apiVersion?: MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesApiVersion;

  /**
   * Authorization Rule Name.
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules#name
   */
  readonly name: string;

  /**
   * SharedAccessAuthorizationRule properties.
   *
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules#properties
   */
  readonly properties: SharedAccessAuthorizationRuleProperties;

  /**
   * @schema Microsoft.NotificationHubs.namespaces_notificationHubs_AuthorizationRules#type
   */
  readonly type: MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesType;

}

export enum MicrosoftNotificationHubsNamespacesApiVersion {
  "MicrosoftNotificationHubsNamespacesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * Namespace properties.
 *
 * @schema #/definitions/NamespaceProperties
 */
export interface NamespaceProperties {
  /**
   * The time the namespace was created.
   *
   * @schema #/definitions/NamespaceProperties#createdAt
   */
  readonly createdAt?: Date;

  /**
   * Whether or not the namespace is set as Critical.
   *
   * @schema #/definitions/NamespaceProperties#critical
   */
  readonly critical?: boolean;

  /**
   * Data center for the namespace
   *
   * @schema #/definitions/NamespaceProperties#dataCenter
   */
  readonly dataCenter?: string;

  /**
   * Whether or not the namespace is currently enabled.
   *
   * @schema #/definitions/NamespaceProperties#enabled
   */
  readonly enabled?: boolean;

  /**
   * The name of the namespace.
   *
   * @schema #/definitions/NamespaceProperties#name
   */
  readonly name?: string;

  /**
   * The namespace type.
   *
   * @schema #/definitions/NamespaceProperties#namespaceType
   */
  readonly namespaceType?: NamespacePropertiesNamespaceType;

  /**
   * Provisioning state of the Namespace.
   *
   * @schema #/definitions/NamespaceProperties#provisioningState
   */
  readonly provisioningState?: string;

  /**
   * Specifies the targeted region in which the namespace should be created. It can be any of the following values: Australia East, Australia Southeast, Central US, East US, East US 2, West US, North Central US, South Central US, East Asia, Southeast Asia, Brazil South, Japan East, Japan West, North Europe, West Europe
   *
   * @schema #/definitions/NamespaceProperties#region
   */
  readonly region?: string;

  /**
   * ScaleUnit where the namespace gets created
   *
   * @schema #/definitions/NamespaceProperties#scaleUnit
   */
  readonly scaleUnit?: string;

  /**
   * Endpoint you can use to perform NotificationHub operations.
   *
   * @schema #/definitions/NamespaceProperties#serviceBusEndpoint
   */
  readonly serviceBusEndpoint?: string;

  /**
   * Status of the namespace. It can be any of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
   *
   * @schema #/definitions/NamespaceProperties#status
   */
  readonly status?: string;

  /**
   * The Id of the Azure subscription associated with the namespace.
   *
   * @schema #/definitions/NamespaceProperties#subscriptionId
   */
  readonly subscriptionId?: string;

  /**
   * The time the namespace was updated.
   *
   * @schema #/definitions/NamespaceProperties#updatedAt
   */
  readonly updatedAt?: Date;

}

/**
 * @schema MicrosoftNotificationHubsNamespacesResources
 */
export class MicrosoftNotificationHubsNamespacesResources {
  public static fromNamespacesAuthorizationRulesChildResource(value: NamespacesAuthorizationRulesChildResource): MicrosoftNotificationHubsNamespacesResources {
    return new MicrosoftNotificationHubsNamespacesResources(value);
  }
  public static fromNamespacesNotificationHubsChildResource(value: NamespacesNotificationHubsChildResource): MicrosoftNotificationHubsNamespacesResources {
    return new MicrosoftNotificationHubsNamespacesResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * The Sku description for a namespace
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * The capacity of the resource
   *
   * @schema #/definitions/Sku#capacity
   */
  readonly capacity?: number;

  /**
   * The Sku Family
   *
   * @schema #/definitions/Sku#family
   */
  readonly family?: string;

  /**
   * Name of the notification hub sku.
   *
   * @schema #/definitions/Sku#name
   */
  readonly name: SkuName;

  /**
   * The Sku size
   *
   * @schema #/definitions/Sku#size
   */
  readonly size?: string;

  /**
   * The tier of particular sku
   *
   * @schema #/definitions/Sku#tier
   */
  readonly tier?: string;

}

/**
 * @schema MicrosoftNotificationHubsNamespacesTags
 */
export interface MicrosoftNotificationHubsNamespacesTags {
}

export enum MicrosoftNotificationHubsNamespacesType {
  "MicrosoftNotificationHubsNamespacesType_MICROSOFT_NOTIFICATION_HUBS_NAMESPACES" = 'Microsoft.NotificationHubs/namespaces',
}

export enum MicrosoftNotificationHubsNamespacesAuthorizationRulesApiVersion {
  "MicrosoftNotificationHubsNamespacesAuthorizationRulesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * SharedAccessAuthorizationRule properties.
 *
 * @schema #/definitions/SharedAccessAuthorizationRuleProperties
 */
export interface SharedAccessAuthorizationRuleProperties {
  /**
   * The rights associated with the rule.
   *
   * @schema #/definitions/SharedAccessAuthorizationRuleProperties#rights
   */
  readonly rights?: SharedAccessAuthorizationRulePropertiesRights[];

}

export enum MicrosoftNotificationHubsNamespacesAuthorizationRulesType {
  "MicrosoftNotificationHubsNamespacesAuthorizationRulesType_MICROSOFT_NOTIFICATION_HUBS_NAMESPACES_AUTHORIZATION_RULES" = 'Microsoft.NotificationHubs/namespaces/AuthorizationRules',
}

export enum MicrosoftNotificationHubsNamespacesNotificationHubsApiVersion {
  "MicrosoftNotificationHubsNamespacesNotificationHubsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * NotificationHub properties.
 *
 * @schema #/definitions/NotificationHubProperties
 */
export interface NotificationHubProperties {
  /**
   * Description of a NotificationHub AdmCredential.
   *
   * @schema #/definitions/NotificationHubProperties#admCredential
   */
  readonly admCredential?: AdmCredential;

  /**
   * Description of a NotificationHub ApnsCredential.
   *
   * @schema #/definitions/NotificationHubProperties#apnsCredential
   */
  readonly apnsCredential?: ApnsCredential;

  /**
   * The AuthorizationRules of the created NotificationHub
   *
   * @schema #/definitions/NotificationHubProperties#authorizationRules
   */
  readonly authorizationRules?: SharedAccessAuthorizationRuleProperties[];

  /**
   * Description of a NotificationHub BaiduCredential.
   *
   * @schema #/definitions/NotificationHubProperties#baiduCredential
   */
  readonly baiduCredential?: BaiduCredential;

  /**
   * Description of a NotificationHub GcmCredential.
   *
   * @schema #/definitions/NotificationHubProperties#gcmCredential
   */
  readonly gcmCredential?: GcmCredential;

  /**
   * Description of a NotificationHub MpnsCredential.
   *
   * @schema #/definitions/NotificationHubProperties#mpnsCredential
   */
  readonly mpnsCredential?: MpnsCredential;

  /**
   * The NotificationHub name.
   *
   * @schema #/definitions/NotificationHubProperties#name
   */
  readonly name?: string;

  /**
   * The RegistrationTtl of the created NotificationHub
   *
   * @schema #/definitions/NotificationHubProperties#registrationTtl
   */
  readonly registrationTtl?: string;

  /**
   * Description of a NotificationHub WnsCredential.
   *
   * @schema #/definitions/NotificationHubProperties#wnsCredential
   */
  readonly wnsCredential?: WnsCredential;

}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules
 *
 * @schema #/definitions/namespaces_notificationHubs_AuthorizationRules_childResource
 */
export interface NamespacesNotificationHubsAuthorizationRulesChildResource {
  /**
   * @schema #/definitions/namespaces_notificationHubs_AuthorizationRules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesNotificationHubsAuthorizationRulesChildResourceApiVersion;

  /**
   * Authorization Rule Name.
   *
   * @schema #/definitions/namespaces_notificationHubs_AuthorizationRules_childResource#name
   */
  readonly name: string;

  /**
   * SharedAccessAuthorizationRule properties.
   *
   * @schema #/definitions/namespaces_notificationHubs_AuthorizationRules_childResource#properties
   */
  readonly properties: SharedAccessAuthorizationRuleProperties;

  /**
   * @schema #/definitions/namespaces_notificationHubs_AuthorizationRules_childResource#type
   */
  readonly type: NamespacesNotificationHubsAuthorizationRulesChildResourceType;

}

/**
 * @schema MicrosoftNotificationHubsNamespacesNotificationHubsTags
 */
export interface MicrosoftNotificationHubsNamespacesNotificationHubsTags {
}

export enum MicrosoftNotificationHubsNamespacesNotificationHubsType {
  "MicrosoftNotificationHubsNamespacesNotificationHubsType_MICROSOFT_NOTIFICATION_HUBS_NAMESPACES_NOTIFICATION_HUBS" = 'Microsoft.NotificationHubs/namespaces/notificationHubs',
}

export enum MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesApiVersion {
  "MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesApiVersion_2017_04_01" = '2017-04-01',
}

export enum MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesType {
  "MicrosoftNotificationHubsNamespacesNotificationHubsAuthorizationRulesType_MICROSOFT_NOTIFICATION_HUBS_NAMESPACES_NOTIFICATION_HUBS_AUTHORIZATION_RULES" = 'Microsoft.NotificationHubs/namespaces/notificationHubs/AuthorizationRules',
}

export enum NamespacePropertiesNamespaceType {
  MESSAGING = 'Messaging',
  NOTIFICATION_HUB = 'NotificationHub',
}

/**
 * Microsoft.NotificationHubs/namespaces/AuthorizationRules
 *
 * @schema #/definitions/namespaces_AuthorizationRules_childResource
 */
export interface NamespacesAuthorizationRulesChildResource {
  /**
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesAuthorizationRulesChildResourceApiVersion;

  /**
   * Authorization Rule Name.
   *
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#name
   */
  readonly name: string;

  /**
   * SharedAccessAuthorizationRule properties.
   *
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#properties
   */
  readonly properties: SharedAccessAuthorizationRuleProperties;

  /**
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#type
   */
  readonly type: NamespacesAuthorizationRulesChildResourceType;

}

/**
 * Microsoft.NotificationHubs/namespaces/notificationHubs
 *
 * @schema #/definitions/namespaces_notificationHubs_childResource
 */
export interface NamespacesNotificationHubsChildResource {
  /**
   * @schema #/definitions/namespaces_notificationHubs_childResource#apiVersion
   */
  readonly apiVersion: NamespacesNotificationHubsChildResourceApiVersion;

  /**
   * Resource location
   *
   * @schema #/definitions/namespaces_notificationHubs_childResource#location
   */
  readonly location?: string;

  /**
   * The notification hub name.
   *
   * @schema #/definitions/namespaces_notificationHubs_childResource#name
   */
  readonly name: string;

  /**
   * NotificationHub properties.
   *
   * @schema #/definitions/namespaces_notificationHubs_childResource#properties
   */
  readonly properties: NotificationHubProperties;

  /**
   * The Sku description for a namespace
   *
   * @schema #/definitions/namespaces_notificationHubs_childResource#sku
   */
  readonly sku?: Sku;

  /**
   * Resource tags
   *
   * @schema #/definitions/namespaces_notificationHubs_childResource#tags
   */
  readonly tags?: NamespacesNotificationHubsChildResourceTags;

  /**
   * @schema #/definitions/namespaces_notificationHubs_childResource#type
   */
  readonly type: NamespacesNotificationHubsChildResourceType;

}

export enum SkuName {
  FREE = 'Free',
  BASIC = 'Basic',
  STANDARD = 'Standard',
}

export enum SharedAccessAuthorizationRulePropertiesRights {
  MANAGE = 'Manage',
  SEND = 'Send',
  LISTEN = 'Listen',
}

/**
 * Description of a NotificationHub AdmCredential.
 *
 * @schema #/definitions/AdmCredential
 */
export interface AdmCredential {
  /**
   * Description of a NotificationHub AdmCredential.
   *
   * @schema #/definitions/AdmCredential#properties
   */
  readonly properties?: AdmCredentialProperties;

}

/**
 * Description of a NotificationHub ApnsCredential.
 *
 * @schema #/definitions/ApnsCredential
 */
export interface ApnsCredential {
  /**
   * Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication Modes. The mode is determined based on the properties passed in.
   *
   * @schema #/definitions/ApnsCredential#properties
   */
  readonly properties?: ApnsCredentialProperties;

}

/**
 * Description of a NotificationHub BaiduCredential.
 *
 * @schema #/definitions/BaiduCredential
 */
export interface BaiduCredential {
  /**
   * Description of a NotificationHub BaiduCredential.
   *
   * @schema #/definitions/BaiduCredential#properties
   */
  readonly properties?: BaiduCredentialProperties;

}

/**
 * Description of a NotificationHub GcmCredential.
 *
 * @schema #/definitions/GcmCredential
 */
export interface GcmCredential {
  /**
   * Description of a NotificationHub GcmCredential.
   *
   * @schema #/definitions/GcmCredential#properties
   */
  readonly properties?: GcmCredentialProperties;

}

/**
 * Description of a NotificationHub MpnsCredential.
 *
 * @schema #/definitions/MpnsCredential
 */
export interface MpnsCredential {
  /**
   * Description of a NotificationHub MpnsCredential.
   *
   * @schema #/definitions/MpnsCredential#properties
   */
  readonly properties?: MpnsCredentialProperties;

}

/**
 * Description of a NotificationHub WnsCredential.
 *
 * @schema #/definitions/WnsCredential
 */
export interface WnsCredential {
  /**
   * Description of a NotificationHub WnsCredential.
   *
   * @schema #/definitions/WnsCredential#properties
   */
  readonly properties?: WnsCredentialProperties;

}

export enum NamespacesNotificationHubsAuthorizationRulesChildResourceApiVersion {
  "NamespacesNotificationHubsAuthorizationRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesNotificationHubsAuthorizationRulesChildResourceType {
  AUTHORIZATION_RULES = 'AuthorizationRules',
}

export enum NamespacesAuthorizationRulesChildResourceApiVersion {
  "NamespacesAuthorizationRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesAuthorizationRulesChildResourceType {
  AUTHORIZATION_RULES = 'AuthorizationRules',
}

export enum NamespacesNotificationHubsChildResourceApiVersion {
  "NamespacesNotificationHubsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * @schema #/definitions/namespacesNotificationHubsChildResourceTags
 */
export interface NamespacesNotificationHubsChildResourceTags {
}

export enum NamespacesNotificationHubsChildResourceType {
  NOTIFICATION_HUBS = 'notificationHubs',
}

/**
 * Description of a NotificationHub AdmCredential.
 *
 * @schema #/definitions/AdmCredentialProperties
 */
export interface AdmCredentialProperties {
  /**
   * The URL of the authorization token.
   *
   * @schema #/definitions/AdmCredentialProperties#authTokenUrl
   */
  readonly authTokenUrl?: string;

  /**
   * The client identifier.
   *
   * @schema #/definitions/AdmCredentialProperties#clientId
   */
  readonly clientId?: string;

  /**
   * The credential secret access key.
   *
   * @schema #/definitions/AdmCredentialProperties#clientSecret
   */
  readonly clientSecret?: string;

}

/**
 * Description of a NotificationHub ApnsCredential. Note that there is no explicit switch between Certificate and Token Authentication Modes. The mode is determined based on the properties passed in.
 *
 * @schema #/definitions/ApnsCredentialProperties
 */
export interface ApnsCredentialProperties {
  /**
   * The APNS certificate. Specify if using Certificate Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#apnsCertificate
   */
  readonly apnsCertificate?: string;

  /**
   * The issuer (iss) registered claim key. The value is a 10-character TeamId, obtained from your developer account. Specify if using Token Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#appId
   */
  readonly appId?: string;

  /**
   * The name of the application or BundleId. Specify if using Token Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#appName
   */
  readonly appName?: string;

  /**
   * The APNS certificate password if it exists.
   *
   * @schema #/definitions/ApnsCredentialProperties#certificateKey
   */
  readonly certificateKey?: string;

  /**
   * The APNS endpoint of this credential. If using Certificate Authentication Mode and Sandbox specify 'gateway.sandbox.push.apple.com'. If using Certificate Authentication Mode and Production specify 'gateway.push.apple.com'. If using Token Authentication Mode and Sandbox specify 'https://api.development.push.apple.com:443/3/device'. If using Token Authentication Mode and Production specify 'https://api.push.apple.com:443/3/device'.
   *
   * @schema #/definitions/ApnsCredentialProperties#endpoint
   */
  readonly endpoint?: string;

  /**
   * A 10-character key identifier (kid) key, obtained from your developer account. Specify if using Token Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#keyId
   */
  readonly keyId?: string;

  /**
   * The APNS certificate thumbprint. Specify if using Certificate Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#thumbprint
   */
  readonly thumbprint?: string;

  /**
   * Provider Authentication Token, obtained through your developer account. Specify if using Token Authentication Mode.
   *
   * @schema #/definitions/ApnsCredentialProperties#token
   */
  readonly token?: string;

}

/**
 * Description of a NotificationHub BaiduCredential.
 *
 * @schema #/definitions/BaiduCredentialProperties
 */
export interface BaiduCredentialProperties {
  /**
   * Baidu Api Key.
   *
   * @schema #/definitions/BaiduCredentialProperties#baiduApiKey
   */
  readonly baiduApiKey?: string;

  /**
   * Baidu Endpoint.
   *
   * @schema #/definitions/BaiduCredentialProperties#baiduEndPoint
   */
  readonly baiduEndPoint?: string;

  /**
   * Baidu Secret Key
   *
   * @schema #/definitions/BaiduCredentialProperties#baiduSecretKey
   */
  readonly baiduSecretKey?: string;

}

/**
 * Description of a NotificationHub GcmCredential.
 *
 * @schema #/definitions/GcmCredentialProperties
 */
export interface GcmCredentialProperties {
  /**
   * The FCM legacy endpoint. Default value is 'https://fcm.googleapis.com/fcm/send'
   *
   * @schema #/definitions/GcmCredentialProperties#gcmEndpoint
   */
  readonly gcmEndpoint?: string;

  /**
   * The Google API key.
   *
   * @schema #/definitions/GcmCredentialProperties#googleApiKey
   */
  readonly googleApiKey?: string;

}

/**
 * Description of a NotificationHub MpnsCredential.
 *
 * @schema #/definitions/MpnsCredentialProperties
 */
export interface MpnsCredentialProperties {
  /**
   * The certificate key for this credential.
   *
   * @schema #/definitions/MpnsCredentialProperties#certificateKey
   */
  readonly certificateKey?: string;

  /**
   * The MPNS certificate.
   *
   * @schema #/definitions/MpnsCredentialProperties#mpnsCertificate
   */
  readonly mpnsCertificate?: string;

  /**
   * The MPNS certificate Thumbprint
   *
   * @schema #/definitions/MpnsCredentialProperties#thumbprint
   */
  readonly thumbprint?: string;

}

/**
 * Description of a NotificationHub WnsCredential.
 *
 * @schema #/definitions/WnsCredentialProperties
 */
export interface WnsCredentialProperties {
  /**
   * The package ID for this credential.
   *
   * @schema #/definitions/WnsCredentialProperties#packageSid
   */
  readonly packageSid?: string;

  /**
   * The secret key.
   *
   * @schema #/definitions/WnsCredentialProperties#secretKey
   */
  readonly secretKey?: string;

  /**
   * The Windows Live endpoint.
   *
   * @schema #/definitions/WnsCredentialProperties#windowsLiveEndpoint
   */
  readonly windowsLiveEndpoint?: string;

}

