// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Resources/templateSpecs
 *
 * @schema Microsoft.Resources.templateSpecs
 */
export class TemplateSpecs extends ArmResource {
  /**
   * Defines a "Microsoft.Resources.templateSpecs" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: TemplateSpecsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'templateSpecs',
    });
  }
}

/**
 * Microsoft.Resources/templateSpecs/versions
 *
 * @schema Microsoft.Resources.templateSpecs_versions
 */
export class TemplateSpecsVersions extends ArmResource {
  /**
   * Defines a "Microsoft.Resources.templateSpecs_versions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: TemplateSpecsVersionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'templateSpecs_versions',
    });
  }
}

/**
 * Microsoft.Resources/templateSpecs
 *
 * @schema Microsoft.Resources.templateSpecs
 */
export interface TemplateSpecsOptions {
  /**
   * @schema Microsoft.Resources.templateSpecs#apiVersion
   */
  readonly apiVersion?: MicrosoftResourcesTemplateSpecsApiVersion;

  /**
   * The location of the Template Spec. It cannot be changed after Template Spec creation. It must be one of the supported Azure locations.
   *
   * @schema Microsoft.Resources.templateSpecs#location
   */
  readonly location: string;

  /**
   * Name of the Template Spec.
   *
   * @schema Microsoft.Resources.templateSpecs#name
   */
  readonly name: MicrosoftResourcesTemplateSpecsNamePattern;

  /**
   * Template Spec properties.
   *
   * @schema Microsoft.Resources.templateSpecs#properties
   */
  readonly properties: TemplateSpecProperties;

  /**
   * @schema Microsoft.Resources.templateSpecs#resources
   */
  readonly resources?: TemplateSpecsVersionsChildResource[];

  /**
   * Resource tags.
   *
   * @schema Microsoft.Resources.templateSpecs#tags
   */
  readonly tags?: MicrosoftResourcesTemplateSpecsTags;

  /**
   * @schema Microsoft.Resources.templateSpecs#type
   */
  readonly type: MicrosoftResourcesTemplateSpecsType;

}

/**
 * Microsoft.Resources/templateSpecs/versions
 *
 * @schema Microsoft.Resources.templateSpecs_versions
 */
export interface TemplateSpecsVersionsOptions {
  /**
   * @schema Microsoft.Resources.templateSpecs_versions#apiVersion
   */
  readonly apiVersion?: MicrosoftResourcesTemplateSpecsVersionsApiVersion;

  /**
   * The location of the Template Spec Version. It must match the location of the parent Template Spec.
   *
   * @schema Microsoft.Resources.templateSpecs_versions#location
   */
  readonly location: string;

  /**
   * The version of the Template Spec.
   *
   * @schema Microsoft.Resources.templateSpecs_versions#name
   */
  readonly name: MicrosoftResourcesTemplateSpecsVersionsNamePattern;

  /**
   * Template Spec Version properties.
   *
   * @schema Microsoft.Resources.templateSpecs_versions#properties
   */
  readonly properties: TemplateSpecVersionProperties;

  /**
   * Resource tags.
   *
   * @schema Microsoft.Resources.templateSpecs_versions#tags
   */
  readonly tags?: MicrosoftResourcesTemplateSpecsVersionsTags;

  /**
   * @schema Microsoft.Resources.templateSpecs_versions#type
   */
  readonly type: MicrosoftResourcesTemplateSpecsVersionsType;

}

export enum MicrosoftResourcesTemplateSpecsApiVersion {
  "MicrosoftResourcesTemplateSpecsApiVersion_2021_05_01" = '2021-05-01',
}

/**
 * @schema MicrosoftResourcesTemplateSpecsName
 */
export class MicrosoftResourcesTemplateSpecsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Template Spec properties.
 *
 * @schema #/definitions/TemplateSpecProperties
 */
export interface TemplateSpecProperties {
  /**
   * Template Spec description.
   *
   * @schema #/definitions/TemplateSpecProperties#description
   */
  readonly description?: string;

  /**
   * Template Spec display name.
   *
   * @schema #/definitions/TemplateSpecProperties#displayName
   */
  readonly displayName?: string;

  /**
   * The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.
   *
   * @schema #/definitions/TemplateSpecProperties#metadata
   */
  readonly metadata?: TemplateSpecPropertiesMetadata;

}

/**
 * Microsoft.Resources/templateSpecs/versions
 *
 * @schema #/definitions/templateSpecs_versions_childResource
 */
export interface TemplateSpecsVersionsChildResource {
  /**
   * @schema #/definitions/templateSpecs_versions_childResource#apiVersion
   */
  readonly apiVersion: TemplateSpecsVersionsChildResourceApiVersion;

  /**
   * The location of the Template Spec Version. It must match the location of the parent Template Spec.
   *
   * @schema #/definitions/templateSpecs_versions_childResource#location
   */
  readonly location: string;

  /**
   * The version of the Template Spec.
   *
   * @schema #/definitions/templateSpecs_versions_childResource#name
   */
  readonly name: TemplateSpecsVersionsChildResourceNamePattern;

  /**
   * Template Spec Version properties.
   *
   * @schema #/definitions/templateSpecs_versions_childResource#properties
   */
  readonly properties: TemplateSpecVersionProperties;

  /**
   * Resource tags.
   *
   * @schema #/definitions/templateSpecs_versions_childResource#tags
   */
  readonly tags?: TemplateSpecsVersionsChildResourceTags;

  /**
   * @schema #/definitions/templateSpecs_versions_childResource#type
   */
  readonly type: TemplateSpecsVersionsChildResourceType;

}

/**
 * @schema MicrosoftResourcesTemplateSpecsTags
 */
export interface MicrosoftResourcesTemplateSpecsTags {
}

export enum MicrosoftResourcesTemplateSpecsType {
  "MicrosoftResourcesTemplateSpecsType_MICROSOFT_RESOURCES_TEMPLATE_SPECS" = 'Microsoft.Resources/templateSpecs',
}

export enum MicrosoftResourcesTemplateSpecsVersionsApiVersion {
  "MicrosoftResourcesTemplateSpecsVersionsApiVersion_2021_05_01" = '2021-05-01',
}

/**
 * @schema MicrosoftResourcesTemplateSpecsVersionsName
 */
export class MicrosoftResourcesTemplateSpecsVersionsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Template Spec Version properties.
 *
 * @schema #/definitions/TemplateSpecVersionProperties
 */
export interface TemplateSpecVersionProperties {
  /**
   * Template Spec version description.
   *
   * @schema #/definitions/TemplateSpecVersionProperties#description
   */
  readonly description?: string;

  /**
   * An array of linked template artifacts.
   *
   * @schema #/definitions/TemplateSpecVersionProperties#linkedTemplates
   */
  readonly linkedTemplates?: LinkedTemplateArtifact[];

  /**
   * The main Azure Resource Manager template content.
   *
   * @schema #/definitions/TemplateSpecVersionProperties#mainTemplate
   */
  readonly mainTemplate?: TemplateSpecVersionPropertiesMainTemplate;

  /**
   * The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.
   *
   * @schema #/definitions/TemplateSpecVersionProperties#metadata
   */
  readonly metadata?: TemplateSpecVersionPropertiesMetadata;

  /**
   * The Azure Resource Manager template UI definition content.
   *
   * @schema #/definitions/TemplateSpecVersionProperties#uiFormDefinition
   */
  readonly uiFormDefinition?: TemplateSpecVersionPropertiesUiFormDefinition;

}

/**
 * @schema MicrosoftResourcesTemplateSpecsVersionsTags
 */
export interface MicrosoftResourcesTemplateSpecsVersionsTags {
}

export enum MicrosoftResourcesTemplateSpecsVersionsType {
  "MicrosoftResourcesTemplateSpecsVersionsType_MICROSOFT_RESOURCES_TEMPLATE_SPECS_VERSIONS" = 'Microsoft.Resources/templateSpecs/versions',
}

/**
 * The Template Spec metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.
 *
 * @schema #/definitions/templateSpecPropertiesMetadata
 */
export interface TemplateSpecPropertiesMetadata {
}

export enum TemplateSpecsVersionsChildResourceApiVersion {
  "TemplateSpecsVersionsChildResourceApiVersion_2021_05_01" = '2021-05-01',
}

/**
 * @schema #/definitions/templateSpecsVersionsChildResourceName
 */
export class TemplateSpecsVersionsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * @schema #/definitions/templateSpecsVersionsChildResourceTags
 */
export interface TemplateSpecsVersionsChildResourceTags {
}

export enum TemplateSpecsVersionsChildResourceType {
  VERSIONS = 'versions',
}

/**
 * Represents a Template Spec artifact containing an embedded Azure Resource Manager template for use as a linked template.
 *
 * @schema #/definitions/LinkedTemplateArtifact
 */
export interface LinkedTemplateArtifact {
  /**
   * A filesystem safe relative path of the artifact.
   *
   * @schema #/definitions/LinkedTemplateArtifact#path
   */
  readonly path: string;

  /**
   * The Azure Resource Manager template.
   *
   * @schema #/definitions/LinkedTemplateArtifact#template
   */
  readonly template: LinkedTemplateArtifactTemplate;

}

/**
 * The main Azure Resource Manager template content.
 *
 * @schema #/definitions/templateSpecVersionPropertiesMainTemplate
 */
export interface TemplateSpecVersionPropertiesMainTemplate {
}

/**
 * The version metadata. Metadata is an open-ended object and is typically a collection of key-value pairs.
 *
 * @schema #/definitions/templateSpecVersionPropertiesMetadata
 */
export interface TemplateSpecVersionPropertiesMetadata {
}

/**
 * The Azure Resource Manager template UI definition content.
 *
 * @schema #/definitions/templateSpecVersionPropertiesUiFormDefinition
 */
export interface TemplateSpecVersionPropertiesUiFormDefinition {
}

/**
 * The Azure Resource Manager template.
 *
 * @schema #/definitions/linkedTemplateArtifactTemplate
 */
export interface LinkedTemplateArtifactTemplate {
}

