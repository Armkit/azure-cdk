// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.DataLakeStore/accounts
 *
 * @schema Microsoft.DataLakeStore.accounts
 */
export class Accounts extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeStore.accounts" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts',
    });
  }
}

/**
 * Microsoft.DataLakeStore/accounts/firewallRules
 *
 * @schema Microsoft.DataLakeStore.accounts_firewallRules
 */
export class AccountsFirewallRules extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeStore.accounts_firewallRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsFirewallRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_firewallRules',
    });
  }
}

/**
 * Microsoft.DataLakeStore/accounts/trustedIdProviders
 *
 * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders
 */
export class AccountsTrustedIdProviders extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeStore.accounts_trustedIdProviders" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsTrustedIdProvidersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_trustedIdProviders',
    });
  }
}

/**
 * Microsoft.DataLakeStore/accounts/virtualNetworkRules
 *
 * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules
 */
export class AccountsVirtualNetworkRules extends ArmResource {
  /**
   * Defines a "Microsoft.DataLakeStore.accounts_virtualNetworkRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: AccountsVirtualNetworkRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'accounts_virtualNetworkRules',
    });
  }
}

/**
 * Microsoft.DataLakeStore/accounts
 *
 * @schema Microsoft.DataLakeStore.accounts
 */
export interface AccountsOptions {
  /**
   * @schema Microsoft.DataLakeStore.accounts#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeStoreAccountsApiVersion;

  /**
   * The encryption identity properties.
   *
   * @schema Microsoft.DataLakeStore.accounts#identity
   */
  readonly identity?: EncryptionIdentity;

  /**
   * The resource location.
   *
   * @schema Microsoft.DataLakeStore.accounts#location
   */
  readonly location: string;

  /**
   * The name of the Data Lake Store account.
   *
   * @schema Microsoft.DataLakeStore.accounts#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.DataLakeStore.accounts#properties
   */
  readonly properties: CreateDataLakeStoreAccountProperties;

  /**
   * @schema Microsoft.DataLakeStore.accounts#resources
   */
  readonly resources?: MicrosoftDataLakeStoreAccountsResources[];

  /**
   * The resource tags.
   *
   * @schema Microsoft.DataLakeStore.accounts#tags
   */
  readonly tags?: MicrosoftDataLakeStoreAccountsTags;

  /**
   * @schema Microsoft.DataLakeStore.accounts#type
   */
  readonly type: MicrosoftDataLakeStoreAccountsType;

}

/**
 * Microsoft.DataLakeStore/accounts/firewallRules
 *
 * @schema Microsoft.DataLakeStore.accounts_firewallRules
 */
export interface AccountsFirewallRulesOptions {
  /**
   * @schema Microsoft.DataLakeStore.accounts_firewallRules#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeStoreAccountsFirewallRulesApiVersion;

  /**
   * The name of the firewall rule to create or update.
   *
   * @schema Microsoft.DataLakeStore.accounts_firewallRules#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema Microsoft.DataLakeStore.accounts_firewallRules#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

  /**
   * @schema Microsoft.DataLakeStore.accounts_firewallRules#type
   */
  readonly type: MicrosoftDataLakeStoreAccountsFirewallRulesType;

}

/**
 * Microsoft.DataLakeStore/accounts/trustedIdProviders
 *
 * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders
 */
export interface AccountsTrustedIdProvidersOptions {
  /**
   * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeStoreAccountsTrustedIdProvidersApiVersion;

  /**
   * The name of the trusted identity provider. This is used for differentiation of providers in the account.
   *
   * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders#name
   */
  readonly name: string;

  /**
   * The trusted identity provider properties to use when creating a new trusted identity provider.
   *
   * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders#properties
   */
  readonly properties: CreateOrUpdateTrustedIdProviderProperties;

  /**
   * @schema Microsoft.DataLakeStore.accounts_trustedIdProviders#type
   */
  readonly type: MicrosoftDataLakeStoreAccountsTrustedIdProvidersType;

}

/**
 * Microsoft.DataLakeStore/accounts/virtualNetworkRules
 *
 * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules
 */
export interface AccountsVirtualNetworkRulesOptions {
  /**
   * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules#apiVersion
   */
  readonly apiVersion?: MicrosoftDataLakeStoreAccountsVirtualNetworkRulesApiVersion;

  /**
   * The name of the virtual network rule to create or update.
   *
   * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules#name
   */
  readonly name: string;

  /**
   * The virtual network rule properties to use when creating a new virtual network rule.
   *
   * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules#properties
   */
  readonly properties: CreateOrUpdateVirtualNetworkRuleProperties;

  /**
   * @schema Microsoft.DataLakeStore.accounts_virtualNetworkRules#type
   */
  readonly type: MicrosoftDataLakeStoreAccountsVirtualNetworkRulesType;

}

export enum MicrosoftDataLakeStoreAccountsApiVersion {
  "MicrosoftDataLakeStoreAccountsApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The encryption identity properties.
 *
 * @schema #/definitions/EncryptionIdentity
 */
export interface EncryptionIdentity {
  /**
   * The type of encryption being used. Currently the only supported type is 'SystemAssigned'.
   *
   * @schema #/definitions/EncryptionIdentity#type
   */
  readonly type: EncryptionIdentityType;

}

/**
 * @schema #/definitions/CreateDataLakeStoreAccountProperties
 */
export interface CreateDataLakeStoreAccountProperties {
  /**
   * The default owner group for all new folders and files created in the Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#defaultGroup
   */
  readonly defaultGroup?: string;

  /**
   * The encryption configuration for the account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#encryptionConfig
   */
  readonly encryptionConfig?: EncryptionConfig;

  /**
   * The current state of encryption for this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#encryptionState
   */
  readonly encryptionState?: CreateDataLakeStoreAccountPropertiesEncryptionState;

  /**
   * The current state of allowing or disallowing IPs originating within Azure through the firewall. If the firewall is disabled, this is not enforced.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#firewallAllowAzureIps
   */
  readonly firewallAllowAzureIps?: CreateDataLakeStoreAccountPropertiesFirewallAllowAzureIps;

  /**
   * The list of firewall rules associated with this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#firewallRules
   */
  readonly firewallRules?: CreateFirewallRuleWithAccountParameters[];

  /**
   * The current state of the IP address firewall for this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#firewallState
   */
  readonly firewallState?: CreateDataLakeStoreAccountPropertiesFirewallState;

  /**
   * The commitment tier to use for next month.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#newTier
   */
  readonly newTier?: CreateDataLakeStoreAccountPropertiesNewTier;

  /**
   * The list of trusted identity providers associated with this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#trustedIdProviders
   */
  readonly trustedIdProviders?: CreateTrustedIdProviderWithAccountParameters[];

  /**
   * The current state of the trusted identity provider feature for this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#trustedIdProviderState
   */
  readonly trustedIdProviderState?: CreateDataLakeStoreAccountPropertiesTrustedIdProviderState;

  /**
   * The list of virtual network rules associated with this Data Lake Store account.
   *
   * @schema #/definitions/CreateDataLakeStoreAccountProperties#virtualNetworkRules
   */
  readonly virtualNetworkRules?: CreateVirtualNetworkRuleWithAccountParameters[];

}

/**
 * @schema MicrosoftDataLakeStoreAccountsResources
 */
export class MicrosoftDataLakeStoreAccountsResources {
  public static fromAccountsFirewallRulesChildResource(value: AccountsFirewallRulesChildResource): MicrosoftDataLakeStoreAccountsResources {
    return new MicrosoftDataLakeStoreAccountsResources(value);
  }
  public static fromAccountsVirtualNetworkRulesChildResource(value: AccountsVirtualNetworkRulesChildResource): MicrosoftDataLakeStoreAccountsResources {
    return new MicrosoftDataLakeStoreAccountsResources(value);
  }
  public static fromAccountsTrustedIdProvidersChildResource(value: AccountsTrustedIdProvidersChildResource): MicrosoftDataLakeStoreAccountsResources {
    return new MicrosoftDataLakeStoreAccountsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftDataLakeStoreAccountsTags
 */
export interface MicrosoftDataLakeStoreAccountsTags {
}

export enum MicrosoftDataLakeStoreAccountsType {
  "MicrosoftDataLakeStoreAccountsType_MICROSOFT_DATA_LAKE_STORE_ACCOUNTS" = 'Microsoft.DataLakeStore/accounts',
}

export enum MicrosoftDataLakeStoreAccountsFirewallRulesApiVersion {
  "MicrosoftDataLakeStoreAccountsFirewallRulesApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The firewall rule properties to use when creating a new firewall rule.
 *
 * @schema #/definitions/CreateOrUpdateFirewallRuleProperties
 */
export interface CreateOrUpdateFirewallRuleProperties {
  /**
   * The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   *
   * @schema #/definitions/CreateOrUpdateFirewallRuleProperties#endIpAddress
   */
  readonly endIpAddress: string;

  /**
   * The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
   *
   * @schema #/definitions/CreateOrUpdateFirewallRuleProperties#startIpAddress
   */
  readonly startIpAddress: string;

}

export enum MicrosoftDataLakeStoreAccountsFirewallRulesType {
  "MicrosoftDataLakeStoreAccountsFirewallRulesType_MICROSOFT_DATA_LAKE_STORE_ACCOUNTS_FIREWALL_RULES" = 'Microsoft.DataLakeStore/accounts/firewallRules',
}

export enum MicrosoftDataLakeStoreAccountsTrustedIdProvidersApiVersion {
  "MicrosoftDataLakeStoreAccountsTrustedIdProvidersApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The trusted identity provider properties to use when creating a new trusted identity provider.
 *
 * @schema #/definitions/CreateOrUpdateTrustedIdProviderProperties
 */
export interface CreateOrUpdateTrustedIdProviderProperties {
  /**
   * The URL of this trusted identity provider.
   *
   * @schema #/definitions/CreateOrUpdateTrustedIdProviderProperties#idProvider
   */
  readonly idProvider: string;

}

export enum MicrosoftDataLakeStoreAccountsTrustedIdProvidersType {
  "MicrosoftDataLakeStoreAccountsTrustedIdProvidersType_MICROSOFT_DATA_LAKE_STORE_ACCOUNTS_TRUSTED_ID_PROVIDERS" = 'Microsoft.DataLakeStore/accounts/trustedIdProviders',
}

export enum MicrosoftDataLakeStoreAccountsVirtualNetworkRulesApiVersion {
  "MicrosoftDataLakeStoreAccountsVirtualNetworkRulesApiVersion_2016_11_01" = '2016-11-01',
}

/**
 * The virtual network rule properties to use when creating a new virtual network rule.
 *
 * @schema #/definitions/CreateOrUpdateVirtualNetworkRuleProperties
 */
export interface CreateOrUpdateVirtualNetworkRuleProperties {
  /**
   * The resource identifier for the subnet.
   *
   * @schema #/definitions/CreateOrUpdateVirtualNetworkRuleProperties#subnetId
   */
  readonly subnetId: string;

}

export enum MicrosoftDataLakeStoreAccountsVirtualNetworkRulesType {
  "MicrosoftDataLakeStoreAccountsVirtualNetworkRulesType_MICROSOFT_DATA_LAKE_STORE_ACCOUNTS_VIRTUAL_NETWORK_RULES" = 'Microsoft.DataLakeStore/accounts/virtualNetworkRules',
}

export enum EncryptionIdentityType {
  SYSTEM_ASSIGNED = 'SystemAssigned',
}

/**
 * The encryption configuration for the account.
 *
 * @schema #/definitions/EncryptionConfig
 */
export interface EncryptionConfig {
  /**
   * Metadata information used by account encryption.
   *
   * @schema #/definitions/EncryptionConfig#keyVaultMetaInfo
   */
  readonly keyVaultMetaInfo?: KeyVaultMetaInfo;

  /**
   * The type of encryption configuration being used. Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
   *
   * @schema #/definitions/EncryptionConfig#type
   */
  readonly type: EncryptionConfigType;

}

export enum CreateDataLakeStoreAccountPropertiesEncryptionState {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum CreateDataLakeStoreAccountPropertiesFirewallAllowAzureIps {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The parameters used to create a new firewall rule while creating a new Data Lake Store account.
 *
 * @schema #/definitions/CreateFirewallRuleWithAccountParameters
 */
export interface CreateFirewallRuleWithAccountParameters {
  /**
   * The unique name of the firewall rule to create.
   *
   * @schema #/definitions/CreateFirewallRuleWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema #/definitions/CreateFirewallRuleWithAccountParameters#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

}

export enum CreateDataLakeStoreAccountPropertiesFirewallState {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum CreateDataLakeStoreAccountPropertiesNewTier {
  CONSUMPTION = 'Consumption',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_1_TB" = 'Commitment_1TB',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_10_TB" = 'Commitment_10TB',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_100_TB" = 'Commitment_100TB',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_500_TB" = 'Commitment_500TB',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_1_PB" = 'Commitment_1PB',
  "CreateDataLakeStoreAccountPropertiesNewTier_COMMITMENT_5_PB" = 'Commitment_5PB',
}

/**
 * The parameters used to create a new trusted identity provider while creating a new Data Lake Store account.
 *
 * @schema #/definitions/CreateTrustedIdProviderWithAccountParameters
 */
export interface CreateTrustedIdProviderWithAccountParameters {
  /**
   * The unique name of the trusted identity provider to create.
   *
   * @schema #/definitions/CreateTrustedIdProviderWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The trusted identity provider properties to use when creating a new trusted identity provider.
   *
   * @schema #/definitions/CreateTrustedIdProviderWithAccountParameters#properties
   */
  readonly properties: CreateOrUpdateTrustedIdProviderProperties;

}

export enum CreateDataLakeStoreAccountPropertiesTrustedIdProviderState {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The parameters used to create a new virtual network rule while creating a new Data Lake Store account.
 *
 * @schema #/definitions/CreateVirtualNetworkRuleWithAccountParameters
 */
export interface CreateVirtualNetworkRuleWithAccountParameters {
  /**
   * The unique name of the virtual network rule to create.
   *
   * @schema #/definitions/CreateVirtualNetworkRuleWithAccountParameters#name
   */
  readonly name: string;

  /**
   * The virtual network rule properties to use when creating a new virtual network rule.
   *
   * @schema #/definitions/CreateVirtualNetworkRuleWithAccountParameters#properties
   */
  readonly properties: CreateOrUpdateVirtualNetworkRuleProperties;

}

/**
 * Microsoft.DataLakeStore/accounts/firewallRules
 *
 * @schema #/definitions/accounts_firewallRules_childResource
 */
export interface AccountsFirewallRulesChildResource {
  /**
   * @schema #/definitions/accounts_firewallRules_childResource#apiVersion
   */
  readonly apiVersion: AccountsFirewallRulesChildResourceApiVersion;

  /**
   * The name of the firewall rule to create or update.
   *
   * @schema #/definitions/accounts_firewallRules_childResource#name
   */
  readonly name: string;

  /**
   * The firewall rule properties to use when creating a new firewall rule.
   *
   * @schema #/definitions/accounts_firewallRules_childResource#properties
   */
  readonly properties: CreateOrUpdateFirewallRuleProperties;

  /**
   * @schema #/definitions/accounts_firewallRules_childResource#type
   */
  readonly type: AccountsFirewallRulesChildResourceType;

}

/**
 * Microsoft.DataLakeStore/accounts/virtualNetworkRules
 *
 * @schema #/definitions/accounts_virtualNetworkRules_childResource
 */
export interface AccountsVirtualNetworkRulesChildResource {
  /**
   * @schema #/definitions/accounts_virtualNetworkRules_childResource#apiVersion
   */
  readonly apiVersion: AccountsVirtualNetworkRulesChildResourceApiVersion;

  /**
   * The name of the virtual network rule to create or update.
   *
   * @schema #/definitions/accounts_virtualNetworkRules_childResource#name
   */
  readonly name: string;

  /**
   * The virtual network rule properties to use when creating a new virtual network rule.
   *
   * @schema #/definitions/accounts_virtualNetworkRules_childResource#properties
   */
  readonly properties: CreateOrUpdateVirtualNetworkRuleProperties;

  /**
   * @schema #/definitions/accounts_virtualNetworkRules_childResource#type
   */
  readonly type: AccountsVirtualNetworkRulesChildResourceType;

}

/**
 * Microsoft.DataLakeStore/accounts/trustedIdProviders
 *
 * @schema #/definitions/accounts_trustedIdProviders_childResource
 */
export interface AccountsTrustedIdProvidersChildResource {
  /**
   * @schema #/definitions/accounts_trustedIdProviders_childResource#apiVersion
   */
  readonly apiVersion: AccountsTrustedIdProvidersChildResourceApiVersion;

  /**
   * The name of the trusted identity provider. This is used for differentiation of providers in the account.
   *
   * @schema #/definitions/accounts_trustedIdProviders_childResource#name
   */
  readonly name: string;

  /**
   * The trusted identity provider properties to use when creating a new trusted identity provider.
   *
   * @schema #/definitions/accounts_trustedIdProviders_childResource#properties
   */
  readonly properties: CreateOrUpdateTrustedIdProviderProperties;

  /**
   * @schema #/definitions/accounts_trustedIdProviders_childResource#type
   */
  readonly type: AccountsTrustedIdProvidersChildResourceType;

}

/**
 * Metadata information used by account encryption.
 *
 * @schema #/definitions/KeyVaultMetaInfo
 */
export interface KeyVaultMetaInfo {
  /**
   * The name of the user managed encryption key.
   *
   * @schema #/definitions/KeyVaultMetaInfo#encryptionKeyName
   */
  readonly encryptionKeyName: string;

  /**
   * The version of the user managed encryption key.
   *
   * @schema #/definitions/KeyVaultMetaInfo#encryptionKeyVersion
   */
  readonly encryptionKeyVersion: string;

  /**
   * The resource identifier for the user managed Key Vault being used to encrypt.
   *
   * @schema #/definitions/KeyVaultMetaInfo#keyVaultResourceId
   */
  readonly keyVaultResourceId: string;

}

export enum EncryptionConfigType {
  USER_MANAGED = 'UserManaged',
  SERVICE_MANAGED = 'ServiceManaged',
}

export enum AccountsFirewallRulesChildResourceApiVersion {
  "AccountsFirewallRulesChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsFirewallRulesChildResourceType {
  FIREWALL_RULES = 'firewallRules',
}

export enum AccountsVirtualNetworkRulesChildResourceApiVersion {
  "AccountsVirtualNetworkRulesChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsVirtualNetworkRulesChildResourceType {
  VIRTUAL_NETWORK_RULES = 'virtualNetworkRules',
}

export enum AccountsTrustedIdProvidersChildResourceApiVersion {
  "AccountsTrustedIdProvidersChildResourceApiVersion_2016_11_01" = '2016-11-01',
}

export enum AccountsTrustedIdProvidersChildResourceType {
  TRUSTED_ID_PROVIDERS = 'trustedIdProviders',
}

