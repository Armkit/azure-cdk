      // generated by armkit
      import { ArmResource } from '@yetics/armkit-core';
      import { Construct } from 'constructs';

      /**
       * Microsoft.DataMigration/services
       *
       * @schema Microsoft.DataMigration.services
       */
      export class Services extends ArmResource {
        /**
         * Defines a "Microsoft.DataMigration.services" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: ServicesOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'services',
          });
        }
      }

      /**
       * Microsoft.DataMigration/services/projects
       *
       * @schema Microsoft.DataMigration.services_projects
       */
      export class ServicesProjects extends ArmResource {
        /**
         * Defines a "Microsoft.DataMigration.services_projects" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: ServicesProjectsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'services_projects',
          });
        }
      }

      /**
       * Microsoft.DataMigration/services/projects/tasks
       *
       * @schema Microsoft.DataMigration.services_projects_tasks
       */
      export class ServicesProjectsTasks extends ArmResource {
        /**
         * Defines a "Microsoft.DataMigration.services_projects_tasks" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: ServicesProjectsTasksOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'services_projects_tasks',
          });
        }
      }

      /**
       * Microsoft.DataMigration/services
       *
       * @schema Microsoft.DataMigration.services
       */
      export interface ServicesOptions {
        /**
         * @schema Microsoft.DataMigration.services#apiVersion
         */
        readonly apiVersion?: MicrosoftDataMigrationServicesApiVersion;

        /**
         * HTTP strong entity tag value. Ignored if submitted
         *
         * @schema Microsoft.DataMigration.services#etag
         */
        readonly etag?: string;

        /**
         * The resource kind. Only 'vm' (the default) is supported.
         *
         * @schema Microsoft.DataMigration.services#kind
         */
        readonly kind?: string;

        /**
         * Resource location.
         *
         * @schema Microsoft.DataMigration.services#location
         */
        readonly location: string;

        /**
         * Name of the service
         *
         * @schema Microsoft.DataMigration.services#name
         */
        readonly name: string;

        /**
         * Properties of the Data Migration service instance
         *
         * @schema Microsoft.DataMigration.services#properties
         */
        readonly properties: DataMigrationServiceProperties;

        /**
         * @schema Microsoft.DataMigration.services#resources
         */
        readonly resources?: ServicesProjectsChildResource[];

        /**
         * An Azure SKU instance
         *
         * @schema Microsoft.DataMigration.services#sku
         */
        readonly sku?: ServiceSku;

        /**
         * Resource tags.
         *
         * @schema Microsoft.DataMigration.services#tags
         */
        readonly tags?: MicrosoftDataMigrationServicesTags;

        /**
         * @schema Microsoft.DataMigration.services#type
         */
        readonly type: MicrosoftDataMigrationServicesType;

      }

      /**
       * Microsoft.DataMigration/services/projects
       *
       * @schema Microsoft.DataMigration.services_projects
       */
      export interface ServicesProjectsOptions {
        /**
         * @schema Microsoft.DataMigration.services_projects#apiVersion
         */
        readonly apiVersion?: MicrosoftDataMigrationServicesProjectsApiVersion;

        /**
         * Resource location.
         *
         * @schema Microsoft.DataMigration.services_projects#location
         */
        readonly location: string;

        /**
         * Name of the project
         *
         * @schema Microsoft.DataMigration.services_projects#name
         */
        readonly name: string;

        /**
         * Project-specific properties
         *
         * @schema Microsoft.DataMigration.services_projects#properties
         */
        readonly properties: ProjectProperties;

        /**
         * @schema Microsoft.DataMigration.services_projects#resources
         */
        readonly resources?: ServicesProjectsTasksChildResource[];

        /**
         * Resource tags.
         *
         * @schema Microsoft.DataMigration.services_projects#tags
         */
        readonly tags?: MicrosoftDataMigrationServicesProjectsTags;

        /**
         * @schema Microsoft.DataMigration.services_projects#type
         */
        readonly type: MicrosoftDataMigrationServicesProjectsType;

      }

      /**
       * Microsoft.DataMigration/services/projects/tasks
       *
       * @schema Microsoft.DataMigration.services_projects_tasks
       */
      export interface ServicesProjectsTasksOptions {
        /**
         * @schema Microsoft.DataMigration.services_projects_tasks#apiVersion
         */
        readonly apiVersion?: MicrosoftDataMigrationServicesProjectsTasksApiVersion;

        /**
         * HTTP strong entity tag value. This is ignored if submitted.
         *
         * @schema Microsoft.DataMigration.services_projects_tasks#etag
         */
        readonly etag?: string;

        /**
         * Name of the Task
         *
         * @schema Microsoft.DataMigration.services_projects_tasks#name
         */
        readonly name: string;

        /**
         * Base class for all types of DMS task properties. If task is not supported by current client, this object is returned.
         *
         * @schema Microsoft.DataMigration.services_projects_tasks#properties
         */
        readonly properties: ProjectTaskProperties;

        /**
         * @schema Microsoft.DataMigration.services_projects_tasks#type
         */
        readonly type: MicrosoftDataMigrationServicesProjectsTasksType;

      }

      export enum MicrosoftDataMigrationServicesApiVersion {
        "MicrosoftDataMigrationServicesApiVersion_2018_04_19" = '2018-04-19',
      }

      /**
       * Properties of the Data Migration service instance
       *
       * @schema #/definitions/DataMigrationServiceProperties
       */
      export interface DataMigrationServiceProperties {
        /**
         * The public key of the service, used to encrypt secrets sent to the service
         *
         * @schema #/definitions/DataMigrationServiceProperties#publicKey
         */
        readonly publicKey?: string;

        /**
         * The ID of the Microsoft.Network/virtualNetworks/subnets resource to which the service should be joined
         *
         * @schema #/definitions/DataMigrationServiceProperties#virtualSubnetId
         */
        readonly virtualSubnetId: string;

      }

      /**
       * Microsoft.DataMigration/services/projects
       *
       * @schema #/definitions/services_projects_childResource
       */
      export interface ServicesProjectsChildResource {
        /**
         * @schema #/definitions/services_projects_childResource#apiVersion
         */
        readonly apiVersion: ServicesProjectsChildResourceApiVersion;

        /**
         * Resource location.
         *
         * @schema #/definitions/services_projects_childResource#location
         */
        readonly location: string;

        /**
         * Name of the project
         *
         * @schema #/definitions/services_projects_childResource#name
         */
        readonly name: string;

        /**
         * Project-specific properties
         *
         * @schema #/definitions/services_projects_childResource#properties
         */
        readonly properties: ProjectProperties;

        /**
         * Resource tags.
         *
         * @schema #/definitions/services_projects_childResource#tags
         */
        readonly tags?: ServicesProjectsChildResourceTags;

        /**
         * @schema #/definitions/services_projects_childResource#type
         */
        readonly type: ServicesProjectsChildResourceType;

      }

      /**
       * An Azure SKU instance
       *
       * @schema #/definitions/ServiceSku
       */
      export interface ServiceSku {
        /**
         * The capacity of the SKU, if it supports scaling
         *
         * @schema #/definitions/ServiceSku#capacity
         */
        readonly capacity?: number;

        /**
         * The SKU family, used when the service has multiple performance classes within a tier, such as 'A', 'D', etc. for virtual machines
         *
         * @schema #/definitions/ServiceSku#family
         */
        readonly family?: string;

        /**
         * The unique name of the SKU, such as 'P3'
         *
         * @schema #/definitions/ServiceSku#name
         */
        readonly name?: string;

        /**
         * The size of the SKU, used when the name alone does not denote a service size or when a SKU has multiple performance classes within a family, e.g. 'A1' for virtual machines
         *
         * @schema #/definitions/ServiceSku#size
         */
        readonly size?: string;

        /**
         * The tier of the SKU, such as 'Free', 'Basic', 'Standard', or 'Premium'
         *
         * @schema #/definitions/ServiceSku#tier
         */
        readonly tier?: string;

      }

      /**
       * @schema MicrosoftDataMigrationServicesTags
       */
      export interface MicrosoftDataMigrationServicesTags {
      }

      export enum MicrosoftDataMigrationServicesType {
        "MicrosoftDataMigrationServicesType_MICROSOFT_DATA_MIGRATION_SERVICES" = 'Microsoft.DataMigration/services',
      }

      export enum MicrosoftDataMigrationServicesProjectsApiVersion {
        "MicrosoftDataMigrationServicesProjectsApiVersion_2018_04_19" = '2018-04-19',
      }

      /**
       * Project-specific properties
       *
       * @schema #/definitions/ProjectProperties
       */
      export interface ProjectProperties {
        /**
         * List of DatabaseInfo
         *
         * @schema #/definitions/ProjectProperties#databasesInfo
         */
        readonly databasesInfo?: DatabaseInfo[];

        /**
         * Defines the connection properties of a server
         *
         * @schema #/definitions/ProjectProperties#sourceConnectionInfo
         */
        readonly sourceConnectionInfo?: ConnectionInfo;

        /**
         * Source platform for the project.
         *
         * @schema #/definitions/ProjectProperties#sourcePlatform
         */
        readonly sourcePlatform: ProjectPropertiesSourcePlatform;

        /**
         * Defines the connection properties of a server
         *
         * @schema #/definitions/ProjectProperties#targetConnectionInfo
         */
        readonly targetConnectionInfo?: ConnectionInfo;

        /**
         * Target platform for the project.
         *
         * @schema #/definitions/ProjectProperties#targetPlatform
         */
        readonly targetPlatform: ProjectPropertiesTargetPlatform;

      }

      /**
       * Microsoft.DataMigration/services/projects/tasks
       *
       * @schema #/definitions/services_projects_tasks_childResource
       */
      export interface ServicesProjectsTasksChildResource {
        /**
         * @schema #/definitions/services_projects_tasks_childResource#apiVersion
         */
        readonly apiVersion: ServicesProjectsTasksChildResourceApiVersion;

        /**
         * HTTP strong entity tag value. This is ignored if submitted.
         *
         * @schema #/definitions/services_projects_tasks_childResource#etag
         */
        readonly etag?: string;

        /**
         * Name of the Task
         *
         * @schema #/definitions/services_projects_tasks_childResource#name
         */
        readonly name: string;

        /**
         * Base class for all types of DMS task properties. If task is not supported by current client, this object is returned.
         *
         * @schema #/definitions/services_projects_tasks_childResource#properties
         */
        readonly properties: ProjectTaskProperties;

        /**
         * @schema #/definitions/services_projects_tasks_childResource#type
         */
        readonly type: ServicesProjectsTasksChildResourceType;

      }

      /**
       * @schema MicrosoftDataMigrationServicesProjectsTags
       */
      export interface MicrosoftDataMigrationServicesProjectsTags {
      }

      export enum MicrosoftDataMigrationServicesProjectsType {
        "MicrosoftDataMigrationServicesProjectsType_MICROSOFT_DATA_MIGRATION_SERVICES_PROJECTS" = 'Microsoft.DataMigration/services/projects',
      }

      export enum MicrosoftDataMigrationServicesProjectsTasksApiVersion {
        "MicrosoftDataMigrationServicesProjectsTasksApiVersion_2018_04_19" = '2018-04-19',
      }

      /**
       * Base class for all types of DMS task properties. If task is not supported by current client, this object is returned.
       *
       * @schema #/definitions/ProjectTaskProperties
       */
      export class ProjectTaskProperties {
        public static fromConnectToSourceMySqlTaskProperties(value: ConnectToSourceMySqlTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToSourceSqlServerTaskProperties(value: ConnectToSourceSqlServerTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToSourceSqlServerSyncTaskProperties(value: ConnectToSourceSqlServerSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToSourcePostgreSqlSyncTaskProperties(value: ConnectToSourcePostgreSqlSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetSqlDbTaskProperties(value: ConnectToTargetSqlDbTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetSqlSqlDbSyncTaskProperties(value: ConnectToTargetSqlSqlDbSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetAzureDbForPostgreSqlSyncTaskProperties(value: ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromGetUserTablesSqlTaskProperties(value: GetUserTablesSqlTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromGetUserTablesSqlSyncTaskProperties(value: GetUserTablesSqlSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetSqlMiTaskProperties(value: ConnectToTargetSqlMiTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetSqlMiSyncTaskProperties(value: ConnectToTargetSqlMiSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromConnectToTargetAzureDbForMySqlTaskProperties(value: ConnectToTargetAzureDbForMySqlTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigrateSqlServerSqlMiTaskProperties(value: MigrateSqlServerSqlMiTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigrateSqlServerSqlMiSyncTaskProperties(value: MigrateSqlServerSqlMiSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigrateSqlServerSqlDbTaskProperties(value: MigrateSqlServerSqlDbTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigrateSqlServerSqlDbSyncTaskProperties(value: MigrateSqlServerSqlDbSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigrateMySqlAzureDbForMySqlSyncTaskProperties(value: MigrateMySqlAzureDbForMySqlSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromMigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties(value: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromValidateMigrationInputSqlServerSqlDbSyncTaskProperties(value: ValidateMigrationInputSqlServerSqlDbSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromValidateMigrationInputSqlServerSqlMiTaskProperties(value: ValidateMigrationInputSqlServerSqlMiTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromValidateMigrationInputSqlServerSqlMiSyncTaskProperties(value: ValidateMigrationInputSqlServerSqlMiSyncTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        public static fromGetTdeCertificatesSqlTaskProperties(value: GetTdeCertificatesSqlTaskProperties): ProjectTaskProperties {
          return new ProjectTaskProperties(value);
        }
        private constructor(value: any) {
          Object.defineProperty(this, 'resolve', { value: () => value });
        }
      }

      export enum MicrosoftDataMigrationServicesProjectsTasksType {
        "MicrosoftDataMigrationServicesProjectsTasksType_MICROSOFT_DATA_MIGRATION_SERVICES_PROJECTS_TASKS" = 'Microsoft.DataMigration/services/projects/tasks',
      }

      export enum ServicesProjectsChildResourceApiVersion {
        "ServicesProjectsChildResourceApiVersion_2018_04_19" = '2018-04-19',
      }

      /**
       * @schema #/definitions/servicesProjectsChildResourceTags
       */
      export interface ServicesProjectsChildResourceTags {
      }

      export enum ServicesProjectsChildResourceType {
        PROJECTS = 'projects',
      }

      /**
       * Project Database Details
       *
       * @schema #/definitions/DatabaseInfo
       */
      export interface DatabaseInfo {
        /**
         * Name of the database
         *
         * @schema #/definitions/DatabaseInfo#sourceDatabaseName
         */
        readonly sourceDatabaseName: string;

      }

      /**
       * Defines the connection properties of a server
       *
       * @schema #/definitions/ConnectionInfo
       */
      export class ConnectionInfo {
        public static fromSqlConnectionInfo(value: SqlConnectionInfo): ConnectionInfo {
          return new ConnectionInfo(value);
        }
        public static fromMySqlConnectionInfo(value: MySqlConnectionInfo): ConnectionInfo {
          return new ConnectionInfo(value);
        }
        public static fromPostgreSqlConnectionInfo(value: PostgreSqlConnectionInfo): ConnectionInfo {
          return new ConnectionInfo(value);
        }
        public static fromMiSqlConnectionInfo(value: MiSqlConnectionInfo): ConnectionInfo {
          return new ConnectionInfo(value);
        }
        private constructor(value: any) {
          Object.defineProperty(this, 'resolve', { value: () => value });
        }
      }

      export enum ProjectPropertiesSourcePlatform {
        SQL = 'SQL',
        UNKNOWN = 'Unknown',
      }

      export enum ProjectPropertiesTargetPlatform {
        SQLDB = 'SQLDB',
        UNKNOWN = 'Unknown',
      }

      export enum ServicesProjectsTasksChildResourceApiVersion {
        "ServicesProjectsTasksChildResourceApiVersion_2018_04_19" = '2018-04-19',
      }

      export enum ServicesProjectsTasksChildResourceType {
        TASKS = 'tasks',
      }

      /**
       * Properties for the task that validates MySQL database connection
       *
       * @schema #/definitions/ConnectToSourceMySqlTaskProperties
       */
      export interface ConnectToSourceMySqlTaskProperties {
        /**
         * Input for the task that validates MySQL database connection
         *
         * @schema #/definitions/ConnectToSourceMySqlTaskProperties#input
         */
        readonly input?: ConnectToSourceMySqlTaskInput;

        /**
         * @schema #/definitions/ConnectToSourceMySqlTaskProperties#taskType
         */
        readonly taskType: ConnectToSourceMySqlTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to SQL Server and also validates source server requirements
       *
       * @schema #/definitions/ConnectToSourceSqlServerTaskProperties
       */
      export interface ConnectToSourceSqlServerTaskProperties {
        /**
         * Input for the task that validates connection to SQL Server and also validates source server requirements
         *
         * @schema #/definitions/ConnectToSourceSqlServerTaskProperties#input
         */
        readonly input?: ConnectToSourceSqlServerTaskInput;

        /**
         * @schema #/definitions/ConnectToSourceSqlServerTaskProperties#taskType
         */
        readonly taskType: ConnectToSourceSqlServerTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to SQL Server and source server requirements for online migration
       *
       * @schema #/definitions/ConnectToSourceSqlServerSyncTaskProperties
       */
      export interface ConnectToSourceSqlServerSyncTaskProperties {
        /**
         * Input for the task that validates connection to SQL Server and also validates source server requirements
         *
         * @schema #/definitions/ConnectToSourceSqlServerSyncTaskProperties#input
         */
        readonly input?: ConnectToSourceSqlServerTaskInput;

        /**
         * @schema #/definitions/ConnectToSourceSqlServerSyncTaskProperties#taskType
         */
        readonly taskType: ConnectToSourceSqlServerSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to PostgreSQL server and source server requirements for online migration
       *
       * @schema #/definitions/ConnectToSourcePostgreSqlSyncTaskProperties
       */
      export interface ConnectToSourcePostgreSqlSyncTaskProperties {
        /**
         * Input for the task that validates connection to PostgreSQL and source server requirements
         *
         * @schema #/definitions/ConnectToSourcePostgreSqlSyncTaskProperties#input
         */
        readonly input?: ConnectToSourcePostgreSqlSyncTaskInput;

        /**
         * @schema #/definitions/ConnectToSourcePostgreSqlSyncTaskProperties#taskType
         */
        readonly taskType: ConnectToSourcePostgreSqlSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to SQL DB and target server requirements
       *
       * @schema #/definitions/ConnectToTargetSqlDbTaskProperties
       */
      export interface ConnectToTargetSqlDbTaskProperties {
        /**
         * Input for the task that validates connection to SQL DB and target server requirements
         *
         * @schema #/definitions/ConnectToTargetSqlDbTaskProperties#input
         */
        readonly input?: ConnectToTargetSqlDbTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetSqlDbTaskProperties#taskType
         */
        readonly taskType: ConnectToTargetSqlDbTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to SQL DB and target server requirements for online migration
       *
       * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskProperties
       */
      export interface ConnectToTargetSqlSqlDbSyncTaskProperties {
        /**
         * Input for the task that validates connection to Azure SQL DB and target server requirements
         *
         * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskProperties#input
         */
        readonly input?: ConnectToTargetSqlSqlDbSyncTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskProperties#taskType
         */
        readonly taskType: ConnectToTargetSqlSqlDbSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to Azure Database For PostgreSQL server and target server requirements for online migration
       *
       * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties
       */
      export interface ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties {
        /**
         * Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
         *
         * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties#input
         */
        readonly input?: ConnectToTargetAzureDbForPostgreSqlSyncTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskProperties#taskType
         */
        readonly taskType: ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that collects user tables for the given list of databases
       *
       * @schema #/definitions/GetUserTablesSqlTaskProperties
       */
      export interface GetUserTablesSqlTaskProperties {
        /**
         * Input for the task that collects user tables for the given list of databases
         *
         * @schema #/definitions/GetUserTablesSqlTaskProperties#input
         */
        readonly input?: GetUserTablesSqlTaskInput;

        /**
         * @schema #/definitions/GetUserTablesSqlTaskProperties#taskType
         */
        readonly taskType: GetUserTablesSqlTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that collects user tables for the given list of databases
       *
       * @schema #/definitions/GetUserTablesSqlSyncTaskProperties
       */
      export interface GetUserTablesSqlSyncTaskProperties {
        /**
         * Input for the task that collects user tables for the given list of databases
         *
         * @schema #/definitions/GetUserTablesSqlSyncTaskProperties#input
         */
        readonly input?: GetUserTablesSqlSyncTaskInput;

        /**
         * @schema #/definitions/GetUserTablesSqlSyncTaskProperties#taskType
         */
        readonly taskType: GetUserTablesSqlSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to Azure SQL Database Managed Instance
       *
       * @schema #/definitions/ConnectToTargetSqlMITaskProperties
       */
      export interface ConnectToTargetSqlMiTaskProperties {
        /**
         * Input for the task that validates connection to Azure SQL Database Managed Instance.
         *
         * @schema #/definitions/ConnectToTargetSqlMITaskProperties#input
         */
        readonly input?: ConnectToTargetSqlMiTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetSqlMITaskProperties#taskType
         */
        readonly taskType: ConnectToTargetSqlMiTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to Azure SQL Database Managed Instance
       *
       * @schema #/definitions/ConnectToTargetSqlMISyncTaskProperties
       */
      export interface ConnectToTargetSqlMiSyncTaskProperties {
        /**
         * Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
         *
         * @schema #/definitions/ConnectToTargetSqlMISyncTaskProperties#input
         */
        readonly input?: ConnectToTargetSqlMiSyncTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetSqlMISyncTaskProperties#taskType
         */
        readonly taskType: ConnectToTargetSqlMiSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that validates connection to Azure Database for MySQL and target server requirements
       *
       * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskProperties
       */
      export interface ConnectToTargetAzureDbForMySqlTaskProperties {
        /**
         * Input for the task that validates connection to Azure Database for MySQL and target server requirements
         *
         * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskProperties#input
         */
        readonly input?: ConnectToTargetAzureDbForMySqlTaskInput;

        /**
         * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskProperties#taskType
         */
        readonly taskType: ConnectToTargetAzureDbForMySqlTaskPropertiesTaskType;

      }

      /**
       * Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance
       *
       * @schema #/definitions/MigrateSqlServerSqlMITaskProperties
       */
      export interface MigrateSqlServerSqlMiTaskProperties {
        /**
         * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskProperties#input
         */
        readonly input?: MigrateSqlServerSqlMiTaskInput;

        /**
         * @schema #/definitions/MigrateSqlServerSqlMITaskProperties#taskType
         */
        readonly taskType: MigrateSqlServerSqlMiTaskPropertiesTaskType;

      }

      /**
       * Properties for task that migrates SQL Server databases to Azure SQL Database Managed Instance sync scenario
       *
       * @schema #/definitions/MigrateSqlServerSqlMISyncTaskProperties
       */
      export interface MigrateSqlServerSqlMiSyncTaskProperties {
        /**
         * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskProperties#input
         */
        readonly input?: MigrateSqlServerSqlMiSyncTaskInput;

        /**
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskProperties#taskType
         */
        readonly taskType: MigrateSqlServerSqlMiSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database
       *
       * @schema #/definitions/MigrateSqlServerSqlDbTaskProperties
       */
      export interface MigrateSqlServerSqlDbTaskProperties {
        /**
         * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
         *
         * @schema #/definitions/MigrateSqlServerSqlDbTaskProperties#input
         */
        readonly input?: MigrateSqlServerSqlDbTaskInput;

        /**
         * @schema #/definitions/MigrateSqlServerSqlDbTaskProperties#taskType
         */
        readonly taskType: MigrateSqlServerSqlDbTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
       *
       * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskProperties
       */
      export interface MigrateSqlServerSqlDbSyncTaskProperties {
        /**
         * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskProperties#input
         */
        readonly input?: MigrateSqlServerSqlDbSyncTaskInput;

        /**
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskProperties#taskType
         */
        readonly taskType: MigrateSqlServerSqlDbSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
       *
       * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskProperties
       */
      export interface MigrateMySqlAzureDbForMySqlSyncTaskProperties {
        /**
         * Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskProperties#input
         */
        readonly input?: MigrateMySqlAzureDbForMySqlSyncTaskInput;

        /**
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskProperties#taskType
         */
        readonly taskType: MigrateMySqlAzureDbForMySqlSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
       *
       * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties {
        /**
         * Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties#input
         */
        readonly input?: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput;

        /**
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskProperties#taskType
         */
        readonly taskType: MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for task that validates migration input for SQL to Azure SQL DB sync migrations
       *
       * @schema #/definitions/ValidateMigrationInputSqlServerSqlDbSyncTaskProperties
       */
      export interface ValidateMigrationInputSqlServerSqlDbSyncTaskProperties {
        /**
         * Input for task that validates migration input for SQL sync migrations
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlDbSyncTaskProperties#input
         */
        readonly input?: ValidateSyncMigrationInputSqlServerTaskInput;

        /**
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlDbSyncTaskProperties#taskType
         */
        readonly taskType: ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance
       *
       * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskProperties
       */
      export interface ValidateMigrationInputSqlServerSqlMiTaskProperties {
        /**
         * Input for task that validates migration input for SQL to Azure SQL Managed Instance
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskProperties#input
         */
        readonly input?: ValidateMigrationInputSqlServerSqlMiTaskInput;

        /**
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskProperties#taskType
         */
        readonly taskType: ValidateMigrationInputSqlServerSqlMiTaskPropertiesTaskType;

      }

      /**
       * Properties for task that validates migration input for SQL to Azure SQL Database Managed Instance sync scenario
       *
       * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskProperties
       */
      export interface ValidateMigrationInputSqlServerSqlMiSyncTaskProperties {
        /**
         * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskProperties#input
         */
        readonly input?: ValidateMigrationInputSqlServerSqlMiSyncTaskInput;

        /**
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskProperties#taskType
         */
        readonly taskType: ValidateMigrationInputSqlServerSqlMiSyncTaskPropertiesTaskType;

      }

      /**
       * Properties for the task that gets TDE certificates in Base64 encoded format.
       *
       * @schema #/definitions/GetTdeCertificatesSqlTaskProperties
       */
      export interface GetTdeCertificatesSqlTaskProperties {
        /**
         * Input for the task that gets TDE certificates in Base64 encoded format.
         *
         * @schema #/definitions/GetTdeCertificatesSqlTaskProperties#input
         */
        readonly input?: GetTdeCertificatesSqlTaskInput;

        /**
         * @schema #/definitions/GetTdeCertificatesSqlTaskProperties#taskType
         */
        readonly taskType: GetTdeCertificatesSqlTaskPropertiesTaskType;

      }

      /**
       * Information for connecting to SQL database server
       *
       * @schema #/definitions/SqlConnectionInfo
       */
      export interface SqlConnectionInfo {
        /**
         * Additional connection settings
         *
         * @schema #/definitions/SqlConnectionInfo#additionalSettings
         */
        readonly additionalSettings?: string;

        /**
         * Authentication type to use for connection.
         *
         * @schema #/definitions/SqlConnectionInfo#authentication
         */
        readonly authentication?: SqlConnectionInfoAuthentication;

        /**
         * Data source in the format Protocol:MachineName\SQLServerInstanceName,PortNumber
         *
         * @schema #/definitions/SqlConnectionInfo#dataSource
         */
        readonly dataSource: string;

        /**
         * Whether to encrypt the connection
         *
         * @schema #/definitions/SqlConnectionInfo#encryptConnection
         */
        readonly encryptConnection?: boolean;

        /**
         * Password credential.
         *
         * @schema #/definitions/SqlConnectionInfo#password
         */
        readonly password?: string;

        /**
         * Server platform type for connection.
         *
         * @schema #/definitions/SqlConnectionInfo#platform
         */
        readonly platform?: SqlConnectionInfoPlatform;

        /**
         * Whether to trust the server certificate
         *
         * @schema #/definitions/SqlConnectionInfo#trustServerCertificate
         */
        readonly trustServerCertificate?: boolean;

        /**
         * @schema #/definitions/SqlConnectionInfo#type
         */
        readonly type: SqlConnectionInfoType;

        /**
         * User name
         *
         * @schema #/definitions/SqlConnectionInfo#userName
         */
        readonly userName?: string;

      }

      /**
       * Information for connecting to MySQL server
       *
       * @schema #/definitions/MySqlConnectionInfo
       */
      export interface MySqlConnectionInfo {
        /**
         * Password credential.
         *
         * @schema #/definitions/MySqlConnectionInfo#password
         */
        readonly password?: string;

        /**
         * Port for Server
         *
         * @schema #/definitions/MySqlConnectionInfo#port
         */
        readonly port: number;

        /**
         * Name of the server
         *
         * @schema #/definitions/MySqlConnectionInfo#serverName
         */
        readonly serverName: string;

        /**
         * @schema #/definitions/MySqlConnectionInfo#type
         */
        readonly type: MySqlConnectionInfoType;

        /**
         * User name
         *
         * @schema #/definitions/MySqlConnectionInfo#userName
         */
        readonly userName?: string;

      }

      /**
       * Information for connecting to PostgreSQL server
       *
       * @schema #/definitions/PostgreSqlConnectionInfo
       */
      export interface PostgreSqlConnectionInfo {
        /**
         * Name of the database
         *
         * @schema #/definitions/PostgreSqlConnectionInfo#databaseName
         */
        readonly databaseName?: string;

        /**
         * Password credential.
         *
         * @schema #/definitions/PostgreSqlConnectionInfo#password
         */
        readonly password?: string;

        /**
         * Port for Server
         *
         * @schema #/definitions/PostgreSqlConnectionInfo#port
         */
        readonly port: number;

        /**
         * Name of the server
         *
         * @schema #/definitions/PostgreSqlConnectionInfo#serverName
         */
        readonly serverName: string;

        /**
         * @schema #/definitions/PostgreSqlConnectionInfo#type
         */
        readonly type: PostgreSqlConnectionInfoType;

        /**
         * User name
         *
         * @schema #/definitions/PostgreSqlConnectionInfo#userName
         */
        readonly userName?: string;

      }

      /**
       * Properties required to create a connection to Azure SQL database Managed instance
       *
       * @schema #/definitions/MiSqlConnectionInfo
       */
      export interface MiSqlConnectionInfo {
        /**
         * Resource id for Azure SQL database Managed instance
         *
         * @schema #/definitions/MiSqlConnectionInfo#managedInstanceResourceId
         */
        readonly managedInstanceResourceId: string;

        /**
         * Password credential.
         *
         * @schema #/definitions/MiSqlConnectionInfo#password
         */
        readonly password?: string;

        /**
         * @schema #/definitions/MiSqlConnectionInfo#type
         */
        readonly type: MiSqlConnectionInfoType;

        /**
         * User name
         *
         * @schema #/definitions/MiSqlConnectionInfo#userName
         */
        readonly userName?: string;

      }

      /**
       * Input for the task that validates MySQL database connection
       *
       * @schema #/definitions/ConnectToSourceMySqlTaskInput
       */
      export interface ConnectToSourceMySqlTaskInput {
        /**
         * Permission group for validations.
         *
         * @schema #/definitions/ConnectToSourceMySqlTaskInput#checkPermissionsGroup
         */
        readonly checkPermissionsGroup?: ConnectToSourceMySqlTaskInputCheckPermissionsGroup;

        /**
         * Information for connecting to MySQL server
         *
         * @schema #/definitions/ConnectToSourceMySqlTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: MySqlConnectionInfo;

        /**
         * Target Platform for the migration.
         *
         * @schema #/definitions/ConnectToSourceMySqlTaskInput#targetPlatform
         */
        readonly targetPlatform?: ConnectToSourceMySqlTaskInputTargetPlatform;

      }

      export enum ConnectToSourceMySqlTaskPropertiesTaskType {
        "ConnectToSourceMySqlTaskPropertiesTaskType_CONNECT_TO_SOURCE_MY_SQL" = 'ConnectToSource.MySql',
      }

      /**
       * Input for the task that validates connection to SQL Server and also validates source server requirements
       *
       * @schema #/definitions/ConnectToSourceSqlServerTaskInput
       */
      export interface ConnectToSourceSqlServerTaskInput {
        /**
         * Permission group for validations.
         *
         * @schema #/definitions/ConnectToSourceSqlServerTaskInput#checkPermissionsGroup
         */
        readonly checkPermissionsGroup?: ConnectToSourceSqlServerTaskInputCheckPermissionsGroup;

        /**
         * Flag for whether to collect agent jobs from source server.
         *
         * @schema #/definitions/ConnectToSourceSqlServerTaskInput#collectAgentJobs
         */
        readonly collectAgentJobs?: boolean;

        /**
         * Flag for whether to collect logins from source server.
         *
         * @schema #/definitions/ConnectToSourceSqlServerTaskInput#collectLogins
         */
        readonly collectLogins?: boolean;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ConnectToSourceSqlServerTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

      }

      export enum ConnectToSourceSqlServerTaskPropertiesTaskType {
        "ConnectToSourceSqlServerTaskPropertiesTaskType_CONNECT_TO_SOURCE_SQL_SERVER" = 'ConnectToSource.SqlServer',
      }

      export enum ConnectToSourceSqlServerSyncTaskPropertiesTaskType {
        "ConnectToSourceSqlServerSyncTaskPropertiesTaskType_CONNECT_TO_SOURCE_SQL_SERVER_SYNC" = 'ConnectToSource.SqlServer.Sync',
      }

      /**
       * Input for the task that validates connection to PostgreSQL and source server requirements
       *
       * @schema #/definitions/ConnectToSourcePostgreSqlSyncTaskInput
       */
      export interface ConnectToSourcePostgreSqlSyncTaskInput {
        /**
         * Information for connecting to PostgreSQL server
         *
         * @schema #/definitions/ConnectToSourcePostgreSqlSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: PostgreSqlConnectionInfo;

      }

      export enum ConnectToSourcePostgreSqlSyncTaskPropertiesTaskType {
        "ConnectToSourcePostgreSqlSyncTaskPropertiesTaskType_CONNECT_TO_SOURCE_POSTGRE_SQL_SYNC" = 'ConnectToSource.PostgreSql.Sync',
      }

      /**
       * Input for the task that validates connection to SQL DB and target server requirements
       *
       * @schema #/definitions/ConnectToTargetSqlDbTaskInput
       */
      export interface ConnectToTargetSqlDbTaskInput {
        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ConnectToTargetSqlDbTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum ConnectToTargetSqlDbTaskPropertiesTaskType {
        "ConnectToTargetSqlDbTaskPropertiesTaskType_CONNECT_TO_TARGET_SQL_DB" = 'ConnectToTarget.SqlDb',
      }

      /**
       * Input for the task that validates connection to Azure SQL DB and target server requirements
       *
       * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskInput
       */
      export interface ConnectToTargetSqlSqlDbSyncTaskInput {
        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ConnectToTargetSqlSqlDbSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum ConnectToTargetSqlSqlDbSyncTaskPropertiesTaskType {
        "ConnectToTargetSqlSqlDbSyncTaskPropertiesTaskType_CONNECT_TO_TARGET_SQL_DB_SYNC" = 'ConnectToTarget.SqlDb.Sync',
      }

      /**
       * Input for the task that validates connection to Azure Database for PostgreSQL and target server requirements
       *
       * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskInput
       */
      export interface ConnectToTargetAzureDbForPostgreSqlSyncTaskInput {
        /**
         * Information for connecting to PostgreSQL server
         *
         * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: PostgreSqlConnectionInfo;

        /**
         * Information for connecting to PostgreSQL server
         *
         * @schema #/definitions/ConnectToTargetAzureDbForPostgreSqlSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: PostgreSqlConnectionInfo;

      }

      export enum ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesTaskType {
        "ConnectToTargetAzureDbForPostgreSqlSyncTaskPropertiesTaskType_CONNECT_TO_TARGET_AZURE_DB_FOR_POSTGRE_SQL_SYNC" = 'ConnectToTarget.AzureDbForPostgreSql.Sync',
      }

      /**
       * Input for the task that collects user tables for the given list of databases
       *
       * @schema #/definitions/GetUserTablesSqlTaskInput
       */
      export interface GetUserTablesSqlTaskInput {
        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/GetUserTablesSqlTaskInput#connectionInfo
         */
        readonly connectionInfo: SqlConnectionInfo;

        /**
         * List of database names to collect tables for
         *
         * @schema #/definitions/GetUserTablesSqlTaskInput#selectedDatabases
         */
        readonly selectedDatabases: string[];

      }

      export enum GetUserTablesSqlTaskPropertiesTaskType {
        "GetUserTablesSqlTaskPropertiesTaskType_GET_USER_TABLES_SQL" = 'GetUserTables.Sql',
      }

      /**
       * Input for the task that collects user tables for the given list of databases
       *
       * @schema #/definitions/GetUserTablesSqlSyncTaskInput
       */
      export interface GetUserTablesSqlSyncTaskInput {
        /**
         * List of source database names to collect tables for
         *
         * @schema #/definitions/GetUserTablesSqlSyncTaskInput#selectedSourceDatabases
         */
        readonly selectedSourceDatabases: string[];

        /**
         * List of target database names to collect tables for
         *
         * @schema #/definitions/GetUserTablesSqlSyncTaskInput#selectedTargetDatabases
         */
        readonly selectedTargetDatabases: string[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/GetUserTablesSqlSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/GetUserTablesSqlSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum GetUserTablesSqlSyncTaskPropertiesTaskType {
        "GetUserTablesSqlSyncTaskPropertiesTaskType_GET_USER_TABLES_AZURE_SQL_DB_SYNC" = 'GetUserTables.AzureSqlDb.Sync',
      }

      /**
       * Input for the task that validates connection to Azure SQL Database Managed Instance.
       *
       * @schema #/definitions/ConnectToTargetSqlMITaskInput
       */
      export interface ConnectToTargetSqlMiTaskInput {
        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ConnectToTargetSqlMITaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum ConnectToTargetSqlMiTaskPropertiesTaskType {
        "ConnectToTargetSqlMiTaskPropertiesTaskType_CONNECT_TO_TARGET_AZURE_SQL_DB_MI" = 'ConnectToTarget.AzureSqlDbMI',
      }

      /**
       * Input for the task that validates connection to Azure SQL Database Managed Instance online scenario.
       *
       * @schema #/definitions/ConnectToTargetSqlMISyncTaskInput
       */
      export interface ConnectToTargetSqlMiSyncTaskInput {
        /**
         * Azure Active Directory Application
         *
         * @schema #/definitions/ConnectToTargetSqlMISyncTaskInput#azureApp
         */
        readonly azureApp: AzureActiveDirectoryApp;

        /**
         * Properties required to create a connection to Azure SQL database Managed instance
         *
         * @schema #/definitions/ConnectToTargetSqlMISyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: MiSqlConnectionInfo;

      }

      export enum ConnectToTargetSqlMiSyncTaskPropertiesTaskType {
        "ConnectToTargetSqlMiSyncTaskPropertiesTaskType_CONNECT_TO_TARGET_AZURE_SQL_DB_MI_SYNC_LRS" = 'ConnectToTarget.AzureSqlDbMI.Sync.LRS',
      }

      /**
       * Input for the task that validates connection to Azure Database for MySQL and target server requirements
       *
       * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskInput
       */
      export interface ConnectToTargetAzureDbForMySqlTaskInput {
        /**
         * Information for connecting to MySQL server
         *
         * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: MySqlConnectionInfo;

        /**
         * Information for connecting to MySQL server
         *
         * @schema #/definitions/ConnectToTargetAzureDbForMySqlTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: MySqlConnectionInfo;

      }

      export enum ConnectToTargetAzureDbForMySqlTaskPropertiesTaskType {
        "ConnectToTargetAzureDbForMySqlTaskPropertiesTaskType_CONNECT_TO_TARGET_AZURE_DB_FOR_MY_SQL" = 'ConnectToTarget.AzureDbForMySql',
      }

      /**
       * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance.
       *
       * @schema #/definitions/MigrateSqlServerSqlMITaskInput
       */
      export interface MigrateSqlServerSqlMiTaskInput {
        /**
         * Blob container storage information.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#backupBlobShare
         */
        readonly backupBlobShare: BlobShare;

        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#backupFileShare
         */
        readonly backupFileShare?: FileShare;

        /**
         * Backup Mode to specify whether to use existing backup or create new backup. If using existing backups, backup file paths are required to be provided in selectedDatabases.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#backupMode
         */
        readonly backupMode?: MigrateSqlServerSqlMiTaskInputBackupMode;

        /**
         * Agent Jobs to migrate.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#selectedAgentJobs
         */
        readonly selectedAgentJobs?: string[];

        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlMiDatabaseInput[];

        /**
         * Logins to migrate.
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#selectedLogins
         */
        readonly selectedLogins?: string[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlMITaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum MigrateSqlServerSqlMiTaskPropertiesTaskType {
        "MigrateSqlServerSqlMiTaskPropertiesTaskType_MIGRATE_SQL_SERVER_AZURE_SQL_DB_MI" = 'Migrate.SqlServer.AzureSqlDbMI',
      }

      /**
       * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
       *
       * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput
       */
      export interface MigrateSqlServerSqlMiSyncTaskInput {
        /**
         * Azure Active Directory Application
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#azureApp
         */
        readonly azureApp: AzureActiveDirectoryApp;

        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#backupFileShare
         */
        readonly backupFileShare?: FileShare;

        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlMiDatabaseInput[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Fully qualified resourceId of storage
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#storageResourceId
         */
        readonly storageResourceId: string;

        /**
         * Properties required to create a connection to Azure SQL database Managed instance
         *
         * @schema #/definitions/MigrateSqlServerSqlMISyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: MiSqlConnectionInfo;

      }

      export enum MigrateSqlServerSqlMiSyncTaskPropertiesTaskType {
        "MigrateSqlServerSqlMiSyncTaskPropertiesTaskType_MIGRATE_SQL_SERVER_AZURE_SQL_DB_MI_SYNC_LRS" = 'Migrate.SqlServer.AzureSqlDbMI.Sync.LRS',
      }

      /**
       * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database
       *
       * @schema #/definitions/MigrateSqlServerSqlDbTaskInput
       */
      export interface MigrateSqlServerSqlDbTaskInput {
        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigrateSqlServerSqlDbTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlDbDatabaseInput[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlDbTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlDbTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

        /**
         * Types of validations to run after the migration
         *
         * @schema #/definitions/MigrateSqlServerSqlDbTaskInput#validationOptions
         */
        readonly validationOptions?: MigrationValidationOptions;

      }

      export enum MigrateSqlServerSqlDbTaskPropertiesTaskType {
        "MigrateSqlServerSqlDbTaskPropertiesTaskType_MIGRATE_SQL_SERVER_SQL_DB" = 'Migrate.SqlServer.SqlDb',
      }

      /**
       * Input for the task that migrates on-prem SQL Server databases to Azure SQL Database for online migrations
       *
       * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskInput
       */
      export interface MigrateSqlServerSqlDbSyncTaskInput {
        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlDbSyncDatabaseInput[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

        /**
         * Types of validations to run after the migration
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncTaskInput#validationOptions
         */
        readonly validationOptions?: MigrationValidationOptions;

      }

      export enum MigrateSqlServerSqlDbSyncTaskPropertiesTaskType {
        "MigrateSqlServerSqlDbSyncTaskPropertiesTaskType_MIGRATE_SQL_SERVER_AZURE_SQL_DB_SYNC" = 'Migrate.SqlServer.AzureSqlDb.Sync',
      }

      /**
       * Input for the task that migrates MySQL databases to Azure Database for MySQL for online migrations
       *
       * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskInput
       */
      export interface MigrateMySqlAzureDbForMySqlSyncTaskInput {
        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateMySqlAzureDbForMySqlSyncDatabaseInput[];

        /**
         * Information for connecting to MySQL server
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: MySqlConnectionInfo;

        /**
         * Information for connecting to MySQL server
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: MySqlConnectionInfo;

      }

      export enum MigrateMySqlAzureDbForMySqlSyncTaskPropertiesTaskType {
        "MigrateMySqlAzureDbForMySqlSyncTaskPropertiesTaskType_MIGRATE_MY_SQL_AZURE_DB_FOR_MY_SQL_SYNC" = 'Migrate.MySql.AzureDbForMySql.Sync',
      }

      /**
       * Input for the task that migrates PostgreSQL databases to Azure Database for PostgreSQL for online migrations
       *
       * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput {
        /**
         * Databases to migrate
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput[];

        /**
         * Information for connecting to PostgreSQL server
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: PostgreSqlConnectionInfo;

        /**
         * Information for connecting to PostgreSQL server
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: PostgreSqlConnectionInfo;

      }

      export enum MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesTaskType {
        "MigratePostgreSqlAzureDbForPostgreSqlSyncTaskPropertiesTaskType_MIGRATE_POSTGRE_SQL_AZURE_DB_FOR_POSTGRE_SQL_SYNC" = 'Migrate.PostgreSql.AzureDbForPostgreSql.Sync',
      }

      /**
       * Input for task that validates migration input for SQL sync migrations
       *
       * @schema #/definitions/ValidateSyncMigrationInputSqlServerTaskInput
       */
      export interface ValidateSyncMigrationInputSqlServerTaskInput {
        /**
         * Databases to migrate
         *
         * @schema #/definitions/ValidateSyncMigrationInputSqlServerTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlDbSyncDatabaseInput[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ValidateSyncMigrationInputSqlServerTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ValidateSyncMigrationInputSqlServerTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesTaskType {
        "ValidateMigrationInputSqlServerSqlDbSyncTaskPropertiesTaskType_VALIDATE_MIGRATION_INPUT_SQL_SERVER_SQL_DB_SYNC" = 'ValidateMigrationInput.SqlServer.SqlDb.Sync',
      }

      /**
       * Input for task that validates migration input for SQL to Azure SQL Managed Instance
       *
       * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput
       */
      export interface ValidateMigrationInputSqlServerSqlMiTaskInput {
        /**
         * Blob container storage information.
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#backupBlobShare
         */
        readonly backupBlobShare: BlobShare;

        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#backupFileShare
         */
        readonly backupFileShare?: FileShare;

        /**
         * Backup Mode to specify whether to use existing backup or create new backup.
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#backupMode
         */
        readonly backupMode?: ValidateMigrationInputSqlServerSqlMiTaskInputBackupMode;

        /**
         * Databases to migrate
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlMiDatabaseInput[];

        /**
         * Logins to migrate
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#selectedLogins
         */
        readonly selectedLogins?: string[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMITaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: SqlConnectionInfo;

      }

      export enum ValidateMigrationInputSqlServerSqlMiTaskPropertiesTaskType {
        "ValidateMigrationInputSqlServerSqlMiTaskPropertiesTaskType_VALIDATE_MIGRATION_INPUT_SQL_SERVER_AZURE_SQL_DB_MI" = 'ValidateMigrationInput.SqlServer.AzureSqlDbMI',
      }

      /**
       * Input for task that migrates SQL Server databases to Azure SQL Database Managed Instance online scenario.
       *
       * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput
       */
      export interface ValidateMigrationInputSqlServerSqlMiSyncTaskInput {
        /**
         * Azure Active Directory Application
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#azureApp
         */
        readonly azureApp: AzureActiveDirectoryApp;

        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#backupFileShare
         */
        readonly backupFileShare?: FileShare;

        /**
         * Databases to migrate
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#selectedDatabases
         */
        readonly selectedDatabases: MigrateSqlServerSqlMiDatabaseInput[];

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#sourceConnectionInfo
         */
        readonly sourceConnectionInfo: SqlConnectionInfo;

        /**
         * Fully qualified resourceId of storage
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#storageResourceId
         */
        readonly storageResourceId: string;

        /**
         * Properties required to create a connection to Azure SQL database Managed instance
         *
         * @schema #/definitions/ValidateMigrationInputSqlServerSqlMISyncTaskInput#targetConnectionInfo
         */
        readonly targetConnectionInfo: MiSqlConnectionInfo;

      }

      export enum ValidateMigrationInputSqlServerSqlMiSyncTaskPropertiesTaskType {
        "ValidateMigrationInputSqlServerSqlMiSyncTaskPropertiesTaskType_VALIDATE_MIGRATION_INPUT_SQL_SERVER_AZURE_SQL_DB_MI_SYNC_LRS" = 'ValidateMigrationInput.SqlServer.AzureSqlDbMI.Sync.LRS',
      }

      /**
       * Input for the task that gets TDE certificates in Base64 encoded format.
       *
       * @schema #/definitions/GetTdeCertificatesSqlTaskInput
       */
      export interface GetTdeCertificatesSqlTaskInput {
        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/GetTdeCertificatesSqlTaskInput#backupFileShare
         */
        readonly backupFileShare: FileShare;

        /**
         * Information for connecting to SQL database server
         *
         * @schema #/definitions/GetTdeCertificatesSqlTaskInput#connectionInfo
         */
        readonly connectionInfo: SqlConnectionInfo;

        /**
         * List containing certificate names and corresponding password to use for encrypting the exported certificate.
         *
         * @schema #/definitions/GetTdeCertificatesSqlTaskInput#selectedCertificates
         */
        readonly selectedCertificates: SelectedCertificateInput[];

      }

      export enum GetTdeCertificatesSqlTaskPropertiesTaskType {
        "GetTdeCertificatesSqlTaskPropertiesTaskType_GET_TDE_CERTIFICATES_SQL" = 'GetTDECertificates.Sql',
      }

      export enum SqlConnectionInfoAuthentication {
        NONE = 'None',
        WINDOWS_AUTHENTICATION = 'WindowsAuthentication',
        SQL_AUTHENTICATION = 'SqlAuthentication',
        ACTIVE_DIRECTORY_INTEGRATED = 'ActiveDirectoryIntegrated',
        ACTIVE_DIRECTORY_PASSWORD = 'ActiveDirectoryPassword',
      }

      export enum SqlConnectionInfoPlatform {
        SQL_ON_PREM = 'SqlOnPrem',
      }

      export enum SqlConnectionInfoType {
        SQL_CONNECTION_INFO = 'SqlConnectionInfo',
      }

      export enum MySqlConnectionInfoType {
        MY_SQL_CONNECTION_INFO = 'MySqlConnectionInfo',
      }

      export enum PostgreSqlConnectionInfoType {
        POSTGRE_SQL_CONNECTION_INFO = 'PostgreSqlConnectionInfo',
      }

      export enum MiSqlConnectionInfoType {
        MI_SQL_CONNECTION_INFO = 'MiSqlConnectionInfo',
      }

      export enum ConnectToSourceMySqlTaskInputCheckPermissionsGroup {
        DEFAULT = 'Default',
        MIGRATION_FROM_SQL_SERVER_TO_AZURE_DB = 'MigrationFromSqlServerToAzureDB',
        MIGRATION_FROM_SQL_SERVER_TO_AZURE_MI = 'MigrationFromSqlServerToAzureMI',
        MIGRATION_FROM_MY_SQL_TO_AZURE_DB_FOR_MY_SQL = 'MigrationFromMySQLToAzureDBForMySQL',
      }

      export enum ConnectToSourceMySqlTaskInputTargetPlatform {
        SQL_SERVER = 'SqlServer',
        AZURE_DB_FOR_MY_SQL = 'AzureDbForMySQL',
      }

      export enum ConnectToSourceSqlServerTaskInputCheckPermissionsGroup {
        DEFAULT = 'Default',
        MIGRATION_FROM_SQL_SERVER_TO_AZURE_DB = 'MigrationFromSqlServerToAzureDB',
        MIGRATION_FROM_SQL_SERVER_TO_AZURE_MI = 'MigrationFromSqlServerToAzureMI',
        MIGRATION_FROM_MY_SQL_TO_AZURE_DB_FOR_MY_SQL = 'MigrationFromMySQLToAzureDBForMySQL',
      }

      /**
       * Azure Active Directory Application
       *
       * @schema #/definitions/AzureActiveDirectoryApp
       */
      export interface AzureActiveDirectoryApp {
        /**
         * Key used to authenticate to the Azure Active Directory Application
         *
         * @schema #/definitions/AzureActiveDirectoryApp#appKey
         */
        readonly appKey: string;

        /**
         * Application ID of the Azure Active Directory Application
         *
         * @schema #/definitions/AzureActiveDirectoryApp#applicationId
         */
        readonly applicationId: string;

        /**
         * Tenant id of the customer
         *
         * @schema #/definitions/AzureActiveDirectoryApp#tenantId
         */
        readonly tenantId: string;

      }

      /**
       * Blob container storage information.
       *
       * @schema #/definitions/BlobShare
       */
      export interface BlobShare {
        /**
         * SAS URI of Azure Storage Account Container.
         *
         * @schema #/definitions/BlobShare#sasUri
         */
        readonly sasUri: string;

      }

      /**
       * File share information with Path, Username, and Password.
       *
       * @schema #/definitions/FileShare
       */
      export interface FileShare {
        /**
         * Password credential used to connect to the share location.
         *
         * @schema #/definitions/FileShare#password
         */
        readonly password?: string;

        /**
         * The folder path for this share.
         *
         * @schema #/definitions/FileShare#path
         */
        readonly path: string;

        /**
         * User name credential to connect to the share location
         *
         * @schema #/definitions/FileShare#userName
         */
        readonly userName?: string;

      }

      export enum MigrateSqlServerSqlMiTaskInputBackupMode {
        CREATE_BACKUP = 'CreateBackup',
        EXISTING_BACKUP = 'ExistingBackup',
      }

      /**
       * Database specific information for SQL to Azure SQL DB Managed Instance migration task inputs
       *
       * @schema #/definitions/MigrateSqlServerSqlMIDatabaseInput
       */
      export interface MigrateSqlServerSqlMiDatabaseInput {
        /**
         * The list of backup files to be used in case of existing backups.
         *
         * @schema #/definitions/MigrateSqlServerSqlMIDatabaseInput#backupFilePaths
         */
        readonly backupFilePaths?: string[];

        /**
         * File share information with Path, Username, and Password.
         *
         * @schema #/definitions/MigrateSqlServerSqlMIDatabaseInput#backupFileShare
         */
        readonly backupFileShare?: FileShare;

        /**
         * Name of the database
         *
         * @schema #/definitions/MigrateSqlServerSqlMIDatabaseInput#name
         */
        readonly name: string;

        /**
         * Name of the database at destination
         *
         * @schema #/definitions/MigrateSqlServerSqlMIDatabaseInput#restoreDatabaseName
         */
        readonly restoreDatabaseName: string;

      }

      /**
       * Database specific information for SQL to Azure SQL DB migration task inputs
       *
       * @schema #/definitions/MigrateSqlServerSqlDbDatabaseInput
       */
      export interface MigrateSqlServerSqlDbDatabaseInput {
        /**
         * Whether to set database read only before migration
         *
         * @schema #/definitions/MigrateSqlServerSqlDbDatabaseInput#makeSourceDbReadOnly
         */
        readonly makeSourceDbReadOnly?: boolean;

        /**
         * Name of the database
         *
         * @schema #/definitions/MigrateSqlServerSqlDbDatabaseInput#name
         */
        readonly name?: string;

        /**
         * Mapping of source to target tables
         *
         * @schema #/definitions/MigrateSqlServerSqlDbDatabaseInput#tableMap
         */
        readonly tableMap?: MigrateSqlServerSqlDbDatabaseInputTableMap;

        /**
         * Name of target database. Note: Target database will be truncated before starting migration.
         *
         * @schema #/definitions/MigrateSqlServerSqlDbDatabaseInput#targetDatabaseName
         */
        readonly targetDatabaseName?: string;

      }

      /**
       * Types of validations to run after the migration
       *
       * @schema #/definitions/MigrationValidationOptions
       */
      export interface MigrationValidationOptions {
        /**
         * Allows to perform a checksum based data integrity validation between source and target for the selected database / tables .
         *
         * @schema #/definitions/MigrationValidationOptions#enableDataIntegrityValidation
         */
        readonly enableDataIntegrityValidation?: boolean;

        /**
         * Allows to perform a quick and intelligent query analysis by retrieving queries from the source database and executes them in the target. The result will have execution statistics for executions in source and target databases for the extracted queries.
         *
         * @schema #/definitions/MigrationValidationOptions#enableQueryAnalysisValidation
         */
        readonly enableQueryAnalysisValidation?: boolean;

        /**
         * Allows to compare the schema information between source and target.
         *
         * @schema #/definitions/MigrationValidationOptions#enableSchemaValidation
         */
        readonly enableSchemaValidation?: boolean;

      }

      /**
       * Database specific information for SQL to Azure SQL DB sync migration task inputs
       *
       * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput
       */
      export interface MigrateSqlServerSqlDbSyncDatabaseInput {
        /**
         * Unique identifier for database
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#id
         */
        readonly id?: string;

        /**
         * Migration settings which tune the migration behavior
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#migrationSetting
         */
        readonly migrationSetting?: MigrateSqlServerSqlDbSyncDatabaseInputMigrationSetting;

        /**
         * Name of database
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#name
         */
        readonly name?: string;

        /**
         * Schema name to be migrated
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#schemaName
         */
        readonly schemaName?: string;

        /**
         * Source settings to tune source endpoint migration behavior
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#sourceSetting
         */
        readonly sourceSetting?: MigrateSqlServerSqlDbSyncDatabaseInputSourceSetting;

        /**
         * Mapping of source to target tables
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#tableMap
         */
        readonly tableMap?: MigrateSqlServerSqlDbSyncDatabaseInputTableMap;

        /**
         * Target database name
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#targetDatabaseName
         */
        readonly targetDatabaseName?: string;

        /**
         * Target settings to tune target endpoint migration behavior
         *
         * @schema #/definitions/MigrateSqlServerSqlDbSyncDatabaseInput#targetSetting
         */
        readonly targetSetting?: MigrateSqlServerSqlDbSyncDatabaseInputTargetSetting;

      }

      /**
       * Database specific information for MySQL to Azure Database for MySQL migration task inputs
       *
       * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput
       */
      export interface MigrateMySqlAzureDbForMySqlSyncDatabaseInput {
        /**
         * Migration settings which tune the migration behavior
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput#migrationSetting
         */
        readonly migrationSetting?: MigrateMySqlAzureDbForMySqlSyncDatabaseInputMigrationSetting;

        /**
         * Name of the database
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput#name
         */
        readonly name?: string;

        /**
         * Source settings to tune source endpoint migration behavior
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput#sourceSetting
         */
        readonly sourceSetting?: MigrateMySqlAzureDbForMySqlSyncDatabaseInputSourceSetting;

        /**
         * Name of target database. Note: Target database will be truncated before starting migration.
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput#targetDatabaseName
         */
        readonly targetDatabaseName?: string;

        /**
         * Target settings to tune target endpoint migration behavior
         *
         * @schema #/definitions/MigrateMySqlAzureDbForMySqlSyncDatabaseInput#targetSetting
         */
        readonly targetSetting?: MigrateMySqlAzureDbForMySqlSyncDatabaseInputTargetSetting;

      }

      /**
       * Database specific information for PostgreSQL to Azure Database for PostgreSQL migration task inputs
       *
       * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput {
        /**
         * Migration settings which tune the migration behavior
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput#migrationSetting
         */
        readonly migrationSetting?: MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputMigrationSetting;

        /**
         * Name of the database
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput#name
         */
        readonly name?: string;

        /**
         * Source settings to tune source endpoint migration behavior
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput#sourceSetting
         */
        readonly sourceSetting?: MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputSourceSetting;

        /**
         * Name of target database. Note: Target database will be truncated before starting migration.
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput#targetDatabaseName
         */
        readonly targetDatabaseName?: string;

        /**
         * Target settings to tune target endpoint migration behavior
         *
         * @schema #/definitions/MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInput#targetSetting
         */
        readonly targetSetting?: MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputTargetSetting;

      }

      export enum ValidateMigrationInputSqlServerSqlMiTaskInputBackupMode {
        CREATE_BACKUP = 'CreateBackup',
        EXISTING_BACKUP = 'ExistingBackup',
      }

      /**
       * Info for certificate to be exported for TDE enabled databases.
       *
       * @schema #/definitions/SelectedCertificateInput
       */
      export interface SelectedCertificateInput {
        /**
         * Name of certificate to be exported.
         *
         * @schema #/definitions/SelectedCertificateInput#certificateName
         */
        readonly certificateName: string;

        /**
         * Password to use for encrypting the exported certificate.
         *
         * @schema #/definitions/SelectedCertificateInput#password
         */
        readonly password: string;

      }

      /**
       * @schema #/definitions/migrateSqlServerSqlDbDatabaseInputTableMap
       */
      export interface MigrateSqlServerSqlDbDatabaseInputTableMap {
      }

      /**
       * @schema #/definitions/migrateSqlServerSqlDbSyncDatabaseInputMigrationSetting
       */
      export interface MigrateSqlServerSqlDbSyncDatabaseInputMigrationSetting {
      }

      /**
       * @schema #/definitions/migrateSqlServerSqlDbSyncDatabaseInputSourceSetting
       */
      export interface MigrateSqlServerSqlDbSyncDatabaseInputSourceSetting {
      }

      /**
       * @schema #/definitions/migrateSqlServerSqlDbSyncDatabaseInputTableMap
       */
      export interface MigrateSqlServerSqlDbSyncDatabaseInputTableMap {
      }

      /**
       * @schema #/definitions/migrateSqlServerSqlDbSyncDatabaseInputTargetSetting
       */
      export interface MigrateSqlServerSqlDbSyncDatabaseInputTargetSetting {
      }

      /**
       * @schema #/definitions/migrateMySqlAzureDbForMySqlSyncDatabaseInputMigrationSetting
       */
      export interface MigrateMySqlAzureDbForMySqlSyncDatabaseInputMigrationSetting {
      }

      /**
       * @schema #/definitions/migrateMySqlAzureDbForMySqlSyncDatabaseInputSourceSetting
       */
      export interface MigrateMySqlAzureDbForMySqlSyncDatabaseInputSourceSetting {
      }

      /**
       * @schema #/definitions/migrateMySqlAzureDbForMySqlSyncDatabaseInputTargetSetting
       */
      export interface MigrateMySqlAzureDbForMySqlSyncDatabaseInputTargetSetting {
      }

      /**
       * @schema #/definitions/migratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputMigrationSetting
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputMigrationSetting {
      }

      /**
       * @schema #/definitions/migratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputSourceSetting
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputSourceSetting {
      }

      /**
       * @schema #/definitions/migratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputTargetSetting
       */
      export interface MigratePostgreSqlAzureDbForPostgreSqlSyncDatabaseInputTargetSetting {
      }

