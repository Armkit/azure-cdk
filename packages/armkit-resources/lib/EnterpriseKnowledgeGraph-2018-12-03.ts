// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.EnterpriseKnowledgeGraph/services
 *
 * @schema Microsoft.EnterpriseKnowledgeGraph.services
 */
export class Services extends ArmResource {
  /**
   * Defines a "Microsoft.EnterpriseKnowledgeGraph.services" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServicesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'services',
    });
  }
}

/**
 * Microsoft.EnterpriseKnowledgeGraph/services
 *
 * @schema Microsoft.EnterpriseKnowledgeGraph.services
 */
export interface ServicesOptions {
  /**
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#apiVersion
   */
  readonly apiVersion?: MicrosoftEnterpriseKnowledgeGraphServicesApiVersion;

  /**
   * Specifies the location of the resource.
   *
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#location
   */
  readonly location?: string;

  /**
   * The name of the EnterpriseKnowledgeGraph resource.
   *
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#name
   */
  readonly name: MicrosoftEnterpriseKnowledgeGraphServicesNamePattern;

  /**
   * The parameters to provide for the EnterpriseKnowledgeGraph.
   *
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#properties
   */
  readonly properties: EnterpriseKnowledgeGraphProperties;

  /**
   * The SKU of the EnterpriseKnowledgeGraph service account.
   *
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#sku
   */
  readonly sku?: Sku;

  /**
   * Contains resource tags defined as key/value pairs.
   *
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#tags
   */
  readonly tags?: MicrosoftEnterpriseKnowledgeGraphServicesTags;

  /**
   * @schema Microsoft.EnterpriseKnowledgeGraph.services#type
   */
  readonly type: MicrosoftEnterpriseKnowledgeGraphServicesType;

}

export enum MicrosoftEnterpriseKnowledgeGraphServicesApiVersion {
  "MicrosoftEnterpriseKnowledgeGraphServicesApiVersion_2018_12_03" = '2018-12-03',
}

/**
 * @schema MicrosoftEnterpriseKnowledgeGraphServicesName
 */
export class MicrosoftEnterpriseKnowledgeGraphServicesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The parameters to provide for the EnterpriseKnowledgeGraph.
 *
 * @schema #/definitions/EnterpriseKnowledgeGraphProperties
 */
export interface EnterpriseKnowledgeGraphProperties {
  /**
   * The description of the EnterpriseKnowledgeGraph
   *
   * @schema #/definitions/EnterpriseKnowledgeGraphProperties#description
   */
  readonly description?: string;

  /**
   * Specifies the metadata  of the resource.
   *
   * @schema #/definitions/EnterpriseKnowledgeGraphProperties#metadata
   */
  readonly metadata?: EnterpriseKnowledgeGraphPropertiesMetadata;

  /**
   * The state of EnterpriseKnowledgeGraph provisioning.
   *
   * @schema #/definitions/EnterpriseKnowledgeGraphProperties#provisioningState
   */
  readonly provisioningState?: EnterpriseKnowledgeGraphPropertiesProvisioningState;

}

/**
 * The SKU of the EnterpriseKnowledgeGraph service account.
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * The sku name.
   *
   * @schema #/definitions/Sku#name
   */
  readonly name: SkuName;

}

/**
 * @schema MicrosoftEnterpriseKnowledgeGraphServicesTags
 */
export interface MicrosoftEnterpriseKnowledgeGraphServicesTags {
}

export enum MicrosoftEnterpriseKnowledgeGraphServicesType {
  "MicrosoftEnterpriseKnowledgeGraphServicesType_MICROSOFT_ENTERPRISE_KNOWLEDGE_GRAPH_SERVICES" = 'Microsoft.EnterpriseKnowledgeGraph/services',
}

/**
 * Specifies the metadata  of the resource.
 *
 * @schema #/definitions/enterpriseKnowledgeGraphPropertiesMetadata
 */
export interface EnterpriseKnowledgeGraphPropertiesMetadata {
}

export enum EnterpriseKnowledgeGraphPropertiesProvisioningState {
  CREATING = 'Creating',
  DELETING = 'Deleting',
  FAILED = 'Failed',
  SUCCEEDED = 'Succeeded',
}

export enum SkuName {
  "SkuName_F0" = 'F0',
  "SkuName_S1" = 'S1',
}

