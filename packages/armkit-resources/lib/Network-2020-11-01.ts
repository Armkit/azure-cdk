// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Network/FrontDoorWebApplicationFirewallPolicies
 *
 * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies
 */
export class FrontDoorWebApplicationFirewallPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Network.FrontDoorWebApplicationFirewallPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FrontDoorWebApplicationFirewallPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'FrontDoorWebApplicationFirewallPolicies',
    });
  }
}

/**
 * Microsoft.Network/FrontDoorWebApplicationFirewallPolicies
 *
 * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies
 */
export interface FrontDoorWebApplicationFirewallPoliciesOptions {
  /**
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesApiVersion;

  /**
   * Gets a unique read-only string that changes whenever the resource is updated.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#etag
   */
  readonly etag?: string;

  /**
   * Resource location.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#location
   */
  readonly location?: string;

  /**
   * The name of the Web Application Firewall Policy.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#name
   */
  readonly name: string;

  /**
   * Defines web application firewall policy properties.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#properties
   */
  readonly properties: WebApplicationFirewallPolicyProperties;

  /**
   * The pricing tier of the web application firewall policy.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#sku
   */
  readonly sku?: Sku;

  /**
   * Resource tags.
   *
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#tags
   */
  readonly tags?: MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesTags;

  /**
   * @schema Microsoft.Network.FrontDoorWebApplicationFirewallPolicies#type
   */
  readonly type: MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesType;

}

export enum MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesApiVersion {
  "MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesApiVersion_2020_11_01" = '2020-11-01',
}

/**
 * Defines web application firewall policy properties.
 *
 * @schema #/definitions/WebApplicationFirewallPolicyProperties
 */
export interface WebApplicationFirewallPolicyProperties {
  /**
   * Defines contents of custom rules
   *
   * @schema #/definitions/WebApplicationFirewallPolicyProperties#customRules
   */
  readonly customRules?: CustomRuleList;

  /**
   * Defines the list of managed rule sets for the policy.
   *
   * @schema #/definitions/WebApplicationFirewallPolicyProperties#managedRules
   */
  readonly managedRules?: ManagedRuleSetList;

  /**
   * Defines top-level WebApplicationFirewallPolicy configuration settings.
   *
   * @schema #/definitions/WebApplicationFirewallPolicyProperties#policySettings
   */
  readonly policySettings?: PolicySettings;

}

/**
 * The pricing tier of the web application firewall policy.
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * Name of the pricing tier.
   *
   * @schema #/definitions/Sku#name
   */
  readonly name?: SkuName;

}

/**
 * @schema MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesTags
 */
export interface MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesTags {
}

export enum MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesType {
  "MicrosoftNetworkFrontDoorWebApplicationFirewallPoliciesType_MICROSOFT_NETWORK_FRONT_DOOR_WEB_APPLICATION_FIREWALL_POLICIES" = 'Microsoft.Network/FrontDoorWebApplicationFirewallPolicies',
}

/**
 * Defines contents of custom rules
 *
 * @schema #/definitions/CustomRuleList
 */
export interface CustomRuleList {
  /**
   * List of rules
   *
   * @schema #/definitions/CustomRuleList#rules
   */
  readonly rules?: CustomRule[];

}

/**
 * Defines the list of managed rule sets for the policy.
 *
 * @schema #/definitions/ManagedRuleSetList
 */
export interface ManagedRuleSetList {
  /**
   * List of rule sets.
   *
   * @schema #/definitions/ManagedRuleSetList#managedRuleSets
   */
  readonly managedRuleSets?: ManagedRuleSet[];

}

/**
 * Defines top-level WebApplicationFirewallPolicy configuration settings.
 *
 * @schema #/definitions/PolicySettings
 */
export interface PolicySettings {
  /**
   * If the action type is block, customer can override the response body. The body must be specified in base64 encoding.
   *
   * @schema #/definitions/PolicySettings#customBlockResponseBody
   */
  readonly customBlockResponseBody?: PolicySettingsCustomBlockResponseBodyPattern;

  /**
   * If the action type is block, customer can override the response status code.
   *
   * @schema #/definitions/PolicySettings#customBlockResponseStatusCode
   */
  readonly customBlockResponseStatusCode?: number;

  /**
   * Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.
   *
   * @default Enabled if not specified.
   * @schema #/definitions/PolicySettings#enabledState
   */
  readonly enabledState?: PolicySettingsEnabledState;

  /**
   * Describes if it is in detection mode or prevention mode at policy level.
   *
   * @schema #/definitions/PolicySettings#mode
   */
  readonly mode?: PolicySettingsMode;

  /**
   * If action type is redirect, this field represents redirect URL for the client.
   *
   * @schema #/definitions/PolicySettings#redirectUrl
   */
  readonly redirectUrl?: string;

  /**
   * Describes if policy managed rules will inspect the request body content.
   *
   * @schema #/definitions/PolicySettings#requestBodyCheck
   */
  readonly requestBodyCheck?: PolicySettingsRequestBodyCheck;

}

export enum SkuName {
  CLASSIC_AZURE_FRONT_DOOR = 'Classic_AzureFrontDoor',
  STANDARD_AZURE_FRONT_DOOR = 'Standard_AzureFrontDoor',
  PREMIUM_AZURE_FRONT_DOOR = 'Premium_AzureFrontDoor',
}

/**
 * Defines contents of a web application rule
 *
 * @schema #/definitions/CustomRule
 */
export interface CustomRule {
  /**
   * Describes what action to be applied when rule matches.
   *
   * @schema #/definitions/CustomRule#action
   */
  readonly action: CustomRuleAction;

  /**
   * Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
   *
   * @default Enabled if not specified.
   * @schema #/definitions/CustomRule#enabledState
   */
  readonly enabledState?: CustomRuleEnabledState;

  /**
   * List of match conditions.
   *
   * @schema #/definitions/CustomRule#matchConditions
   */
  readonly matchConditions: MatchCondition[];

  /**
   * Describes the name of the rule.
   *
   * @schema #/definitions/CustomRule#name
   */
  readonly name?: string;

  /**
   * Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
   *
   * @schema #/definitions/CustomRule#priority
   */
  readonly priority: number;

  /**
   * Time window for resetting the rate limit count. Default is 1 minute.
   *
   * @default 1 minute.
   * @schema #/definitions/CustomRule#rateLimitDurationInMinutes
   */
  readonly rateLimitDurationInMinutes?: number;

  /**
   * Number of allowed requests per client within the time window.
   *
   * @schema #/definitions/CustomRule#rateLimitThreshold
   */
  readonly rateLimitThreshold?: number;

  /**
   * Describes type of rule.
   *
   * @schema #/definitions/CustomRule#ruleType
   */
  readonly ruleType: CustomRuleRuleType;

}

/**
 * Defines a managed rule set.
 *
 * @schema #/definitions/ManagedRuleSet
 */
export interface ManagedRuleSet {
  /**
   * Describes the exclusions that are applied to all rules in the set.
   *
   * @schema #/definitions/ManagedRuleSet#exclusions
   */
  readonly exclusions?: ManagedRuleExclusion[];

  /**
   * Defines the rule group overrides to apply to the rule set.
   *
   * @schema #/definitions/ManagedRuleSet#ruleGroupOverrides
   */
  readonly ruleGroupOverrides?: ManagedRuleGroupOverride[];

  /**
   * @schema #/definitions/ManagedRuleSet#ruleSetAction
   */
  readonly ruleSetAction?: ManagedRuleSetRuleSetAction;

  /**
   * Defines the rule set type to use.
   *
   * @schema #/definitions/ManagedRuleSet#ruleSetType
   */
  readonly ruleSetType: string;

  /**
   * Defines the version of the rule set to use.
   *
   * @schema #/definitions/ManagedRuleSet#ruleSetVersion
   */
  readonly ruleSetVersion: string;

}

/**
 * @schema #/definitions/policySettingsCustomBlockResponseBody
 */
export class PolicySettingsCustomBlockResponseBodyPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum PolicySettingsEnabledState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

export enum PolicySettingsMode {
  PREVENTION = 'Prevention',
  DETECTION = 'Detection',
}

export enum PolicySettingsRequestBodyCheck {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

export enum CustomRuleAction {
  ALLOW = 'Allow',
  BLOCK = 'Block',
  LOG = 'Log',
  REDIRECT = 'Redirect',
}

export enum CustomRuleEnabledState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

/**
 * Define a match condition.
 *
 * @schema #/definitions/MatchCondition
 */
export interface MatchCondition {
  /**
   * List of possible match values.
   *
   * @schema #/definitions/MatchCondition#matchValue
   */
  readonly matchValue: string[];

  /**
   * Request variable to compare with.
   *
   * @schema #/definitions/MatchCondition#matchVariable
   */
  readonly matchVariable: MatchConditionMatchVariable;

  /**
   * Describes if the result of this condition should be negated.
   *
   * @schema #/definitions/MatchCondition#negateCondition
   */
  readonly negateCondition?: boolean;

  /**
   * Comparison type to use for matching with the variable value.
   *
   * @schema #/definitions/MatchCondition#operator
   */
  readonly operator: MatchConditionOperator;

  /**
   * Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is null.
   *
   * @default null.
   * @schema #/definitions/MatchCondition#selector
   */
  readonly selector?: string;

  /**
   * List of transforms.
   *
   * @schema #/definitions/MatchCondition#transforms
   */
  readonly transforms?: MatchConditionTransforms[];

}

export enum CustomRuleRuleType {
  MATCH_RULE = 'MatchRule',
  RATE_LIMIT_RULE = 'RateLimitRule',
}

/**
 * Exclude variables from managed rule evaluation.
 *
 * @schema #/definitions/ManagedRuleExclusion
 */
export interface ManagedRuleExclusion {
  /**
   * The variable type to be excluded.
   *
   * @schema #/definitions/ManagedRuleExclusion#matchVariable
   */
  readonly matchVariable: ManagedRuleExclusionMatchVariable;

  /**
   * Selector value for which elements in the collection this exclusion applies to.
   *
   * @schema #/definitions/ManagedRuleExclusion#selector
   */
  readonly selector: string;

  /**
   * Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
   *
   * @schema #/definitions/ManagedRuleExclusion#selectorMatchOperator
   */
  readonly selectorMatchOperator: ManagedRuleExclusionSelectorMatchOperator;

}

/**
 * Defines a managed rule group override setting.
 *
 * @schema #/definitions/ManagedRuleGroupOverride
 */
export interface ManagedRuleGroupOverride {
  /**
   * Describes the exclusions that are applied to all rules in the group.
   *
   * @schema #/definitions/ManagedRuleGroupOverride#exclusions
   */
  readonly exclusions?: ManagedRuleExclusion[];

  /**
   * Describes the managed rule group to override.
   *
   * @schema #/definitions/ManagedRuleGroupOverride#ruleGroupName
   */
  readonly ruleGroupName: string;

  /**
   * List of rules that will be disabled. If none specified, all rules in the group will be disabled.
   *
   * @schema #/definitions/ManagedRuleGroupOverride#rules
   */
  readonly rules?: ManagedRuleOverride[];

}

export enum ManagedRuleSetRuleSetAction {
  BLOCK = 'Block',
  LOG = 'Log',
  REDIRECT = 'Redirect',
}

export enum MatchConditionMatchVariable {
  REMOTE_ADDR = 'RemoteAddr',
  REQUEST_METHOD = 'RequestMethod',
  QUERY_STRING = 'QueryString',
  POST_ARGS = 'PostArgs',
  REQUEST_URI = 'RequestUri',
  REQUEST_HEADER = 'RequestHeader',
  REQUEST_BODY = 'RequestBody',
  COOKIES = 'Cookies',
  SOCKET_ADDR = 'SocketAddr',
}

export enum MatchConditionOperator {
  ANY = 'Any',
  IP_MATCH = 'IPMatch',
  GEO_MATCH = 'GeoMatch',
  EQUAL = 'Equal',
  CONTAINS = 'Contains',
  LESS_THAN = 'LessThan',
  GREATER_THAN = 'GreaterThan',
  LESS_THAN_OR_EQUAL = 'LessThanOrEqual',
  GREATER_THAN_OR_EQUAL = 'GreaterThanOrEqual',
  BEGINS_WITH = 'BeginsWith',
  ENDS_WITH = 'EndsWith',
  REG_EX = 'RegEx',
}

export enum MatchConditionTransforms {
  LOWERCASE = 'Lowercase',
  UPPERCASE = 'Uppercase',
  TRIM = 'Trim',
  URL_DECODE = 'UrlDecode',
  URL_ENCODE = 'UrlEncode',
  REMOVE_NULLS = 'RemoveNulls',
}

export enum ManagedRuleExclusionMatchVariable {
  REQUEST_HEADER_NAMES = 'RequestHeaderNames',
  REQUEST_COOKIE_NAMES = 'RequestCookieNames',
  QUERY_STRING_ARG_NAMES = 'QueryStringArgNames',
  REQUEST_BODY_POST_ARG_NAMES = 'RequestBodyPostArgNames',
  REQUEST_BODY_JSON_ARG_NAMES = 'RequestBodyJsonArgNames',
}

export enum ManagedRuleExclusionSelectorMatchOperator {
  EQUALS = 'Equals',
  CONTAINS = 'Contains',
  STARTS_WITH = 'StartsWith',
  ENDS_WITH = 'EndsWith',
  EQUALS_ANY = 'EqualsAny',
}

/**
 * Defines a managed rule group override setting.
 *
 * @schema #/definitions/ManagedRuleOverride
 */
export interface ManagedRuleOverride {
  /**
   * Describes the override action to be applied when rule matches.
   *
   * @schema #/definitions/ManagedRuleOverride#action
   */
  readonly action?: ManagedRuleOverrideAction;

  /**
   * Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.
   *
   * @default Disabled if not specified.
   * @schema #/definitions/ManagedRuleOverride#enabledState
   */
  readonly enabledState?: ManagedRuleOverrideEnabledState;

  /**
   * Describes the exclusions that are applied to this specific rule.
   *
   * @schema #/definitions/ManagedRuleOverride#exclusions
   */
  readonly exclusions?: ManagedRuleExclusion[];

  /**
   * Identifier for the managed rule.
   *
   * @schema #/definitions/ManagedRuleOverride#ruleId
   */
  readonly ruleId: string;

}

export enum ManagedRuleOverrideAction {
  ALLOW = 'Allow',
  BLOCK = 'Block',
  LOG = 'Log',
  REDIRECT = 'Redirect',
}

export enum ManagedRuleOverrideEnabledState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

