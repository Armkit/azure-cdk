      // generated by armkit
      import { ArmResource } from '@yetics/armkit-core';
      import { Construct } from 'constructs';

      /**
       * Microsoft.Devices/IotHubs
       *
       * @schema Microsoft.Devices.IotHubs
       */
      export class IotHubs extends ArmResource {
        /**
         * Defines a "Microsoft.Devices.IotHubs" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: IotHubsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'IotHubs',
          });
        }
      }

      /**
       * Microsoft.Devices/IotHubs/certificates
       *
       * @schema Microsoft.Devices.IotHubs_certificates
       */
      export class IotHubsCertificates extends ArmResource {
        /**
         * Defines a "Microsoft.Devices.IotHubs_certificates" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: IotHubsCertificatesOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'IotHubs_certificates',
          });
        }
      }

      /**
       * Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups
       *
       * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups
       */
      export class IotHubsEventHubEndpointsConsumerGroups extends ArmResource {
        /**
         * Defines a "Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: IotHubsEventHubEndpointsConsumerGroupsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'IotHubs_eventHubEndpoints_ConsumerGroups',
          });
        }
      }

      /**
       * Microsoft.Devices/iotHubs/privateEndpointConnections
       *
       * @schema Microsoft.Devices.iotHubs_privateEndpointConnections
       */
      export class IotHubsPrivateEndpointConnections extends ArmResource {
        /**
         * Defines a "Microsoft.Devices.iotHubs_privateEndpointConnections" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: IotHubsPrivateEndpointConnectionsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'iotHubs_privateEndpointConnections',
          });
        }
      }

      /**
       * Microsoft.Devices/IotHubs
       *
       * @schema Microsoft.Devices.IotHubs
       */
      export interface IotHubsOptions {
        /**
         * @schema Microsoft.Devices.IotHubs#apiVersion
         */
        readonly apiVersion?: MicrosoftDevicesIotHubsApiVersion;

        /**
         * The Etag field is *not* required. If it is provided in the response body, it must also be provided as a header per the normal ETag convention.
         *
         * @schema Microsoft.Devices.IotHubs#etag
         */
        readonly etag?: string;

        /**
         * The resource location.
         *
         * @schema Microsoft.Devices.IotHubs#location
         */
        readonly location: string;

        /**
         * The name of the IoT hub.
         *
         * @schema Microsoft.Devices.IotHubs#name
         */
        readonly name: string;

        /**
         * The properties of an IoT hub.
         *
         * @schema Microsoft.Devices.IotHubs#properties
         */
        readonly properties: IotHubProperties;

        /**
         * @schema Microsoft.Devices.IotHubs#resources
         */
        readonly resources?: MicrosoftDevicesIotHubsResources[];

        /**
         * Information about the SKU of the IoT hub.
         *
         * @schema Microsoft.Devices.IotHubs#sku
         */
        readonly sku: IotHubSkuInfo;

        /**
         * The resource tags.
         *
         * @schema Microsoft.Devices.IotHubs#tags
         */
        readonly tags?: MicrosoftDevicesIotHubsTags;

        /**
         * @schema Microsoft.Devices.IotHubs#type
         */
        readonly type: MicrosoftDevicesIotHubsType;

      }

      /**
       * Microsoft.Devices/IotHubs/certificates
       *
       * @schema Microsoft.Devices.IotHubs_certificates
       */
      export interface IotHubsCertificatesOptions {
        /**
         * @schema Microsoft.Devices.IotHubs_certificates#apiVersion
         */
        readonly apiVersion?: MicrosoftDevicesIotHubsCertificatesApiVersion;

        /**
         * The name of the certificate
         *
         * @schema Microsoft.Devices.IotHubs_certificates#name
         */
        readonly name: MicrosoftDevicesIotHubsCertificatesNamePattern;

        /**
         * The description of an X509 CA Certificate.
         *
         * @schema Microsoft.Devices.IotHubs_certificates#properties
         */
        readonly properties: CertificateProperties;

        /**
         * @schema Microsoft.Devices.IotHubs_certificates#type
         */
        readonly type: MicrosoftDevicesIotHubsCertificatesType;

      }

      /**
       * Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups
       *
       * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups
       */
      export interface IotHubsEventHubEndpointsConsumerGroupsOptions {
        /**
         * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups#apiVersion
         */
        readonly apiVersion?: MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsApiVersion;

        /**
         * The name of the consumer group to add.
         *
         * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups#name
         */
        readonly name: string;

        /**
         * The EventHub consumer group name.
         *
         * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups#properties
         */
        readonly properties: EventHubConsumerGroupName;

        /**
         * @schema Microsoft.Devices.IotHubs_eventHubEndpoints_ConsumerGroups#type
         */
        readonly type: MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsType;

      }

      /**
       * Microsoft.Devices/iotHubs/privateEndpointConnections
       *
       * @schema Microsoft.Devices.iotHubs_privateEndpointConnections
       */
      export interface IotHubsPrivateEndpointConnectionsOptions {
        /**
         * @schema Microsoft.Devices.iotHubs_privateEndpointConnections#apiVersion
         */
        readonly apiVersion?: MicrosoftDevicesIotHubsPrivateEndpointConnectionsApiVersion;

        /**
         * The name of the private endpoint connection
         *
         * @schema Microsoft.Devices.iotHubs_privateEndpointConnections#name
         */
        readonly name: string;

        /**
         * The properties of a private endpoint connection
         *
         * @schema Microsoft.Devices.iotHubs_privateEndpointConnections#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

        /**
         * @schema Microsoft.Devices.iotHubs_privateEndpointConnections#type
         */
        readonly type: MicrosoftDevicesIotHubsPrivateEndpointConnectionsType;

      }

      export enum MicrosoftDevicesIotHubsApiVersion {
        "MicrosoftDevicesIotHubsApiVersion_2020_08_31" = '2020-08-31',
      }

      /**
       * The properties of an IoT hub.
       *
       * @schema #/definitions/IotHubProperties
       */
      export interface IotHubProperties {
        /**
         * The shared access policies you can use to secure a connection to the IoT hub.
         *
         * @schema #/definitions/IotHubProperties#authorizationPolicies
         */
        readonly authorizationPolicies?: SharedAccessSignatureAuthorizationRule[];

        /**
         * The IoT hub cloud-to-device messaging properties.
         *
         * @schema #/definitions/IotHubProperties#cloudToDevice
         */
        readonly cloudToDevice?: CloudToDeviceProperties;

        /**
         * IoT hub comments.
         *
         * @schema #/definitions/IotHubProperties#comments
         */
        readonly comments?: string;

        /**
         * If True, file upload notifications are enabled.
         *
         * @schema #/definitions/IotHubProperties#enableFileUploadNotifications
         */
        readonly enableFileUploadNotifications?: boolean;

        /**
         * The Event Hub-compatible endpoint properties. The only possible keys to this dictionary is events. This key has to be present in the dictionary while making create or update calls for the IoT hub.
         *
         * @schema #/definitions/IotHubProperties#eventHubEndpoints
         */
        readonly eventHubEndpoints?: IotHubPropertiesEventHubEndpoints;

        /**
         * The capabilities and features enabled for the IoT hub.
         *
         * @schema #/definitions/IotHubProperties#features
         */
        readonly features?: IotHubPropertiesFeatures;

        /**
         * The IP filter rules.
         *
         * @schema #/definitions/IotHubProperties#ipFilterRules
         */
        readonly ipFilterRules?: IpFilterRule[];

        /**
         * The messaging endpoint properties for the file upload notification queue.
         *
         * @schema #/definitions/IotHubProperties#messagingEndpoints
         */
        readonly messagingEndpoints?: IotHubPropertiesMessagingEndpoints;

        /**
         * Specifies the minimum TLS version to support for this hub. Can be set to "1.2" to have clients that use a TLS version below 1.2 to be rejected.
         *
         * @schema #/definitions/IotHubProperties#minTlsVersion
         */
        readonly minTlsVersion?: string;

        /**
         * Network Rule Set Properties of IotHub
         *
         * @schema #/definitions/IotHubProperties#networkRuleSets
         */
        readonly networkRuleSets?: NetworkRuleSetProperties;

        /**
         * Private endpoint connections created on this IotHub
         *
         * @schema #/definitions/IotHubProperties#privateEndpointConnections
         */
        readonly privateEndpointConnections?: PrivateEndpointConnection[];

        /**
         * Whether requests from Public Network are allowed.
         *
         * @schema #/definitions/IotHubProperties#publicNetworkAccess
         */
        readonly publicNetworkAccess?: IotHubPropertiesPublicNetworkAccess;

        /**
         * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
         *
         * @schema #/definitions/IotHubProperties#routing
         */
        readonly routing?: RoutingProperties;

        /**
         * The list of Azure Storage endpoints where you can upload files. Currently you can configure only one Azure Storage account and that MUST have its key as $default. Specifying more than one storage account causes an error to be thrown. Not specifying a value for this property when the enableFileUploadNotifications property is set to True, causes an error to be thrown.
         *
         * @schema #/definitions/IotHubProperties#storageEndpoints
         */
        readonly storageEndpoints?: IotHubPropertiesStorageEndpoints;

      }

      /**
       * @schema MicrosoftDevicesIotHubsResources
       */
      export class MicrosoftDevicesIotHubsResources {
        public static fromIotHubsCertificatesChildResource(value: IotHubsCertificatesChildResource): MicrosoftDevicesIotHubsResources {
          return new MicrosoftDevicesIotHubsResources(value);
        }
        public static fromIotHubsPrivateEndpointConnectionsChildResource(value: IotHubsPrivateEndpointConnectionsChildResource): MicrosoftDevicesIotHubsResources {
          return new MicrosoftDevicesIotHubsResources(value);
        }
        private constructor(value: any) {
          Object.defineProperty(this, 'resolve', { value: () => value });
        }
      }

      /**
       * Information about the SKU of the IoT hub.
       *
       * @schema #/definitions/IotHubSkuInfo
       */
      export interface IotHubSkuInfo {
        /**
         * The number of provisioned IoT Hub units. See: https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
         *
         * @schema #/definitions/IotHubSkuInfo#capacity
         */
        readonly capacity?: number;

        /**
         * The name of the SKU.
         *
         * @schema #/definitions/IotHubSkuInfo#name
         */
        readonly name: IotHubSkuInfoName;

      }

      /**
       * @schema MicrosoftDevicesIotHubsTags
       */
      export interface MicrosoftDevicesIotHubsTags {
      }

      export enum MicrosoftDevicesIotHubsType {
        "MicrosoftDevicesIotHubsType_MICROSOFT_DEVICES_IOT_HUBS" = 'Microsoft.Devices/IotHubs',
      }

      export enum MicrosoftDevicesIotHubsCertificatesApiVersion {
        "MicrosoftDevicesIotHubsCertificatesApiVersion_2020_08_31" = '2020-08-31',
      }

      /**
       * @schema MicrosoftDevicesIotHubsCertificatesName
       */
      export class MicrosoftDevicesIotHubsCertificatesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      /**
       * The description of an X509 CA Certificate.
       *
       * @schema #/definitions/CertificateProperties
       */
      export interface CertificateProperties {
        /**
         * The certificate content
         *
         * @schema #/definitions/CertificateProperties#certificate
         */
        readonly certificate?: string;

      }

      export enum MicrosoftDevicesIotHubsCertificatesType {
        "MicrosoftDevicesIotHubsCertificatesType_MICROSOFT_DEVICES_IOT_HUBS_CERTIFICATES" = 'Microsoft.Devices/IotHubs/certificates',
      }

      export enum MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsApiVersion {
        "MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsApiVersion_2020_08_31" = '2020-08-31',
      }

      /**
       * The EventHub consumer group name.
       *
       * @schema #/definitions/EventHubConsumerGroupName
       */
      export interface EventHubConsumerGroupName {
        /**
         * EventHub consumer group name
         *
         * @schema #/definitions/EventHubConsumerGroupName#name
         */
        readonly name?: string;

      }

      export enum MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsType {
        "MicrosoftDevicesIotHubsEventHubEndpointsConsumerGroupsType_MICROSOFT_DEVICES_IOT_HUBS_EVENT_HUB_ENDPOINTS_CONSUMER_GROUPS" = 'Microsoft.Devices/IotHubs/eventHubEndpoints/ConsumerGroups',
      }

      export enum MicrosoftDevicesIotHubsPrivateEndpointConnectionsApiVersion {
        "MicrosoftDevicesIotHubsPrivateEndpointConnectionsApiVersion_2020_08_31" = '2020-08-31',
      }

      /**
       * The properties of a private endpoint connection
       *
       * @schema #/definitions/PrivateEndpointConnectionProperties
       */
      export interface PrivateEndpointConnectionProperties {
        /**
         * The private endpoint property of a private endpoint connection
         *
         * @schema #/definitions/PrivateEndpointConnectionProperties#privateEndpoint
         */
        readonly privateEndpoint?: PrivateEndpoint;

        /**
         * The current state of a private endpoint connection
         *
         * @schema #/definitions/PrivateEndpointConnectionProperties#privateLinkServiceConnectionState
         */
        readonly privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;

      }

      export enum MicrosoftDevicesIotHubsPrivateEndpointConnectionsType {
        "MicrosoftDevicesIotHubsPrivateEndpointConnectionsType_MICROSOFT_DEVICES_IOT_HUBS_PRIVATE_ENDPOINT_CONNECTIONS" = 'Microsoft.Devices/iotHubs/privateEndpointConnections',
      }

      /**
       * The properties of an IoT hub shared access policy.
       *
       * @schema #/definitions/SharedAccessSignatureAuthorizationRule
       */
      export interface SharedAccessSignatureAuthorizationRule {
        /**
         * The name of the shared access policy.
         *
         * @schema #/definitions/SharedAccessSignatureAuthorizationRule#keyName
         */
        readonly keyName: string;

        /**
         * The primary key.
         *
         * @schema #/definitions/SharedAccessSignatureAuthorizationRule#primaryKey
         */
        readonly primaryKey?: string;

        /**
         * The permissions assigned to the shared access policy.
         *
         * @schema #/definitions/SharedAccessSignatureAuthorizationRule#rights
         */
        readonly rights: SharedAccessSignatureAuthorizationRuleRights;

        /**
         * The secondary key.
         *
         * @schema #/definitions/SharedAccessSignatureAuthorizationRule#secondaryKey
         */
        readonly secondaryKey?: string;

      }

      /**
       * The IoT hub cloud-to-device messaging properties.
       *
       * @schema #/definitions/CloudToDeviceProperties
       */
      export interface CloudToDeviceProperties {
        /**
         * The default time to live for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         *
         * @schema #/definitions/CloudToDeviceProperties#defaultTtlAsIso8601
         */
        readonly defaultTtlAsIso8601?: string;

        /**
         * The properties of the feedback queue for cloud-to-device messages.
         *
         * @schema #/definitions/CloudToDeviceProperties#feedback
         */
        readonly feedback?: FeedbackProperties;

        /**
         * The max delivery count for cloud-to-device messages in the device queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         *
         * @schema #/definitions/CloudToDeviceProperties#maxDeliveryCount
         */
        readonly maxDeliveryCount?: number;

      }

      /**
       * @schema #/definitions/iotHubPropertiesEventHubEndpoints
       */
      export interface IotHubPropertiesEventHubEndpoints {
      }

      export enum IotHubPropertiesFeatures {
        NONE = 'None',
        DEVICE_MANAGEMENT = 'DeviceManagement',
      }

      /**
       * The IP filter rules for the IoT hub.
       *
       * @schema #/definitions/IpFilterRule
       */
      export interface IpFilterRule {
        /**
         * The desired action for requests captured by this rule.
         *
         * @schema #/definitions/IpFilterRule#action
         */
        readonly action: IpFilterRuleAction;

        /**
         * The name of the IP filter rule.
         *
         * @schema #/definitions/IpFilterRule#filterName
         */
        readonly filterName: string;

        /**
         * A string that contains the IP address range in CIDR notation for the rule.
         *
         * @schema #/definitions/IpFilterRule#ipMask
         */
        readonly ipMask: string;

      }

      /**
       * @schema #/definitions/iotHubPropertiesMessagingEndpoints
       */
      export interface IotHubPropertiesMessagingEndpoints {
      }

      /**
       * Network Rule Set Properties of IotHub
       *
       * @schema #/definitions/NetworkRuleSetProperties
       */
      export interface NetworkRuleSetProperties {
        /**
         * If True, then Network Rule Set is also applied to BuiltIn EventHub EndPoint of IotHub
         *
         * @schema #/definitions/NetworkRuleSetProperties#applyToBuiltInEventHubEndpoint
         */
        readonly applyToBuiltInEventHubEndpoint: boolean;

        /**
         * Default Action for Network Rule Set.
         *
         * @schema #/definitions/NetworkRuleSetProperties#defaultAction
         */
        readonly defaultAction?: NetworkRuleSetPropertiesDefaultAction;

        /**
         * List of IP Rules
         *
         * @schema #/definitions/NetworkRuleSetProperties#ipRules
         */
        readonly ipRules: NetworkRuleSetIpRule[];

      }

      /**
       * The private endpoint connection of an IotHub
       *
       * @schema #/definitions/PrivateEndpointConnection
       */
      export interface PrivateEndpointConnection {
        /**
         * The properties of a private endpoint connection
         *
         * @schema #/definitions/PrivateEndpointConnection#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

      }

      export enum IotHubPropertiesPublicNetworkAccess {
        ENABLED = 'Enabled',
        DISABLED = 'Disabled',
      }

      /**
       * The routing related properties of the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging
       *
       * @schema #/definitions/RoutingProperties
       */
      export interface RoutingProperties {
        /**
         * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
         *
         * @schema #/definitions/RoutingProperties#endpoints
         */
        readonly endpoints?: RoutingEndpoints;

        /**
         * The list of user-provided enrichments that the IoT hub applies to messages to be delivered to built-in and custom endpoints. See: https://aka.ms/telemetryoneventgrid
         *
         * @schema #/definitions/RoutingProperties#enrichments
         */
        readonly enrichments?: EnrichmentProperties[];

        /**
         * The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
         *
         * @schema #/definitions/RoutingProperties#fallbackRoute
         */
        readonly fallbackRoute?: FallbackRouteProperties;

        /**
         * The list of user-provided routing rules that the IoT hub uses to route messages to built-in and custom endpoints. A maximum of 100 routing rules are allowed for paid hubs and a maximum of 5 routing rules are allowed for free hubs.
         *
         * @schema #/definitions/RoutingProperties#routes
         */
        readonly routes?: RouteProperties[];

      }

      /**
       * @schema #/definitions/iotHubPropertiesStorageEndpoints
       */
      export interface IotHubPropertiesStorageEndpoints {
      }

      /**
       * Microsoft.Devices/IotHubs/certificates
       *
       * @schema #/definitions/IotHubs_certificates_childResource
       */
      export interface IotHubsCertificatesChildResource {
        /**
         * @schema #/definitions/IotHubs_certificates_childResource#apiVersion
         */
        readonly apiVersion: IotHubsCertificatesChildResourceApiVersion;

        /**
         * The name of the certificate
         *
         * @schema #/definitions/IotHubs_certificates_childResource#name
         */
        readonly name: IotHubsCertificatesChildResourceNamePattern;

        /**
         * The description of an X509 CA Certificate.
         *
         * @schema #/definitions/IotHubs_certificates_childResource#properties
         */
        readonly properties: CertificateProperties;

        /**
         * @schema #/definitions/IotHubs_certificates_childResource#type
         */
        readonly type: IotHubsCertificatesChildResourceType;

      }

      /**
       * Microsoft.Devices/iotHubs/privateEndpointConnections
       *
       * @schema #/definitions/iotHubs_privateEndpointConnections_childResource
       */
      export interface IotHubsPrivateEndpointConnectionsChildResource {
        /**
         * @schema #/definitions/iotHubs_privateEndpointConnections_childResource#apiVersion
         */
        readonly apiVersion: IotHubsPrivateEndpointConnectionsChildResourceApiVersion;

        /**
         * The name of the private endpoint connection
         *
         * @schema #/definitions/iotHubs_privateEndpointConnections_childResource#name
         */
        readonly name: string;

        /**
         * The properties of a private endpoint connection
         *
         * @schema #/definitions/iotHubs_privateEndpointConnections_childResource#properties
         */
        readonly properties: PrivateEndpointConnectionProperties;

        /**
         * @schema #/definitions/iotHubs_privateEndpointConnections_childResource#type
         */
        readonly type: IotHubsPrivateEndpointConnectionsChildResourceType;

      }

      export enum IotHubSkuInfoName {
        "IotHubSkuInfoName_F1" = 'F1',
        "IotHubSkuInfoName_S1" = 'S1',
        "IotHubSkuInfoName_S2" = 'S2',
        "IotHubSkuInfoName_S3" = 'S3',
        "IotHubSkuInfoName_B1" = 'B1',
        "IotHubSkuInfoName_B2" = 'B2',
        "IotHubSkuInfoName_B3" = 'B3',
      }

      /**
       * The private endpoint property of a private endpoint connection
       *
       * @schema #/definitions/PrivateEndpoint
       */
      export interface PrivateEndpoint {
      }

      /**
       * The current state of a private endpoint connection
       *
       * @schema #/definitions/PrivateLinkServiceConnectionState
       */
      export interface PrivateLinkServiceConnectionState {
        /**
         * Actions required for a private endpoint connection
         *
         * @schema #/definitions/PrivateLinkServiceConnectionState#actionsRequired
         */
        readonly actionsRequired?: string;

        /**
         * The description for the current state of a private endpoint connection
         *
         * @schema #/definitions/PrivateLinkServiceConnectionState#description
         */
        readonly description: string;

        /**
         * The status of a private endpoint connection.
         *
         * @schema #/definitions/PrivateLinkServiceConnectionState#status
         */
        readonly status: PrivateLinkServiceConnectionStateStatus;

      }

      export enum SharedAccessSignatureAuthorizationRuleRights {
        REGISTRY_READ = 'RegistryRead',
        REGISTRY_WRITE = 'RegistryWrite',
        SERVICE_CONNECT = 'ServiceConnect',
        DEVICE_CONNECT = 'DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_REGISTRY_WRITE" = 'RegistryRead, RegistryWrite',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_SERVICE_CONNECT" = 'RegistryRead, ServiceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_DEVICE_CONNECT" = 'RegistryRead, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_WRITE_SERVICE_CONNECT" = 'RegistryWrite, ServiceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_WRITE_DEVICE_CONNECT" = 'RegistryWrite, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_SERVICE_CONNECT_DEVICE_CONNECT" = 'ServiceConnect, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_REGISTRY_WRITE_SERVICE_CONNECT" = 'RegistryRead, RegistryWrite, ServiceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_REGISTRY_WRITE_DEVICE_CONNECT" = 'RegistryRead, RegistryWrite, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_SERVICE_CONNECT_DEVICE_CONNECT" = 'RegistryRead, ServiceConnect, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_WRITE_SERVICE_CONNECT_DEVICE_CONNECT" = 'RegistryWrite, ServiceConnect, DeviceConnect',
        "SharedAccessSignatureAuthorizationRuleRights_REGISTRY_READ_REGISTRY_WRITE_SERVICE_CONNECT_DEVICE_CONNECT" = 'RegistryRead, RegistryWrite, ServiceConnect, DeviceConnect',
      }

      /**
       * The properties of the feedback queue for cloud-to-device messages.
       *
       * @schema #/definitions/FeedbackProperties
       */
      export interface FeedbackProperties {
        /**
         * The lock duration for the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         *
         * @schema #/definitions/FeedbackProperties#lockDurationAsIso8601
         */
        readonly lockDurationAsIso8601?: string;

        /**
         * The number of times the IoT hub attempts to deliver a message on the feedback queue. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         *
         * @schema #/definitions/FeedbackProperties#maxDeliveryCount
         */
        readonly maxDeliveryCount?: number;

        /**
         * The period of time for which a message is available to consume before it is expired by the IoT hub. See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
         *
         * @schema #/definitions/FeedbackProperties#ttlAsIso8601
         */
        readonly ttlAsIso8601?: string;

      }

      export enum IpFilterRuleAction {
        ACCEPT = 'Accept',
        REJECT = 'Reject',
      }

      export enum NetworkRuleSetPropertiesDefaultAction {
        DENY = 'Deny',
        ALLOW = 'Allow',
      }

      /**
       * IP Rule to be applied as part of Network Rule Set
       *
       * @schema #/definitions/NetworkRuleSetIpRule
       */
      export interface NetworkRuleSetIpRule {
        /**
         * IP Filter Action.
         *
         * @schema #/definitions/NetworkRuleSetIpRule#action
         */
        readonly action?: NetworkRuleSetIpRuleAction;

        /**
         * Name of the IP filter rule.
         *
         * @schema #/definitions/NetworkRuleSetIpRule#filterName
         */
        readonly filterName: string;

        /**
         * A string that contains the IP address range in CIDR notation for the rule.
         *
         * @schema #/definitions/NetworkRuleSetIpRule#ipMask
         */
        readonly ipMask: string;

      }

      /**
       * The properties related to the custom endpoints to which your IoT hub routes messages based on the routing rules. A maximum of 10 custom endpoints are allowed across all endpoint types for paid hubs and only 1 custom endpoint is allowed across all endpoint types for free hubs.
       *
       * @schema #/definitions/RoutingEndpoints
       */
      export interface RoutingEndpoints {
        /**
         * The list of Event Hubs endpoints that IoT hub routes messages to, based on the routing rules. This list does not include the built-in Event Hubs endpoint.
         *
         * @schema #/definitions/RoutingEndpoints#eventHubs
         */
        readonly eventHubs?: RoutingEventHubProperties[];

        /**
         * The list of Service Bus queue endpoints that IoT hub routes the messages to, based on the routing rules.
         *
         * @schema #/definitions/RoutingEndpoints#serviceBusQueues
         */
        readonly serviceBusQueues?: RoutingServiceBusQueueEndpointProperties[];

        /**
         * The list of Service Bus topic endpoints that the IoT hub routes the messages to, based on the routing rules.
         *
         * @schema #/definitions/RoutingEndpoints#serviceBusTopics
         */
        readonly serviceBusTopics?: RoutingServiceBusTopicEndpointProperties[];

        /**
         * The list of storage container endpoints that IoT hub routes messages to, based on the routing rules.
         *
         * @schema #/definitions/RoutingEndpoints#storageContainers
         */
        readonly storageContainers?: RoutingStorageContainerProperties[];

      }

      /**
       * The properties of an enrichment that your IoT hub applies to messages delivered to endpoints.
       *
       * @schema #/definitions/EnrichmentProperties
       */
      export interface EnrichmentProperties {
        /**
         * The list of endpoints for which the enrichment is applied to the message.
         *
         * @schema #/definitions/EnrichmentProperties#endpointNames
         */
        readonly endpointNames: string[];

        /**
         * The key or name for the enrichment property.
         *
         * @schema #/definitions/EnrichmentProperties#key
         */
        readonly key: string;

        /**
         * The value for the enrichment property.
         *
         * @schema #/definitions/EnrichmentProperties#value
         */
        readonly value: string;

      }

      /**
       * The properties of the fallback route. IoT Hub uses these properties when it routes messages to the fallback endpoint.
       *
       * @schema #/definitions/FallbackRouteProperties
       */
      export interface FallbackRouteProperties {
        /**
         * The condition which is evaluated in order to apply the fallback route. If the condition is not provided it will evaluate to true by default. For grammar, See: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         *
         * @schema #/definitions/FallbackRouteProperties#condition
         */
        readonly condition?: string;

        /**
         * The list of endpoints to which the messages that satisfy the condition are routed to. Currently only 1 endpoint is allowed.
         *
         * @schema #/definitions/FallbackRouteProperties#endpointNames
         */
        readonly endpointNames: string[];

        /**
         * Used to specify whether the fallback route is enabled.
         *
         * @schema #/definitions/FallbackRouteProperties#isEnabled
         */
        readonly isEnabled: boolean;

        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         *
         * @schema #/definitions/FallbackRouteProperties#name
         */
        readonly name?: string;

        /**
         * The source to which the routing rule is to be applied to. For example, DeviceMessages.
         *
         * @schema #/definitions/FallbackRouteProperties#source
         */
        readonly source: FallbackRoutePropertiesSource;

      }

      /**
       * The properties of a routing rule that your IoT hub uses to route messages to endpoints.
       *
       * @schema #/definitions/RouteProperties
       */
      export interface RouteProperties {
        /**
         * The condition that is evaluated to apply the routing rule. If no condition is provided, it evaluates to true by default. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
         *
         * @schema #/definitions/RouteProperties#condition
         */
        readonly condition?: string;

        /**
         * The list of endpoints to which messages that satisfy the condition are routed. Currently only one endpoint is allowed.
         *
         * @schema #/definitions/RouteProperties#endpointNames
         */
        readonly endpointNames: string[];

        /**
         * Used to specify whether a route is enabled.
         *
         * @schema #/definitions/RouteProperties#isEnabled
         */
        readonly isEnabled: boolean;

        /**
         * The name of the route. The name can only include alphanumeric characters, periods, underscores, hyphens, has a maximum length of 64 characters, and must be unique.
         *
         * @schema #/definitions/RouteProperties#name
         */
        readonly name: RoutePropertiesNamePattern;

        /**
         * The source that the routing rule is to be applied to, such as DeviceMessages.
         *
         * @schema #/definitions/RouteProperties#source
         */
        readonly source: RoutePropertiesSource;

      }

      export enum IotHubsCertificatesChildResourceApiVersion {
        "IotHubsCertificatesChildResourceApiVersion_2020_08_31" = '2020-08-31',
      }

      /**
       * @schema #/definitions/iotHubsCertificatesChildResourceName
       */
      export class IotHubsCertificatesChildResourceNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum IotHubsCertificatesChildResourceType {
        CERTIFICATES = 'certificates',
      }

      export enum IotHubsPrivateEndpointConnectionsChildResourceApiVersion {
        "IotHubsPrivateEndpointConnectionsChildResourceApiVersion_2020_08_31" = '2020-08-31',
      }

      export enum IotHubsPrivateEndpointConnectionsChildResourceType {
        PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
      }

      export enum PrivateLinkServiceConnectionStateStatus {
        PENDING = 'Pending',
        APPROVED = 'Approved',
        REJECTED = 'Rejected',
        DISCONNECTED = 'Disconnected',
      }

      export enum NetworkRuleSetIpRuleAction {
        ALLOW = 'Allow',
      }

      /**
       * The properties related to an event hub endpoint.
       *
       * @schema #/definitions/RoutingEventHubProperties
       */
      export interface RoutingEventHubProperties {
        /**
         * Method used to authenticate against the event hub endpoint.
         *
         * @schema #/definitions/RoutingEventHubProperties#authenticationType
         */
        readonly authenticationType?: RoutingEventHubPropertiesAuthenticationType;

        /**
         * The connection string of the event hub endpoint. 
         *
         * @schema #/definitions/RoutingEventHubProperties#connectionString
         */
        readonly connectionString?: string;

        /**
         * The url of the event hub endpoint. It must include the protocol sb://
         *
         * @schema #/definitions/RoutingEventHubProperties#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * Event hub name on the event hub namespace
         *
         * @schema #/definitions/RoutingEventHubProperties#entityPath
         */
        readonly entityPath?: string;

        /**
         * Id of the event hub endpoint
         *
         * @schema #/definitions/RoutingEventHubProperties#id
         */
        readonly id?: string;

        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         *
         * @schema #/definitions/RoutingEventHubProperties#name
         */
        readonly name: RoutingEventHubPropertiesNamePattern;

        /**
         * The name of the resource group of the event hub endpoint.
         *
         * @schema #/definitions/RoutingEventHubProperties#resourceGroup
         */
        readonly resourceGroup?: string;

        /**
         * The subscription identifier of the event hub endpoint.
         *
         * @schema #/definitions/RoutingEventHubProperties#subscriptionId
         */
        readonly subscriptionId?: string;

      }

      /**
       * The properties related to service bus queue endpoint types.
       *
       * @schema #/definitions/RoutingServiceBusQueueEndpointProperties
       */
      export interface RoutingServiceBusQueueEndpointProperties {
        /**
         * Method used to authenticate against the service bus queue endpoint.
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#authenticationType
         */
        readonly authenticationType?: RoutingServiceBusQueueEndpointPropertiesAuthenticationType;

        /**
         * The connection string of the service bus queue endpoint.
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#connectionString
         */
        readonly connectionString?: string;

        /**
         * The url of the service bus queue endpoint. It must include the protocol sb://
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * Queue name on the service bus namespace
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#entityPath
         */
        readonly entityPath?: string;

        /**
         * Id of the service bus queue endpoint
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#id
         */
        readonly id?: string;

        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types. The name need not be the same as the actual queue name.
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#name
         */
        readonly name: RoutingServiceBusQueueEndpointPropertiesNamePattern;

        /**
         * The name of the resource group of the service bus queue endpoint.
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#resourceGroup
         */
        readonly resourceGroup?: string;

        /**
         * The subscription identifier of the service bus queue endpoint.
         *
         * @schema #/definitions/RoutingServiceBusQueueEndpointProperties#subscriptionId
         */
        readonly subscriptionId?: string;

      }

      /**
       * The properties related to service bus topic endpoint types.
       *
       * @schema #/definitions/RoutingServiceBusTopicEndpointProperties
       */
      export interface RoutingServiceBusTopicEndpointProperties {
        /**
         * Method used to authenticate against the service bus topic endpoint.
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#authenticationType
         */
        readonly authenticationType?: RoutingServiceBusTopicEndpointPropertiesAuthenticationType;

        /**
         * The connection string of the service bus topic endpoint.
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#connectionString
         */
        readonly connectionString?: string;

        /**
         * The url of the service bus topic endpoint. It must include the protocol sb://
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * Queue name on the service bus topic
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#entityPath
         */
        readonly entityPath?: string;

        /**
         * Id of the service bus topic endpoint
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#id
         */
        readonly id?: string;

        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.  The name need not be the same as the actual topic name.
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#name
         */
        readonly name: RoutingServiceBusTopicEndpointPropertiesNamePattern;

        /**
         * The name of the resource group of the service bus topic endpoint.
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#resourceGroup
         */
        readonly resourceGroup?: string;

        /**
         * The subscription identifier of the service bus topic endpoint.
         *
         * @schema #/definitions/RoutingServiceBusTopicEndpointProperties#subscriptionId
         */
        readonly subscriptionId?: string;

      }

      /**
       * The properties related to a storage container endpoint.
       *
       * @schema #/definitions/RoutingStorageContainerProperties
       */
      export interface RoutingStorageContainerProperties {
        /**
         * Method used to authenticate against the storage endpoint.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#authenticationType
         */
        readonly authenticationType?: RoutingStorageContainerPropertiesAuthenticationType;

        /**
         * Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#batchFrequencyInSeconds
         */
        readonly batchFrequencyInSeconds?: number;

        /**
         * The connection string of the storage account.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#connectionString
         */
        readonly connectionString?: string;

        /**
         * The name of storage container in the storage account.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#containerName
         */
        readonly containerName: string;

        /**
         * Encoding that is used to serialize messages to blobs. Supported values are 'avro', 'avrodeflate', and 'JSON'. Default value is 'avro'.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#encoding
         */
        readonly encoding?: RoutingStorageContainerPropertiesEncoding;

        /**
         * The url of the storage endpoint. It must include the protocol https://
         *
         * @schema #/definitions/RoutingStorageContainerProperties#endpointUri
         */
        readonly endpointUri?: string;

        /**
         * File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#fileNameFormat
         */
        readonly fileNameFormat?: string;

        /**
         * Id of the storage container endpoint
         *
         * @schema #/definitions/RoutingStorageContainerProperties#id
         */
        readonly id?: string;

        /**
         * Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB).
         *
         * @schema #/definitions/RoutingStorageContainerProperties#maxChunkSizeInBytes
         */
        readonly maxChunkSizeInBytes?: number;

        /**
         * The name that identifies this endpoint. The name can only include alphanumeric characters, periods, underscores, hyphens and has a maximum length of 64 characters. The following names are reserved:  events, fileNotifications, $default. Endpoint names must be unique across endpoint types.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#name
         */
        readonly name: RoutingStorageContainerPropertiesNamePattern;

        /**
         * The name of the resource group of the storage account.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#resourceGroup
         */
        readonly resourceGroup?: string;

        /**
         * The subscription identifier of the storage account.
         *
         * @schema #/definitions/RoutingStorageContainerProperties#subscriptionId
         */
        readonly subscriptionId?: string;

      }

      export enum FallbackRoutePropertiesSource {
        INVALID = 'Invalid',
        DEVICE_MESSAGES = 'DeviceMessages',
        TWIN_CHANGE_EVENTS = 'TwinChangeEvents',
        DEVICE_LIFECYCLE_EVENTS = 'DeviceLifecycleEvents',
        DEVICE_JOB_LIFECYCLE_EVENTS = 'DeviceJobLifecycleEvents',
      }

      /**
       * @schema #/definitions/routePropertiesName
       */
      export class RoutePropertiesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum RoutePropertiesSource {
        INVALID = 'Invalid',
        DEVICE_MESSAGES = 'DeviceMessages',
        TWIN_CHANGE_EVENTS = 'TwinChangeEvents',
        DEVICE_LIFECYCLE_EVENTS = 'DeviceLifecycleEvents',
        DEVICE_JOB_LIFECYCLE_EVENTS = 'DeviceJobLifecycleEvents',
      }

      export enum RoutingEventHubPropertiesAuthenticationType {
        KEY_BASED = 'keyBased',
        IDENTITY_BASED = 'identityBased',
      }

      /**
       * @schema #/definitions/routingEventHubPropertiesName
       */
      export class RoutingEventHubPropertiesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum RoutingServiceBusQueueEndpointPropertiesAuthenticationType {
        KEY_BASED = 'keyBased',
        IDENTITY_BASED = 'identityBased',
      }

      /**
       * @schema #/definitions/routingServiceBusQueueEndpointPropertiesName
       */
      export class RoutingServiceBusQueueEndpointPropertiesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum RoutingServiceBusTopicEndpointPropertiesAuthenticationType {
        KEY_BASED = 'keyBased',
        IDENTITY_BASED = 'identityBased',
      }

      /**
       * @schema #/definitions/routingServiceBusTopicEndpointPropertiesName
       */
      export class RoutingServiceBusTopicEndpointPropertiesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

      export enum RoutingStorageContainerPropertiesAuthenticationType {
        KEY_BASED = 'keyBased',
        IDENTITY_BASED = 'identityBased',
      }

      export enum RoutingStorageContainerPropertiesEncoding {
        AVRO = 'Avro',
        AVRO_DEFLATE = 'AvroDeflate',
        JSON = 'JSON',
      }

      /**
       * @schema #/definitions/routingStorageContainerPropertiesName
       */
      export class RoutingStorageContainerPropertiesNamePattern {
        public static pattern(value: string): string {
          return value;
        }
      }

