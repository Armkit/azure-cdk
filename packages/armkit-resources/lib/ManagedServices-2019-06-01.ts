// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.ManagedServices/registrationAssignments
 *
 * @schema Microsoft.ManagedServices.registrationAssignments
 */
export class RegistrationAssignments extends ArmResource {
  /**
   * Defines a "Microsoft.ManagedServices.registrationAssignments" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: RegistrationAssignmentsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'registrationAssignments',
    });
  }
}

/**
 * Microsoft.ManagedServices/registrationDefinitions
 *
 * @schema Microsoft.ManagedServices.registrationDefinitions
 */
export class RegistrationDefinitions extends ArmResource {
  /**
   * Defines a "Microsoft.ManagedServices.registrationDefinitions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: RegistrationDefinitionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'registrationDefinitions',
    });
  }
}

/**
 * Microsoft.ManagedServices/registrationAssignments
 *
 * @schema Microsoft.ManagedServices.registrationAssignments
 */
export interface RegistrationAssignmentsOptions {
  /**
   * Guid of the registration assignment.
   *
   * @schema Microsoft.ManagedServices.registrationAssignments#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.ManagedServices.registrationAssignments#type
   */
  readonly type: MicrosoftManagedServicesRegistrationAssignmentsType;

  /**
   * @schema Microsoft.ManagedServices.registrationAssignments#apiVersion
   */
  readonly apiVersion?: MicrosoftManagedServicesRegistrationAssignmentsApiVersion;

  /**
   * Properties of a registration assignment.
   *
   * @schema Microsoft.ManagedServices.registrationAssignments#properties
   */
  readonly properties: RegistrationAssignmentProperties;

}

/**
 * Microsoft.ManagedServices/registrationDefinitions
 *
 * @schema Microsoft.ManagedServices.registrationDefinitions
 */
export interface RegistrationDefinitionsOptions {
  /**
   * Guid of the registration definition.
   *
   * @schema Microsoft.ManagedServices.registrationDefinitions#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.ManagedServices.registrationDefinitions#type
   */
  readonly type: MicrosoftManagedServicesRegistrationDefinitionsType;

  /**
   * @schema Microsoft.ManagedServices.registrationDefinitions#apiVersion
   */
  readonly apiVersion?: MicrosoftManagedServicesRegistrationDefinitionsApiVersion;

  /**
   * Properties of a registration definition.
   *
   * @schema Microsoft.ManagedServices.registrationDefinitions#properties
   */
  readonly properties: RegistrationDefinitionProperties;

  /**
   * Plan details for the managed services.
   *
   * @schema Microsoft.ManagedServices.registrationDefinitions#plan
   */
  readonly plan?: Plan;

}

export enum MicrosoftManagedServicesRegistrationAssignmentsType {
  "MicrosoftManagedServicesRegistrationAssignmentsType_MICROSOFT_MANAGED_SERVICES_REGISTRATION_ASSIGNMENTS" = 'Microsoft.ManagedServices/registrationAssignments',
}

export enum MicrosoftManagedServicesRegistrationAssignmentsApiVersion {
  "MicrosoftManagedServicesRegistrationAssignmentsApiVersion_2019_06_01" = '2019-06-01',
}

/**
 * Properties of a registration assignment.
 *
 * @schema #/definitions/RegistrationAssignmentProperties
 */
export interface RegistrationAssignmentProperties {
  /**
   * Fully qualified path of the registration definition.
   *
   * @schema #/definitions/RegistrationAssignmentProperties#registrationDefinitionId
   */
  readonly registrationDefinitionId: string;

}

export enum MicrosoftManagedServicesRegistrationDefinitionsType {
  "MicrosoftManagedServicesRegistrationDefinitionsType_MICROSOFT_MANAGED_SERVICES_REGISTRATION_DEFINITIONS" = 'Microsoft.ManagedServices/registrationDefinitions',
}

export enum MicrosoftManagedServicesRegistrationDefinitionsApiVersion {
  "MicrosoftManagedServicesRegistrationDefinitionsApiVersion_2019_06_01" = '2019-06-01',
}

/**
 * Properties of a registration definition.
 *
 * @schema #/definitions/RegistrationDefinitionProperties
 */
export interface RegistrationDefinitionProperties {
  /**
   * Description of the registration definition.
   *
   * @schema #/definitions/RegistrationDefinitionProperties#description
   */
  readonly description?: string;

  /**
   * Authorization tuple containing principal id of the user/security group or service principal and id of the build-in role.
   *
   * @schema #/definitions/RegistrationDefinitionProperties#authorizations
   */
  readonly authorizations: Authorization[];

  /**
   * Name of the registration definition.
   *
   * @schema #/definitions/RegistrationDefinitionProperties#registrationDefinitionName
   */
  readonly registrationDefinitionName?: string;

  /**
   * Id of the managedBy tenant.
   *
   * @schema #/definitions/RegistrationDefinitionProperties#managedByTenantId
   */
  readonly managedByTenantId: string;

}

/**
 * Plan details for the managed services.
 *
 * @schema #/definitions/Plan
 */
export interface Plan {
  /**
   * The plan name.
   *
   * @schema #/definitions/Plan#name
   */
  readonly name: string;

  /**
   * The publisher ID.
   *
   * @schema #/definitions/Plan#publisher
   */
  readonly publisher: string;

  /**
   * The product code.
   *
   * @schema #/definitions/Plan#product
   */
  readonly product: string;

  /**
   * The plan's version.
   *
   * @schema #/definitions/Plan#version
   */
  readonly version: string;

}

/**
 * Authorization tuple containing principal Id (of user/service principal/security group) and role definition id.
 *
 * @schema #/definitions/Authorization
 */
export interface Authorization {
  /**
   * Principal Id of the security group/service principal/user that would be assigned permissions to the projected subscription
   *
   * @schema #/definitions/Authorization#principalId
   */
  readonly principalId: string;

  /**
   * The role definition identifier. This role will define all the permissions that the security group/service principal/user must have on the projected subscription. This role cannot be an owner role.
   *
   * @schema #/definitions/Authorization#roleDefinitionId
   */
  readonly roleDefinitionId: string;

}

