      // generated by armkit
      import { ArmResource } from '@yetics/armkit-core';
      import { Construct } from 'constructs';

      /**
       * Microsoft.ImportExport/jobs
       *
       * @schema Microsoft.ImportExport.jobs
       */
      export class Jobs extends ArmResource {
        /**
         * Defines a "Microsoft.ImportExport.jobs" Arm Template object
         * @param scope the scope in which to define this object
         * @param name a scope-local name for the object
         * @param options configuration options
         */
        public constructor(scope: Construct, name: string, options: JobsOptions) {
          super(scope, name, {
            ...options,
            armResourceType: 'jobs',
          });
        }
      }

      /**
       * Microsoft.ImportExport/jobs
       *
       * @schema Microsoft.ImportExport.jobs
       */
      export interface JobsOptions {
        /**
         * @schema Microsoft.ImportExport.jobs#apiVersion
         */
        readonly apiVersion?: MicrosoftImportExportJobsApiVersion;

        /**
         * Specifies the supported Azure location where the job should be created
         *
         * @schema Microsoft.ImportExport.jobs#location
         */
        readonly location?: string;

        /**
         * The name of the import/export job.
         *
         * @schema Microsoft.ImportExport.jobs#name
         */
        readonly name: string;

        /**
         * Specifies the job properties
         *
         * @schema Microsoft.ImportExport.jobs#properties
         */
        readonly properties: JobDetails;

        /**
         * Specifies the tags that will be assigned to the job.
         *
         * @schema Microsoft.ImportExport.jobs#tags
         */
        readonly tags?: MicrosoftImportExportJobsTags;

        /**
         * @schema Microsoft.ImportExport.jobs#type
         */
        readonly type: MicrosoftImportExportJobsType;

      }

      export enum MicrosoftImportExportJobsApiVersion {
        "MicrosoftImportExportJobsApiVersion_2021_01_01" = '2021-01-01',
      }

      /**
       * Specifies the job properties
       *
       * @schema #/definitions/JobDetails
       */
      export interface JobDetails {
        /**
         * Default value is false. Indicates whether the manifest files on the drives should be copied to block blobs.
         *
         * @schema #/definitions/JobDetails#backupDriveManifest
         */
        readonly backupDriveManifest?: boolean;

        /**
         * Indicates whether a request has been submitted to cancel the job.
         *
         * @schema #/definitions/JobDetails#cancelRequested
         */
        readonly cancelRequested?: boolean;

        /**
         * Contains information about the delivery package being shipped by the customer to the Microsoft data center.
         *
         * @schema #/definitions/JobDetails#deliveryPackage
         */
        readonly deliveryPackage?: DeliveryPackageInformation;

        /**
         * The virtual blob directory to which the copy logs and backups of drive manifest files (if enabled) will be stored.
         *
         * @schema #/definitions/JobDetails#diagnosticsPath
         */
        readonly diagnosticsPath?: string;

        /**
         * List of up to ten drives that comprise the job. The drive list is a required element for an import job; it is not specified for export jobs.
         *
         * @schema #/definitions/JobDetails#driveList
         */
        readonly driveList?: DriveStatus[];

        /**
         * Specifies the encryption key properties
         *
         * @schema #/definitions/JobDetails#encryptionKey
         */
        readonly encryptionKey?: EncryptionKeyDetails;

        /**
         * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
         *
         * @schema #/definitions/JobDetails#export
         */
        readonly export?: Export;

        /**
         * A blob path that points to a block blob containing a list of blob names that were not exported due to insufficient drive space. If all blobs were exported successfully, then this element is not included in the response.
         *
         * @schema #/definitions/JobDetails#incompleteBlobListUri
         */
        readonly incompleteBlobListUri?: string;

        /**
         * The type of job
         *
         * @schema #/definitions/JobDetails#jobType
         */
        readonly jobType?: string;

        /**
         * Default value is Error. Indicates whether error logging or verbose logging will be enabled.
         *
         * @schema #/definitions/JobDetails#logLevel
         */
        readonly logLevel?: string;

        /**
         * Overall percentage completed for the job.
         *
         * @schema #/definitions/JobDetails#percentComplete
         */
        readonly percentComplete?: number;

        /**
         * Specifies the provisioning state of the job.
         *
         * @schema #/definitions/JobDetails#provisioningState
         */
        readonly provisioningState?: string;

        /**
         * Specifies the return address information for the job.
         *
         * @schema #/definitions/JobDetails#returnAddress
         */
        readonly returnAddress?: ReturnAddress;

        /**
         * Contains information about the package being shipped by the customer to the Microsoft data center.
         *
         * @schema #/definitions/JobDetails#returnPackage
         */
        readonly returnPackage?: PackageInformation;

        /**
         * Specifies the return carrier and customer's account with the carrier.
         *
         * @schema #/definitions/JobDetails#returnShipping
         */
        readonly returnShipping?: ReturnShipping;

        /**
         * Contains information about the Microsoft datacenter to which the drives should be shipped.
         *
         * @schema #/definitions/JobDetails#shippingInformation
         */
        readonly shippingInformation?: ShippingInformation;

        /**
         * Current state of the job.
         *
         * @schema #/definitions/JobDetails#state
         */
        readonly state?: string;

        /**
         * The resource identifier of the storage account where data will be imported to or exported from.
         *
         * @schema #/definitions/JobDetails#storageAccountId
         */
        readonly storageAccountId?: string;

      }

      /**
       * Specifies the tags that will be assigned to the job.
       *
       * @schema MicrosoftImportExportJobsTags
       */
      export interface MicrosoftImportExportJobsTags {
      }

      export enum MicrosoftImportExportJobsType {
        "MicrosoftImportExportJobsType_MICROSOFT_IMPORT_EXPORT_JOBS" = 'Microsoft.ImportExport/jobs',
      }

      /**
       * Contains information about the delivery package being shipped by the customer to the Microsoft data center.
       *
       * @schema #/definitions/DeliveryPackageInformation
       */
      export interface DeliveryPackageInformation {
        /**
         * The name of the carrier that is used to ship the import or export drives.
         *
         * @schema #/definitions/DeliveryPackageInformation#carrierName
         */
        readonly carrierName: string;

        /**
         * The number of drives included in the package.
         *
         * @schema #/definitions/DeliveryPackageInformation#driveCount
         */
        readonly driveCount?: number;

        /**
         * The date when the package is shipped.
         *
         * @schema #/definitions/DeliveryPackageInformation#shipDate
         */
        readonly shipDate?: string;

        /**
         * The tracking number of the package.
         *
         * @schema #/definitions/DeliveryPackageInformation#trackingNumber
         */
        readonly trackingNumber: string;

      }

      /**
       * Provides information about the drive's status
       *
       * @schema #/definitions/DriveStatus
       */
      export interface DriveStatus {
        /**
         * The BitLocker key used to encrypt the drive.
         *
         * @schema #/definitions/DriveStatus#bitLockerKey
         */
        readonly bitLockerKey?: string;

        /**
         * Bytes successfully transferred for the drive.
         *
         * @schema #/definitions/DriveStatus#bytesSucceeded
         */
        readonly bytesSucceeded?: number;

        /**
         * Detailed status about the data transfer process. This field is not returned in the response until the drive is in the Transferring state.
         *
         * @schema #/definitions/DriveStatus#copyStatus
         */
        readonly copyStatus?: string;

        /**
         * The drive header hash value.
         *
         * @schema #/definitions/DriveStatus#driveHeaderHash
         */
        readonly driveHeaderHash?: string;

        /**
         * The drive's hardware serial number, without spaces.
         *
         * @schema #/definitions/DriveStatus#driveId
         */
        readonly driveId?: string;

        /**
         * A URI that points to the blob containing the error log for the data transfer operation.
         *
         * @schema #/definitions/DriveStatus#errorLogUri
         */
        readonly errorLogUri?: string;

        /**
         * The relative path of the manifest file on the drive. 
         *
         * @schema #/definitions/DriveStatus#manifestFile
         */
        readonly manifestFile?: string;

        /**
         * The Base16-encoded MD5 hash of the manifest file on the drive.
         *
         * @schema #/definitions/DriveStatus#manifestHash
         */
        readonly manifestHash?: string;

        /**
         * A URI that points to the blob containing the drive manifest file. 
         *
         * @schema #/definitions/DriveStatus#manifestUri
         */
        readonly manifestUri?: string;

        /**
         * Percentage completed for the drive. 
         *
         * @schema #/definitions/DriveStatus#percentComplete
         */
        readonly percentComplete?: number;

        /**
         * The drive's current state.
         *
         * @schema #/definitions/DriveStatus#state
         */
        readonly state?: DriveStatusState;

        /**
         * A URI that points to the blob containing the verbose log for the data transfer operation. 
         *
         * @schema #/definitions/DriveStatus#verboseLogUri
         */
        readonly verboseLogUri?: string;

      }

      /**
       * Specifies the encryption key properties
       *
       * @schema #/definitions/EncryptionKeyDetails
       */
      export interface EncryptionKeyDetails {
        /**
         * The type of kek encryption key.
         *
         * @schema #/definitions/EncryptionKeyDetails#kekType
         */
        readonly kekType?: EncryptionKeyDetailsKekType;

        /**
         * Specifies the url for kek encryption key. 
         *
         * @schema #/definitions/EncryptionKeyDetails#kekUrl
         */
        readonly kekUrl?: string;

        /**
         * Specifies the keyvault resource id for kek encryption key. 
         *
         * @schema #/definitions/EncryptionKeyDetails#kekVaultResourceID
         */
        readonly kekVaultResourceID?: string;

      }

      /**
       * A property containing information about the blobs to be exported for an export job. This property is required for export jobs, but must not be specified for import jobs.
       *
       * @schema #/definitions/Export
       */
      export interface Export {
        /**
         * A list of the blobs to be exported.
         *
         * @schema #/definitions/Export#blobList
         */
        readonly blobList?: ExportBlobList;

        /**
         * The relative URI to the block blob that contains the list of blob paths or blob path prefixes as defined above, beginning with the container name. If the blob is in root container, the URI must begin with $root. 
         *
         * @schema #/definitions/Export#blobListBlobPath
         */
        readonly blobListBlobPath?: string;

      }

      /**
       * Specifies the return address information for the job.
       *
       * @schema #/definitions/ReturnAddress
       */
      export interface ReturnAddress {
        /**
         * The city name to use when returning the drives.
         *
         * @schema #/definitions/ReturnAddress#city
         */
        readonly city: string;

        /**
         * The country or region to use when returning the drives. 
         *
         * @schema #/definitions/ReturnAddress#countryOrRegion
         */
        readonly countryOrRegion: string;

        /**
         * Email address of the recipient of the returned drives.
         *
         * @schema #/definitions/ReturnAddress#email
         */
        readonly email: string;

        /**
         * Phone number of the recipient of the returned drives.
         *
         * @schema #/definitions/ReturnAddress#phone
         */
        readonly phone: string;

        /**
         * The postal code to use when returning the drives.
         *
         * @schema #/definitions/ReturnAddress#postalCode
         */
        readonly postalCode: string;

        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         *
         * @schema #/definitions/ReturnAddress#recipientName
         */
        readonly recipientName: string;

        /**
         * The state or province to use when returning the drives.
         *
         * @schema #/definitions/ReturnAddress#stateOrProvince
         */
        readonly stateOrProvince?: string;

        /**
         * The first line of the street address to use when returning the drives. 
         *
         * @schema #/definitions/ReturnAddress#streetAddress1
         */
        readonly streetAddress1: string;

        /**
         * The first line of the street address to use when returning the drives. 
         *
         * @schema #/definitions/ReturnAddress#streetAddress2
         */
        readonly streetAddress2?: string;

      }

      /**
       * Contains information about the package being shipped by the customer to the Microsoft data center.
       *
       * @schema #/definitions/PackageInformation
       */
      export interface PackageInformation {
        /**
         * The name of the carrier that is used to ship the import or export drives.
         *
         * @schema #/definitions/PackageInformation#carrierName
         */
        readonly carrierName: string;

        /**
         * The number of drives included in the package.
         *
         * @schema #/definitions/PackageInformation#driveCount
         */
        readonly driveCount: number;

        /**
         * The date when the package is shipped.
         *
         * @schema #/definitions/PackageInformation#shipDate
         */
        readonly shipDate: string;

        /**
         * The tracking number of the package.
         *
         * @schema #/definitions/PackageInformation#trackingNumber
         */
        readonly trackingNumber: string;

      }

      /**
       * Specifies the return carrier and customer's account with the carrier.
       *
       * @schema #/definitions/ReturnShipping
       */
      export interface ReturnShipping {
        /**
         * The customer's account number with the carrier.
         *
         * @schema #/definitions/ReturnShipping#carrierAccountNumber
         */
        readonly carrierAccountNumber: string;

        /**
         * The carrier's name.
         *
         * @schema #/definitions/ReturnShipping#carrierName
         */
        readonly carrierName: string;

      }

      /**
       * Contains information about the Microsoft datacenter to which the drives should be shipped.
       *
       * @schema #/definitions/ShippingInformation
       */
      export interface ShippingInformation {
        /**
         * The city name to use when returning the drives.
         *
         * @schema #/definitions/ShippingInformation#city
         */
        readonly city?: string;

        /**
         * The country or region to use when returning the drives. 
         *
         * @schema #/definitions/ShippingInformation#countryOrRegion
         */
        readonly countryOrRegion?: string;

        /**
         * Phone number of the recipient of the returned drives.
         *
         * @schema #/definitions/ShippingInformation#phone
         */
        readonly phone?: string;

        /**
         * The postal code to use when returning the drives.
         *
         * @schema #/definitions/ShippingInformation#postalCode
         */
        readonly postalCode?: string;

        /**
         * The name of the recipient who will receive the hard drives when they are returned. 
         *
         * @schema #/definitions/ShippingInformation#recipientName
         */
        readonly recipientName?: string;

        /**
         * The state or province to use when returning the drives.
         *
         * @schema #/definitions/ShippingInformation#stateOrProvince
         */
        readonly stateOrProvince?: string;

        /**
         * The first line of the street address to use when returning the drives. 
         *
         * @schema #/definitions/ShippingInformation#streetAddress1
         */
        readonly streetAddress1?: string;

        /**
         * The first line of the street address to use when returning the drives. 
         *
         * @schema #/definitions/ShippingInformation#streetAddress2
         */
        readonly streetAddress2?: string;

      }

      export enum DriveStatusState {
        SPECIFIED = 'Specified',
        RECEIVED = 'Received',
        NEVER_RECEIVED = 'NeverReceived',
        TRANSFERRING = 'Transferring',
        COMPLETED = 'Completed',
        COMPLETED_MORE_INFO = 'CompletedMoreInfo',
        SHIPPED_BACK = 'ShippedBack',
      }

      export enum EncryptionKeyDetailsKekType {
        MICROSOFT_MANAGED = 'MicrosoftManaged',
        CUSTOMER_MANAGED = 'CustomerManaged',
      }

      /**
       * A list of the blobs to be exported.
       *
       * @schema #/definitions/ExportBlobList
       */
      export interface ExportBlobList {
        /**
         * A collection of blob-path strings.
         *
         * @schema #/definitions/ExportBlobList#blobPath
         */
        readonly blobPath?: string[];

        /**
         * A collection of blob-prefix strings.
         *
         * @schema #/definitions/ExportBlobList#blobPathPrefix
         */
        readonly blobPathPrefix?: string[];

      }

