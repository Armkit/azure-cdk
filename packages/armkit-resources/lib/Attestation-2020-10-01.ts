  // generated by armkit
  import { ArmResource } from '@yetics/armkit-core';
  import { Construct } from 'constructs';

  /**
   * Microsoft.Attestation/attestationProviders
   *
   * @schema Microsoft.Attestation.attestationProviders
   */
  export class AttestationProviders extends ArmResource {
    /**
     * Defines a "Microsoft.Attestation.attestationProviders" Arm Template object
     * @param scope the scope in which to define this object
     * @param name a scope-local name for the object
     * @param options configuration options
     */
    public constructor(scope: Construct, name: string, options: AttestationProvidersOptions) {
      super(scope, name, {
        ...options,
        armResourceType: 'attestationProviders',
      });
    }
  }

  /**
   * Microsoft.Attestation/attestationProviders/privateEndpointConnections
   *
   * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections
   */
  export class AttestationProvidersPrivateEndpointConnections extends ArmResource {
    /**
     * Defines a "Microsoft.Attestation.attestationProviders_privateEndpointConnections" Arm Template object
     * @param scope the scope in which to define this object
     * @param name a scope-local name for the object
     * @param options configuration options
     */
    public constructor(scope: Construct, name: string, options: AttestationProvidersPrivateEndpointConnectionsOptions) {
      super(scope, name, {
        ...options,
        armResourceType: 'attestationProviders_privateEndpointConnections',
      });
    }
  }

  /**
   * Microsoft.Attestation/attestationProviders
   *
   * @schema Microsoft.Attestation.attestationProviders
   */
  export interface AttestationProvidersOptions {
    /**
     * @schema Microsoft.Attestation.attestationProviders#apiVersion
     */
    readonly apiVersion?: MicrosoftAttestationAttestationProvidersApiVersion;

    /**
     * The supported Azure location where the attestation provider should be created.
     *
     * @schema Microsoft.Attestation.attestationProviders#location
     */
    readonly location: string;

    /**
     * Name of the attestation provider.
     *
     * @schema Microsoft.Attestation.attestationProviders#name
     */
    readonly name: MicrosoftAttestationAttestationProvidersNamePattern;

    /**
     * Client supplied parameters used to create a new attestation provider.
     *
     * @schema Microsoft.Attestation.attestationProviders#properties
     */
    readonly properties: AttestationServiceCreationSpecificParams;

    /**
     * @schema Microsoft.Attestation.attestationProviders#resources
     */
    readonly resources?: AttestationProvidersPrivateEndpointConnectionsChildResource[];

    /**
     * The tags that will be assigned to the attestation provider.
     *
     * @schema Microsoft.Attestation.attestationProviders#tags
     */
    readonly tags?: MicrosoftAttestationAttestationProvidersTags;

    /**
     * @schema Microsoft.Attestation.attestationProviders#type
     */
    readonly type: MicrosoftAttestationAttestationProvidersType;

  }

  /**
   * Microsoft.Attestation/attestationProviders/privateEndpointConnections
   *
   * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections
   */
  export interface AttestationProvidersPrivateEndpointConnectionsOptions {
    /**
     * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections#apiVersion
     */
    readonly apiVersion?: MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsApiVersion;

    /**
     * Name of the private endpoint connection associated with the attestation providers.
     *
     * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections#name
     */
    readonly name: string;

    /**
     * Properties of the PrivateEndpointConnectProperties.
     *
     * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections#properties
     */
    readonly properties: PrivateEndpointConnectionProperties;

    /**
     * @schema Microsoft.Attestation.attestationProviders_privateEndpointConnections#type
     */
    readonly type: MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsType;

  }

  export enum MicrosoftAttestationAttestationProvidersApiVersion {
    "MicrosoftAttestationAttestationProvidersApiVersion_2020_10_01" = '2020-10-01',
  }

  /**
   * @schema MicrosoftAttestationAttestationProvidersName
   */
  export class MicrosoftAttestationAttestationProvidersNamePattern {
    public static pattern(value: string): string {
      return value;
    }
  }

  /**
   * Client supplied parameters used to create a new attestation provider.
   *
   * @schema #/definitions/AttestationServiceCreationSpecificParams
   */
  export interface AttestationServiceCreationSpecificParams {
    /**
     * @schema #/definitions/AttestationServiceCreationSpecificParams#policySigningCertificates
     */
    readonly policySigningCertificates?: JsonWebKeySet;

  }

  /**
   * Microsoft.Attestation/attestationProviders/privateEndpointConnections
   *
   * @schema #/definitions/attestationProviders_privateEndpointConnections_childResource
   */
  export interface AttestationProvidersPrivateEndpointConnectionsChildResource {
    /**
     * @schema #/definitions/attestationProviders_privateEndpointConnections_childResource#apiVersion
     */
    readonly apiVersion: AttestationProvidersPrivateEndpointConnectionsChildResourceApiVersion;

    /**
     * Name of the private endpoint connection associated with the attestation providers.
     *
     * @schema #/definitions/attestationProviders_privateEndpointConnections_childResource#name
     */
    readonly name: string;

    /**
     * Properties of the PrivateEndpointConnectProperties.
     *
     * @schema #/definitions/attestationProviders_privateEndpointConnections_childResource#properties
     */
    readonly properties: PrivateEndpointConnectionProperties;

    /**
     * @schema #/definitions/attestationProviders_privateEndpointConnections_childResource#type
     */
    readonly type: AttestationProvidersPrivateEndpointConnectionsChildResourceType;

  }

  /**
   * @schema MicrosoftAttestationAttestationProvidersTags
   */
  export interface MicrosoftAttestationAttestationProvidersTags {
  }

  export enum MicrosoftAttestationAttestationProvidersType {
    "MicrosoftAttestationAttestationProvidersType_MICROSOFT_ATTESTATION_ATTESTATION_PROVIDERS" = 'Microsoft.Attestation/attestationProviders',
  }

  export enum MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsApiVersion {
    "MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsApiVersion_2020_10_01" = '2020-10-01',
  }

  /**
   * Properties of the PrivateEndpointConnectProperties.
   *
   * @schema #/definitions/PrivateEndpointConnectionProperties
   */
  export interface PrivateEndpointConnectionProperties {
    /**
     * The Private Endpoint resource.
     *
     * @schema #/definitions/PrivateEndpointConnectionProperties#privateEndpoint
     */
    readonly privateEndpoint?: PrivateEndpoint;

    /**
     * A collection of information about the state of the connection between service consumer and provider.
     *
     * @schema #/definitions/PrivateEndpointConnectionProperties#privateLinkServiceConnectionState
     */
    readonly privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;

    /**
     * The provisioning state of the private endpoint connection resource.
     *
     * @schema #/definitions/PrivateEndpointConnectionProperties#provisioningState
     */
    readonly provisioningState?: PrivateEndpointConnectionPropertiesProvisioningState;

  }

  export enum MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsType {
    "MicrosoftAttestationAttestationProvidersPrivateEndpointConnectionsType_MICROSOFT_ATTESTATION_ATTESTATION_PROVIDERS_PRIVATE_ENDPOINT_CONNECTIONS" = 'Microsoft.Attestation/attestationProviders/privateEndpointConnections',
  }

  /**
   * @schema #/definitions/JSONWebKeySet
   */
  export interface JsonWebKeySet {
    /**
     * The value of the "keys" parameter is an array of JWK values.  By
default, the order of the JWK values within the array does not imply
an order of preference among them, although applications of JWK Sets
can choose to assign a meaning to the order for their purposes, if
desired.
     *
     * @schema #/definitions/JSONWebKeySet#keys
     */
    readonly keys?: JsonWebKey[];

  }

  export enum AttestationProvidersPrivateEndpointConnectionsChildResourceApiVersion {
    "AttestationProvidersPrivateEndpointConnectionsChildResourceApiVersion_2020_10_01" = '2020-10-01',
  }

  export enum AttestationProvidersPrivateEndpointConnectionsChildResourceType {
    PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
  }

  /**
   * The Private Endpoint resource.
   *
   * @schema #/definitions/PrivateEndpoint
   */
  export interface PrivateEndpoint {
  }

  /**
   * A collection of information about the state of the connection between service consumer and provider.
   *
   * @schema #/definitions/PrivateLinkServiceConnectionState
   */
  export interface PrivateLinkServiceConnectionState {
    /**
     * A message indicating if changes on the service provider require any updates on the consumer.
     *
     * @schema #/definitions/PrivateLinkServiceConnectionState#actionsRequired
     */
    readonly actionsRequired?: string;

    /**
     * The reason for approval/rejection of the connection.
     *
     * @schema #/definitions/PrivateLinkServiceConnectionState#description
     */
    readonly description?: string;

    /**
     * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
     *
     * @schema #/definitions/PrivateLinkServiceConnectionState#status
     */
    readonly status?: PrivateLinkServiceConnectionStateStatus;

  }

  export enum PrivateEndpointConnectionPropertiesProvisioningState {
    SUCCEEDED = 'Succeeded',
    CREATING = 'Creating',
    DELETING = 'Deleting',
    FAILED = 'Failed',
  }

  /**
   * @schema #/definitions/JSONWebKey
   */
  export interface JsonWebKey {
    /**
     * The "alg" (algorithm) parameter identifies the algorithm intended for
use with the key.  The values used should either be registered in the
IANA "JSON Web Signature and Encryption Algorithms" registry
established by [JWA] or be a value that contains a Collision-
Resistant Name.
     *
     * @schema #/definitions/JSONWebKey#alg
     */
    readonly alg?: string;

    /**
     * The "crv" (curve) parameter identifies the curve type
     *
     * @schema #/definitions/JSONWebKey#crv
     */
    readonly crv?: string;

    /**
     * RSA private exponent or ECC private key
     *
     * @schema #/definitions/JSONWebKey#d
     */
    readonly d?: string;

    /**
     * RSA Private Key Parameter
     *
     * @schema #/definitions/JSONWebKey#dp
     */
    readonly dp?: string;

    /**
     * RSA Private Key Parameter
     *
     * @schema #/definitions/JSONWebKey#dq
     */
    readonly dq?: string;

    /**
     * RSA public exponent, in Base64
     *
     * @schema #/definitions/JSONWebKey#e
     */
    readonly e?: string;

    /**
     * Symmetric key
     *
     * @schema #/definitions/JSONWebKey#k
     */
    readonly k?: string;

    /**
     * The "kid" (key ID) parameter is used to match a specific key.  This
is used, for instance, to choose among a set of keys within a JWK Set
during key rollover.  The structure of the "kid" value is
unspecified.  When "kid" values are used within a JWK Set, different
keys within the JWK Set SHOULD use distinct "kid" values.  (One
example in which different keys might use the same "kid" value is if
they have different "kty" (key type) values but are considered to be
equivalent alternatives by the application using them.)  The "kid"
value is a case-sensitive string.
     *
     * @schema #/definitions/JSONWebKey#kid
     */
    readonly kid?: string;

    /**
     * The "kty" (key type) parameter identifies the cryptographic algorithm
family used with the key, such as "RSA" or "EC". "kty" values should
either be registered in the IANA "JSON Web Key Types" registry
established by [JWA] or be a value that contains a Collision-
Resistant Name.  The "kty" value is a case-sensitive string.
     *
     * @schema #/definitions/JSONWebKey#kty
     */
    readonly kty: string;

    /**
     * RSA modulus, in Base64
     *
     * @schema #/definitions/JSONWebKey#n
     */
    readonly n?: string;

    /**
     * RSA secret prime
     *
     * @schema #/definitions/JSONWebKey#p
     */
    readonly p?: string;

    /**
     * RSA secret prime, with p < q
     *
     * @schema #/definitions/JSONWebKey#q
     */
    readonly q?: string;

    /**
     * RSA Private Key Parameter
     *
     * @schema #/definitions/JSONWebKey#qi
     */
    readonly qi?: string;

    /**
     * Use ("public key use") identifies the intended use of
the public key. The "use" parameter is employed to indicate whether
a public key is used for encrypting data or verifying the signature
on data. Values are commonly "sig" (signature) or "enc" (encryption).
     *
     * @schema #/definitions/JSONWebKey#use
     */
    readonly use?: string;

    /**
     * X coordinate for the Elliptic Curve point
     *
     * @schema #/definitions/JSONWebKey#x
     */
    readonly x?: string;

    /**
     * The "x5c" (X.509 certificate chain) parameter contains a chain of one
or more PKIX certificates [RFC5280].  The certificate chain is
represented as a JSON array of certificate value strings.  Each
string in the array is a base64-encoded (Section 4 of [RFC4648] --
not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
The PKIX certificate containing the key value MUST be the first
certificate.
     *
     * @schema #/definitions/JSONWebKey#x5c
     */
    readonly x5c?: string[];

    /**
     * Y coordinate for the Elliptic Curve point
     *
     * @schema #/definitions/JSONWebKey#y
     */
    readonly y?: string;

  }

  export enum PrivateLinkServiceConnectionStateStatus {
    PENDING = 'Pending',
    APPROVED = 'Approved',
    REJECTED = 'Rejected',
  }

