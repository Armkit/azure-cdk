// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Security/locations/jitNetworkAccessPolicies
 *
 * @schema Microsoft.Security.locations_jitNetworkAccessPolicies
 */
export class LocationsJitNetworkAccessPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Security.locations_jitNetworkAccessPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: LocationsJitNetworkAccessPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'locations_jitNetworkAccessPolicies',
    });
  }
}

/**
 * Microsoft.Security/locations/jitNetworkAccessPolicies
 *
 * @schema Microsoft.Security.locations_jitNetworkAccessPolicies
 */
export interface LocationsJitNetworkAccessPoliciesOptions {
  /**
   * @schema Microsoft.Security.locations_jitNetworkAccessPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSecurityLocationsJitNetworkAccessPoliciesApiVersion;

  /**
   * Kind of the resource
   *
   * @schema Microsoft.Security.locations_jitNetworkAccessPolicies#kind
   */
  readonly kind?: string;

  /**
   * Name of a Just-in-Time access configuration policy.
   *
   * @schema Microsoft.Security.locations_jitNetworkAccessPolicies#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Security.locations_jitNetworkAccessPolicies#properties
   */
  readonly properties: JitNetworkAccessPolicyProperties;

  /**
   * @schema Microsoft.Security.locations_jitNetworkAccessPolicies#type
   */
  readonly type: MicrosoftSecurityLocationsJitNetworkAccessPoliciesType;

}

export enum MicrosoftSecurityLocationsJitNetworkAccessPoliciesApiVersion {
  "MicrosoftSecurityLocationsJitNetworkAccessPoliciesApiVersion_2020_01_01" = '2020-01-01',
}

/**
 * @schema #/definitions/JitNetworkAccessPolicyProperties
 */
export interface JitNetworkAccessPolicyProperties {
  /**
   * @schema #/definitions/JitNetworkAccessPolicyProperties#requests
   */
  readonly requests?: JitNetworkAccessRequest[];

  /**
   * Configurations for Microsoft.Compute/virtualMachines resource type.
   *
   * @schema #/definitions/JitNetworkAccessPolicyProperties#virtualMachines
   */
  readonly virtualMachines: JitNetworkAccessPolicyVirtualMachine[];

}

export enum MicrosoftSecurityLocationsJitNetworkAccessPoliciesType {
  "MicrosoftSecurityLocationsJitNetworkAccessPoliciesType_MICROSOFT_SECURITY_LOCATIONS_JIT_NETWORK_ACCESS_POLICIES" = 'Microsoft.Security/locations/jitNetworkAccessPolicies',
}

/**
 * @schema #/definitions/JitNetworkAccessRequest
 */
export interface JitNetworkAccessRequest {
  /**
   * The justification for making the initiate request
   *
   * @schema #/definitions/JitNetworkAccessRequest#justification
   */
  readonly justification?: string;

  /**
   * The identity of the person who made the request
   *
   * @schema #/definitions/JitNetworkAccessRequest#requestor
   */
  readonly requestor: string;

  /**
   * The start time of the request in UTC
   *
   * @schema #/definitions/JitNetworkAccessRequest#startTimeUtc
   */
  readonly startTimeUtc: Date;

  /**
   * @schema #/definitions/JitNetworkAccessRequest#virtualMachines
   */
  readonly virtualMachines: JitNetworkAccessRequestVirtualMachine[];

}

/**
 * @schema #/definitions/JitNetworkAccessPolicyVirtualMachine
 */
export interface JitNetworkAccessPolicyVirtualMachine {
  /**
   * Resource ID of the virtual machine that is linked to this policy
   *
   * @schema #/definitions/JitNetworkAccessPolicyVirtualMachine#id
   */
  readonly id: string;

  /**
   * Port configurations for the virtual machine
   *
   * @schema #/definitions/JitNetworkAccessPolicyVirtualMachine#ports
   */
  readonly ports: JitNetworkAccessPortRule[];

  /**
   * Public IP address of the Azure Firewall that is linked to this policy, if applicable
   *
   * @schema #/definitions/JitNetworkAccessPolicyVirtualMachine#publicIpAddress
   */
  readonly publicIpAddress?: string;

}

/**
 * @schema #/definitions/JitNetworkAccessRequestVirtualMachine
 */
export interface JitNetworkAccessRequestVirtualMachine {
  /**
   * Resource ID of the virtual machine that is linked to this policy
   *
   * @schema #/definitions/JitNetworkAccessRequestVirtualMachine#id
   */
  readonly id: string;

  /**
   * The ports that were opened for the virtual machine
   *
   * @schema #/definitions/JitNetworkAccessRequestVirtualMachine#ports
   */
  readonly ports: JitNetworkAccessRequestPort[];

}

/**
 * @schema #/definitions/JitNetworkAccessPortRule
 */
export interface JitNetworkAccessPortRule {
  /**
   * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
   *
   * @schema #/definitions/JitNetworkAccessPortRule#allowedSourceAddressPrefix
   */
  readonly allowedSourceAddressPrefix?: string;

  /**
   * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
   *
   * @schema #/definitions/JitNetworkAccessPortRule#allowedSourceAddressPrefixes
   */
  readonly allowedSourceAddressPrefixes?: string[];

  /**
   * Maximum duration requests can be made for. In ISO 8601 duration format. Minimum 5 minutes, maximum 1 day
   *
   * @schema #/definitions/JitNetworkAccessPortRule#maxRequestAccessDuration
   */
  readonly maxRequestAccessDuration: string;

  /**
   * @schema #/definitions/JitNetworkAccessPortRule#number
   */
  readonly number: number;

  /**
   * @schema #/definitions/JitNetworkAccessPortRule#protocol
   */
  readonly protocol: JitNetworkAccessPortRuleProtocol;

}

/**
 * @schema #/definitions/JitNetworkAccessRequestPort
 */
export interface JitNetworkAccessRequestPort {
  /**
   * Mutually exclusive with the "allowedSourceAddressPrefixes" parameter. Should be an IP address or CIDR, for example "192.168.0.3" or "192.168.0.0/16".
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#allowedSourceAddressPrefix
   */
  readonly allowedSourceAddressPrefix?: string;

  /**
   * Mutually exclusive with the "allowedSourceAddressPrefix" parameter.
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#allowedSourceAddressPrefixes
   */
  readonly allowedSourceAddressPrefixes?: string[];

  /**
   * The date & time at which the request ends in UTC
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#endTimeUtc
   */
  readonly endTimeUtc: Date;

  /**
   * The port which is mapped to this port's `number` in the Azure Firewall, if applicable
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#mappedPort
   */
  readonly mappedPort?: number;

  /**
   * @schema #/definitions/JitNetworkAccessRequestPort#number
   */
  readonly number: number;

  /**
   * The status of the port.
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#status
   */
  readonly status: JitNetworkAccessRequestPortStatus;

  /**
   * A description of why the `status` has its value.
   *
   * @schema #/definitions/JitNetworkAccessRequestPort#statusReason
   */
  readonly statusReason: JitNetworkAccessRequestPortStatusReason;

}

export enum JitNetworkAccessPortRuleProtocol {
  TCP = 'TCP',
  UDP = 'UDP',
  "JitNetworkAccessPortRuleProtocol_" = '*',
}

export enum JitNetworkAccessRequestPortStatus {
  REVOKED = 'Revoked',
  INITIATED = 'Initiated',
}

export enum JitNetworkAccessRequestPortStatusReason {
  EXPIRED = 'Expired',
  USER_REQUESTED = 'UserRequested',
  NEWER_REQUEST_INITIATED = 'NewerRequestInitiated',
}

