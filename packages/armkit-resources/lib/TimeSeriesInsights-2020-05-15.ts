              // generated by armkit
              import { ArmResource } from '@yetics/armkit-core';
              import { Construct } from 'constructs';

              /**
               * Microsoft.TimeSeriesInsights/environments
               *
               * @schema Microsoft.TimeSeriesInsights.environments
               */
              export class Environments extends ArmResource {
                /**
                 * Defines a "Microsoft.TimeSeriesInsights.environments" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: EnvironmentsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'environments',
                  });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments/accessPolicies
               *
               * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies
               */
              export class EnvironmentsAccessPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.TimeSeriesInsights.environments_accessPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: EnvironmentsAccessPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'environments_accessPolicies',
                  });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments/eventSources
               *
               * @schema Microsoft.TimeSeriesInsights.environments_eventSources
               */
              export class EnvironmentsEventSources extends ArmResource {
                /**
                 * Defines a "Microsoft.TimeSeriesInsights.environments_eventSources" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: EnvironmentsEventSourcesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'environments_eventSources',
                  });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments/referenceDataSets
               *
               * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets
               */
              export class EnvironmentsReferenceDataSets extends ArmResource {
                /**
                 * Defines a "Microsoft.TimeSeriesInsights.environments_referenceDataSets" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: EnvironmentsReferenceDataSetsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'environments_referenceDataSets',
                  });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments
               *
               * @schema Microsoft.TimeSeriesInsights.environments
               */
              export class EnvironmentsOptions {
                public static fromGen1EnvironmentCreateOrUpdateParameters(value: Gen1EnvironmentCreateOrUpdateParameters): EnvironmentsOptions {
                  return new EnvironmentsOptions(value);
                }
                public static fromGen2EnvironmentCreateOrUpdateParameters(value: Gen2EnvironmentCreateOrUpdateParameters): EnvironmentsOptions {
                  return new EnvironmentsOptions(value);
                }
                private constructor(value: any) {
                  Object.defineProperty(this, 'resolve', { value: () => value });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments/accessPolicies
               *
               * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies
               */
              export interface EnvironmentsAccessPoliciesOptions {
                /**
                 * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesApiVersion;

                /**
                 * Name of the access policy.
                 *
                 * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies#name
                 */
                readonly name: string;

                /**
                 * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies#properties
                 */
                readonly properties: AccessPolicyResourceProperties;

                /**
                 * @schema Microsoft.TimeSeriesInsights.environments_accessPolicies#type
                 */
                readonly type: MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesType;

              }

              /**
               * Microsoft.TimeSeriesInsights/environments/eventSources
               *
               * @schema Microsoft.TimeSeriesInsights.environments_eventSources
               */
              export class EnvironmentsEventSourcesOptions {
                public static fromEventHubEventSourceCreateOrUpdateParameters(value: EventHubEventSourceCreateOrUpdateParameters): EnvironmentsEventSourcesOptions {
                  return new EnvironmentsEventSourcesOptions(value);
                }
                public static fromIoTHubEventSourceCreateOrUpdateParameters(value: IoTHubEventSourceCreateOrUpdateParameters): EnvironmentsEventSourcesOptions {
                  return new EnvironmentsEventSourcesOptions(value);
                }
                private constructor(value: any) {
                  Object.defineProperty(this, 'resolve', { value: () => value });
                }
              }

              /**
               * Microsoft.TimeSeriesInsights/environments/referenceDataSets
               *
               * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets
               */
              export interface EnvironmentsReferenceDataSetsOptions {
                /**
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#apiVersion
                 */
                readonly apiVersion?: MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsApiVersion;

                /**
                 * The location of the resource.
                 *
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#location
                 */
                readonly location: string;

                /**
                 * Name of the reference data set.
                 *
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#name
                 */
                readonly name: string;

                /**
                 * Properties used to create a reference data set.
                 *
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#properties
                 */
                readonly properties: ReferenceDataSetCreationProperties;

                /**
                 * Key-value pairs of additional properties for the resource.
                 *
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#tags
                 */
                readonly tags?: MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsTags;

                /**
                 * @schema Microsoft.TimeSeriesInsights.environments_referenceDataSets#type
                 */
                readonly type: MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsType;

              }

              /**
               * Parameters supplied to the Create or Update Environment operation for a Gen1 environment.
               *
               * @schema #/definitions/Gen1EnvironmentCreateOrUpdateParameters
               */
              export interface Gen1EnvironmentCreateOrUpdateParameters {
                /**
                 * @schema #/definitions/Gen1EnvironmentCreateOrUpdateParameters#kind
                 */
                readonly kind: Gen1EnvironmentCreateOrUpdateParametersKind;

                /**
                 * Properties used to create a Gen1 environment.
                 *
                 * @schema #/definitions/Gen1EnvironmentCreateOrUpdateParameters#properties
                 */
                readonly properties: Gen1EnvironmentCreationProperties;

              }

              /**
               * Parameters supplied to the Create or Update Environment operation for a Gen2 environment.
               *
               * @schema #/definitions/Gen2EnvironmentCreateOrUpdateParameters
               */
              export interface Gen2EnvironmentCreateOrUpdateParameters {
                /**
                 * @schema #/definitions/Gen2EnvironmentCreateOrUpdateParameters#kind
                 */
                readonly kind: Gen2EnvironmentCreateOrUpdateParametersKind;

                /**
                 * Properties used to create a Gen2 environment.
                 *
                 * @schema #/definitions/Gen2EnvironmentCreateOrUpdateParameters#properties
                 */
                readonly properties: Gen2EnvironmentCreationProperties;

              }

              export enum MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesApiVersion {
                "MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesApiVersion_2020_05_15" = '2020-05-15',
              }

              /**
               * @schema #/definitions/AccessPolicyResourceProperties
               */
              export interface AccessPolicyResourceProperties {
                /**
                 * An description of the access policy.
                 *
                 * @schema #/definitions/AccessPolicyResourceProperties#description
                 */
                readonly description?: string;

                /**
                 * The objectId of the principal in Azure Active Directory.
                 *
                 * @schema #/definitions/AccessPolicyResourceProperties#principalObjectId
                 */
                readonly principalObjectId?: string;

                /**
                 * The list of roles the principal is assigned on the environment.
                 *
                 * @schema #/definitions/AccessPolicyResourceProperties#roles
                 */
                readonly roles?: AccessPolicyResourcePropertiesRoles[];

              }

              export enum MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesType {
                "MicrosoftTimeSeriesInsightsEnvironmentsAccessPoliciesType_MICROSOFT_TIME_SERIES_INSIGHTS_ENVIRONMENTS_ACCESS_POLICIES" = 'Microsoft.TimeSeriesInsights/environments/accessPolicies',
              }

              /**
               * Parameters supplied to the Create or Update Event Source operation for an EventHub event source.
               *
               * @schema #/definitions/EventHubEventSourceCreateOrUpdateParameters
               */
              export interface EventHubEventSourceCreateOrUpdateParameters {
                /**
                 * @schema #/definitions/EventHubEventSourceCreateOrUpdateParameters#kind
                 */
                readonly kind: EventHubEventSourceCreateOrUpdateParametersKind;

                /**
                 * Properties of the EventHub event source that are required on create or update requests.
                 *
                 * @schema #/definitions/EventHubEventSourceCreateOrUpdateParameters#properties
                 */
                readonly properties: EventHubEventSourceCreationProperties;

              }

              /**
               * Parameters supplied to the Create or Update Event Source operation for an IoTHub event source.
               *
               * @schema #/definitions/IoTHubEventSourceCreateOrUpdateParameters
               */
              export interface IoTHubEventSourceCreateOrUpdateParameters {
                /**
                 * @schema #/definitions/IoTHubEventSourceCreateOrUpdateParameters#kind
                 */
                readonly kind: IoTHubEventSourceCreateOrUpdateParametersKind;

                /**
                 * Properties of the IoTHub event source that are required on create or update requests.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreateOrUpdateParameters#properties
                 */
                readonly properties: IoTHubEventSourceCreationProperties;

              }

              export enum MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsApiVersion {
                "MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsApiVersion_2020_05_15" = '2020-05-15',
              }

              /**
               * Properties used to create a reference data set.
               *
               * @schema #/definitions/ReferenceDataSetCreationProperties
               */
              export interface ReferenceDataSetCreationProperties {
                /**
                 * The reference data set key comparison behavior can be set using this property. By default, the value is 'Ordinal' - which means case sensitive key comparison will be performed while joining reference data with events or while adding new reference data. When 'OrdinalIgnoreCase' is set, case insensitive comparison will be used.
                 *
                 * @schema #/definitions/ReferenceDataSetCreationProperties#dataStringComparisonBehavior
                 */
                readonly dataStringComparisonBehavior?: ReferenceDataSetCreationPropertiesDataStringComparisonBehavior;

                /**
                 * The list of key properties for the reference data set.
                 *
                 * @schema #/definitions/ReferenceDataSetCreationProperties#keyProperties
                 */
                readonly keyProperties: ReferenceDataSetKeyProperty[];

              }

              /**
               * @schema MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsTags
               */
              export interface MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsTags {
              }

              export enum MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsType {
                "MicrosoftTimeSeriesInsightsEnvironmentsReferenceDataSetsType_MICROSOFT_TIME_SERIES_INSIGHTS_ENVIRONMENTS_REFERENCE_DATA_SETS" = 'Microsoft.TimeSeriesInsights/environments/referenceDataSets',
              }

              export enum Gen1EnvironmentCreateOrUpdateParametersKind {
                "Gen1EnvironmentCreateOrUpdateParametersKind_GEN1" = 'Gen1',
              }

              /**
               * Properties used to create a Gen1 environment.
               *
               * @schema #/definitions/Gen1EnvironmentCreationProperties
               */
              export interface Gen1EnvironmentCreationProperties {
                /**
                 * ISO8601 timespan specifying the minimum number of days the environment's events will be available for query.
                 *
                 * @schema #/definitions/Gen1EnvironmentCreationProperties#dataRetentionTime
                 */
                readonly dataRetentionTime: string;

                /**
                 * The list of event properties which will be used to partition data in the environment. Currently, only a single partition key property is supported.
                 *
                 * @schema #/definitions/Gen1EnvironmentCreationProperties#partitionKeyProperties
                 */
                readonly partitionKeyProperties?: TimeSeriesIdProperty[];

                /**
                 * The behavior the Time Series Insights service should take when the environment's capacity has been exceeded. If "PauseIngress" is specified, new events will not be read from the event source. If "PurgeOldData" is specified, new events will continue to be read and old events will be deleted from the environment. The default behavior is PurgeOldData.
                 *
                 * @schema #/definitions/Gen1EnvironmentCreationProperties#storageLimitExceededBehavior
                 */
                readonly storageLimitExceededBehavior?: Gen1EnvironmentCreationPropertiesStorageLimitExceededBehavior;

              }

              export enum Gen2EnvironmentCreateOrUpdateParametersKind {
                "Gen2EnvironmentCreateOrUpdateParametersKind_GEN2" = 'Gen2',
              }

              /**
               * Properties used to create a Gen2 environment.
               *
               * @schema #/definitions/Gen2EnvironmentCreationProperties
               */
              export interface Gen2EnvironmentCreationProperties {
                /**
                 * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
                 *
                 * @schema #/definitions/Gen2EnvironmentCreationProperties#storageConfiguration
                 */
                readonly storageConfiguration: Gen2StorageConfigurationInput;

                /**
                 * The list of event properties which will be used to define the environment's time series id.
                 *
                 * @schema #/definitions/Gen2EnvironmentCreationProperties#timeSeriesIdProperties
                 */
                readonly timeSeriesIdProperties: TimeSeriesIdProperty[];

                /**
                 * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
                 *
                 * @schema #/definitions/Gen2EnvironmentCreationProperties#warmStoreConfiguration
                 */
                readonly warmStoreConfiguration?: WarmStoreConfigurationProperties;

              }

              export enum AccessPolicyResourcePropertiesRoles {
                READER = 'Reader',
                CONTRIBUTOR = 'Contributor',
              }

              export enum EventHubEventSourceCreateOrUpdateParametersKind {
                "EventHubEventSourceCreateOrUpdateParametersKind_MICROSOFT_EVENT_HUB" = 'Microsoft.EventHub',
              }

              /**
               * Properties of the EventHub event source that are required on create or update requests.
               *
               * @schema #/definitions/EventHubEventSourceCreationProperties
               */
              export interface EventHubEventSourceCreationProperties {
                /**
                 * The name of the event hub's consumer group that holds the partitions from which events will be read.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#consumerGroupName
                 */
                readonly consumerGroupName: string;

                /**
                 * The name of the event hub.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#eventHubName
                 */
                readonly eventHubName: string;

                /**
                 * The resource id of the event source in Azure Resource Manager.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#eventSourceResourceId
                 */
                readonly eventSourceResourceId: string;

                /**
                 * The name of the SAS key that grants the Time Series Insights service access to the event hub. The shared access policies for this key must grant 'Listen' permissions to the event hub.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#keyName
                 */
                readonly keyName: string;

                /**
                 * Provisioning state of the resource.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#provisioningState
                 */
                readonly provisioningState?: EventHubEventSourceCreationPropertiesProvisioningState;

                /**
                 * The name of the service bus that contains the event hub.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#serviceBusNamespace
                 */
                readonly serviceBusNamespace: string;

                /**
                 * The value of the shared access key that grants the Time Series Insights service read access to the event hub. This property is not shown in event source responses.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#sharedAccessKey
                 */
                readonly sharedAccessKey: string;

                /**
                 * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
                 *
                 * @schema #/definitions/EventHubEventSourceCreationProperties#timestampPropertyName
                 */
                readonly timestampPropertyName?: string;

              }

              export enum IoTHubEventSourceCreateOrUpdateParametersKind {
                "IoTHubEventSourceCreateOrUpdateParametersKind_MICROSOFT_IO_T_HUB" = 'Microsoft.IoTHub',
              }

              /**
               * Properties of the IoTHub event source that are required on create or update requests.
               *
               * @schema #/definitions/IoTHubEventSourceCreationProperties
               */
              export interface IoTHubEventSourceCreationProperties {
                /**
                 * The name of the iot hub's consumer group that holds the partitions from which events will be read.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#consumerGroupName
                 */
                readonly consumerGroupName: string;

                /**
                 * The resource id of the event source in Azure Resource Manager.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#eventSourceResourceId
                 */
                readonly eventSourceResourceId: string;

                /**
                 * The name of the iot hub.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#iotHubName
                 */
                readonly iotHubName: string;

                /**
                 * The name of the Shared Access Policy key that grants the Time Series Insights service access to the iot hub. This shared access policy key must grant 'service connect' permissions to the iot hub.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#keyName
                 */
                readonly keyName: string;

                /**
                 * Provisioning state of the resource.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#provisioningState
                 */
                readonly provisioningState?: IoTHubEventSourceCreationPropertiesProvisioningState;

                /**
                 * The value of the Shared Access Policy key that grants the Time Series Insights service read access to the iot hub. This property is not shown in event source responses.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#sharedAccessKey
                 */
                readonly sharedAccessKey: string;

                /**
                 * The event property that will be used as the event source's timestamp. If a value isn't specified for timestampPropertyName, or if null or empty-string is specified, the event creation time will be used.
                 *
                 * @schema #/definitions/IoTHubEventSourceCreationProperties#timestampPropertyName
                 */
                readonly timestampPropertyName?: string;

              }

              export enum ReferenceDataSetCreationPropertiesDataStringComparisonBehavior {
                ORDINAL = 'Ordinal',
                ORDINAL_IGNORE_CASE = 'OrdinalIgnoreCase',
              }

              /**
               * A key property for the reference data set. A reference data set can have multiple key properties.
               *
               * @schema #/definitions/ReferenceDataSetKeyProperty
               */
              export interface ReferenceDataSetKeyProperty {
                /**
                 * The name of the key property.
                 *
                 * @schema #/definitions/ReferenceDataSetKeyProperty#name
                 */
                readonly name?: string;

                /**
                 * The type of the key property.
                 *
                 * @schema #/definitions/ReferenceDataSetKeyProperty#type
                 */
                readonly type?: ReferenceDataSetKeyPropertyType;

              }

              /**
               * The structure of the property that a time series id can have. An environment can have multiple such properties.
               *
               * @schema #/definitions/TimeSeriesIdProperty
               */
              export interface TimeSeriesIdProperty {
                /**
                 * The name of the property.
                 *
                 * @schema #/definitions/TimeSeriesIdProperty#name
                 */
                readonly name?: string;

                /**
                 * The type of the property.
                 *
                 * @schema #/definitions/TimeSeriesIdProperty#type
                 */
                readonly type?: TimeSeriesIdPropertyType;

              }

              export enum Gen1EnvironmentCreationPropertiesStorageLimitExceededBehavior {
                PURGE_OLD_DATA = 'PurgeOldData',
                PAUSE_INGRESS = 'PauseIngress',
              }

              /**
               * The storage configuration provides the connection details that allows the Time Series Insights service to connect to the customer storage account that is used to store the environment's data.
               *
               * @schema #/definitions/Gen2StorageConfigurationInput
               */
              export interface Gen2StorageConfigurationInput {
                /**
                 * The name of the storage account that will hold the environment's Gen2 data.
                 *
                 * @schema #/definitions/Gen2StorageConfigurationInput#accountName
                 */
                readonly accountName: string;

                /**
                 * The value of the management key that grants the Time Series Insights service write access to the storage account. This property is not shown in environment responses.
                 *
                 * @schema #/definitions/Gen2StorageConfigurationInput#managementKey
                 */
                readonly managementKey: string;

              }

              /**
               * The warm store configuration provides the details to create a warm store cache that will retain a copy of the environment's data available for faster query.
               *
               * @schema #/definitions/WarmStoreConfigurationProperties
               */
              export interface WarmStoreConfigurationProperties {
                /**
                 * ISO8601 timespan specifying the number of days the environment's events will be available for query from the warm store.
                 *
                 * @schema #/definitions/WarmStoreConfigurationProperties#dataRetention
                 */
                readonly dataRetention: string;

              }

              export enum EventHubEventSourceCreationPropertiesProvisioningState {
                ACCEPTED = 'Accepted',
                CREATING = 'Creating',
                UPDATING = 'Updating',
                SUCCEEDED = 'Succeeded',
                FAILED = 'Failed',
                DELETING = 'Deleting',
              }

              export enum IoTHubEventSourceCreationPropertiesProvisioningState {
                ACCEPTED = 'Accepted',
                CREATING = 'Creating',
                UPDATING = 'Updating',
                SUCCEEDED = 'Succeeded',
                FAILED = 'Failed',
                DELETING = 'Deleting',
              }

              export enum ReferenceDataSetKeyPropertyType {
                STRING = 'String',
                DOUBLE = 'Double',
                BOOL = 'Bool',
                DATE_TIME = 'DateTime',
              }

              export enum TimeSeriesIdPropertyType {
                STRING = 'String',
              }

