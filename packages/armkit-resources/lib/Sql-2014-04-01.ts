// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Sql/servers
 *
 * @schema Microsoft.Sql.servers
 */
export class Servers extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers',
    });
  }
}

/**
 * Microsoft.Sql/servers/administrators
 *
 * @schema Microsoft.Sql.servers_administrators
 */
export class ServersAdministrators extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_administrators" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersAdministratorsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_administrators',
    });
  }
}

/**
 * Microsoft.Sql/servers/advisors
 *
 * @schema Microsoft.Sql.servers_advisors
 */
export class ServersAdvisors extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_advisors" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersAdvisorsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_advisors',
    });
  }
}

/**
 * Microsoft.Sql/servers/auditingPolicies
 *
 * @schema Microsoft.Sql.servers_auditingPolicies
 */
export class ServersAuditingPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_auditingPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersAuditingPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_auditingPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/communicationLinks
 *
 * @schema Microsoft.Sql.servers_communicationLinks
 */
export class ServersCommunicationLinks extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_communicationLinks" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersCommunicationLinksOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_communicationLinks',
    });
  }
}

/**
 * Microsoft.Sql/servers/connectionPolicies
 *
 * @schema Microsoft.Sql.servers_connectionPolicies
 */
export class ServersConnectionPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_connectionPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersConnectionPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_connectionPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases
 *
 * @schema Microsoft.Sql.servers_databases
 */
export class ServersDatabases extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/advisors
 *
 * @schema Microsoft.Sql.servers_databases_advisors
 */
export class ServersDatabasesAdvisors extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_advisors" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesAdvisorsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_advisors',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/auditingPolicies
 *
 * @schema Microsoft.Sql.servers_databases_auditingPolicies
 */
export class ServersDatabasesAuditingPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_auditingPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesAuditingPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_auditingPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/connectionPolicies
 *
 * @schema Microsoft.Sql.servers_databases_connectionPolicies
 */
export class ServersDatabasesConnectionPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_connectionPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesConnectionPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_connectionPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies
 *
 * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies
 */
export class ServersDatabasesDataMaskingPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_dataMaskingPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesDataMaskingPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_dataMaskingPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies/rules
 *
 * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules
 */
export class ServersDatabasesDataMaskingPoliciesRules extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_dataMaskingPolicies_rules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesDataMaskingPoliciesRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_dataMaskingPolicies_rules',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/extensions
 *
 * @schema Microsoft.Sql.servers_databases_extensions
 */
export class ServersDatabasesExtensions extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_extensions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesExtensionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_extensions',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/geoBackupPolicies
 *
 * @schema Microsoft.Sql.servers_databases_geoBackupPolicies
 */
export class ServersDatabasesGeoBackupPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_geoBackupPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesGeoBackupPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_geoBackupPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/securityAlertPolicies
 *
 * @schema Microsoft.Sql.servers_databases_securityAlertPolicies
 */
export class ServersDatabasesSecurityAlertPolicies extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_securityAlertPolicies" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesSecurityAlertPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_securityAlertPolicies',
    });
  }
}

/**
 * Microsoft.Sql/servers/databases/transparentDataEncryption
 *
 * @schema Microsoft.Sql.servers_databases_transparentDataEncryption
 */
export class ServersDatabasesTransparentDataEncryption extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_databases_transparentDataEncryption" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDatabasesTransparentDataEncryptionOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_databases_transparentDataEncryption',
    });
  }
}

/**
 * Microsoft.Sql/servers/disasterRecoveryConfiguration
 *
 * @schema Microsoft.Sql.servers_disasterRecoveryConfiguration
 */
export class ServersDisasterRecoveryConfiguration extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_disasterRecoveryConfiguration" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersDisasterRecoveryConfigurationOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_disasterRecoveryConfiguration',
    });
  }
}

/**
 * Microsoft.Sql/servers/elasticPools
 *
 * @schema Microsoft.Sql.servers_elasticPools
 */
export class ServersElasticPools extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_elasticPools" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersElasticPoolsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_elasticPools',
    });
  }
}

/**
 * Microsoft.Sql/servers/firewallRules
 *
 * @schema Microsoft.Sql.servers_firewallRules
 */
export class ServersFirewallRules extends ArmResource {
  /**
   * Defines a "Microsoft.Sql.servers_firewallRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ServersFirewallRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'servers_firewallRules',
    });
  }
}

/**
 * Microsoft.Sql/servers
 *
 * @schema Microsoft.Sql.servers
 */
export interface ServersOptions {
  /**
   * @schema Microsoft.Sql.servers#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersApiVersion;

  /**
   * Resource location.
   *
   * @schema Microsoft.Sql.servers#location
   */
  readonly location: string;

  /**
   * The name of the server.
   *
   * @schema Microsoft.Sql.servers#name
   */
  readonly name: string;

  /**
   * Represents the properties of a server.
   *
   * @schema Microsoft.Sql.servers#properties
   */
  readonly properties: ServerProperties;

  /**
   * @schema Microsoft.Sql.servers#resources
   */
  readonly resources?: MicrosoftSqlServersResources[];

  /**
   * Resource tags.
   *
   * @schema Microsoft.Sql.servers#tags
   */
  readonly tags?: MicrosoftSqlServersTags;

  /**
   * @schema Microsoft.Sql.servers#type
   */
  readonly type: MicrosoftSqlServersType;

}

/**
 * Microsoft.Sql/servers/administrators
 *
 * @schema Microsoft.Sql.servers_administrators
 */
export interface ServersAdministratorsOptions {
  /**
   * @schema Microsoft.Sql.servers_administrators#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersAdministratorsApiVersion;

  /**
   * Name of the server administrator resource.
   *
   * @schema Microsoft.Sql.servers_administrators#name
   */
  readonly name: MicrosoftSqlServersAdministratorsNamePattern;

  /**
   * The properties of an server Administrator.
   *
   * @schema Microsoft.Sql.servers_administrators#properties
   */
  readonly properties: ServerAdministratorProperties;

  /**
   * @schema Microsoft.Sql.servers_administrators#type
   */
  readonly type: MicrosoftSqlServersAdministratorsType;

}

/**
 * Microsoft.Sql/servers/advisors
 *
 * @schema Microsoft.Sql.servers_advisors
 */
export interface ServersAdvisorsOptions {
  /**
   * @schema Microsoft.Sql.servers_advisors#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersAdvisorsApiVersion;

  /**
   * The name of the Server Advisor.
   *
   * @schema Microsoft.Sql.servers_advisors#name
   */
  readonly name: string;

  /**
   * Properties for a Database, Server or Elastic Pool Advisor.
   *
   * @schema Microsoft.Sql.servers_advisors#properties
   */
  readonly properties: AdvisorProperties;

  /**
   * @schema Microsoft.Sql.servers_advisors#type
   */
  readonly type: MicrosoftSqlServersAdvisorsType;

}

/**
 * Microsoft.Sql/servers/auditingPolicies
 *
 * @schema Microsoft.Sql.servers_auditingPolicies
 */
export interface ServersAuditingPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_auditingPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersAuditingPoliciesApiVersion;

  /**
   * The name of the table auditing policy.
   *
   * @schema Microsoft.Sql.servers_auditingPolicies#name
   */
  readonly name: MicrosoftSqlServersAuditingPoliciesNamePattern;

  /**
   * Properties of a server table auditing policy.
   *
   * @schema Microsoft.Sql.servers_auditingPolicies#properties
   */
  readonly properties: ServerTableAuditingPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_auditingPolicies#type
   */
  readonly type: MicrosoftSqlServersAuditingPoliciesType;

}

/**
 * Microsoft.Sql/servers/communicationLinks
 *
 * @schema Microsoft.Sql.servers_communicationLinks
 */
export interface ServersCommunicationLinksOptions {
  /**
   * @schema Microsoft.Sql.servers_communicationLinks#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersCommunicationLinksApiVersion;

  /**
   * The name of the server communication link.
   *
   * @schema Microsoft.Sql.servers_communicationLinks#name
   */
  readonly name: string;

  /**
   * The properties of a server communication link.
   *
   * @schema Microsoft.Sql.servers_communicationLinks#properties
   */
  readonly properties: ServerCommunicationLinkProperties;

  /**
   * @schema Microsoft.Sql.servers_communicationLinks#type
   */
  readonly type: MicrosoftSqlServersCommunicationLinksType;

}

/**
 * Microsoft.Sql/servers/connectionPolicies
 *
 * @schema Microsoft.Sql.servers_connectionPolicies
 */
export interface ServersConnectionPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_connectionPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersConnectionPoliciesApiVersion;

  /**
   * The name of the connection policy.
   *
   * @schema Microsoft.Sql.servers_connectionPolicies#name
   */
  readonly name: MicrosoftSqlServersConnectionPoliciesNamePattern;

  /**
   * The properties of a server secure connection policy.
   *
   * @schema Microsoft.Sql.servers_connectionPolicies#properties
   */
  readonly properties: ServerConnectionPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_connectionPolicies#type
   */
  readonly type: MicrosoftSqlServersConnectionPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases
 *
 * @schema Microsoft.Sql.servers_databases
 */
export interface ServersDatabasesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesApiVersion;

  /**
   * Resource location.
   *
   * @schema Microsoft.Sql.servers_databases#location
   */
  readonly location: string;

  /**
   * The name of the database to be operated on (updated or created).
   *
   * @schema Microsoft.Sql.servers_databases#name
   */
  readonly name: string;

  /**
   * Represents the properties of a database.
   *
   * @schema Microsoft.Sql.servers_databases#properties
   */
  readonly properties: DatabaseProperties;

  /**
   * @schema Microsoft.Sql.servers_databases#resources
   */
  readonly resources?: MicrosoftSqlServersDatabasesResources[];

  /**
   * Resource tags.
   *
   * @schema Microsoft.Sql.servers_databases#tags
   */
  readonly tags?: MicrosoftSqlServersDatabasesTags;

  /**
   * @schema Microsoft.Sql.servers_databases#type
   */
  readonly type: MicrosoftSqlServersDatabasesType;

}

/**
 * Microsoft.Sql/servers/databases/advisors
 *
 * @schema Microsoft.Sql.servers_databases_advisors
 */
export interface ServersDatabasesAdvisorsOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_advisors#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesAdvisorsApiVersion;

  /**
   * The name of the Database Advisor.
   *
   * @schema Microsoft.Sql.servers_databases_advisors#name
   */
  readonly name: string;

  /**
   * Properties for a Database, Server or Elastic Pool Advisor.
   *
   * @schema Microsoft.Sql.servers_databases_advisors#properties
   */
  readonly properties: AdvisorProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_advisors#type
   */
  readonly type: MicrosoftSqlServersDatabasesAdvisorsType;

}

/**
 * Microsoft.Sql/servers/databases/auditingPolicies
 *
 * @schema Microsoft.Sql.servers_databases_auditingPolicies
 */
export interface ServersDatabasesAuditingPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_auditingPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesAuditingPoliciesApiVersion;

  /**
   * The name of the table auditing policy.
   *
   * @schema Microsoft.Sql.servers_databases_auditingPolicies#name
   */
  readonly name: MicrosoftSqlServersDatabasesAuditingPoliciesNamePattern;

  /**
   * Properties of a database table auditing policy.
   *
   * @schema Microsoft.Sql.servers_databases_auditingPolicies#properties
   */
  readonly properties: DatabaseTableAuditingPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_auditingPolicies#type
   */
  readonly type: MicrosoftSqlServersDatabasesAuditingPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases/connectionPolicies
 *
 * @schema Microsoft.Sql.servers_databases_connectionPolicies
 */
export interface ServersDatabasesConnectionPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_connectionPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesConnectionPoliciesApiVersion;

  /**
   * The name of the connection policy.
   *
   * @schema Microsoft.Sql.servers_databases_connectionPolicies#name
   */
  readonly name: MicrosoftSqlServersDatabasesConnectionPoliciesNamePattern;

  /**
   * Properties of a database connection policy.
   *
   * @schema Microsoft.Sql.servers_databases_connectionPolicies#properties
   */
  readonly properties: DatabaseConnectionPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_connectionPolicies#type
   */
  readonly type: MicrosoftSqlServersDatabasesConnectionPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies
 *
 * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies
 */
export interface ServersDatabasesDataMaskingPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesDataMaskingPoliciesApiVersion;

  /**
   * The name of the database for which the data masking rule applies.
   *
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies#name
   */
  readonly name: MicrosoftSqlServersDatabasesDataMaskingPoliciesNamePattern;

  /**
   * The properties of a database data masking policy.
   *
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies#properties
   */
  readonly properties: DataMaskingPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies#resources
   */
  readonly resources?: ServersDatabasesDataMaskingPoliciesRulesChildResource[];

  /**
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies#type
   */
  readonly type: MicrosoftSqlServersDatabasesDataMaskingPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies/rules
 *
 * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules
 */
export interface ServersDatabasesDataMaskingPoliciesRulesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesApiVersion;

  /**
   * The name of the data masking rule.
   *
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules#name
   */
  readonly name: string;

  /**
   * The properties of a database data masking rule.
   *
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules#properties
   */
  readonly properties: DataMaskingRuleProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_dataMaskingPolicies_rules#type
   */
  readonly type: MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesType;

}

/**
 * Microsoft.Sql/servers/databases/extensions
 *
 * @schema Microsoft.Sql.servers_databases_extensions
 */
export interface ServersDatabasesExtensionsOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_extensions#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesExtensionsApiVersion;

  /**
   * The name of the operation to perform
   *
   * @schema Microsoft.Sql.servers_databases_extensions#name
   */
  readonly name: MicrosoftSqlServersDatabasesExtensionsNamePattern;

  /**
   * Represents the properties for an import operation
   *
   * @schema Microsoft.Sql.servers_databases_extensions#properties
   */
  readonly properties: ImportExtensionProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_extensions#type
   */
  readonly type: MicrosoftSqlServersDatabasesExtensionsType;

}

/**
 * Microsoft.Sql/servers/databases/geoBackupPolicies
 *
 * @schema Microsoft.Sql.servers_databases_geoBackupPolicies
 */
export interface ServersDatabasesGeoBackupPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_geoBackupPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesGeoBackupPoliciesApiVersion;

  /**
   * The name of the geo backup policy.
   *
   * @schema Microsoft.Sql.servers_databases_geoBackupPolicies#name
   */
  readonly name: MicrosoftSqlServersDatabasesGeoBackupPoliciesNamePattern;

  /**
   * The properties of the geo backup policy.
   *
   * @schema Microsoft.Sql.servers_databases_geoBackupPolicies#properties
   */
  readonly properties: GeoBackupPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_geoBackupPolicies#type
   */
  readonly type: MicrosoftSqlServersDatabasesGeoBackupPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases/securityAlertPolicies
 *
 * @schema Microsoft.Sql.servers_databases_securityAlertPolicies
 */
export interface ServersDatabasesSecurityAlertPoliciesOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_securityAlertPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesSecurityAlertPoliciesApiVersion;

  /**
   * The geo-location where the resource lives
   *
   * @schema Microsoft.Sql.servers_databases_securityAlertPolicies#location
   */
  readonly location?: string;

  /**
   * The name of the security alert policy.
   *
   * @schema Microsoft.Sql.servers_databases_securityAlertPolicies#name
   */
  readonly name: MicrosoftSqlServersDatabasesSecurityAlertPoliciesNamePattern;

  /**
   * Properties for a database Threat Detection policy.
   *
   * @schema Microsoft.Sql.servers_databases_securityAlertPolicies#properties
   */
  readonly properties: DatabaseSecurityAlertPolicyProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_securityAlertPolicies#type
   */
  readonly type: MicrosoftSqlServersDatabasesSecurityAlertPoliciesType;

}

/**
 * Microsoft.Sql/servers/databases/transparentDataEncryption
 *
 * @schema Microsoft.Sql.servers_databases_transparentDataEncryption
 */
export interface ServersDatabasesTransparentDataEncryptionOptions {
  /**
   * @schema Microsoft.Sql.servers_databases_transparentDataEncryption#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDatabasesTransparentDataEncryptionApiVersion;

  /**
   * The name of the transparent data encryption configuration.
   *
   * @schema Microsoft.Sql.servers_databases_transparentDataEncryption#name
   */
  readonly name: MicrosoftSqlServersDatabasesTransparentDataEncryptionNamePattern;

  /**
   * Represents the properties of a database transparent data encryption.
   *
   * @schema Microsoft.Sql.servers_databases_transparentDataEncryption#properties
   */
  readonly properties: TransparentDataEncryptionProperties;

  /**
   * @schema Microsoft.Sql.servers_databases_transparentDataEncryption#type
   */
  readonly type: MicrosoftSqlServersDatabasesTransparentDataEncryptionType;

}

/**
 * Microsoft.Sql/servers/disasterRecoveryConfiguration
 *
 * @schema Microsoft.Sql.servers_disasterRecoveryConfiguration
 */
export interface ServersDisasterRecoveryConfigurationOptions {
  /**
   * @schema Microsoft.Sql.servers_disasterRecoveryConfiguration#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersDisasterRecoveryConfigurationApiVersion;

  /**
   * The name of the disaster recovery configuration to be created/updated.
   *
   * @schema Microsoft.Sql.servers_disasterRecoveryConfiguration#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Sql.servers_disasterRecoveryConfiguration#type
   */
  readonly type: MicrosoftSqlServersDisasterRecoveryConfigurationType;

}

/**
 * Microsoft.Sql/servers/elasticPools
 *
 * @schema Microsoft.Sql.servers_elasticPools
 */
export interface ServersElasticPoolsOptions {
  /**
   * @schema Microsoft.Sql.servers_elasticPools#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersElasticPoolsApiVersion;

  /**
   * Resource location.
   *
   * @schema Microsoft.Sql.servers_elasticPools#location
   */
  readonly location: string;

  /**
   * The name of the elastic pool to be operated on (updated or created).
   *
   * @schema Microsoft.Sql.servers_elasticPools#name
   */
  readonly name: string;

  /**
   * Represents the properties of an elastic pool.
   *
   * @schema Microsoft.Sql.servers_elasticPools#properties
   */
  readonly properties: ElasticPoolProperties;

  /**
   * Resource tags.
   *
   * @schema Microsoft.Sql.servers_elasticPools#tags
   */
  readonly tags?: MicrosoftSqlServersElasticPoolsTags;

  /**
   * @schema Microsoft.Sql.servers_elasticPools#type
   */
  readonly type: MicrosoftSqlServersElasticPoolsType;

}

/**
 * Microsoft.Sql/servers/firewallRules
 *
 * @schema Microsoft.Sql.servers_firewallRules
 */
export interface ServersFirewallRulesOptions {
  /**
   * @schema Microsoft.Sql.servers_firewallRules#apiVersion
   */
  readonly apiVersion?: MicrosoftSqlServersFirewallRulesApiVersion;

  /**
   * The name of the firewall rule.
   *
   * @schema Microsoft.Sql.servers_firewallRules#name
   */
  readonly name: string;

  /**
   * Represents the properties of a server firewall rule.
   *
   * @schema Microsoft.Sql.servers_firewallRules#properties
   */
  readonly properties: FirewallRuleProperties;

  /**
   * @schema Microsoft.Sql.servers_firewallRules#type
   */
  readonly type: MicrosoftSqlServersFirewallRulesType;

}

export enum MicrosoftSqlServersApiVersion {
  "MicrosoftSqlServersApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * Represents the properties of a server.
 *
 * @schema #/definitions/ServerProperties
 */
export interface ServerProperties {
  /**
   * Administrator username for the server. Can only be specified when the server is being created (and is required for creation).
   *
   * @schema #/definitions/ServerProperties#administratorLogin
   */
  readonly administratorLogin?: string;

  /**
   * The administrator login password (required for server creation).
   *
   * @schema #/definitions/ServerProperties#administratorLoginPassword
   */
  readonly administratorLoginPassword?: string;

  /**
   * The version of the server.
   *
   * @schema #/definitions/ServerProperties#version
   */
  readonly version?: ServerPropertiesVersion;

}

/**
 * @schema MicrosoftSqlServersResources
 */
export class MicrosoftSqlServersResources {
  public static fromServersConnectionPoliciesChildResource(value: ServersConnectionPoliciesChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersDatabasesChildResource(value: ServersDatabasesChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersElasticPoolsChildResource(value: ServersElasticPoolsChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersCommunicationLinksChildResource(value: ServersCommunicationLinksChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersFirewallRulesChildResource(value: ServersFirewallRulesChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersAdministratorsChildResource(value: ServersAdministratorsChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersAdvisorsChildResource(value: ServersAdvisorsChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersDisasterRecoveryConfigurationChildResource(value: ServersDisasterRecoveryConfigurationChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  public static fromServersAuditingPoliciesChildResource(value: ServersAuditingPoliciesChildResource): MicrosoftSqlServersResources {
    return new MicrosoftSqlServersResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftSqlServersTags
 */
export interface MicrosoftSqlServersTags {
}

export enum MicrosoftSqlServersType {
  "MicrosoftSqlServersType_MICROSOFT_SQL_SERVERS" = 'Microsoft.Sql/servers',
}

export enum MicrosoftSqlServersAdministratorsApiVersion {
  "MicrosoftSqlServersAdministratorsApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersAdministratorsName
 */
export class MicrosoftSqlServersAdministratorsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties of an server Administrator.
 *
 * @schema #/definitions/ServerAdministratorProperties
 */
export interface ServerAdministratorProperties {
  /**
   * The type of administrator.
   *
   * @schema #/definitions/ServerAdministratorProperties#administratorType
   */
  readonly administratorType: ServerAdministratorPropertiesAdministratorType;

  /**
   * The server administrator login value.
   *
   * @schema #/definitions/ServerAdministratorProperties#login
   */
  readonly login: string;

  /**
   * The server administrator Sid (Secure ID).
   *
   * @schema #/definitions/ServerAdministratorProperties#sid
   */
  readonly sid: ServerAdministratorPropertiesSidPattern;

  /**
   * The server Active Directory Administrator tenant id.
   *
   * @schema #/definitions/ServerAdministratorProperties#tenantId
   */
  readonly tenantId: ServerAdministratorPropertiesTenantIdPattern;

}

export enum MicrosoftSqlServersAdministratorsType {
  "MicrosoftSqlServersAdministratorsType_MICROSOFT_SQL_SERVERS_ADMINISTRATORS" = 'Microsoft.Sql/servers/administrators',
}

export enum MicrosoftSqlServersAdvisorsApiVersion {
  "MicrosoftSqlServersAdvisorsApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * Properties for a Database, Server or Elastic Pool Advisor.
 *
 * @schema #/definitions/AdvisorProperties
 */
export interface AdvisorProperties {
  /**
   * Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled'.
   *
   * @schema #/definitions/AdvisorProperties#autoExecuteValue
   */
  readonly autoExecuteValue: AdvisorPropertiesAutoExecuteValue;

}

export enum MicrosoftSqlServersAdvisorsType {
  "MicrosoftSqlServersAdvisorsType_MICROSOFT_SQL_SERVERS_ADVISORS" = 'Microsoft.Sql/servers/advisors',
}

export enum MicrosoftSqlServersAuditingPoliciesApiVersion {
  "MicrosoftSqlServersAuditingPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersAuditingPoliciesName
 */
export class MicrosoftSqlServersAuditingPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of a server table auditing policy.
 *
 * @schema #/definitions/ServerTableAuditingPolicyProperties
 */
export interface ServerTableAuditingPolicyProperties {
  /**
   * The state of the policy.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#auditingState
   */
  readonly auditingState?: string;

  /**
   * The audit logs table name.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#auditLogsTableName
   */
  readonly auditLogsTableName?: string;

  /**
   * Comma-separated list of event types to audit.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#eventTypesToAudit
   */
  readonly eventTypesToAudit?: string;

  /**
   * The full audit logs table name.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#fullAuditLogsTableName
   */
  readonly fullAuditLogsTableName?: string;

  /**
   * The number of days to keep in the audit logs.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#retentionDays
   */
  readonly retentionDays?: string;

  /**
   * The key of the auditing storage account.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageAccountKey
   */
  readonly storageAccountKey?: string;

  /**
   * The table storage account name
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageAccountName
   */
  readonly storageAccountName?: string;

  /**
   * The table storage account resource group name
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageAccountResourceGroupName
   */
  readonly storageAccountResourceGroupName?: string;

  /**
   * The secondary key of the auditing storage account.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageAccountSecondaryKey
   */
  readonly storageAccountSecondaryKey?: string;

  /**
   * The table storage subscription Id.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageAccountSubscriptionId
   */
  readonly storageAccountSubscriptionId?: ServerTableAuditingPolicyPropertiesStorageAccountSubscriptionIdPattern;

  /**
   * The storage table endpoint.
   *
   * @schema #/definitions/ServerTableAuditingPolicyProperties#storageTableEndpoint
   */
  readonly storageTableEndpoint?: string;

}

export enum MicrosoftSqlServersAuditingPoliciesType {
  "MicrosoftSqlServersAuditingPoliciesType_MICROSOFT_SQL_SERVERS_AUDITING_POLICIES" = 'Microsoft.Sql/servers/auditingPolicies',
}

export enum MicrosoftSqlServersCommunicationLinksApiVersion {
  "MicrosoftSqlServersCommunicationLinksApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * The properties of a server communication link.
 *
 * @schema #/definitions/ServerCommunicationLinkProperties
 */
export interface ServerCommunicationLinkProperties {
  /**
   * The name of the partner server.
   *
   * @schema #/definitions/ServerCommunicationLinkProperties#partnerServer
   */
  readonly partnerServer: string;

}

export enum MicrosoftSqlServersCommunicationLinksType {
  "MicrosoftSqlServersCommunicationLinksType_MICROSOFT_SQL_SERVERS_COMMUNICATION_LINKS" = 'Microsoft.Sql/servers/communicationLinks',
}

export enum MicrosoftSqlServersConnectionPoliciesApiVersion {
  "MicrosoftSqlServersConnectionPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersConnectionPoliciesName
 */
export class MicrosoftSqlServersConnectionPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties of a server secure connection policy.
 *
 * @schema #/definitions/ServerConnectionPolicyProperties
 */
export interface ServerConnectionPolicyProperties {
  /**
   * The server connection type.
   *
   * @schema #/definitions/ServerConnectionPolicyProperties#connectionType
   */
  readonly connectionType: ServerConnectionPolicyPropertiesConnectionType;

}

export enum MicrosoftSqlServersConnectionPoliciesType {
  "MicrosoftSqlServersConnectionPoliciesType_MICROSOFT_SQL_SERVERS_CONNECTION_POLICIES" = 'Microsoft.Sql/servers/connectionPolicies',
}

export enum MicrosoftSqlServersDatabasesApiVersion {
  "MicrosoftSqlServersDatabasesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * Represents the properties of a database.
 *
 * @schema #/definitions/DatabaseProperties
 */
export interface DatabaseProperties {
  /**
   * The collation of the database. If createMode is not Default, this value is ignored.
   *
   * @schema #/definitions/DatabaseProperties#collation
   */
  readonly collation?: string;

  /**
   * Specifies the mode of database creation.

Default: regular database creation.

Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.

OnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.

PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.

Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.

Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.

RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.

Copy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.
   *
   * @schema #/definitions/DatabaseProperties#createMode
   */
  readonly createMode?: DatabasePropertiesCreateMode;

  /**
   * The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored.

The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:

```azurecli
az sql db list-editions -l <location> -o table
````

```powershell
Get-AzSqlServerServiceObjective -Location <location>
````
.
   *
   * @schema #/definitions/DatabaseProperties#edition
   */
  readonly edition?: DatabasePropertiesEdition;

  /**
   * The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.
   *
   * @schema #/definitions/DatabaseProperties#elasticPoolName
   */
  readonly elasticPoolName?: string;

  /**
   * The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: "Capabilities_ListByLocation."
   *
   * @schema #/definitions/DatabaseProperties#maxSizeBytes
   */
  readonly maxSizeBytes?: string;

  /**
   * Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition.
   *
   * @schema #/definitions/DatabaseProperties#readScale
   */
  readonly readScale?: DatabasePropertiesReadScale;

  /**
   * Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.
   *
   * @schema #/definitions/DatabaseProperties#recoveryServicesRecoveryPointResourceId
   */
  readonly recoveryServicesRecoveryPointResourceId?: string;

  /**
   * The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName.

The list of SKUs may vary by region and support offer. To determine the service objective ids that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API.
   *
   * @schema #/definitions/DatabaseProperties#requestedServiceObjectiveId
   */
  readonly requestedServiceObjectiveId?: DatabasePropertiesRequestedServiceObjectiveIdPattern;

  /**
   * The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. 

The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:

```azurecli
az sql db list-editions -l <location> -o table
````

```powershell
Get-AzSqlServerServiceObjective -Location <location>
````
.
   *
   * @schema #/definitions/DatabaseProperties#requestedServiceObjectiveName
   */
  readonly requestedServiceObjectiveName?: DatabasePropertiesRequestedServiceObjectiveName;

  /**
   * Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.
   *
   * @schema #/definitions/DatabaseProperties#restorePointInTime
   */
  readonly restorePointInTime?: Date;

  /**
   * Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.
   *
   * @schema #/definitions/DatabaseProperties#sampleName
   */
  readonly sampleName?: DatabasePropertiesSampleName;

  /**
   * Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.
   *
   * @schema #/definitions/DatabaseProperties#sourceDatabaseDeletionDate
   */
  readonly sourceDatabaseDeletionDate?: Date;

  /**
   * Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.
   *
   * @schema #/definitions/DatabaseProperties#sourceDatabaseId
   */
  readonly sourceDatabaseId?: string;

  /**
   * Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
   *
   * @schema #/definitions/DatabaseProperties#zoneRedundant
   */
  readonly zoneRedundant?: boolean;

}

/**
 * @schema MicrosoftSqlServersDatabasesResources
 */
export class MicrosoftSqlServersDatabasesResources {
  public static fromServersDatabasesDataMaskingPoliciesChildResource(value: ServersDatabasesDataMaskingPoliciesChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesGeoBackupPoliciesChildResource(value: ServersDatabasesGeoBackupPoliciesChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesExtensionsChildResource(value: ServersDatabasesExtensionsChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesTransparentDataEncryptionChildResource(value: ServersDatabasesTransparentDataEncryptionChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesSecurityAlertPoliciesChildResource(value: ServersDatabasesSecurityAlertPoliciesChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesAdvisorsChildResource(value: ServersDatabasesAdvisorsChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesAuditingPoliciesChildResource(value: ServersDatabasesAuditingPoliciesChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  public static fromServersDatabasesConnectionPoliciesChildResource(value: ServersDatabasesConnectionPoliciesChildResource): MicrosoftSqlServersDatabasesResources {
    return new MicrosoftSqlServersDatabasesResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftSqlServersDatabasesTags
 */
export interface MicrosoftSqlServersDatabasesTags {
}

export enum MicrosoftSqlServersDatabasesType {
  "MicrosoftSqlServersDatabasesType_MICROSOFT_SQL_SERVERS_DATABASES" = 'Microsoft.Sql/servers/databases',
}

export enum MicrosoftSqlServersDatabasesAdvisorsApiVersion {
  "MicrosoftSqlServersDatabasesAdvisorsApiVersion_2014_04_01" = '2014-04-01',
}

export enum MicrosoftSqlServersDatabasesAdvisorsType {
  "MicrosoftSqlServersDatabasesAdvisorsType_MICROSOFT_SQL_SERVERS_DATABASES_ADVISORS" = 'Microsoft.Sql/servers/databases/advisors',
}

export enum MicrosoftSqlServersDatabasesAuditingPoliciesApiVersion {
  "MicrosoftSqlServersDatabasesAuditingPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesAuditingPoliciesName
 */
export class MicrosoftSqlServersDatabasesAuditingPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of a database table auditing policy.
 *
 * @schema #/definitions/DatabaseTableAuditingPolicyProperties
 */
export interface DatabaseTableAuditingPolicyProperties {
  /**
   * The state of the policy.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#auditingState
   */
  readonly auditingState?: string;

  /**
   * The audit logs table name.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#auditLogsTableName
   */
  readonly auditLogsTableName?: string;

  /**
   * Comma-separated list of event types to audit.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#eventTypesToAudit
   */
  readonly eventTypesToAudit?: string;

  /**
   * The full audit logs table name.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#fullAuditLogsTableName
   */
  readonly fullAuditLogsTableName?: string;

  /**
   * The number of days to keep in the audit logs.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#retentionDays
   */
  readonly retentionDays?: string;

  /**
   * The key of the auditing storage account.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageAccountKey
   */
  readonly storageAccountKey?: string;

  /**
   * The table storage account name
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageAccountName
   */
  readonly storageAccountName?: string;

  /**
   * The table storage account resource group name
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageAccountResourceGroupName
   */
  readonly storageAccountResourceGroupName?: string;

  /**
   * The secondary key of the auditing storage account.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageAccountSecondaryKey
   */
  readonly storageAccountSecondaryKey?: string;

  /**
   * The table storage subscription Id.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageAccountSubscriptionId
   */
  readonly storageAccountSubscriptionId?: DatabaseTableAuditingPolicyPropertiesStorageAccountSubscriptionIdPattern;

  /**
   * The storage table endpoint.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#storageTableEndpoint
   */
  readonly storageTableEndpoint?: string;

  /**
   * Whether server default is enabled or disabled.
   *
   * @schema #/definitions/DatabaseTableAuditingPolicyProperties#useServerDefault
   */
  readonly useServerDefault?: string;

}

export enum MicrosoftSqlServersDatabasesAuditingPoliciesType {
  "MicrosoftSqlServersDatabasesAuditingPoliciesType_MICROSOFT_SQL_SERVERS_DATABASES_AUDITING_POLICIES" = 'Microsoft.Sql/servers/databases/auditingPolicies',
}

export enum MicrosoftSqlServersDatabasesConnectionPoliciesApiVersion {
  "MicrosoftSqlServersDatabasesConnectionPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesConnectionPoliciesName
 */
export class MicrosoftSqlServersDatabasesConnectionPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of a database connection policy.
 *
 * @schema #/definitions/DatabaseConnectionPolicyProperties
 */
export interface DatabaseConnectionPolicyProperties {
  /**
   * The fully qualified host name of the auditing proxy.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#proxyDnsName
   */
  readonly proxyDnsName?: string;

  /**
   * The port number of the auditing proxy.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#proxyPort
   */
  readonly proxyPort?: string;

  /**
   * The state of proxy redirection.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#redirectionState
   */
  readonly redirectionState?: string;

  /**
   * The state of security access.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#securityEnabledAccess
   */
  readonly securityEnabledAccess?: string;

  /**
   * The connection policy state.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#state
   */
  readonly state?: string;

  /**
   * Whether server default is enabled or disabled.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#useServerDefault
   */
  readonly useServerDefault?: string;

  /**
   * The visibility of the auditing proxy.
   *
   * @schema #/definitions/DatabaseConnectionPolicyProperties#visibility
   */
  readonly visibility?: string;

}

export enum MicrosoftSqlServersDatabasesConnectionPoliciesType {
  "MicrosoftSqlServersDatabasesConnectionPoliciesType_MICROSOFT_SQL_SERVERS_DATABASES_CONNECTION_POLICIES" = 'Microsoft.Sql/servers/databases/connectionPolicies',
}

export enum MicrosoftSqlServersDatabasesDataMaskingPoliciesApiVersion {
  "MicrosoftSqlServersDatabasesDataMaskingPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesDataMaskingPoliciesName
 */
export class MicrosoftSqlServersDatabasesDataMaskingPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties of a database data masking policy.
 *
 * @schema #/definitions/DataMaskingPolicyProperties
 */
export interface DataMaskingPolicyProperties {
  /**
   * The state of the data masking policy.
   *
   * @schema #/definitions/DataMaskingPolicyProperties#dataMaskingState
   */
  readonly dataMaskingState: DataMaskingPolicyPropertiesDataMaskingState;

  /**
   * The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries.
   *
   * @schema #/definitions/DataMaskingPolicyProperties#exemptPrincipals
   */
  readonly exemptPrincipals?: string;

}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies/rules
 *
 * @schema #/definitions/servers_databases_dataMaskingPolicies_rules_childResource
 */
export interface ServersDatabasesDataMaskingPoliciesRulesChildResource {
  /**
   * @schema #/definitions/servers_databases_dataMaskingPolicies_rules_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesDataMaskingPoliciesRulesChildResourceApiVersion;

  /**
   * The name of the data masking rule.
   *
   * @schema #/definitions/servers_databases_dataMaskingPolicies_rules_childResource#name
   */
  readonly name: string;

  /**
   * The properties of a database data masking rule.
   *
   * @schema #/definitions/servers_databases_dataMaskingPolicies_rules_childResource#properties
   */
  readonly properties: DataMaskingRuleProperties;

  /**
   * @schema #/definitions/servers_databases_dataMaskingPolicies_rules_childResource#type
   */
  readonly type: ServersDatabasesDataMaskingPoliciesRulesChildResourceType;

}

export enum MicrosoftSqlServersDatabasesDataMaskingPoliciesType {
  "MicrosoftSqlServersDatabasesDataMaskingPoliciesType_MICROSOFT_SQL_SERVERS_DATABASES_DATA_MASKING_POLICIES" = 'Microsoft.Sql/servers/databases/dataMaskingPolicies',
}

export enum MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesApiVersion {
  "MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * The properties of a database data masking rule.
 *
 * @schema #/definitions/DataMaskingRuleProperties
 */
export interface DataMaskingRuleProperties {
  /**
   * The alias name. This is a legacy parameter and is no longer used.
   *
   * @schema #/definitions/DataMaskingRuleProperties#aliasName
   */
  readonly aliasName?: string;

  /**
   * The column name on which the data masking rule is applied.
   *
   * @schema #/definitions/DataMaskingRuleProperties#columnName
   */
  readonly columnName: string;

  /**
   * The masking function that is used for the data masking rule.
   *
   * @schema #/definitions/DataMaskingRuleProperties#maskingFunction
   */
  readonly maskingFunction: DataMaskingRulePropertiesMaskingFunction;

  /**
   * The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.
   *
   * @schema #/definitions/DataMaskingRuleProperties#numberFrom
   */
  readonly numberFrom?: string;

  /**
   * The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored.
   *
   * @schema #/definitions/DataMaskingRuleProperties#numberTo
   */
  readonly numberTo?: string;

  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored.
   *
   * @schema #/definitions/DataMaskingRuleProperties#prefixSize
   */
  readonly prefixSize?: string;

  /**
   * If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored.
   *
   * @schema #/definitions/DataMaskingRuleProperties#replacementString
   */
  readonly replacementString?: string;

  /**
   * The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState.
   *
   * @schema #/definitions/DataMaskingRuleProperties#ruleState
   */
  readonly ruleState?: DataMaskingRulePropertiesRuleState;

  /**
   * The schema name on which the data masking rule is applied.
   *
   * @schema #/definitions/DataMaskingRuleProperties#schemaName
   */
  readonly schemaName: string;

  /**
   * If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored.
   *
   * @schema #/definitions/DataMaskingRuleProperties#suffixSize
   */
  readonly suffixSize?: string;

  /**
   * The table name on which the data masking rule is applied.
   *
   * @schema #/definitions/DataMaskingRuleProperties#tableName
   */
  readonly tableName: string;

}

export enum MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesType {
  "MicrosoftSqlServersDatabasesDataMaskingPoliciesRulesType_MICROSOFT_SQL_SERVERS_DATABASES_DATA_MASKING_POLICIES_RULES" = 'Microsoft.Sql/servers/databases/dataMaskingPolicies/rules',
}

export enum MicrosoftSqlServersDatabasesExtensionsApiVersion {
  "MicrosoftSqlServersDatabasesExtensionsApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesExtensionsName
 */
export class MicrosoftSqlServersDatabasesExtensionsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Represents the properties for an import operation
 *
 * @schema #/definitions/ImportExtensionProperties
 */
export interface ImportExtensionProperties {
  /**
   * The name of the SQL administrator.
   *
   * @schema #/definitions/ImportExtensionProperties#administratorLogin
   */
  readonly administratorLogin: string;

  /**
   * The password of the SQL administrator.
   *
   * @schema #/definitions/ImportExtensionProperties#administratorLoginPassword
   */
  readonly administratorLoginPassword: string;

  /**
   * The authentication type.
   *
   * @schema #/definitions/ImportExtensionProperties#authenticationType
   */
  readonly authenticationType?: ImportExtensionPropertiesAuthenticationType;

  /**
   * The type of import operation being performed. This is always Import.
   *
   * @schema #/definitions/ImportExtensionProperties#operationMode
   */
  readonly operationMode: ImportExtensionPropertiesOperationMode;

  /**
   * The storage key to use.  If storage key type is SharedAccessKey, it must be preceded with a "?."
   *
   * @schema #/definitions/ImportExtensionProperties#storageKey
   */
  readonly storageKey: string;

  /**
   * The type of the storage key to use.
   *
   * @schema #/definitions/ImportExtensionProperties#storageKeyType
   */
  readonly storageKeyType: ImportExtensionPropertiesStorageKeyType;

  /**
   * The storage uri to use.
   *
   * @schema #/definitions/ImportExtensionProperties#storageUri
   */
  readonly storageUri: string;

}

export enum MicrosoftSqlServersDatabasesExtensionsType {
  "MicrosoftSqlServersDatabasesExtensionsType_MICROSOFT_SQL_SERVERS_DATABASES_EXTENSIONS" = 'Microsoft.Sql/servers/databases/extensions',
}

export enum MicrosoftSqlServersDatabasesGeoBackupPoliciesApiVersion {
  "MicrosoftSqlServersDatabasesGeoBackupPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesGeoBackupPoliciesName
 */
export class MicrosoftSqlServersDatabasesGeoBackupPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The properties of the geo backup policy.
 *
 * @schema #/definitions/GeoBackupPolicyProperties
 */
export interface GeoBackupPolicyProperties {
  /**
   * The state of the geo backup policy.
   *
   * @schema #/definitions/GeoBackupPolicyProperties#state
   */
  readonly state: GeoBackupPolicyPropertiesState;

}

export enum MicrosoftSqlServersDatabasesGeoBackupPoliciesType {
  "MicrosoftSqlServersDatabasesGeoBackupPoliciesType_MICROSOFT_SQL_SERVERS_DATABASES_GEO_BACKUP_POLICIES" = 'Microsoft.Sql/servers/databases/geoBackupPolicies',
}

export enum MicrosoftSqlServersDatabasesSecurityAlertPoliciesApiVersion {
  "MicrosoftSqlServersDatabasesSecurityAlertPoliciesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesSecurityAlertPoliciesName
 */
export class MicrosoftSqlServersDatabasesSecurityAlertPoliciesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties for a database Threat Detection policy.
 *
 * @schema #/definitions/DatabaseSecurityAlertPolicyProperties
 */
export interface DatabaseSecurityAlertPolicyProperties {
  /**
   * Specifies the semicolon-separated list of alerts that are disabled, or empty string to disable no alerts. Possible values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly; Data_Exfiltration; Unsafe_Action.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#disabledAlerts
   */
  readonly disabledAlerts?: string;

  /**
   * Specifies that the alert is sent to the account administrators.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#emailAccountAdmins
   */
  readonly emailAccountAdmins?: DatabaseSecurityAlertPolicyPropertiesEmailAccountAdmins;

  /**
   * Specifies the semicolon-separated list of e-mail addresses to which the alert is sent.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#emailAddresses
   */
  readonly emailAddresses?: string;

  /**
   * Specifies the number of days to keep in the Threat Detection audit logs.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#retentionDays
   */
  readonly retentionDays?: number;

  /**
   * Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#state
   */
  readonly state: DatabaseSecurityAlertPolicyPropertiesState;

  /**
   * Specifies the identifier key of the Threat Detection audit storage account. If state is Enabled, storageAccountAccessKey is required.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#storageAccountAccessKey
   */
  readonly storageAccountAccessKey?: string;

  /**
   * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. If state is Enabled, storageEndpoint is required.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#storageEndpoint
   */
  readonly storageEndpoint?: string;

  /**
   * Specifies whether to use the default server policy.
   *
   * @schema #/definitions/DatabaseSecurityAlertPolicyProperties#useServerDefault
   */
  readonly useServerDefault?: DatabaseSecurityAlertPolicyPropertiesUseServerDefault;

}

export enum MicrosoftSqlServersDatabasesSecurityAlertPoliciesType {
  "MicrosoftSqlServersDatabasesSecurityAlertPoliciesType_MICROSOFT_SQL_SERVERS_DATABASES_SECURITY_ALERT_POLICIES" = 'Microsoft.Sql/servers/databases/securityAlertPolicies',
}

export enum MicrosoftSqlServersDatabasesTransparentDataEncryptionApiVersion {
  "MicrosoftSqlServersDatabasesTransparentDataEncryptionApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema MicrosoftSqlServersDatabasesTransparentDataEncryptionName
 */
export class MicrosoftSqlServersDatabasesTransparentDataEncryptionNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Represents the properties of a database transparent data encryption.
 *
 * @schema #/definitions/TransparentDataEncryptionProperties
 */
export interface TransparentDataEncryptionProperties {
  /**
   * The status of the database transparent data encryption.
   *
   * @schema #/definitions/TransparentDataEncryptionProperties#status
   */
  readonly status?: TransparentDataEncryptionPropertiesStatus;

}

export enum MicrosoftSqlServersDatabasesTransparentDataEncryptionType {
  "MicrosoftSqlServersDatabasesTransparentDataEncryptionType_MICROSOFT_SQL_SERVERS_DATABASES_TRANSPARENT_DATA_ENCRYPTION" = 'Microsoft.Sql/servers/databases/transparentDataEncryption',
}

export enum MicrosoftSqlServersDisasterRecoveryConfigurationApiVersion {
  "MicrosoftSqlServersDisasterRecoveryConfigurationApiVersion_2014_04_01" = '2014-04-01',
}

export enum MicrosoftSqlServersDisasterRecoveryConfigurationType {
  "MicrosoftSqlServersDisasterRecoveryConfigurationType_MICROSOFT_SQL_SERVERS_DISASTER_RECOVERY_CONFIGURATION" = 'Microsoft.Sql/servers/disasterRecoveryConfiguration',
}

export enum MicrosoftSqlServersElasticPoolsApiVersion {
  "MicrosoftSqlServersElasticPoolsApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * Represents the properties of an elastic pool.
 *
 * @schema #/definitions/ElasticPoolProperties
 */
export interface ElasticPoolProperties {
  /**
   * The maximum DTU any one database can consume.
   *
   * @schema #/definitions/ElasticPoolProperties#databaseDtuMax
   */
  readonly databaseDtuMax?: number;

  /**
   * The minimum DTU all databases are guaranteed.
   *
   * @schema #/definitions/ElasticPoolProperties#databaseDtuMin
   */
  readonly databaseDtuMin?: number;

  /**
   * The total shared DTU for the database elastic pool.
   *
   * @schema #/definitions/ElasticPoolProperties#dtu
   */
  readonly dtu?: number;

  /**
   * The edition of the elastic pool.
   *
   * @schema #/definitions/ElasticPoolProperties#edition
   */
  readonly edition?: ElasticPoolPropertiesEdition;

  /**
   * Gets storage limit for the database elastic pool in MB.
   *
   * @schema #/definitions/ElasticPoolProperties#storageMB
   */
  readonly storageMB?: number;

  /**
   * Whether or not this database elastic pool is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
   *
   * @schema #/definitions/ElasticPoolProperties#zoneRedundant
   */
  readonly zoneRedundant?: boolean;

}

/**
 * @schema MicrosoftSqlServersElasticPoolsTags
 */
export interface MicrosoftSqlServersElasticPoolsTags {
}

export enum MicrosoftSqlServersElasticPoolsType {
  "MicrosoftSqlServersElasticPoolsType_MICROSOFT_SQL_SERVERS_ELASTIC_POOLS" = 'Microsoft.Sql/servers/elasticPools',
}

export enum MicrosoftSqlServersFirewallRulesApiVersion {
  "MicrosoftSqlServersFirewallRulesApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * Represents the properties of a server firewall rule.
 *
 * @schema #/definitions/FirewallRuleProperties
 */
export interface FirewallRuleProperties {
  /**
   * The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
   *
   * @schema #/definitions/FirewallRuleProperties#endIpAddress
   */
  readonly endIpAddress: string;

  /**
   * The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP addresses.
   *
   * @schema #/definitions/FirewallRuleProperties#startIpAddress
   */
  readonly startIpAddress: string;

}

export enum MicrosoftSqlServersFirewallRulesType {
  "MicrosoftSqlServersFirewallRulesType_MICROSOFT_SQL_SERVERS_FIREWALL_RULES" = 'Microsoft.Sql/servers/firewallRules',
}

export enum ServerPropertiesVersion {
  "ServerPropertiesVersion_2_0" = '2.0',
  "ServerPropertiesVersion_12_0" = '12.0',
}

/**
 * Microsoft.Sql/servers/connectionPolicies
 *
 * @schema #/definitions/servers_connectionPolicies_childResource
 */
export interface ServersConnectionPoliciesChildResource {
  /**
   * @schema #/definitions/servers_connectionPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersConnectionPoliciesChildResourceApiVersion;

  /**
   * The name of the connection policy.
   *
   * @schema #/definitions/servers_connectionPolicies_childResource#name
   */
  readonly name: ServersConnectionPoliciesChildResourceName;

  /**
   * The properties of a server secure connection policy.
   *
   * @schema #/definitions/servers_connectionPolicies_childResource#properties
   */
  readonly properties: ServerConnectionPolicyProperties;

  /**
   * @schema #/definitions/servers_connectionPolicies_childResource#type
   */
  readonly type: ServersConnectionPoliciesChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases
 *
 * @schema #/definitions/servers_databases_childResource
 */
export interface ServersDatabasesChildResource {
  /**
   * @schema #/definitions/servers_databases_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesChildResourceApiVersion;

  /**
   * Resource location.
   *
   * @schema #/definitions/servers_databases_childResource#location
   */
  readonly location: string;

  /**
   * The name of the database to be operated on (updated or created).
   *
   * @schema #/definitions/servers_databases_childResource#name
   */
  readonly name: string;

  /**
   * Represents the properties of a database.
   *
   * @schema #/definitions/servers_databases_childResource#properties
   */
  readonly properties: DatabaseProperties;

  /**
   * Resource tags.
   *
   * @schema #/definitions/servers_databases_childResource#tags
   */
  readonly tags?: ServersDatabasesChildResourceTags;

  /**
   * @schema #/definitions/servers_databases_childResource#type
   */
  readonly type: ServersDatabasesChildResourceType;

}

/**
 * Microsoft.Sql/servers/elasticPools
 *
 * @schema #/definitions/servers_elasticPools_childResource
 */
export interface ServersElasticPoolsChildResource {
  /**
   * @schema #/definitions/servers_elasticPools_childResource#apiVersion
   */
  readonly apiVersion: ServersElasticPoolsChildResourceApiVersion;

  /**
   * Resource location.
   *
   * @schema #/definitions/servers_elasticPools_childResource#location
   */
  readonly location: string;

  /**
   * The name of the elastic pool to be operated on (updated or created).
   *
   * @schema #/definitions/servers_elasticPools_childResource#name
   */
  readonly name: string;

  /**
   * Represents the properties of an elastic pool.
   *
   * @schema #/definitions/servers_elasticPools_childResource#properties
   */
  readonly properties: ElasticPoolProperties;

  /**
   * Resource tags.
   *
   * @schema #/definitions/servers_elasticPools_childResource#tags
   */
  readonly tags?: ServersElasticPoolsChildResourceTags;

  /**
   * @schema #/definitions/servers_elasticPools_childResource#type
   */
  readonly type: ServersElasticPoolsChildResourceType;

}

/**
 * Microsoft.Sql/servers/communicationLinks
 *
 * @schema #/definitions/servers_communicationLinks_childResource
 */
export interface ServersCommunicationLinksChildResource {
  /**
   * @schema #/definitions/servers_communicationLinks_childResource#apiVersion
   */
  readonly apiVersion: ServersCommunicationLinksChildResourceApiVersion;

  /**
   * The name of the server communication link.
   *
   * @schema #/definitions/servers_communicationLinks_childResource#name
   */
  readonly name: string;

  /**
   * The properties of a server communication link.
   *
   * @schema #/definitions/servers_communicationLinks_childResource#properties
   */
  readonly properties: ServerCommunicationLinkProperties;

  /**
   * @schema #/definitions/servers_communicationLinks_childResource#type
   */
  readonly type: ServersCommunicationLinksChildResourceType;

}

/**
 * Microsoft.Sql/servers/firewallRules
 *
 * @schema #/definitions/servers_firewallRules_childResource
 */
export interface ServersFirewallRulesChildResource {
  /**
   * @schema #/definitions/servers_firewallRules_childResource#apiVersion
   */
  readonly apiVersion: ServersFirewallRulesChildResourceApiVersion;

  /**
   * The name of the firewall rule.
   *
   * @schema #/definitions/servers_firewallRules_childResource#name
   */
  readonly name: string;

  /**
   * Represents the properties of a server firewall rule.
   *
   * @schema #/definitions/servers_firewallRules_childResource#properties
   */
  readonly properties: FirewallRuleProperties;

  /**
   * @schema #/definitions/servers_firewallRules_childResource#type
   */
  readonly type: ServersFirewallRulesChildResourceType;

}

/**
 * Microsoft.Sql/servers/administrators
 *
 * @schema #/definitions/servers_administrators_childResource
 */
export interface ServersAdministratorsChildResource {
  /**
   * @schema #/definitions/servers_administrators_childResource#apiVersion
   */
  readonly apiVersion: ServersAdministratorsChildResourceApiVersion;

  /**
   * Name of the server administrator resource.
   *
   * @schema #/definitions/servers_administrators_childResource#name
   */
  readonly name: ServersAdministratorsChildResourceName;

  /**
   * The properties of an server Administrator.
   *
   * @schema #/definitions/servers_administrators_childResource#properties
   */
  readonly properties: ServerAdministratorProperties;

  /**
   * @schema #/definitions/servers_administrators_childResource#type
   */
  readonly type: ServersAdministratorsChildResourceType;

}

/**
 * Microsoft.Sql/servers/advisors
 *
 * @schema #/definitions/servers_advisors_childResource
 */
export interface ServersAdvisorsChildResource {
  /**
   * @schema #/definitions/servers_advisors_childResource#apiVersion
   */
  readonly apiVersion: ServersAdvisorsChildResourceApiVersion;

  /**
   * The name of the Server Advisor.
   *
   * @schema #/definitions/servers_advisors_childResource#name
   */
  readonly name: string;

  /**
   * Properties for a Database, Server or Elastic Pool Advisor.
   *
   * @schema #/definitions/servers_advisors_childResource#properties
   */
  readonly properties: AdvisorProperties;

  /**
   * @schema #/definitions/servers_advisors_childResource#type
   */
  readonly type: ServersAdvisorsChildResourceType;

}

/**
 * Microsoft.Sql/servers/disasterRecoveryConfiguration
 *
 * @schema #/definitions/servers_disasterRecoveryConfiguration_childResource
 */
export interface ServersDisasterRecoveryConfigurationChildResource {
  /**
   * @schema #/definitions/servers_disasterRecoveryConfiguration_childResource#apiVersion
   */
  readonly apiVersion: ServersDisasterRecoveryConfigurationChildResourceApiVersion;

  /**
   * The name of the disaster recovery configuration to be created/updated.
   *
   * @schema #/definitions/servers_disasterRecoveryConfiguration_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/servers_disasterRecoveryConfiguration_childResource#type
   */
  readonly type: ServersDisasterRecoveryConfigurationChildResourceType;

}

/**
 * Microsoft.Sql/servers/auditingPolicies
 *
 * @schema #/definitions/servers_auditingPolicies_childResource
 */
export interface ServersAuditingPoliciesChildResource {
  /**
   * @schema #/definitions/servers_auditingPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersAuditingPoliciesChildResourceApiVersion;

  /**
   * The name of the table auditing policy.
   *
   * @schema #/definitions/servers_auditingPolicies_childResource#name
   */
  readonly name: ServersAuditingPoliciesChildResourceName;

  /**
   * Properties of a server table auditing policy.
   *
   * @schema #/definitions/servers_auditingPolicies_childResource#properties
   */
  readonly properties: ServerTableAuditingPolicyProperties;

  /**
   * @schema #/definitions/servers_auditingPolicies_childResource#type
   */
  readonly type: ServersAuditingPoliciesChildResourceType;

}

export enum ServerAdministratorPropertiesAdministratorType {
  ACTIVE_DIRECTORY = 'ActiveDirectory',
}

/**
 * @schema #/definitions/serverAdministratorPropertiesSid
 */
export class ServerAdministratorPropertiesSidPattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * @schema #/definitions/serverAdministratorPropertiesTenantId
 */
export class ServerAdministratorPropertiesTenantIdPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum AdvisorPropertiesAutoExecuteValue {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
  DEFAULT = 'Default',
}

/**
 * @schema #/definitions/serverTableAuditingPolicyPropertiesStorageAccountSubscriptionId
 */
export class ServerTableAuditingPolicyPropertiesStorageAccountSubscriptionIdPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum ServerConnectionPolicyPropertiesConnectionType {
  DEFAULT = 'Default',
  PROXY = 'Proxy',
  REDIRECT = 'Redirect',
}

export enum DatabasePropertiesCreateMode {
  COPY = 'Copy',
  DEFAULT = 'Default',
  NON_READABLE_SECONDARY = 'NonReadableSecondary',
  ONLINE_SECONDARY = 'OnlineSecondary',
  POINT_IN_TIME_RESTORE = 'PointInTimeRestore',
  RECOVERY = 'Recovery',
  RESTORE = 'Restore',
  RESTORE_LONG_TERM_RETENTION_BACKUP = 'RestoreLongTermRetentionBackup',
}

export enum DatabasePropertiesEdition {
  WEB = 'Web',
  BUSINESS = 'Business',
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
  PREMIUM_RS = 'PremiumRS',
  FREE = 'Free',
  STRETCH = 'Stretch',
  DATA_WAREHOUSE = 'DataWarehouse',
  SYSTEM = 'System',
  "DatabasePropertiesEdition_SYSTEM2" = 'System2',
  GENERAL_PURPOSE = 'GeneralPurpose',
  BUSINESS_CRITICAL = 'BusinessCritical',
  HYPERSCALE = 'Hyperscale',
}

export enum DatabasePropertiesReadScale {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * @schema #/definitions/databasePropertiesRequestedServiceObjectiveId
 */
export class DatabasePropertiesRequestedServiceObjectiveIdPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum DatabasePropertiesRequestedServiceObjectiveName {
  SYSTEM = 'System',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM0" = 'System0',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM1" = 'System1',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM2" = 'System2',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM3" = 'System3',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM4" = 'System4',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM2_L" = 'System2L',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM3_L" = 'System3L',
  "DatabasePropertiesRequestedServiceObjectiveName_SYSTEM4_L" = 'System4L',
  FREE = 'Free',
  BASIC = 'Basic',
  "DatabasePropertiesRequestedServiceObjectiveName_S0" = 'S0',
  "DatabasePropertiesRequestedServiceObjectiveName_S1" = 'S1',
  "DatabasePropertiesRequestedServiceObjectiveName_S2" = 'S2',
  "DatabasePropertiesRequestedServiceObjectiveName_S3" = 'S3',
  "DatabasePropertiesRequestedServiceObjectiveName_S4" = 'S4',
  "DatabasePropertiesRequestedServiceObjectiveName_S6" = 'S6',
  "DatabasePropertiesRequestedServiceObjectiveName_S7" = 'S7',
  "DatabasePropertiesRequestedServiceObjectiveName_S9" = 'S9',
  "DatabasePropertiesRequestedServiceObjectiveName_S12" = 'S12',
  "DatabasePropertiesRequestedServiceObjectiveName_P1" = 'P1',
  "DatabasePropertiesRequestedServiceObjectiveName_P2" = 'P2',
  "DatabasePropertiesRequestedServiceObjectiveName_P3" = 'P3',
  "DatabasePropertiesRequestedServiceObjectiveName_P4" = 'P4',
  "DatabasePropertiesRequestedServiceObjectiveName_P6" = 'P6',
  "DatabasePropertiesRequestedServiceObjectiveName_P11" = 'P11',
  "DatabasePropertiesRequestedServiceObjectiveName_P15" = 'P15',
  "DatabasePropertiesRequestedServiceObjectiveName_PRS1" = 'PRS1',
  "DatabasePropertiesRequestedServiceObjectiveName_PRS2" = 'PRS2',
  "DatabasePropertiesRequestedServiceObjectiveName_PRS4" = 'PRS4',
  "DatabasePropertiesRequestedServiceObjectiveName_PRS6" = 'PRS6',
  "DatabasePropertiesRequestedServiceObjectiveName_DW100" = 'DW100',
  "DatabasePropertiesRequestedServiceObjectiveName_DW200" = 'DW200',
  "DatabasePropertiesRequestedServiceObjectiveName_DW300" = 'DW300',
  "DatabasePropertiesRequestedServiceObjectiveName_DW400" = 'DW400',
  "DatabasePropertiesRequestedServiceObjectiveName_DW500" = 'DW500',
  "DatabasePropertiesRequestedServiceObjectiveName_DW600" = 'DW600',
  "DatabasePropertiesRequestedServiceObjectiveName_DW1000" = 'DW1000',
  "DatabasePropertiesRequestedServiceObjectiveName_DW1200" = 'DW1200',
  "DatabasePropertiesRequestedServiceObjectiveName_DW1000C" = 'DW1000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW1500" = 'DW1500',
  "DatabasePropertiesRequestedServiceObjectiveName_DW1500C" = 'DW1500c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW2000" = 'DW2000',
  "DatabasePropertiesRequestedServiceObjectiveName_DW2000C" = 'DW2000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW3000" = 'DW3000',
  "DatabasePropertiesRequestedServiceObjectiveName_DW2500C" = 'DW2500c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW3000C" = 'DW3000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW6000" = 'DW6000',
  "DatabasePropertiesRequestedServiceObjectiveName_DW5000C" = 'DW5000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW6000C" = 'DW6000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW7500C" = 'DW7500c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW10000C" = 'DW10000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW15000C" = 'DW15000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DW30000C" = 'DW30000c',
  "DatabasePropertiesRequestedServiceObjectiveName_DS100" = 'DS100',
  "DatabasePropertiesRequestedServiceObjectiveName_DS200" = 'DS200',
  "DatabasePropertiesRequestedServiceObjectiveName_DS300" = 'DS300',
  "DatabasePropertiesRequestedServiceObjectiveName_DS400" = 'DS400',
  "DatabasePropertiesRequestedServiceObjectiveName_DS500" = 'DS500',
  "DatabasePropertiesRequestedServiceObjectiveName_DS600" = 'DS600',
  "DatabasePropertiesRequestedServiceObjectiveName_DS1000" = 'DS1000',
  "DatabasePropertiesRequestedServiceObjectiveName_DS1200" = 'DS1200',
  "DatabasePropertiesRequestedServiceObjectiveName_DS1500" = 'DS1500',
  "DatabasePropertiesRequestedServiceObjectiveName_DS2000" = 'DS2000',
  ELASTIC_POOL = 'ElasticPool',
}

export enum DatabasePropertiesSampleName {
  ADVENTURE_WORKS_LT = 'AdventureWorksLT',
}

/**
 * Microsoft.Sql/servers/databases/dataMaskingPolicies
 *
 * @schema #/definitions/servers_databases_dataMaskingPolicies_childResource
 */
export interface ServersDatabasesDataMaskingPoliciesChildResource {
  /**
   * @schema #/definitions/servers_databases_dataMaskingPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesDataMaskingPoliciesChildResourceApiVersion;

  /**
   * The name of the database for which the data masking rule applies.
   *
   * @schema #/definitions/servers_databases_dataMaskingPolicies_childResource#name
   */
  readonly name: ServersDatabasesDataMaskingPoliciesChildResourceName;

  /**
   * The properties of a database data masking policy.
   *
   * @schema #/definitions/servers_databases_dataMaskingPolicies_childResource#properties
   */
  readonly properties: DataMaskingPolicyProperties;

  /**
   * @schema #/definitions/servers_databases_dataMaskingPolicies_childResource#type
   */
  readonly type: ServersDatabasesDataMaskingPoliciesChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/geoBackupPolicies
 *
 * @schema #/definitions/servers_databases_geoBackupPolicies_childResource
 */
export interface ServersDatabasesGeoBackupPoliciesChildResource {
  /**
   * @schema #/definitions/servers_databases_geoBackupPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesGeoBackupPoliciesChildResourceApiVersion;

  /**
   * The name of the geo backup policy.
   *
   * @schema #/definitions/servers_databases_geoBackupPolicies_childResource#name
   */
  readonly name: ServersDatabasesGeoBackupPoliciesChildResourceName;

  /**
   * The properties of the geo backup policy.
   *
   * @schema #/definitions/servers_databases_geoBackupPolicies_childResource#properties
   */
  readonly properties: GeoBackupPolicyProperties;

  /**
   * @schema #/definitions/servers_databases_geoBackupPolicies_childResource#type
   */
  readonly type: ServersDatabasesGeoBackupPoliciesChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/extensions
 *
 * @schema #/definitions/servers_databases_extensions_childResource
 */
export interface ServersDatabasesExtensionsChildResource {
  /**
   * @schema #/definitions/servers_databases_extensions_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesExtensionsChildResourceApiVersion;

  /**
   * The name of the operation to perform
   *
   * @schema #/definitions/servers_databases_extensions_childResource#name
   */
  readonly name: ServersDatabasesExtensionsChildResourceName;

  /**
   * Represents the properties for an import operation
   *
   * @schema #/definitions/servers_databases_extensions_childResource#properties
   */
  readonly properties: ImportExtensionProperties;

  /**
   * @schema #/definitions/servers_databases_extensions_childResource#type
   */
  readonly type: ServersDatabasesExtensionsChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/transparentDataEncryption
 *
 * @schema #/definitions/servers_databases_transparentDataEncryption_childResource
 */
export interface ServersDatabasesTransparentDataEncryptionChildResource {
  /**
   * @schema #/definitions/servers_databases_transparentDataEncryption_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesTransparentDataEncryptionChildResourceApiVersion;

  /**
   * The name of the transparent data encryption configuration.
   *
   * @schema #/definitions/servers_databases_transparentDataEncryption_childResource#name
   */
  readonly name: ServersDatabasesTransparentDataEncryptionChildResourceName;

  /**
   * Represents the properties of a database transparent data encryption.
   *
   * @schema #/definitions/servers_databases_transparentDataEncryption_childResource#properties
   */
  readonly properties: TransparentDataEncryptionProperties;

  /**
   * @schema #/definitions/servers_databases_transparentDataEncryption_childResource#type
   */
  readonly type: ServersDatabasesTransparentDataEncryptionChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/securityAlertPolicies
 *
 * @schema #/definitions/servers_databases_securityAlertPolicies_childResource
 */
export interface ServersDatabasesSecurityAlertPoliciesChildResource {
  /**
   * @schema #/definitions/servers_databases_securityAlertPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesSecurityAlertPoliciesChildResourceApiVersion;

  /**
   * The geo-location where the resource lives
   *
   * @schema #/definitions/servers_databases_securityAlertPolicies_childResource#location
   */
  readonly location?: string;

  /**
   * The name of the security alert policy.
   *
   * @schema #/definitions/servers_databases_securityAlertPolicies_childResource#name
   */
  readonly name: ServersDatabasesSecurityAlertPoliciesChildResourceName;

  /**
   * Properties for a database Threat Detection policy.
   *
   * @schema #/definitions/servers_databases_securityAlertPolicies_childResource#properties
   */
  readonly properties: DatabaseSecurityAlertPolicyProperties;

  /**
   * @schema #/definitions/servers_databases_securityAlertPolicies_childResource#type
   */
  readonly type: ServersDatabasesSecurityAlertPoliciesChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/advisors
 *
 * @schema #/definitions/servers_databases_advisors_childResource
 */
export interface ServersDatabasesAdvisorsChildResource {
  /**
   * @schema #/definitions/servers_databases_advisors_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesAdvisorsChildResourceApiVersion;

  /**
   * The name of the Database Advisor.
   *
   * @schema #/definitions/servers_databases_advisors_childResource#name
   */
  readonly name: string;

  /**
   * Properties for a Database, Server or Elastic Pool Advisor.
   *
   * @schema #/definitions/servers_databases_advisors_childResource#properties
   */
  readonly properties: AdvisorProperties;

  /**
   * @schema #/definitions/servers_databases_advisors_childResource#type
   */
  readonly type: ServersDatabasesAdvisorsChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/auditingPolicies
 *
 * @schema #/definitions/servers_databases_auditingPolicies_childResource
 */
export interface ServersDatabasesAuditingPoliciesChildResource {
  /**
   * @schema #/definitions/servers_databases_auditingPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesAuditingPoliciesChildResourceApiVersion;

  /**
   * The name of the table auditing policy.
   *
   * @schema #/definitions/servers_databases_auditingPolicies_childResource#name
   */
  readonly name: ServersDatabasesAuditingPoliciesChildResourceName;

  /**
   * Properties of a database table auditing policy.
   *
   * @schema #/definitions/servers_databases_auditingPolicies_childResource#properties
   */
  readonly properties: DatabaseTableAuditingPolicyProperties;

  /**
   * @schema #/definitions/servers_databases_auditingPolicies_childResource#type
   */
  readonly type: ServersDatabasesAuditingPoliciesChildResourceType;

}

/**
 * Microsoft.Sql/servers/databases/connectionPolicies
 *
 * @schema #/definitions/servers_databases_connectionPolicies_childResource
 */
export interface ServersDatabasesConnectionPoliciesChildResource {
  /**
   * @schema #/definitions/servers_databases_connectionPolicies_childResource#apiVersion
   */
  readonly apiVersion: ServersDatabasesConnectionPoliciesChildResourceApiVersion;

  /**
   * The name of the connection policy.
   *
   * @schema #/definitions/servers_databases_connectionPolicies_childResource#name
   */
  readonly name: ServersDatabasesConnectionPoliciesChildResourceName;

  /**
   * Properties of a database connection policy.
   *
   * @schema #/definitions/servers_databases_connectionPolicies_childResource#properties
   */
  readonly properties: DatabaseConnectionPolicyProperties;

  /**
   * @schema #/definitions/servers_databases_connectionPolicies_childResource#type
   */
  readonly type: ServersDatabasesConnectionPoliciesChildResourceType;

}

/**
 * @schema #/definitions/databaseTableAuditingPolicyPropertiesStorageAccountSubscriptionId
 */
export class DatabaseTableAuditingPolicyPropertiesStorageAccountSubscriptionIdPattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum DataMaskingPolicyPropertiesDataMaskingState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

export enum ServersDatabasesDataMaskingPoliciesRulesChildResourceApiVersion {
  "ServersDatabasesDataMaskingPoliciesRulesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesDataMaskingPoliciesRulesChildResourceType {
  RULES = 'rules',
}

export enum DataMaskingRulePropertiesMaskingFunction {
  DEFAULT = 'Default',
  CCN = 'CCN',
  EMAIL = 'Email',
  NUMBER = 'Number',
  SSN = 'SSN',
  TEXT = 'Text',
}

export enum DataMaskingRulePropertiesRuleState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

export enum ImportExtensionPropertiesAuthenticationType {
  SQL = 'SQL',
  AD_PASSWORD = 'ADPassword',
}

export enum ImportExtensionPropertiesOperationMode {
  IMPORT = 'Import',
}

export enum ImportExtensionPropertiesStorageKeyType {
  STORAGE_ACCESS_KEY = 'StorageAccessKey',
  SHARED_ACCESS_KEY = 'SharedAccessKey',
}

export enum GeoBackupPolicyPropertiesState {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

export enum DatabaseSecurityAlertPolicyPropertiesEmailAccountAdmins {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum DatabaseSecurityAlertPolicyPropertiesState {
  NEW = 'New',
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum DatabaseSecurityAlertPolicyPropertiesUseServerDefault {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum TransparentDataEncryptionPropertiesStatus {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum ElasticPoolPropertiesEdition {
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
  GENERAL_PURPOSE = 'GeneralPurpose',
  BUSINESS_CRITICAL = 'BusinessCritical',
}

export enum ServersConnectionPoliciesChildResourceApiVersion {
  "ServersConnectionPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersConnectionPoliciesChildResourceName {
  DEFAULT = 'default',
}

export enum ServersConnectionPoliciesChildResourceType {
  CONNECTION_POLICIES = 'connectionPolicies',
}

export enum ServersDatabasesChildResourceApiVersion {
  "ServersDatabasesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema #/definitions/serversDatabasesChildResourceTags
 */
export interface ServersDatabasesChildResourceTags {
}

export enum ServersDatabasesChildResourceType {
  DATABASES = 'databases',
}

export enum ServersElasticPoolsChildResourceApiVersion {
  "ServersElasticPoolsChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

/**
 * @schema #/definitions/serversElasticPoolsChildResourceTags
 */
export interface ServersElasticPoolsChildResourceTags {
}

export enum ServersElasticPoolsChildResourceType {
  ELASTIC_POOLS = 'elasticPools',
}

export enum ServersCommunicationLinksChildResourceApiVersion {
  "ServersCommunicationLinksChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersCommunicationLinksChildResourceType {
  COMMUNICATION_LINKS = 'communicationLinks',
}

export enum ServersFirewallRulesChildResourceApiVersion {
  "ServersFirewallRulesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersFirewallRulesChildResourceType {
  FIREWALL_RULES = 'firewallRules',
}

export enum ServersAdministratorsChildResourceApiVersion {
  "ServersAdministratorsChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersAdministratorsChildResourceName {
  ACTIVE_DIRECTORY = 'activeDirectory',
}

export enum ServersAdministratorsChildResourceType {
  ADMINISTRATORS = 'administrators',
}

export enum ServersAdvisorsChildResourceApiVersion {
  "ServersAdvisorsChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersAdvisorsChildResourceType {
  ADVISORS = 'advisors',
}

export enum ServersDisasterRecoveryConfigurationChildResourceApiVersion {
  "ServersDisasterRecoveryConfigurationChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDisasterRecoveryConfigurationChildResourceType {
  DISASTER_RECOVERY_CONFIGURATION = 'disasterRecoveryConfiguration',
}

export enum ServersAuditingPoliciesChildResourceApiVersion {
  "ServersAuditingPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersAuditingPoliciesChildResourceName {
  DEFAULT = 'default',
}

export enum ServersAuditingPoliciesChildResourceType {
  AUDITING_POLICIES = 'auditingPolicies',
}

export enum ServersDatabasesDataMaskingPoliciesChildResourceApiVersion {
  "ServersDatabasesDataMaskingPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesDataMaskingPoliciesChildResourceName {
  DEFAULT = 'Default',
}

export enum ServersDatabasesDataMaskingPoliciesChildResourceType {
  DATA_MASKING_POLICIES = 'dataMaskingPolicies',
}

export enum ServersDatabasesGeoBackupPoliciesChildResourceApiVersion {
  "ServersDatabasesGeoBackupPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesGeoBackupPoliciesChildResourceName {
  DEFAULT = 'Default',
}

export enum ServersDatabasesGeoBackupPoliciesChildResourceType {
  GEO_BACKUP_POLICIES = 'geoBackupPolicies',
}

export enum ServersDatabasesExtensionsChildResourceApiVersion {
  "ServersDatabasesExtensionsChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesExtensionsChildResourceName {
  IMPORT = 'import',
}

export enum ServersDatabasesExtensionsChildResourceType {
  EXTENSIONS = 'extensions',
}

export enum ServersDatabasesTransparentDataEncryptionChildResourceApiVersion {
  "ServersDatabasesTransparentDataEncryptionChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesTransparentDataEncryptionChildResourceName {
  CURRENT = 'current',
}

export enum ServersDatabasesTransparentDataEncryptionChildResourceType {
  TRANSPARENT_DATA_ENCRYPTION = 'transparentDataEncryption',
}

export enum ServersDatabasesSecurityAlertPoliciesChildResourceApiVersion {
  "ServersDatabasesSecurityAlertPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesSecurityAlertPoliciesChildResourceName {
  DEFAULT = 'default',
}

export enum ServersDatabasesSecurityAlertPoliciesChildResourceType {
  SECURITY_ALERT_POLICIES = 'securityAlertPolicies',
}

export enum ServersDatabasesAdvisorsChildResourceApiVersion {
  "ServersDatabasesAdvisorsChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesAdvisorsChildResourceType {
  ADVISORS = 'advisors',
}

export enum ServersDatabasesAuditingPoliciesChildResourceApiVersion {
  "ServersDatabasesAuditingPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesAuditingPoliciesChildResourceName {
  DEFAULT = 'default',
}

export enum ServersDatabasesAuditingPoliciesChildResourceType {
  AUDITING_POLICIES = 'auditingPolicies',
}

export enum ServersDatabasesConnectionPoliciesChildResourceApiVersion {
  "ServersDatabasesConnectionPoliciesChildResourceApiVersion_2014_04_01" = '2014-04-01',
}

export enum ServersDatabasesConnectionPoliciesChildResourceName {
  DEFAULT = 'default',
}

export enum ServersDatabasesConnectionPoliciesChildResourceType {
  CONNECTION_POLICIES = 'connectionPolicies',
}

