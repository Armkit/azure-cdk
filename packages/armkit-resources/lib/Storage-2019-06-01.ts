              // generated by armkit
              import { ArmResource } from '@yetics/armkit-core';
              import { Construct } from 'constructs';

              /**
               * Microsoft.Storage/storageAccounts
               *
               * @schema Microsoft.Storage.storageAccounts
               */
              export class StorageAccounts extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices
               */
              export class StorageAccountsBlobServices extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_blobServices" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsBlobServicesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_blobServices',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices_containers
               */
              export class StorageAccountsBlobServicesContainers extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_blobServices_containers" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsBlobServicesContainersOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_blobServices_containers',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies
               */
              export class StorageAccountsBlobServicesContainersImmutabilityPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsBlobServicesContainersImmutabilityPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_blobServices_containers_immutabilityPolicies',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/encryptionScopes
               *
               * @schema Microsoft.Storage.storageAccounts_encryptionScopes
               */
              export class StorageAccountsEncryptionScopes extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_encryptionScopes" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsEncryptionScopesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_encryptionScopes',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices
               *
               * @schema Microsoft.Storage.storageAccounts_fileServices
               */
              export class StorageAccountsFileServices extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_fileServices" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsFileServicesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_fileServices',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices/shares
               *
               * @schema Microsoft.Storage.storageAccounts_fileServices_shares
               */
              export class StorageAccountsFileServicesShares extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_fileServices_shares" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsFileServicesSharesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_fileServices_shares',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/inventoryPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_inventoryPolicies
               */
              export class StorageAccountsInventoryPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_inventoryPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsInventoryPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_inventoryPolicies',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/managementPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_managementPolicies
               */
              export class StorageAccountsManagementPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_managementPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsManagementPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_managementPolicies',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/objectReplicationPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies
               */
              export class StorageAccountsObjectReplicationPolicies extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_objectReplicationPolicies" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsObjectReplicationPoliciesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_objectReplicationPolicies',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/privateEndpointConnections
               *
               * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections
               */
              export class StorageAccountsPrivateEndpointConnections extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_privateEndpointConnections" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsPrivateEndpointConnectionsOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_privateEndpointConnections',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices
               *
               * @schema Microsoft.Storage.storageAccounts_queueServices
               */
              export class StorageAccountsQueueServices extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_queueServices" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsQueueServicesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_queueServices',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices/queues
               *
               * @schema Microsoft.Storage.storageAccounts_queueServices_queues
               */
              export class StorageAccountsQueueServicesQueues extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_queueServices_queues" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsQueueServicesQueuesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_queueServices_queues',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices
               *
               * @schema Microsoft.Storage.storageAccounts_tableServices
               */
              export class StorageAccountsTableServices extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_tableServices" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsTableServicesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_tableServices',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices/tables
               *
               * @schema Microsoft.Storage.storageAccounts_tableServices_tables
               */
              export class StorageAccountsTableServicesTables extends ArmResource {
                /**
                 * Defines a "Microsoft.Storage.storageAccounts_tableServices_tables" Arm Template object
                 * @param scope the scope in which to define this object
                 * @param name a scope-local name for the object
                 * @param options configuration options
                 */
                public constructor(scope: Construct, name: string, options: StorageAccountsTableServicesTablesOptions) {
                  super(scope, name, {
                    ...options,
                    armResourceType: 'storageAccounts_tableServices_tables',
                  });
                }
              }

              /**
               * Microsoft.Storage/storageAccounts
               *
               * @schema Microsoft.Storage.storageAccounts
               */
              export interface StorageAccountsOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsApiVersion;

                /**
                 * Identity for the resource.
                 *
                 * @schema Microsoft.Storage.storageAccounts#identity
                 */
                readonly identity?: Identity;

                /**
                 * Required. Indicates the type of storage account.
                 *
                 * @schema Microsoft.Storage.storageAccounts#kind
                 */
                readonly kind?: MicrosoftStorageStorageAccountsKind;

                /**
                 * Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
                 *
                 * @schema Microsoft.Storage.storageAccounts#location
                 */
                readonly location: string;

                /**
                 * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
                 *
                 * @schema Microsoft.Storage.storageAccounts#name
                 */
                readonly name: string;

                /**
                 * The parameters used to create the storage account.
                 *
                 * @schema Microsoft.Storage.storageAccounts#properties
                 */
                readonly properties?: StorageAccountPropertiesCreateParameters;

                /**
                 * @schema Microsoft.Storage.storageAccounts#resources
                 */
                readonly resources?: MicrosoftStorageStorageAccountsResources[];

                /**
                 * The SKU of the storage account.
                 *
                 * @schema Microsoft.Storage.storageAccounts#sku
                 */
                readonly sku: Sku;

                /**
                 * Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
                 *
                 * @schema Microsoft.Storage.storageAccounts#tags
                 */
                readonly tags?: MicrosoftStorageStorageAccountsTags;

                /**
                 * @schema Microsoft.Storage.storageAccounts#type
                 */
                readonly type: MicrosoftStorageStorageAccountsType;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices
               */
              export interface StorageAccountsBlobServicesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesApiVersion;

                /**
                 * The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices#name
                 */
                readonly name: MicrosoftStorageStorageAccountsBlobServicesNamePattern;

                /**
                 * The properties of a storage account’s Blob service.
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices#properties
                 */
                readonly properties?: BlobServicePropertiesProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices#resources
                 */
                readonly resources?: StorageAccountsBlobServicesContainersChildResource[];

                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices#type
                 */
                readonly type: MicrosoftStorageStorageAccountsBlobServicesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices_containers
               */
              export interface StorageAccountsBlobServicesContainersOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesContainersApiVersion;

                /**
                 * The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers#name
                 */
                readonly name: string;

                /**
                 * The properties of a container.
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers#properties
                 */
                readonly properties?: ContainerProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers#resources
                 */
                readonly resources?: StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResource[];

                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers#type
                 */
                readonly type: MicrosoftStorageStorageAccountsBlobServicesContainersType;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies
               */
              export interface StorageAccountsBlobServicesContainersImmutabilityPoliciesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesApiVersion;

                /**
                 * The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#name
                 */
                readonly name: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesNamePattern;

                /**
                 * The properties of an ImmutabilityPolicy of a blob container.
                 *
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#properties
                 */
                readonly properties?: ImmutabilityPolicyProperty;

                /**
                 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#type
                 */
                readonly type: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/encryptionScopes
               *
               * @schema Microsoft.Storage.storageAccounts_encryptionScopes
               */
              export interface StorageAccountsEncryptionScopesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_encryptionScopes#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsEncryptionScopesApiVersion;

                /**
                 * The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema Microsoft.Storage.storageAccounts_encryptionScopes#name
                 */
                readonly name: string;

                /**
                 * Properties of the encryption scope.
                 *
                 * @schema Microsoft.Storage.storageAccounts_encryptionScopes#properties
                 */
                readonly properties?: EncryptionScopeProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_encryptionScopes#type
                 */
                readonly type: MicrosoftStorageStorageAccountsEncryptionScopesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices
               *
               * @schema Microsoft.Storage.storageAccounts_fileServices
               */
              export interface StorageAccountsFileServicesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_fileServices#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsFileServicesApiVersion;

                /**
                 * The name of the file Service within the specified storage account. File Service Name must be "default"
                 *
                 * @schema Microsoft.Storage.storageAccounts_fileServices#name
                 */
                readonly name: MicrosoftStorageStorageAccountsFileServicesNamePattern;

                /**
                 * The properties of File services in storage account.
                 *
                 * @schema Microsoft.Storage.storageAccounts_fileServices#properties
                 */
                readonly properties?: FileServicePropertiesProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_fileServices#resources
                 */
                readonly resources?: StorageAccountsFileServicesSharesChildResource[];

                /**
                 * @schema Microsoft.Storage.storageAccounts_fileServices#type
                 */
                readonly type: MicrosoftStorageStorageAccountsFileServicesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices/shares
               *
               * @schema Microsoft.Storage.storageAccounts_fileServices_shares
               */
              export interface StorageAccountsFileServicesSharesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_fileServices_shares#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsFileServicesSharesApiVersion;

                /**
                 * The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema Microsoft.Storage.storageAccounts_fileServices_shares#name
                 */
                readonly name: string;

                /**
                 * The properties of the file share.
                 *
                 * @schema Microsoft.Storage.storageAccounts_fileServices_shares#properties
                 */
                readonly properties?: FileShareProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_fileServices_shares#type
                 */
                readonly type: MicrosoftStorageStorageAccountsFileServicesSharesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/inventoryPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_inventoryPolicies
               */
              export interface StorageAccountsInventoryPoliciesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_inventoryPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsInventoryPoliciesApiVersion;

                /**
                 * The name of the storage account blob inventory policy. It should always be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_inventoryPolicies#name
                 */
                readonly name: MicrosoftStorageStorageAccountsInventoryPoliciesNamePattern;

                /**
                 * The storage account blob inventory policy properties.
                 *
                 * @schema Microsoft.Storage.storageAccounts_inventoryPolicies#properties
                 */
                readonly properties?: BlobInventoryPolicyProperties;

                /**
                 * Metadata pertaining to creation and last modification of the resource.
                 *
                 * @schema Microsoft.Storage.storageAccounts_inventoryPolicies#systemData
                 */
                readonly systemData?: SystemData;

                /**
                 * @schema Microsoft.Storage.storageAccounts_inventoryPolicies#type
                 */
                readonly type: MicrosoftStorageStorageAccountsInventoryPoliciesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/managementPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_managementPolicies
               */
              export interface StorageAccountsManagementPoliciesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_managementPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsManagementPoliciesApiVersion;

                /**
                 * The name of the Storage Account Management Policy. It should always be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_managementPolicies#name
                 */
                readonly name: MicrosoftStorageStorageAccountsManagementPoliciesNamePattern;

                /**
                 * The Storage Account ManagementPolicy properties.
                 *
                 * @schema Microsoft.Storage.storageAccounts_managementPolicies#properties
                 */
                readonly properties?: ManagementPolicyProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_managementPolicies#type
                 */
                readonly type: MicrosoftStorageStorageAccountsManagementPoliciesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/objectReplicationPolicies
               *
               * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies
               */
              export interface StorageAccountsObjectReplicationPoliciesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsObjectReplicationPoliciesApiVersion;

                /**
                 * The ID of object replication policy or 'default' if the policy ID is unknown.
                 *
                 * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies#name
                 */
                readonly name: string;

                /**
                 * The Storage Account ObjectReplicationPolicy properties.
                 *
                 * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies#properties
                 */
                readonly properties?: ObjectReplicationPolicyProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_objectReplicationPolicies#type
                 */
                readonly type: MicrosoftStorageStorageAccountsObjectReplicationPoliciesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/privateEndpointConnections
               *
               * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections
               */
              export interface StorageAccountsPrivateEndpointConnectionsOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsPrivateEndpointConnectionsApiVersion;

                /**
                 * The name of the private endpoint connection associated with the Azure resource
                 *
                 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#name
                 */
                readonly name: string;

                /**
                 * Properties of the PrivateEndpointConnectProperties.
                 *
                 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#properties
                 */
                readonly properties?: PrivateEndpointConnectionProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#type
                 */
                readonly type: MicrosoftStorageStorageAccountsPrivateEndpointConnectionsType;

              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices
               *
               * @schema Microsoft.Storage.storageAccounts_queueServices
               */
              export interface StorageAccountsQueueServicesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsQueueServicesApiVersion;

                /**
                 * The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_queueServices#name
                 */
                readonly name: MicrosoftStorageStorageAccountsQueueServicesNamePattern;

                /**
                 * The properties of a storage account’s Queue service.
                 *
                 * @schema Microsoft.Storage.storageAccounts_queueServices#properties
                 */
                readonly properties?: QueueServicePropertiesProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices#resources
                 */
                readonly resources?: StorageAccountsQueueServicesQueuesChildResource[];

                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices#type
                 */
                readonly type: MicrosoftStorageStorageAccountsQueueServicesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices/queues
               *
               * @schema Microsoft.Storage.storageAccounts_queueServices_queues
               */
              export interface StorageAccountsQueueServicesQueuesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices_queues#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsQueueServicesQueuesApiVersion;

                /**
                 * A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.
                 *
                 * @schema Microsoft.Storage.storageAccounts_queueServices_queues#name
                 */
                readonly name: MicrosoftStorageStorageAccountsQueueServicesQueuesNamePattern;

                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices_queues#properties
                 */
                readonly properties?: QueueProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_queueServices_queues#type
                 */
                readonly type: MicrosoftStorageStorageAccountsQueueServicesQueuesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices
               *
               * @schema Microsoft.Storage.storageAccounts_tableServices
               */
              export interface StorageAccountsTableServicesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_tableServices#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsTableServicesApiVersion;

                /**
                 * The name of the Table Service within the specified storage account. Table Service Name must be 'default'
                 *
                 * @schema Microsoft.Storage.storageAccounts_tableServices#name
                 */
                readonly name: MicrosoftStorageStorageAccountsTableServicesNamePattern;

                /**
                 * The properties of a storage account’s Table service.
                 *
                 * @schema Microsoft.Storage.storageAccounts_tableServices#properties
                 */
                readonly properties?: TableServicePropertiesProperties;

                /**
                 * @schema Microsoft.Storage.storageAccounts_tableServices#resources
                 */
                readonly resources?: StorageAccountsTableServicesTablesChildResource[];

                /**
                 * @schema Microsoft.Storage.storageAccounts_tableServices#type
                 */
                readonly type: MicrosoftStorageStorageAccountsTableServicesType;

              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices/tables
               *
               * @schema Microsoft.Storage.storageAccounts_tableServices_tables
               */
              export interface StorageAccountsTableServicesTablesOptions {
                /**
                 * @schema Microsoft.Storage.storageAccounts_tableServices_tables#apiVersion
                 */
                readonly apiVersion?: MicrosoftStorageStorageAccountsTableServicesTablesApiVersion;

                /**
                 * A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
                 *
                 * @schema Microsoft.Storage.storageAccounts_tableServices_tables#name
                 */
                readonly name: MicrosoftStorageStorageAccountsTableServicesTablesNamePattern;

                /**
                 * @schema Microsoft.Storage.storageAccounts_tableServices_tables#type
                 */
                readonly type: MicrosoftStorageStorageAccountsTableServicesTablesType;

              }

              export enum MicrosoftStorageStorageAccountsApiVersion {
                "MicrosoftStorageStorageAccountsApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * Identity for the resource.
               *
               * @schema #/definitions/Identity
               */
              export interface Identity {
                /**
                 * The identity type.
                 *
                 * @schema #/definitions/Identity#type
                 */
                readonly type: IdentityType;

              }

              export enum MicrosoftStorageStorageAccountsKind {
                STORAGE = 'Storage',
                "MicrosoftStorageStorageAccountsKind_STORAGE_V2" = 'StorageV2',
                BLOB_STORAGE = 'BlobStorage',
                FILE_STORAGE = 'FileStorage',
                BLOCK_BLOB_STORAGE = 'BlockBlobStorage',
              }

              /**
               * The parameters used to create the storage account.
               *
               * @schema #/definitions/StorageAccountPropertiesCreateParameters
               */
              export interface StorageAccountPropertiesCreateParameters {
                /**
                 * Required for storage accounts where kind = BlobStorage. The access tier used for billing.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#accessTier
                 */
                readonly accessTier?: StorageAccountPropertiesCreateParametersAccessTier;

                /**
                 * Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#allowBlobPublicAccess
                 */
                readonly allowBlobPublicAccess?: boolean;

                /**
                 * Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#allowSharedKeyAccess
                 */
                readonly allowSharedKeyAccess?: boolean;

                /**
                 * Settings for Azure Files identity based authentication.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#azureFilesIdentityBasedAuthentication
                 */
                readonly azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;

                /**
                 * The custom domain assigned to this storage account. This can be set via Update.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#customDomain
                 */
                readonly customDomain?: CustomDomain;

                /**
                 * The encryption settings on the storage account.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#encryption
                 */
                readonly encryption?: Encryption;

                /**
                 * Account HierarchicalNamespace enabled if sets to true.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#isHnsEnabled
                 */
                readonly isHnsEnabled?: boolean;

                /**
                 * Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#largeFileSharesState
                 */
                readonly largeFileSharesState?: StorageAccountPropertiesCreateParametersLargeFileSharesState;

                /**
                 * Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#minimumTlsVersion
                 */
                readonly minimumTlsVersion?: StorageAccountPropertiesCreateParametersMinimumTlsVersion;

                /**
                 * Network rule set
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#networkAcls
                 */
                readonly networkAcls?: NetworkRuleSet;

                /**
                 * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#routingPreference
                 */
                readonly routingPreference?: RoutingPreference;

                /**
                 * Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
                 *
                 * @schema #/definitions/StorageAccountPropertiesCreateParameters#supportsHttpsTrafficOnly
                 */
                readonly supportsHttpsTrafficOnly?: boolean;

              }

              /**
               * @schema MicrosoftStorageStorageAccountsResources
               */
              export class MicrosoftStorageStorageAccountsResources {
                public static fromStorageAccountsManagementPoliciesChildResource(value: StorageAccountsManagementPoliciesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsInventoryPoliciesChildResource(value: StorageAccountsInventoryPoliciesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsPrivateEndpointConnectionsChildResource(value: StorageAccountsPrivateEndpointConnectionsChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsObjectReplicationPoliciesChildResource(value: StorageAccountsObjectReplicationPoliciesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsEncryptionScopesChildResource(value: StorageAccountsEncryptionScopesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsBlobServicesChildResource(value: StorageAccountsBlobServicesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsFileServicesChildResource(value: StorageAccountsFileServicesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsQueueServicesChildResource(value: StorageAccountsQueueServicesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                public static fromStorageAccountsTableServicesChildResource(value: StorageAccountsTableServicesChildResource): MicrosoftStorageStorageAccountsResources {
                  return new MicrosoftStorageStorageAccountsResources(value);
                }
                private constructor(value: any) {
                  Object.defineProperty(this, 'resolve', { value: () => value });
                }
              }

              /**
               * The SKU of the storage account.
               *
               * @schema #/definitions/Sku
               */
              export interface Sku {
                /**
                 * @schema #/definitions/Sku#name
                 */
                readonly name: SkuName;

                /**
                 * @schema #/definitions/Sku#tier
                 */
                readonly tier?: SkuTier;

              }

              /**
               * @schema MicrosoftStorageStorageAccountsTags
               */
              export interface MicrosoftStorageStorageAccountsTags {
              }

              export enum MicrosoftStorageStorageAccountsType {
                "MicrosoftStorageStorageAccountsType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS" = 'Microsoft.Storage/storageAccounts',
              }

              export enum MicrosoftStorageStorageAccountsBlobServicesApiVersion {
                "MicrosoftStorageStorageAccountsBlobServicesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsBlobServicesName
               */
              export class MicrosoftStorageStorageAccountsBlobServicesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of a storage account’s Blob service.
               *
               * @schema #/definitions/BlobServicePropertiesProperties
               */
              export interface BlobServicePropertiesProperties {
                /**
                 * Deprecated in favor of isVersioningEnabled property.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#automaticSnapshotPolicyEnabled
                 */
                readonly automaticSnapshotPolicyEnabled?: boolean;

                /**
                 * The blob service properties for change feed events.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#changeFeed
                 */
                readonly changeFeed?: ChangeFeed;

                /**
                 * The service properties for soft delete.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#containerDeleteRetentionPolicy
                 */
                readonly containerDeleteRetentionPolicy?: DeleteRetentionPolicy;

                /**
                 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#cors
                 */
                readonly cors?: CorsRules;

                /**
                 * DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming request’s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#defaultServiceVersion
                 */
                readonly defaultServiceVersion?: string;

                /**
                 * The service properties for soft delete.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#deleteRetentionPolicy
                 */
                readonly deleteRetentionPolicy?: DeleteRetentionPolicy;

                /**
                 * Versioning is enabled if set to true.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#isVersioningEnabled
                 */
                readonly isVersioningEnabled?: boolean;

                /**
                 * The blob service properties for Last access time based tracking policy.
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#lastAccessTimeTrackingPolicy
                 */
                readonly lastAccessTimeTrackingPolicy?: LastAccessTimeTrackingPolicy;

                /**
                 * The blob service properties for blob restore policy
                 *
                 * @schema #/definitions/BlobServicePropertiesProperties#restorePolicy
                 */
                readonly restorePolicy?: RestorePolicyProperties;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers
               *
               * @schema #/definitions/storageAccounts_blobServices_containers_childResource
               */
              export interface StorageAccountsBlobServicesContainersChildResource {
                /**
                 * @schema #/definitions/storageAccounts_blobServices_containers_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsBlobServicesContainersChildResourceApiVersion;

                /**
                 * The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema #/definitions/storageAccounts_blobServices_containers_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of a container.
                 *
                 * @schema #/definitions/storageAccounts_blobServices_containers_childResource#properties
                 */
                readonly properties: ContainerProperties;

                /**
                 * @schema #/definitions/storageAccounts_blobServices_containers_childResource#type
                 */
                readonly type: StorageAccountsBlobServicesContainersChildResourceType;

              }

              export enum MicrosoftStorageStorageAccountsBlobServicesType {
                "MicrosoftStorageStorageAccountsBlobServicesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES" = 'Microsoft.Storage/storageAccounts/blobServices',
              }

              export enum MicrosoftStorageStorageAccountsBlobServicesContainersApiVersion {
                "MicrosoftStorageStorageAccountsBlobServicesContainersApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * The properties of a container.
               *
               * @schema #/definitions/ContainerProperties
               */
              export interface ContainerProperties {
                /**
                 * Default the container to use specified encryption scope for all writes.
                 *
                 * @schema #/definitions/ContainerProperties#defaultEncryptionScope
                 */
                readonly defaultEncryptionScope?: string;

                /**
                 * Block override of encryption scope from the container default.
                 *
                 * @schema #/definitions/ContainerProperties#denyEncryptionScopeOverride
                 */
                readonly denyEncryptionScopeOverride?: boolean;

                /**
                 * A name-value pair to associate with the container as metadata.
                 *
                 * @schema #/definitions/ContainerProperties#metadata
                 */
                readonly metadata?: ContainerPropertiesMetadata;

                /**
                 * Specifies whether data in the container may be accessed publicly and the level of access.
                 *
                 * @schema #/definitions/ContainerProperties#publicAccess
                 */
                readonly publicAccess?: ContainerPropertiesPublicAccess;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
               *
               * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource
               */
              export interface StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceApiVersion;

                /**
                 * The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'
                 *
                 * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#name
                 */
                readonly name: StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceName;

                /**
                 * The properties of an ImmutabilityPolicy of a blob container.
                 *
                 * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#properties
                 */
                readonly properties: ImmutabilityPolicyProperty;

                /**
                 * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#type
                 */
                readonly type: StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceType;

              }

              export enum MicrosoftStorageStorageAccountsBlobServicesContainersType {
                "MicrosoftStorageStorageAccountsBlobServicesContainersType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES_CONTAINERS" = 'Microsoft.Storage/storageAccounts/blobServices/containers',
              }

              export enum MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesApiVersion {
                "MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesName
               */
              export class MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of an ImmutabilityPolicy of a blob container.
               *
               * @schema #/definitions/ImmutabilityPolicyProperty
               */
              export interface ImmutabilityPolicyProperty {
                /**
                 * This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API
                 *
                 * @schema #/definitions/ImmutabilityPolicyProperty#allowProtectedAppendWrites
                 */
                readonly allowProtectedAppendWrites?: boolean;

                /**
                 * The immutability period for the blobs in the container since the policy creation, in days.
                 *
                 * @schema #/definitions/ImmutabilityPolicyProperty#immutabilityPeriodSinceCreationInDays
                 */
                readonly immutabilityPeriodSinceCreationInDays?: number;

              }

              export enum MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesType {
                "MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES_CONTAINERS_IMMUTABILITY_POLICIES" = 'Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies',
              }

              export enum MicrosoftStorageStorageAccountsEncryptionScopesApiVersion {
                "MicrosoftStorageStorageAccountsEncryptionScopesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * Properties of the encryption scope.
               *
               * @schema #/definitions/EncryptionScopeProperties
               */
              export interface EncryptionScopeProperties {
                /**
                 * The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
                 *
                 * @schema #/definitions/EncryptionScopeProperties#keyVaultProperties
                 */
                readonly keyVaultProperties?: EncryptionScopeKeyVaultProperties;

                /**
                 * The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
                 *
                 * @schema #/definitions/EncryptionScopeProperties#source
                 */
                readonly source?: EncryptionScopePropertiesSource;

                /**
                 * The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.
                 *
                 * @schema #/definitions/EncryptionScopeProperties#state
                 */
                readonly state?: EncryptionScopePropertiesState;

              }

              export enum MicrosoftStorageStorageAccountsEncryptionScopesType {
                "MicrosoftStorageStorageAccountsEncryptionScopesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_ENCRYPTION_SCOPES" = 'Microsoft.Storage/storageAccounts/encryptionScopes',
              }

              export enum MicrosoftStorageStorageAccountsFileServicesApiVersion {
                "MicrosoftStorageStorageAccountsFileServicesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsFileServicesName
               */
              export class MicrosoftStorageStorageAccountsFileServicesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of File services in storage account.
               *
               * @schema #/definitions/FileServicePropertiesProperties
               */
              export interface FileServicePropertiesProperties {
                /**
                 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
                 *
                 * @schema #/definitions/FileServicePropertiesProperties#cors
                 */
                readonly cors?: CorsRules;

                /**
                 * The service properties for soft delete.
                 *
                 * @schema #/definitions/FileServicePropertiesProperties#shareDeleteRetentionPolicy
                 */
                readonly shareDeleteRetentionPolicy?: DeleteRetentionPolicy;

              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices/shares
               *
               * @schema #/definitions/storageAccounts_fileServices_shares_childResource
               */
              export interface StorageAccountsFileServicesSharesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_fileServices_shares_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsFileServicesSharesChildResourceApiVersion;

                /**
                 * The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema #/definitions/storageAccounts_fileServices_shares_childResource#name
                 */
                readonly name: string;

                /**
                 * The properties of the file share.
                 *
                 * @schema #/definitions/storageAccounts_fileServices_shares_childResource#properties
                 */
                readonly properties: FileShareProperties;

                /**
                 * @schema #/definitions/storageAccounts_fileServices_shares_childResource#type
                 */
                readonly type: StorageAccountsFileServicesSharesChildResourceType;

              }

              export enum MicrosoftStorageStorageAccountsFileServicesType {
                "MicrosoftStorageStorageAccountsFileServicesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_FILE_SERVICES" = 'Microsoft.Storage/storageAccounts/fileServices',
              }

              export enum MicrosoftStorageStorageAccountsFileServicesSharesApiVersion {
                "MicrosoftStorageStorageAccountsFileServicesSharesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * The properties of the file share.
               *
               * @schema #/definitions/FileShareProperties
               */
              export interface FileShareProperties {
                /**
                 * Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.
                 *
                 * @schema #/definitions/FileShareProperties#accessTier
                 */
                readonly accessTier?: FileSharePropertiesAccessTier;

                /**
                 * The authentication protocol that is used for the file share. Can only be specified when creating a share.
                 *
                 * @schema #/definitions/FileShareProperties#enabledProtocols
                 */
                readonly enabledProtocols?: FileSharePropertiesEnabledProtocols;

                /**
                 * A name-value pair to associate with the share as metadata.
                 *
                 * @schema #/definitions/FileShareProperties#metadata
                 */
                readonly metadata?: FileSharePropertiesMetadata;

                /**
                 * The property is for NFS share only. The default is NoRootSquash.
                 *
                 * @schema #/definitions/FileShareProperties#rootSquash
                 */
                readonly rootSquash?: FileSharePropertiesRootSquash;

                /**
                 * The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
                 *
                 * @schema #/definitions/FileShareProperties#shareQuota
                 */
                readonly shareQuota?: number;

              }

              export enum MicrosoftStorageStorageAccountsFileServicesSharesType {
                "MicrosoftStorageStorageAccountsFileServicesSharesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_FILE_SERVICES_SHARES" = 'Microsoft.Storage/storageAccounts/fileServices/shares',
              }

              export enum MicrosoftStorageStorageAccountsInventoryPoliciesApiVersion {
                "MicrosoftStorageStorageAccountsInventoryPoliciesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsInventoryPoliciesName
               */
              export class MicrosoftStorageStorageAccountsInventoryPoliciesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The storage account blob inventory policy properties.
               *
               * @schema #/definitions/BlobInventoryPolicyProperties
               */
              export interface BlobInventoryPolicyProperties {
                /**
                 * The storage account blob inventory policy rules.
                 *
                 * @schema #/definitions/BlobInventoryPolicyProperties#policy
                 */
                readonly policy: BlobInventoryPolicySchema;

              }

              /**
               * Metadata pertaining to creation and last modification of the resource.
               *
               * @schema #/definitions/SystemData
               */
              export interface SystemData {
                /**
                 * The timestamp of resource creation (UTC).
                 *
                 * @schema #/definitions/SystemData#createdAt
                 */
                readonly createdAt?: Date;

                /**
                 * The identity that created the resource.
                 *
                 * @schema #/definitions/SystemData#createdBy
                 */
                readonly createdBy?: string;

                /**
                 * The type of identity that created the resource.
                 *
                 * @schema #/definitions/SystemData#createdByType
                 */
                readonly createdByType?: SystemDataCreatedByType;

                /**
                 * The timestamp of resource last modification (UTC)
                 *
                 * @schema #/definitions/SystemData#lastModifiedAt
                 */
                readonly lastModifiedAt?: Date;

                /**
                 * The identity that last modified the resource.
                 *
                 * @schema #/definitions/SystemData#lastModifiedBy
                 */
                readonly lastModifiedBy?: string;

                /**
                 * The type of identity that last modified the resource.
                 *
                 * @schema #/definitions/SystemData#lastModifiedByType
                 */
                readonly lastModifiedByType?: SystemDataLastModifiedByType;

              }

              export enum MicrosoftStorageStorageAccountsInventoryPoliciesType {
                "MicrosoftStorageStorageAccountsInventoryPoliciesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_INVENTORY_POLICIES" = 'Microsoft.Storage/storageAccounts/inventoryPolicies',
              }

              export enum MicrosoftStorageStorageAccountsManagementPoliciesApiVersion {
                "MicrosoftStorageStorageAccountsManagementPoliciesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsManagementPoliciesName
               */
              export class MicrosoftStorageStorageAccountsManagementPoliciesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The Storage Account ManagementPolicy properties.
               *
               * @schema #/definitions/ManagementPolicyProperties
               */
              export interface ManagementPolicyProperties {
                /**
                 * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
                 *
                 * @schema #/definitions/ManagementPolicyProperties#policy
                 */
                readonly policy: ManagementPolicySchema;

              }

              export enum MicrosoftStorageStorageAccountsManagementPoliciesType {
                "MicrosoftStorageStorageAccountsManagementPoliciesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_MANAGEMENT_POLICIES" = 'Microsoft.Storage/storageAccounts/managementPolicies',
              }

              export enum MicrosoftStorageStorageAccountsObjectReplicationPoliciesApiVersion {
                "MicrosoftStorageStorageAccountsObjectReplicationPoliciesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * The Storage Account ObjectReplicationPolicy properties.
               *
               * @schema #/definitions/ObjectReplicationPolicyProperties
               */
              export interface ObjectReplicationPolicyProperties {
                /**
                 * Required. Destination account name.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyProperties#destinationAccount
                 */
                readonly destinationAccount: string;

                /**
                 * The storage account object replication rules.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyProperties#rules
                 */
                readonly rules?: ObjectReplicationPolicyRule[];

                /**
                 * Required. Source account name.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyProperties#sourceAccount
                 */
                readonly sourceAccount: string;

              }

              export enum MicrosoftStorageStorageAccountsObjectReplicationPoliciesType {
                "MicrosoftStorageStorageAccountsObjectReplicationPoliciesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_OBJECT_REPLICATION_POLICIES" = 'Microsoft.Storage/storageAccounts/objectReplicationPolicies',
              }

              export enum MicrosoftStorageStorageAccountsPrivateEndpointConnectionsApiVersion {
                "MicrosoftStorageStorageAccountsPrivateEndpointConnectionsApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * Properties of the PrivateEndpointConnectProperties.
               *
               * @schema #/definitions/PrivateEndpointConnectionProperties
               */
              export interface PrivateEndpointConnectionProperties {
                /**
                 * The Private Endpoint resource.
                 *
                 * @schema #/definitions/PrivateEndpointConnectionProperties#privateEndpoint
                 */
                readonly privateEndpoint?: PrivateEndpoint;

                /**
                 * A collection of information about the state of the connection between service consumer and provider.
                 *
                 * @schema #/definitions/PrivateEndpointConnectionProperties#privateLinkServiceConnectionState
                 */
                readonly privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;

                /**
                 * The provisioning state of the private endpoint connection resource.
                 *
                 * @schema #/definitions/PrivateEndpointConnectionProperties#provisioningState
                 */
                readonly provisioningState?: PrivateEndpointConnectionPropertiesProvisioningState;

              }

              export enum MicrosoftStorageStorageAccountsPrivateEndpointConnectionsType {
                "MicrosoftStorageStorageAccountsPrivateEndpointConnectionsType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_PRIVATE_ENDPOINT_CONNECTIONS" = 'Microsoft.Storage/storageAccounts/privateEndpointConnections',
              }

              export enum MicrosoftStorageStorageAccountsQueueServicesApiVersion {
                "MicrosoftStorageStorageAccountsQueueServicesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsQueueServicesName
               */
              export class MicrosoftStorageStorageAccountsQueueServicesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of a storage account’s Queue service.
               *
               * @schema #/definitions/QueueServicePropertiesProperties
               */
              export interface QueueServicePropertiesProperties {
                /**
                 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
                 *
                 * @schema #/definitions/QueueServicePropertiesProperties#cors
                 */
                readonly cors?: CorsRules;

              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices/queues
               *
               * @schema #/definitions/storageAccounts_queueServices_queues_childResource
               */
              export interface StorageAccountsQueueServicesQueuesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_queueServices_queues_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsQueueServicesQueuesChildResourceApiVersion;

                /**
                 * A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.
                 *
                 * @schema #/definitions/storageAccounts_queueServices_queues_childResource#name
                 */
                readonly name: StorageAccountsQueueServicesQueuesChildResourceNamePattern;

                /**
                 * @schema #/definitions/storageAccounts_queueServices_queues_childResource#properties
                 */
                readonly properties: QueueProperties;

                /**
                 * @schema #/definitions/storageAccounts_queueServices_queues_childResource#type
                 */
                readonly type: StorageAccountsQueueServicesQueuesChildResourceType;

              }

              export enum MicrosoftStorageStorageAccountsQueueServicesType {
                "MicrosoftStorageStorageAccountsQueueServicesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_QUEUE_SERVICES" = 'Microsoft.Storage/storageAccounts/queueServices',
              }

              export enum MicrosoftStorageStorageAccountsQueueServicesQueuesApiVersion {
                "MicrosoftStorageStorageAccountsQueueServicesQueuesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsQueueServicesQueuesName
               */
              export class MicrosoftStorageStorageAccountsQueueServicesQueuesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * @schema #/definitions/QueueProperties
               */
              export interface QueueProperties {
                /**
                 * A name-value pair that represents queue metadata.
                 *
                 * @schema #/definitions/QueueProperties#metadata
                 */
                readonly metadata?: QueuePropertiesMetadata;

              }

              export enum MicrosoftStorageStorageAccountsQueueServicesQueuesType {
                "MicrosoftStorageStorageAccountsQueueServicesQueuesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_QUEUE_SERVICES_QUEUES" = 'Microsoft.Storage/storageAccounts/queueServices/queues',
              }

              export enum MicrosoftStorageStorageAccountsTableServicesApiVersion {
                "MicrosoftStorageStorageAccountsTableServicesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsTableServicesName
               */
              export class MicrosoftStorageStorageAccountsTableServicesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              /**
               * The properties of a storage account’s Table service.
               *
               * @schema #/definitions/TableServicePropertiesProperties
               */
              export interface TableServicePropertiesProperties {
                /**
                 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
                 *
                 * @schema #/definitions/TableServicePropertiesProperties#cors
                 */
                readonly cors?: CorsRules;

              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices/tables
               *
               * @schema #/definitions/storageAccounts_tableServices_tables_childResource
               */
              export interface StorageAccountsTableServicesTablesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_tableServices_tables_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsTableServicesTablesChildResourceApiVersion;

                /**
                 * A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.
                 *
                 * @schema #/definitions/storageAccounts_tableServices_tables_childResource#name
                 */
                readonly name: StorageAccountsTableServicesTablesChildResourceNamePattern;

                /**
                 * @schema #/definitions/storageAccounts_tableServices_tables_childResource#type
                 */
                readonly type: StorageAccountsTableServicesTablesChildResourceType;

              }

              export enum MicrosoftStorageStorageAccountsTableServicesType {
                "MicrosoftStorageStorageAccountsTableServicesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_TABLE_SERVICES" = 'Microsoft.Storage/storageAccounts/tableServices',
              }

              export enum MicrosoftStorageStorageAccountsTableServicesTablesApiVersion {
                "MicrosoftStorageStorageAccountsTableServicesTablesApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema MicrosoftStorageStorageAccountsTableServicesTablesName
               */
              export class MicrosoftStorageStorageAccountsTableServicesTablesNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              export enum MicrosoftStorageStorageAccountsTableServicesTablesType {
                "MicrosoftStorageStorageAccountsTableServicesTablesType_MICROSOFT_STORAGE_STORAGE_ACCOUNTS_TABLE_SERVICES_TABLES" = 'Microsoft.Storage/storageAccounts/tableServices/tables',
              }

              export enum IdentityType {
                SYSTEM_ASSIGNED = 'SystemAssigned',
              }

              export enum StorageAccountPropertiesCreateParametersAccessTier {
                HOT = 'Hot',
                COOL = 'Cool',
              }

              /**
               * Settings for Azure Files identity based authentication.
               *
               * @schema #/definitions/AzureFilesIdentityBasedAuthentication
               */
              export interface AzureFilesIdentityBasedAuthentication {
                /**
                 * Settings properties for Active Directory (AD).
                 *
                 * @schema #/definitions/AzureFilesIdentityBasedAuthentication#activeDirectoryProperties
                 */
                readonly activeDirectoryProperties?: ActiveDirectoryProperties;

                /**
                 * Indicates the directory service used.
                 *
                 * @schema #/definitions/AzureFilesIdentityBasedAuthentication#directoryServiceOptions
                 */
                readonly directoryServiceOptions: AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions;

              }

              /**
               * The custom domain assigned to this storage account. This can be set via Update.
               *
               * @schema #/definitions/CustomDomain
               */
              export interface CustomDomain {
                /**
                 * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
                 *
                 * @schema #/definitions/CustomDomain#name
                 */
                readonly name: string;

                /**
                 * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
                 *
                 * @schema #/definitions/CustomDomain#useSubDomainName
                 */
                readonly useSubDomainName?: boolean;

              }

              /**
               * The encryption settings on the storage account.
               *
               * @schema #/definitions/Encryption
               */
              export interface Encryption {
                /**
                 * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault.
                 *
                 * @schema #/definitions/Encryption#keySource
                 */
                readonly keySource: EncryptionKeySource;

                /**
                 * Properties of key vault.
                 *
                 * @schema #/definitions/Encryption#keyvaultproperties
                 */
                readonly keyvaultproperties?: KeyVaultProperties;

                /**
                 * A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.
                 *
                 * @schema #/definitions/Encryption#requireInfrastructureEncryption
                 */
                readonly requireInfrastructureEncryption?: boolean;

                /**
                 * A list of services that support encryption.
                 *
                 * @schema #/definitions/Encryption#services
                 */
                readonly services?: EncryptionServices;

              }

              export enum StorageAccountPropertiesCreateParametersLargeFileSharesState {
                DISABLED = 'Disabled',
                ENABLED = 'Enabled',
              }

              export enum StorageAccountPropertiesCreateParametersMinimumTlsVersion {
                "StorageAccountPropertiesCreateParametersMinimumTlsVersion_TLS1_0" = 'TLS1_0',
                "StorageAccountPropertiesCreateParametersMinimumTlsVersion_TLS1_1" = 'TLS1_1',
                "StorageAccountPropertiesCreateParametersMinimumTlsVersion_TLS1_2" = 'TLS1_2',
              }

              /**
               * Network rule set
               *
               * @schema #/definitions/NetworkRuleSet
               */
              export interface NetworkRuleSet {
                /**
                 * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, "Logging, Metrics"), or None to bypass none of those traffics.
                 *
                 * @schema #/definitions/NetworkRuleSet#bypass
                 */
                readonly bypass?: NetworkRuleSetBypass;

                /**
                 * Specifies the default action of allow or deny when no other rules match.
                 *
                 * @schema #/definitions/NetworkRuleSet#defaultAction
                 */
                readonly defaultAction: NetworkRuleSetDefaultAction;

                /**
                 * Sets the IP ACL rules
                 *
                 * @schema #/definitions/NetworkRuleSet#ipRules
                 */
                readonly ipRules?: IpRule[];

                /**
                 * Sets the virtual network rules
                 *
                 * @schema #/definitions/NetworkRuleSet#virtualNetworkRules
                 */
                readonly virtualNetworkRules?: VirtualNetworkRule[];

              }

              /**
               * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
               *
               * @schema #/definitions/RoutingPreference
               */
              export interface RoutingPreference {
                /**
                 * A boolean flag which indicates whether internet routing storage endpoints are to be published
                 *
                 * @schema #/definitions/RoutingPreference#publishInternetEndpoints
                 */
                readonly publishInternetEndpoints?: boolean;

                /**
                 * A boolean flag which indicates whether microsoft routing storage endpoints are to be published
                 *
                 * @schema #/definitions/RoutingPreference#publishMicrosoftEndpoints
                 */
                readonly publishMicrosoftEndpoints?: boolean;

                /**
                 * Routing Choice defines the kind of network routing opted by the user.
                 *
                 * @schema #/definitions/RoutingPreference#routingChoice
                 */
                readonly routingChoice?: RoutingPreferenceRoutingChoice;

              }

              /**
               * Microsoft.Storage/storageAccounts/managementPolicies
               *
               * @schema #/definitions/storageAccounts_managementPolicies_childResource
               */
              export interface StorageAccountsManagementPoliciesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_managementPolicies_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsManagementPoliciesChildResourceApiVersion;

                /**
                 * The name of the Storage Account Management Policy. It should always be 'default'
                 *
                 * @schema #/definitions/storageAccounts_managementPolicies_childResource#name
                 */
                readonly name: StorageAccountsManagementPoliciesChildResourceName;

                /**
                 * The Storage Account ManagementPolicy properties.
                 *
                 * @schema #/definitions/storageAccounts_managementPolicies_childResource#properties
                 */
                readonly properties: ManagementPolicyProperties;

                /**
                 * @schema #/definitions/storageAccounts_managementPolicies_childResource#type
                 */
                readonly type: StorageAccountsManagementPoliciesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/inventoryPolicies
               *
               * @schema #/definitions/storageAccounts_inventoryPolicies_childResource
               */
              export interface StorageAccountsInventoryPoliciesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_inventoryPolicies_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsInventoryPoliciesChildResourceApiVersion;

                /**
                 * The name of the storage account blob inventory policy. It should always be 'default'
                 *
                 * @schema #/definitions/storageAccounts_inventoryPolicies_childResource#name
                 */
                readonly name: StorageAccountsInventoryPoliciesChildResourceName;

                /**
                 * The storage account blob inventory policy properties.
                 *
                 * @schema #/definitions/storageAccounts_inventoryPolicies_childResource#properties
                 */
                readonly properties: BlobInventoryPolicyProperties;

                /**
                 * Metadata pertaining to creation and last modification of the resource.
                 *
                 * @schema #/definitions/storageAccounts_inventoryPolicies_childResource#systemData
                 */
                readonly systemData?: SystemData;

                /**
                 * @schema #/definitions/storageAccounts_inventoryPolicies_childResource#type
                 */
                readonly type: StorageAccountsInventoryPoliciesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/privateEndpointConnections
               *
               * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource
               */
              export interface StorageAccountsPrivateEndpointConnectionsChildResource {
                /**
                 * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsPrivateEndpointConnectionsChildResourceApiVersion;

                /**
                 * The name of the private endpoint connection associated with the Azure resource
                 *
                 * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#name
                 */
                readonly name: string;

                /**
                 * Properties of the PrivateEndpointConnectProperties.
                 *
                 * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#properties
                 */
                readonly properties: PrivateEndpointConnectionProperties;

                /**
                 * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#type
                 */
                readonly type: StorageAccountsPrivateEndpointConnectionsChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/objectReplicationPolicies
               *
               * @schema #/definitions/storageAccounts_objectReplicationPolicies_childResource
               */
              export interface StorageAccountsObjectReplicationPoliciesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_objectReplicationPolicies_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsObjectReplicationPoliciesChildResourceApiVersion;

                /**
                 * The ID of object replication policy or 'default' if the policy ID is unknown.
                 *
                 * @schema #/definitions/storageAccounts_objectReplicationPolicies_childResource#name
                 */
                readonly name: string;

                /**
                 * The Storage Account ObjectReplicationPolicy properties.
                 *
                 * @schema #/definitions/storageAccounts_objectReplicationPolicies_childResource#properties
                 */
                readonly properties: ObjectReplicationPolicyProperties;

                /**
                 * @schema #/definitions/storageAccounts_objectReplicationPolicies_childResource#type
                 */
                readonly type: StorageAccountsObjectReplicationPoliciesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/encryptionScopes
               *
               * @schema #/definitions/storageAccounts_encryptionScopes_childResource
               */
              export interface StorageAccountsEncryptionScopesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_encryptionScopes_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsEncryptionScopesChildResourceApiVersion;

                /**
                 * The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
                 *
                 * @schema #/definitions/storageAccounts_encryptionScopes_childResource#name
                 */
                readonly name: string;

                /**
                 * Properties of the encryption scope.
                 *
                 * @schema #/definitions/storageAccounts_encryptionScopes_childResource#properties
                 */
                readonly properties: EncryptionScopeProperties;

                /**
                 * @schema #/definitions/storageAccounts_encryptionScopes_childResource#type
                 */
                readonly type: StorageAccountsEncryptionScopesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/blobServices
               *
               * @schema #/definitions/storageAccounts_blobServices_childResource
               */
              export interface StorageAccountsBlobServicesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_blobServices_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsBlobServicesChildResourceApiVersion;

                /**
                 * The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
                 *
                 * @schema #/definitions/storageAccounts_blobServices_childResource#name
                 */
                readonly name: StorageAccountsBlobServicesChildResourceName;

                /**
                 * The properties of a storage account’s Blob service.
                 *
                 * @schema #/definitions/storageAccounts_blobServices_childResource#properties
                 */
                readonly properties: BlobServicePropertiesProperties;

                /**
                 * @schema #/definitions/storageAccounts_blobServices_childResource#type
                 */
                readonly type: StorageAccountsBlobServicesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/fileServices
               *
               * @schema #/definitions/storageAccounts_fileServices_childResource
               */
              export interface StorageAccountsFileServicesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_fileServices_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsFileServicesChildResourceApiVersion;

                /**
                 * The name of the file Service within the specified storage account. File Service Name must be "default"
                 *
                 * @schema #/definitions/storageAccounts_fileServices_childResource#name
                 */
                readonly name: StorageAccountsFileServicesChildResourceName;

                /**
                 * The properties of File services in storage account.
                 *
                 * @schema #/definitions/storageAccounts_fileServices_childResource#properties
                 */
                readonly properties: FileServicePropertiesProperties;

                /**
                 * @schema #/definitions/storageAccounts_fileServices_childResource#type
                 */
                readonly type: StorageAccountsFileServicesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/queueServices
               *
               * @schema #/definitions/storageAccounts_queueServices_childResource
               */
              export interface StorageAccountsQueueServicesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_queueServices_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsQueueServicesChildResourceApiVersion;

                /**
                 * The name of the Queue Service within the specified storage account. Queue Service Name must be 'default'
                 *
                 * @schema #/definitions/storageAccounts_queueServices_childResource#name
                 */
                readonly name: StorageAccountsQueueServicesChildResourceName;

                /**
                 * The properties of a storage account’s Queue service.
                 *
                 * @schema #/definitions/storageAccounts_queueServices_childResource#properties
                 */
                readonly properties: QueueServicePropertiesProperties;

                /**
                 * @schema #/definitions/storageAccounts_queueServices_childResource#type
                 */
                readonly type: StorageAccountsQueueServicesChildResourceType;

              }

              /**
               * Microsoft.Storage/storageAccounts/tableServices
               *
               * @schema #/definitions/storageAccounts_tableServices_childResource
               */
              export interface StorageAccountsTableServicesChildResource {
                /**
                 * @schema #/definitions/storageAccounts_tableServices_childResource#apiVersion
                 */
                readonly apiVersion: StorageAccountsTableServicesChildResourceApiVersion;

                /**
                 * The name of the Table Service within the specified storage account. Table Service Name must be 'default'
                 *
                 * @schema #/definitions/storageAccounts_tableServices_childResource#name
                 */
                readonly name: StorageAccountsTableServicesChildResourceName;

                /**
                 * The properties of a storage account’s Table service.
                 *
                 * @schema #/definitions/storageAccounts_tableServices_childResource#properties
                 */
                readonly properties: TableServicePropertiesProperties;

                /**
                 * @schema #/definitions/storageAccounts_tableServices_childResource#type
                 */
                readonly type: StorageAccountsTableServicesChildResourceType;

              }

              export enum SkuName {
                STANDARD_LRS = 'Standard_LRS',
                STANDARD_GRS = 'Standard_GRS',
                STANDARD_RAGRS = 'Standard_RAGRS',
                STANDARD_ZRS = 'Standard_ZRS',
                PREMIUM_LRS = 'Premium_LRS',
                PREMIUM_ZRS = 'Premium_ZRS',
                STANDARD_GZRS = 'Standard_GZRS',
                STANDARD_RAGZRS = 'Standard_RAGZRS',
              }

              export enum SkuTier {
                STANDARD = 'Standard',
                PREMIUM = 'Premium',
              }

              /**
               * The blob service properties for change feed events.
               *
               * @schema #/definitions/ChangeFeed
               */
              export interface ChangeFeed {
                /**
                 * Indicates whether change feed event logging is enabled for the Blob service.
                 *
                 * @schema #/definitions/ChangeFeed#enabled
                 */
                readonly enabled?: boolean;

                /**
                 * Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.
                 *
                 * @schema #/definitions/ChangeFeed#retentionInDays
                 */
                readonly retentionInDays?: number;

              }

              /**
               * The service properties for soft delete.
               *
               * @schema #/definitions/DeleteRetentionPolicy
               */
              export interface DeleteRetentionPolicy {
                /**
                 * Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
                 *
                 * @schema #/definitions/DeleteRetentionPolicy#days
                 */
                readonly days?: number;

                /**
                 * Indicates whether DeleteRetentionPolicy is enabled.
                 *
                 * @schema #/definitions/DeleteRetentionPolicy#enabled
                 */
                readonly enabled?: boolean;

              }

              /**
               * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
               *
               * @schema #/definitions/CorsRules
               */
              export interface CorsRules {
                /**
                 * The List of CORS rules. You can include up to five CorsRule elements in the request. 
                 *
                 * @schema #/definitions/CorsRules#corsRules
                 */
                readonly corsRules?: CorsRule[];

              }

              /**
               * The blob service properties for Last access time based tracking policy.
               *
               * @schema #/definitions/LastAccessTimeTrackingPolicy
               */
              export interface LastAccessTimeTrackingPolicy {
                /**
                 * An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only
                 *
                 * @schema #/definitions/LastAccessTimeTrackingPolicy#blobType
                 */
                readonly blobType?: string[];

                /**
                 * When set to true last access time based tracking is enabled.
                 *
                 * @schema #/definitions/LastAccessTimeTrackingPolicy#enable
                 */
                readonly enable: boolean;

                /**
                 * Name of the policy. The valid value is AccessTimeTracking. This field is currently read only.
                 *
                 * @schema #/definitions/LastAccessTimeTrackingPolicy#name
                 */
                readonly name?: LastAccessTimeTrackingPolicyName;

                /**
                 * The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1
                 *
                 * @schema #/definitions/LastAccessTimeTrackingPolicy#trackingGranularityInDays
                 */
                readonly trackingGranularityInDays?: number;

              }

              /**
               * The blob service properties for blob restore policy
               *
               * @schema #/definitions/RestorePolicyProperties
               */
              export interface RestorePolicyProperties {
                /**
                 * how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.
                 *
                 * @schema #/definitions/RestorePolicyProperties#days
                 */
                readonly days?: number;

                /**
                 * Blob restore is enabled if set to true.
                 *
                 * @schema #/definitions/RestorePolicyProperties#enabled
                 */
                readonly enabled: boolean;

              }

              export enum StorageAccountsBlobServicesContainersChildResourceApiVersion {
                "StorageAccountsBlobServicesContainersChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsBlobServicesContainersChildResourceType {
                CONTAINERS = 'containers',
              }

              /**
               * @schema #/definitions/containerPropertiesMetadata
               */
              export interface ContainerPropertiesMetadata {
              }

              export enum ContainerPropertiesPublicAccess {
                CONTAINER = 'Container',
                BLOB = 'Blob',
                NONE = 'None',
              }

              export enum StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceApiVersion {
                "StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceType {
                IMMUTABILITY_POLICIES = 'immutabilityPolicies',
              }

              /**
               * The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.
               *
               * @schema #/definitions/EncryptionScopeKeyVaultProperties
               */
              export interface EncryptionScopeKeyVaultProperties {
                /**
                 * The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.
                 *
                 * @schema #/definitions/EncryptionScopeKeyVaultProperties#keyUri
                 */
                readonly keyUri?: string;

              }

              export enum EncryptionScopePropertiesSource {
                "EncryptionScopePropertiesSource_MICROSOFT_STORAGE" = 'Microsoft.Storage',
                "EncryptionScopePropertiesSource_MICROSOFT_KEY_VAULT" = 'Microsoft.KeyVault',
              }

              export enum EncryptionScopePropertiesState {
                ENABLED = 'Enabled',
                DISABLED = 'Disabled',
              }

              export enum StorageAccountsFileServicesSharesChildResourceApiVersion {
                "StorageAccountsFileServicesSharesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsFileServicesSharesChildResourceType {
                SHARES = 'shares',
              }

              export enum FileSharePropertiesAccessTier {
                TRANSACTION_OPTIMIZED = 'TransactionOptimized',
                HOT = 'Hot',
                COOL = 'Cool',
                PREMIUM = 'Premium',
              }

              export enum FileSharePropertiesEnabledProtocols {
                SMB = 'SMB',
                NFS = 'NFS',
              }

              /**
               * @schema #/definitions/fileSharePropertiesMetadata
               */
              export interface FileSharePropertiesMetadata {
              }

              export enum FileSharePropertiesRootSquash {
                NO_ROOT_SQUASH = 'NoRootSquash',
                ROOT_SQUASH = 'RootSquash',
                ALL_SQUASH = 'AllSquash',
              }

              /**
               * The storage account blob inventory policy rules.
               *
               * @schema #/definitions/BlobInventoryPolicySchema
               */
              export interface BlobInventoryPolicySchema {
                /**
                 * Container name where blob inventory files are stored. Must be pre-created.
                 *
                 * @schema #/definitions/BlobInventoryPolicySchema#destination
                 */
                readonly destination: string;

                /**
                 * Policy is enabled if set to true.
                 *
                 * @schema #/definitions/BlobInventoryPolicySchema#enabled
                 */
                readonly enabled: boolean;

                /**
                 * The storage account blob inventory policy rules. The rule is applied when it is enabled.
                 *
                 * @schema #/definitions/BlobInventoryPolicySchema#rules
                 */
                readonly rules: BlobInventoryPolicyRule[];

                /**
                 * The valid value is Inventory
                 *
                 * @schema #/definitions/BlobInventoryPolicySchema#type
                 */
                readonly type: BlobInventoryPolicySchemaType;

              }

              export enum SystemDataCreatedByType {
                USER = 'User',
                APPLICATION = 'Application',
                MANAGED_IDENTITY = 'ManagedIdentity',
                KEY = 'Key',
              }

              export enum SystemDataLastModifiedByType {
                USER = 'User',
                APPLICATION = 'Application',
                MANAGED_IDENTITY = 'ManagedIdentity',
                KEY = 'Key',
              }

              /**
               * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
               *
               * @schema #/definitions/ManagementPolicySchema
               */
              export interface ManagementPolicySchema {
                /**
                 * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
                 *
                 * @schema #/definitions/ManagementPolicySchema#rules
                 */
                readonly rules: ManagementPolicyRule[];

              }

              /**
               * The replication policy rule between two containers.
               *
               * @schema #/definitions/ObjectReplicationPolicyRule
               */
              export interface ObjectReplicationPolicyRule {
                /**
                 * Required. Destination container name.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyRule#destinationContainer
                 */
                readonly destinationContainer: string;

                /**
                 * Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyRule#filters
                 */
                readonly filters?: ObjectReplicationPolicyFilter;

                /**
                 * Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyRule#ruleId
                 */
                readonly ruleId?: string;

                /**
                 * Required. Source container name.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyRule#sourceContainer
                 */
                readonly sourceContainer: string;

              }

              /**
               * The Private Endpoint resource.
               *
               * @schema #/definitions/PrivateEndpoint
               */
              export interface PrivateEndpoint {
              }

              /**
               * A collection of information about the state of the connection between service consumer and provider.
               *
               * @schema #/definitions/PrivateLinkServiceConnectionState
               */
              export interface PrivateLinkServiceConnectionState {
                /**
                 * A message indicating if changes on the service provider require any updates on the consumer.
                 *
                 * @schema #/definitions/PrivateLinkServiceConnectionState#actionRequired
                 */
                readonly actionRequired?: string;

                /**
                 * The reason for approval/rejection of the connection.
                 *
                 * @schema #/definitions/PrivateLinkServiceConnectionState#description
                 */
                readonly description?: string;

                /**
                 * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
                 *
                 * @schema #/definitions/PrivateLinkServiceConnectionState#status
                 */
                readonly status?: PrivateLinkServiceConnectionStateStatus;

              }

              export enum PrivateEndpointConnectionPropertiesProvisioningState {
                SUCCEEDED = 'Succeeded',
                CREATING = 'Creating',
                DELETING = 'Deleting',
                FAILED = 'Failed',
              }

              export enum StorageAccountsQueueServicesQueuesChildResourceApiVersion {
                "StorageAccountsQueueServicesQueuesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema #/definitions/storageAccountsQueueServicesQueuesChildResourceName
               */
              export class StorageAccountsQueueServicesQueuesChildResourceNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              export enum StorageAccountsQueueServicesQueuesChildResourceType {
                QUEUES = 'queues',
              }

              /**
               * @schema #/definitions/queuePropertiesMetadata
               */
              export interface QueuePropertiesMetadata {
              }

              export enum StorageAccountsTableServicesTablesChildResourceApiVersion {
                "StorageAccountsTableServicesTablesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              /**
               * @schema #/definitions/storageAccountsTableServicesTablesChildResourceName
               */
              export class StorageAccountsTableServicesTablesChildResourceNamePattern {
                public static pattern(value: string): string {
                  return value;
                }
              }

              export enum StorageAccountsTableServicesTablesChildResourceType {
                TABLES = 'tables',
              }

              /**
               * Settings properties for Active Directory (AD).
               *
               * @schema #/definitions/ActiveDirectoryProperties
               */
              export interface ActiveDirectoryProperties {
                /**
                 * Specifies the security identifier (SID) for Azure Storage.
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#azureStorageSid
                 */
                readonly azureStorageSid: string;

                /**
                 * Specifies the domain GUID.
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#domainGuid
                 */
                readonly domainGuid: string;

                /**
                 * Specifies the primary domain that the AD DNS server is authoritative for.
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#domainName
                 */
                readonly domainName: string;

                /**
                 * Specifies the security identifier (SID).
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#domainSid
                 */
                readonly domainSid: string;

                /**
                 * Specifies the Active Directory forest to get.
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#forestName
                 */
                readonly forestName: string;

                /**
                 * Specifies the NetBIOS domain name.
                 *
                 * @schema #/definitions/ActiveDirectoryProperties#netBiosDomainName
                 */
                readonly netBiosDomainName: string;

              }

              export enum AzureFilesIdentityBasedAuthenticationDirectoryServiceOptions {
                NONE = 'None',
                AADDS = 'AADDS',
                AD = 'AD',
              }

              export enum EncryptionKeySource {
                "EncryptionKeySource_MICROSOFT_STORAGE" = 'Microsoft.Storage',
                "EncryptionKeySource_MICROSOFT_KEYVAULT" = 'Microsoft.Keyvault',
              }

              /**
               * Properties of key vault.
               *
               * @schema #/definitions/KeyVaultProperties
               */
              export interface KeyVaultProperties {
                /**
                 * The name of KeyVault key.
                 *
                 * @schema #/definitions/KeyVaultProperties#keyname
                 */
                readonly keyname?: string;

                /**
                 * The Uri of KeyVault.
                 *
                 * @schema #/definitions/KeyVaultProperties#keyvaulturi
                 */
                readonly keyvaulturi?: string;

                /**
                 * The version of KeyVault key.
                 *
                 * @schema #/definitions/KeyVaultProperties#keyversion
                 */
                readonly keyversion?: string;

              }

              /**
               * A list of services that support encryption.
               *
               * @schema #/definitions/EncryptionServices
               */
              export interface EncryptionServices {
                /**
                 * A service that allows server-side encryption to be used.
                 *
                 * @schema #/definitions/EncryptionServices#blob
                 */
                readonly blob?: EncryptionService;

                /**
                 * A service that allows server-side encryption to be used.
                 *
                 * @schema #/definitions/EncryptionServices#file
                 */
                readonly file?: EncryptionService;

                /**
                 * A service that allows server-side encryption to be used.
                 *
                 * @schema #/definitions/EncryptionServices#queue
                 */
                readonly queue?: EncryptionService;

                /**
                 * A service that allows server-side encryption to be used.
                 *
                 * @schema #/definitions/EncryptionServices#table
                 */
                readonly table?: EncryptionService;

              }

              export enum NetworkRuleSetBypass {
                NONE = 'None',
                LOGGING = 'Logging',
                METRICS = 'Metrics',
                AZURE_SERVICES = 'AzureServices',
              }

              export enum NetworkRuleSetDefaultAction {
                ALLOW = 'Allow',
                DENY = 'Deny',
              }

              /**
               * IP rule with specific IP or IP range in CIDR format.
               *
               * @schema #/definitions/IPRule
               */
              export interface IpRule {
                /**
                 * The action of IP ACL rule.
                 *
                 * @schema #/definitions/IPRule#action
                 */
                readonly action?: IpRuleAction;

                /**
                 * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
                 *
                 * @schema #/definitions/IPRule#value
                 */
                readonly value: string;

              }

              /**
               * Virtual Network rule.
               *
               * @schema #/definitions/VirtualNetworkRule
               */
              export interface VirtualNetworkRule {
                /**
                 * The action of virtual network rule.
                 *
                 * @schema #/definitions/VirtualNetworkRule#action
                 */
                readonly action?: VirtualNetworkRuleAction;

                /**
                 * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
                 *
                 * @schema #/definitions/VirtualNetworkRule#id
                 */
                readonly id: string;

                /**
                 * Gets the state of virtual network rule.
                 *
                 * @schema #/definitions/VirtualNetworkRule#state
                 */
                readonly state?: VirtualNetworkRuleState;

              }

              export enum RoutingPreferenceRoutingChoice {
                MICROSOFT_ROUTING = 'MicrosoftRouting',
                INTERNET_ROUTING = 'InternetRouting',
              }

              export enum StorageAccountsManagementPoliciesChildResourceApiVersion {
                "StorageAccountsManagementPoliciesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsManagementPoliciesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsManagementPoliciesChildResourceType {
                MANAGEMENT_POLICIES = 'managementPolicies',
              }

              export enum StorageAccountsInventoryPoliciesChildResourceApiVersion {
                "StorageAccountsInventoryPoliciesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsInventoryPoliciesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsInventoryPoliciesChildResourceType {
                INVENTORY_POLICIES = 'inventoryPolicies',
              }

              export enum StorageAccountsPrivateEndpointConnectionsChildResourceApiVersion {
                "StorageAccountsPrivateEndpointConnectionsChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsPrivateEndpointConnectionsChildResourceType {
                PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
              }

              export enum StorageAccountsObjectReplicationPoliciesChildResourceApiVersion {
                "StorageAccountsObjectReplicationPoliciesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsObjectReplicationPoliciesChildResourceType {
                OBJECT_REPLICATION_POLICIES = 'objectReplicationPolicies',
              }

              export enum StorageAccountsEncryptionScopesChildResourceApiVersion {
                "StorageAccountsEncryptionScopesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsEncryptionScopesChildResourceType {
                ENCRYPTION_SCOPES = 'encryptionScopes',
              }

              export enum StorageAccountsBlobServicesChildResourceApiVersion {
                "StorageAccountsBlobServicesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsBlobServicesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsBlobServicesChildResourceType {
                BLOB_SERVICES = 'blobServices',
              }

              export enum StorageAccountsFileServicesChildResourceApiVersion {
                "StorageAccountsFileServicesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsFileServicesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsFileServicesChildResourceType {
                FILE_SERVICES = 'fileServices',
              }

              export enum StorageAccountsQueueServicesChildResourceApiVersion {
                "StorageAccountsQueueServicesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsQueueServicesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsQueueServicesChildResourceType {
                QUEUE_SERVICES = 'queueServices',
              }

              export enum StorageAccountsTableServicesChildResourceApiVersion {
                "StorageAccountsTableServicesChildResourceApiVersion_2019_06_01" = '2019-06-01',
              }

              export enum StorageAccountsTableServicesChildResourceName {
                DEFAULT = 'default',
              }

              export enum StorageAccountsTableServicesChildResourceType {
                TABLE_SERVICES = 'tableServices',
              }

              /**
               * Specifies a CORS rule for the Blob service.
               *
               * @schema #/definitions/CorsRule
               */
              export interface CorsRule {
                /**
                 * Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
                 *
                 * @schema #/definitions/CorsRule#allowedHeaders
                 */
                readonly allowedHeaders: string[];

                /**
                 * Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
                 *
                 * @schema #/definitions/CorsRule#allowedMethods
                 */
                readonly allowedMethods: CorsRuleAllowedMethods[];

                /**
                 * Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or "*" to allow all domains
                 *
                 * @schema #/definitions/CorsRule#allowedOrigins
                 */
                readonly allowedOrigins: string[];

                /**
                 * Required if CorsRule element is present. A list of response headers to expose to CORS clients.
                 *
                 * @schema #/definitions/CorsRule#exposedHeaders
                 */
                readonly exposedHeaders: string[];

                /**
                 * Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
                 *
                 * @schema #/definitions/CorsRule#maxAgeInSeconds
                 */
                readonly maxAgeInSeconds: number;

              }

              export enum LastAccessTimeTrackingPolicyName {
                ACCESS_TIME_TRACKING = 'AccessTimeTracking',
              }

              /**
               * An object that wraps the blob inventory rule. Each rule is uniquely defined by name.
               *
               * @schema #/definitions/BlobInventoryPolicyRule
               */
              export interface BlobInventoryPolicyRule {
                /**
                 * An object that defines the blob inventory rule. Each definition consists of a set of filters.
                 *
                 * @schema #/definitions/BlobInventoryPolicyRule#definition
                 */
                readonly definition: BlobInventoryPolicyDefinition;

                /**
                 * Rule is enabled when set to true.
                 *
                 * @schema #/definitions/BlobInventoryPolicyRule#enabled
                 */
                readonly enabled: boolean;

                /**
                 * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                 *
                 * @schema #/definitions/BlobInventoryPolicyRule#name
                 */
                readonly name: string;

              }

              export enum BlobInventoryPolicySchemaType {
                INVENTORY = 'Inventory',
              }

              /**
               * An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
               *
               * @schema #/definitions/ManagementPolicyRule
               */
              export interface ManagementPolicyRule {
                /**
                 * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
                 *
                 * @schema #/definitions/ManagementPolicyRule#definition
                 */
                readonly definition: ManagementPolicyDefinition;

                /**
                 * Rule is enabled if set to true.
                 *
                 * @schema #/definitions/ManagementPolicyRule#enabled
                 */
                readonly enabled?: boolean;

                /**
                 * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
                 *
                 * @schema #/definitions/ManagementPolicyRule#name
                 */
                readonly name: string;

                /**
                 * The valid value is Lifecycle
                 *
                 * @schema #/definitions/ManagementPolicyRule#type
                 */
                readonly type: ManagementPolicyRuleType;

              }

              /**
               * Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.
               *
               * @schema #/definitions/ObjectReplicationPolicyFilter
               */
              export interface ObjectReplicationPolicyFilter {
                /**
                 * Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z
                 *
                 * @schema #/definitions/ObjectReplicationPolicyFilter#minCreationTime
                 */
                readonly minCreationTime?: string;

                /**
                 * Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.
                 *
                 * @schema #/definitions/ObjectReplicationPolicyFilter#prefixMatch
                 */
                readonly prefixMatch?: string[];

              }

              export enum PrivateLinkServiceConnectionStateStatus {
                PENDING = 'Pending',
                APPROVED = 'Approved',
                REJECTED = 'Rejected',
              }

              /**
               * A service that allows server-side encryption to be used.
               *
               * @schema #/definitions/EncryptionService
               */
              export interface EncryptionService {
                /**
                 * A boolean indicating whether or not the service encrypts the data as it is stored.
                 *
                 * @schema #/definitions/EncryptionService#enabled
                 */
                readonly enabled?: boolean;

                /**
                 * Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
                 *
                 * @schema #/definitions/EncryptionService#keyType
                 */
                readonly keyType?: EncryptionServiceKeyType;

              }

              export enum IpRuleAction {
                ALLOW = 'Allow',
              }

              export enum VirtualNetworkRuleAction {
                ALLOW = 'Allow',
              }

              export enum VirtualNetworkRuleState {
                PROVISIONING = 'provisioning',
                DEPROVISIONING = 'deprovisioning',
                SUCCEEDED = 'succeeded',
                FAILED = 'failed',
                NETWORK_SOURCE_DELETED = 'networkSourceDeleted',
              }

              export enum CorsRuleAllowedMethods {
                DELETE = 'DELETE',
                GET = 'GET',
                HEAD = 'HEAD',
                MERGE = 'MERGE',
                POST = 'POST',
                OPTIONS = 'OPTIONS',
                PUT = 'PUT',
              }

              /**
               * An object that defines the blob inventory rule. Each definition consists of a set of filters.
               *
               * @schema #/definitions/BlobInventoryPolicyDefinition
               */
              export interface BlobInventoryPolicyDefinition {
                /**
                 * An object that defines the blob inventory rule filter conditions.
                 *
                 * @schema #/definitions/BlobInventoryPolicyDefinition#filters
                 */
                readonly filters: BlobInventoryPolicyFilter;

              }

              /**
               * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
               *
               * @schema #/definitions/ManagementPolicyDefinition
               */
              export interface ManagementPolicyDefinition {
                /**
                 * Actions are applied to the filtered blobs when the execution condition is met.
                 *
                 * @schema #/definitions/ManagementPolicyDefinition#actions
                 */
                readonly actions: ManagementPolicyAction;

                /**
                 * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
                 *
                 * @schema #/definitions/ManagementPolicyDefinition#filters
                 */
                readonly filters?: ManagementPolicyFilter;

              }

              export enum ManagementPolicyRuleType {
                LIFECYCLE = 'Lifecycle',
              }

              export enum EncryptionServiceKeyType {
                SERVICE = 'Service',
                ACCOUNT = 'Account',
              }

              /**
               * An object that defines the blob inventory rule filter conditions.
               *
               * @schema #/definitions/BlobInventoryPolicyFilter
               */
              export interface BlobInventoryPolicyFilter {
                /**
                 * An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs.
                 *
                 * @schema #/definitions/BlobInventoryPolicyFilter#blobTypes
                 */
                readonly blobTypes: string[];

                /**
                 * Includes blob versions in blob inventory when value set to true.
                 *
                 * @schema #/definitions/BlobInventoryPolicyFilter#includeBlobVersions
                 */
                readonly includeBlobVersions?: boolean;

                /**
                 * Includes blob snapshots in blob inventory when value set to true.
                 *
                 * @schema #/definitions/BlobInventoryPolicyFilter#includeSnapshots
                 */
                readonly includeSnapshots?: boolean;

                /**
                 * An array of strings for blob prefixes to be matched.
                 *
                 * @schema #/definitions/BlobInventoryPolicyFilter#prefixMatch
                 */
                readonly prefixMatch?: string[];

              }

              /**
               * Actions are applied to the filtered blobs when the execution condition is met.
               *
               * @schema #/definitions/ManagementPolicyAction
               */
              export interface ManagementPolicyAction {
                /**
                 * Management policy action for base blob.
                 *
                 * @schema #/definitions/ManagementPolicyAction#baseBlob
                 */
                readonly baseBlob?: ManagementPolicyBaseBlob;

                /**
                 * Management policy action for snapshot.
                 *
                 * @schema #/definitions/ManagementPolicyAction#snapshot
                 */
                readonly snapshot?: ManagementPolicySnapShot;

                /**
                 * Management policy action for blob version.
                 *
                 * @schema #/definitions/ManagementPolicyAction#version
                 */
                readonly version?: ManagementPolicyVersion;

              }

              /**
               * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
               *
               * @schema #/definitions/ManagementPolicyFilter
               */
              export interface ManagementPolicyFilter {
                /**
                 * An array of blob index tag based filters, there can be at most 10 tag filters
                 *
                 * @schema #/definitions/ManagementPolicyFilter#blobIndexMatch
                 */
                readonly blobIndexMatch?: TagFilter[];

                /**
                 * An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.
                 *
                 * @schema #/definitions/ManagementPolicyFilter#blobTypes
                 */
                readonly blobTypes: string[];

                /**
                 * An array of strings for prefixes to be match.
                 *
                 * @schema #/definitions/ManagementPolicyFilter#prefixMatch
                 */
                readonly prefixMatch?: string[];

              }

              /**
               * Management policy action for base blob.
               *
               * @schema #/definitions/ManagementPolicyBaseBlob
               */
              export interface ManagementPolicyBaseBlob {
                /**
                 * Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
                 *
                 * @schema #/definitions/ManagementPolicyBaseBlob#delete
                 */
                readonly delete?: DateAfterModification;

                /**
                 * This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.
                 *
                 * @schema #/definitions/ManagementPolicyBaseBlob#enableAutoTierToHotFromCool
                 */
                readonly enableAutoTierToHotFromCool?: boolean;

                /**
                 * Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
                 *
                 * @schema #/definitions/ManagementPolicyBaseBlob#tierToArchive
                 */
                readonly tierToArchive?: DateAfterModification;

                /**
                 * Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
                 *
                 * @schema #/definitions/ManagementPolicyBaseBlob#tierToCool
                 */
                readonly tierToCool?: DateAfterModification;

              }

              /**
               * Management policy action for snapshot.
               *
               * @schema #/definitions/ManagementPolicySnapShot
               */
              export interface ManagementPolicySnapShot {
                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicySnapShot#delete
                 */
                readonly delete?: DateAfterCreation;

                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicySnapShot#tierToArchive
                 */
                readonly tierToArchive?: DateAfterCreation;

                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicySnapShot#tierToCool
                 */
                readonly tierToCool?: DateAfterCreation;

              }

              /**
               * Management policy action for blob version.
               *
               * @schema #/definitions/ManagementPolicyVersion
               */
              export interface ManagementPolicyVersion {
                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicyVersion#delete
                 */
                readonly delete?: DateAfterCreation;

                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicyVersion#tierToArchive
                 */
                readonly tierToArchive?: DateAfterCreation;

                /**
                 * Object to define the number of days after creation.
                 *
                 * @schema #/definitions/ManagementPolicyVersion#tierToCool
                 */
                readonly tierToCool?: DateAfterCreation;

              }

              /**
               * Blob index tag based filtering for blob objects
               *
               * @schema #/definitions/TagFilter
               */
              export interface TagFilter {
                /**
                 * This is the filter tag name, it can have 1 - 128 characters
                 *
                 * @schema #/definitions/TagFilter#name
                 */
                readonly name: string;

                /**
                 * This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported
                 *
                 * @schema #/definitions/TagFilter#op
                 */
                readonly op: string;

                /**
                 * This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters
                 *
                 * @schema #/definitions/TagFilter#value
                 */
                readonly value: string;

              }

              /**
               * Object to define the number of days after object last modification Or last access. Properties daysAfterModificationGreaterThan and daysAfterLastAccessTimeGreaterThan are mutually exclusive.
               *
               * @schema #/definitions/DateAfterModification
               */
              export interface DateAfterModification {
                /**
                 * Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy
                 *
                 * @schema #/definitions/DateAfterModification#daysAfterLastAccessTimeGreaterThan
                 */
                readonly daysAfterLastAccessTimeGreaterThan?: number;

                /**
                 * Value indicating the age in days after last modification
                 *
                 * @schema #/definitions/DateAfterModification#daysAfterModificationGreaterThan
                 */
                readonly daysAfterModificationGreaterThan?: number;

              }

              /**
               * Object to define the number of days after creation.
               *
               * @schema #/definitions/DateAfterCreation
               */
              export interface DateAfterCreation {
                /**
                 * Value indicating the age in days after creation
                 *
                 * @schema #/definitions/DateAfterCreation#daysAfterCreationGreaterThan
                 */
                readonly daysAfterCreationGreaterThan: number;

              }

