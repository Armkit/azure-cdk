// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.StorSimple/managers
 *
 * @schema Microsoft.StorSimple.managers
 */
export class Managers extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/accessControlRecords
 *
 * @schema Microsoft.StorSimple.managers_accessControlRecords
 */
export class ManagersAccessControlRecords extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_accessControlRecords" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersAccessControlRecordsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_accessControlRecords',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/certificates
 *
 * @schema Microsoft.StorSimple.managers_certificates
 */
export class ManagersCertificates extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_certificates" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersCertificatesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_certificates',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/alertSettings
 *
 * @schema Microsoft.StorSimple.managers_devices_alertSettings
 */
export class ManagersDevicesAlertSettings extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_alertSettings" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesAlertSettingsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_alertSettings',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/backupScheduleGroups
 *
 * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups
 */
export class ManagersDevicesBackupScheduleGroups extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_backupScheduleGroups" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesBackupScheduleGroupsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_backupScheduleGroups',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/chapSettings
 *
 * @schema Microsoft.StorSimple.managers_devices_chapSettings
 */
export class ManagersDevicesChapSettings extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_chapSettings" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesChapSettingsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_chapSettings',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/fileservers
 *
 * @schema Microsoft.StorSimple.managers_devices_fileservers
 */
export class ManagersDevicesFileservers extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_fileservers" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesFileserversOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_fileservers',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/fileservers/shares
 *
 * @schema Microsoft.StorSimple.managers_devices_fileservers_shares
 */
export class ManagersDevicesFileserversShares extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_fileservers_shares" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesFileserversSharesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_fileservers_shares',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/iscsiservers
 *
 * @schema Microsoft.StorSimple.managers_devices_iscsiservers
 */
export class ManagersDevicesIscsiservers extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_iscsiservers" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesIscsiserversOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_iscsiservers',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/devices/iscsiservers/disks
 *
 * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks
 */
export class ManagersDevicesIscsiserversDisks extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_devices_iscsiservers_disks" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersDevicesIscsiserversDisksOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_devices_iscsiservers_disks',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/extendedInformation
 *
 * @schema Microsoft.StorSimple.managers_extendedInformation
 */
export class ManagersExtendedInformation extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_extendedInformation" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersExtendedInformationOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_extendedInformation',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/storageAccountCredentials
 *
 * @schema Microsoft.StorSimple.managers_storageAccountCredentials
 */
export class ManagersStorageAccountCredentials extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_storageAccountCredentials" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersStorageAccountCredentialsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_storageAccountCredentials',
    });
  }
}

/**
 * Microsoft.StorSimple/managers/storageDomains
 *
 * @schema Microsoft.StorSimple.managers_storageDomains
 */
export class ManagersStorageDomains extends ArmResource {
  /**
   * Defines a "Microsoft.StorSimple.managers_storageDomains" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: ManagersStorageDomainsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'managers_storageDomains',
    });
  }
}

/**
 * Microsoft.StorSimple/managers
 *
 * @schema Microsoft.StorSimple.managers
 */
export interface ManagersOptions {
  /**
   * @schema Microsoft.StorSimple.managers#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersApiVersion;

  /**
   * ETag of the Manager
   *
   * @schema Microsoft.StorSimple.managers#etag
   */
  readonly etag?: string;

  /**
   * The Geo location of the Manager
   *
   * @schema Microsoft.StorSimple.managers#location
   */
  readonly location: string;

  /**
   * The manager name
   *
   * @schema Microsoft.StorSimple.managers#name
   */
  readonly name: string;

  /**
   * The properties of the Manager
   *
   * @schema Microsoft.StorSimple.managers#properties
   */
  readonly properties: ManagerProperties;

  /**
   * @schema Microsoft.StorSimple.managers#resources
   */
  readonly resources?: MicrosoftStorSimpleManagersResources[];

  /**
   * Tags attached to the Manager
   *
   * @schema Microsoft.StorSimple.managers#tags
   */
  readonly tags?: MicrosoftStorSimpleManagersTags;

  /**
   * @schema Microsoft.StorSimple.managers#type
   */
  readonly type: MicrosoftStorSimpleManagersType;

}

/**
 * Microsoft.StorSimple/managers/accessControlRecords
 *
 * @schema Microsoft.StorSimple.managers_accessControlRecords
 */
export interface ManagersAccessControlRecordsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_accessControlRecords#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersAccessControlRecordsApiVersion;

  /**
   * The name of the access control record.
   *
   * @schema Microsoft.StorSimple.managers_accessControlRecords#name
   */
  readonly name: string;

  /**
   * Properties of access control record
   *
   * @schema Microsoft.StorSimple.managers_accessControlRecords#properties
   */
  readonly properties: AccessControlRecordProperties;

  /**
   * @schema Microsoft.StorSimple.managers_accessControlRecords#type
   */
  readonly type: MicrosoftStorSimpleManagersAccessControlRecordsType;

}

/**
 * Microsoft.StorSimple/managers/certificates
 *
 * @schema Microsoft.StorSimple.managers_certificates
 */
export interface ManagersCertificatesOptions {
  /**
   * @schema Microsoft.StorSimple.managers_certificates#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersCertificatesApiVersion;

  /**
   * Certificate Name
   *
   * @schema Microsoft.StorSimple.managers_certificates#name
   */
  readonly name: string;

  /**
   * Raw Certificate Data From IDM
   *
   * @schema Microsoft.StorSimple.managers_certificates#properties
   */
  readonly properties: RawCertificateData;

  /**
   * @schema Microsoft.StorSimple.managers_certificates#type
   */
  readonly type: MicrosoftStorSimpleManagersCertificatesType;

}

/**
 * Microsoft.StorSimple/managers/devices/alertSettings
 *
 * @schema Microsoft.StorSimple.managers_devices_alertSettings
 */
export interface ManagersDevicesAlertSettingsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_alertSettings#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion;

  /**
   * @schema Microsoft.StorSimple.managers_devices_alertSettings#name
   */
  readonly name: MicrosoftStorSimpleManagersDevicesAlertSettingsNamePattern;

  /**
   * Class containing the properties of AlertSettings
   *
   * @schema Microsoft.StorSimple.managers_devices_alertSettings#properties
   */
  readonly properties: AlertSettingsProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_alertSettings#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesAlertSettingsType;

}

/**
 * Microsoft.StorSimple/managers/devices/backupScheduleGroups
 *
 * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups
 */
export interface ManagersDevicesBackupScheduleGroupsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsApiVersion;

  /**
   * The name of the schedule group.
   *
   * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups#name
   */
  readonly name: string;

  /**
   * The Backup Schedule Group Properties
   *
   * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups#properties
   */
  readonly properties: BackupScheduleGroupProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_backupScheduleGroups#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsType;

}

/**
 * Microsoft.StorSimple/managers/devices/chapSettings
 *
 * @schema Microsoft.StorSimple.managers_devices_chapSettings
 */
export interface ManagersDevicesChapSettingsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_chapSettings#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesChapSettingsApiVersion;

  /**
   * The chap user name.
   *
   * @schema Microsoft.StorSimple.managers_devices_chapSettings#name
   */
  readonly name: string;

  /**
   * Chap properties
   *
   * @schema Microsoft.StorSimple.managers_devices_chapSettings#properties
   */
  readonly properties: ChapProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_chapSettings#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesChapSettingsType;

}

/**
 * Microsoft.StorSimple/managers/devices/fileservers
 *
 * @schema Microsoft.StorSimple.managers_devices_fileservers
 */
export interface ManagersDevicesFileserversOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_fileservers#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesFileserversApiVersion;

  /**
   * The file server name.
   *
   * @schema Microsoft.StorSimple.managers_devices_fileservers#name
   */
  readonly name: string;

  /**
   * The file server properties.
   *
   * @schema Microsoft.StorSimple.managers_devices_fileservers#properties
   */
  readonly properties: FileServerProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_fileservers#resources
   */
  readonly resources?: ManagersDevicesFileserversSharesChildResource[];

  /**
   * @schema Microsoft.StorSimple.managers_devices_fileservers#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesFileserversType;

}

/**
 * Microsoft.StorSimple/managers/devices/fileservers/shares
 *
 * @schema Microsoft.StorSimple.managers_devices_fileservers_shares
 */
export interface ManagersDevicesFileserversSharesOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_fileservers_shares#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesFileserversSharesApiVersion;

  /**
   * The file share name.
   *
   * @schema Microsoft.StorSimple.managers_devices_fileservers_shares#name
   */
  readonly name: string;

  /**
   * The File Share.
   *
   * @schema Microsoft.StorSimple.managers_devices_fileservers_shares#properties
   */
  readonly properties: FileShareProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_fileservers_shares#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesFileserversSharesType;

}

/**
 * Microsoft.StorSimple/managers/devices/iscsiservers
 *
 * @schema Microsoft.StorSimple.managers_devices_iscsiservers
 */
export interface ManagersDevicesIscsiserversOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesIscsiserversApiVersion;

  /**
   * The iSCSI server name.
   *
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers#name
   */
  readonly name: string;

  /**
   * The iSCSI server properties.
   *
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers#properties
   */
  readonly properties: IscsiServerProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers#resources
   */
  readonly resources?: ManagersDevicesIscsiserversDisksChildResource[];

  /**
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesIscsiserversType;

}

/**
 * Microsoft.StorSimple/managers/devices/iscsiservers/disks
 *
 * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks
 */
export interface ManagersDevicesIscsiserversDisksOptions {
  /**
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersDevicesIscsiserversDisksApiVersion;

  /**
   * The disk name.
   *
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks#name
   */
  readonly name: string;

  /**
   * The iSCSI disk properties.
   *
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks#properties
   */
  readonly properties: IscsiDiskProperties;

  /**
   * @schema Microsoft.StorSimple.managers_devices_iscsiservers_disks#type
   */
  readonly type: MicrosoftStorSimpleManagersDevicesIscsiserversDisksType;

}

/**
 * Microsoft.StorSimple/managers/extendedInformation
 *
 * @schema Microsoft.StorSimple.managers_extendedInformation
 */
export interface ManagersExtendedInformationOptions {
  /**
   * @schema Microsoft.StorSimple.managers_extendedInformation#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersExtendedInformationApiVersion;

  /**
   * ETag of the Resource
   *
   * @schema Microsoft.StorSimple.managers_extendedInformation#etag
   */
  readonly etag?: string;

  /**
   * @schema Microsoft.StorSimple.managers_extendedInformation#name
   */
  readonly name: MicrosoftStorSimpleManagersExtendedInformationNamePattern;

  /**
   * Properties of the ManagerExtendedInfo
   *
   * @schema Microsoft.StorSimple.managers_extendedInformation#properties
   */
  readonly properties: ManagerExtendedInfoProperties;

  /**
   * @schema Microsoft.StorSimple.managers_extendedInformation#type
   */
  readonly type: MicrosoftStorSimpleManagersExtendedInformationType;

}

/**
 * Microsoft.StorSimple/managers/storageAccountCredentials
 *
 * @schema Microsoft.StorSimple.managers_storageAccountCredentials
 */
export interface ManagersStorageAccountCredentialsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_storageAccountCredentials#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion;

  /**
   * The credential name.
   *
   * @schema Microsoft.StorSimple.managers_storageAccountCredentials#name
   */
  readonly name: string;

  /**
   * Storage account properties
   *
   * @schema Microsoft.StorSimple.managers_storageAccountCredentials#properties
   */
  readonly properties: StorageAccountCredentialProperties;

  /**
   * @schema Microsoft.StorSimple.managers_storageAccountCredentials#type
   */
  readonly type: MicrosoftStorSimpleManagersStorageAccountCredentialsType;

}

/**
 * Microsoft.StorSimple/managers/storageDomains
 *
 * @schema Microsoft.StorSimple.managers_storageDomains
 */
export interface ManagersStorageDomainsOptions {
  /**
   * @schema Microsoft.StorSimple.managers_storageDomains#apiVersion
   */
  readonly apiVersion?: MicrosoftStorSimpleManagersStorageDomainsApiVersion;

  /**
   * The storage domain name.
   *
   * @schema Microsoft.StorSimple.managers_storageDomains#name
   */
  readonly name: string;

  /**
   * The storage domain properties.
   *
   * @schema Microsoft.StorSimple.managers_storageDomains#properties
   */
  readonly properties: StorageDomainProperties;

  /**
   * @schema Microsoft.StorSimple.managers_storageDomains#type
   */
  readonly type: MicrosoftStorSimpleManagersStorageDomainsType;

}

export enum MicrosoftStorSimpleManagersApiVersion {
  "MicrosoftStorSimpleManagersApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The properties of the Manager
 *
 * @schema #/definitions/ManagerProperties
 */
export interface ManagerProperties {
  /**
   * Intrinsic settings which refers to the type of the StorSimple manager
   *
   * @schema #/definitions/ManagerProperties#cisIntrinsicSettings
   */
  readonly cisIntrinsicSettings?: ManagerIntrinsicSettings;

  /**
   * The Sku.
   *
   * @schema #/definitions/ManagerProperties#sku
   */
  readonly sku?: ManagerSku;

}

/**
 * @schema MicrosoftStorSimpleManagersResources
 */
export class MicrosoftStorSimpleManagersResources {
  public static fromManagersCertificatesChildResource(value: ManagersCertificatesChildResource): MicrosoftStorSimpleManagersResources {
    return new MicrosoftStorSimpleManagersResources(value);
  }
  public static fromManagersExtendedInformationChildResource(value: ManagersExtendedInformationChildResource): MicrosoftStorSimpleManagersResources {
    return new MicrosoftStorSimpleManagersResources(value);
  }
  public static fromManagersAccessControlRecordsChildResource(value: ManagersAccessControlRecordsChildResource): MicrosoftStorSimpleManagersResources {
    return new MicrosoftStorSimpleManagersResources(value);
  }
  public static fromManagersStorageAccountCredentialsChildResource(value: ManagersStorageAccountCredentialsChildResource): MicrosoftStorSimpleManagersResources {
    return new MicrosoftStorSimpleManagersResources(value);
  }
  public static fromManagersStorageDomainsChildResource(value: ManagersStorageDomainsChildResource): MicrosoftStorSimpleManagersResources {
    return new MicrosoftStorSimpleManagersResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftStorSimpleManagersTags
 */
export interface MicrosoftStorSimpleManagersTags {
}

export enum MicrosoftStorSimpleManagersType {
  "MicrosoftStorSimpleManagersType_MICROSOFT_STOR_SIMPLE_MANAGERS" = 'Microsoft.StorSimple/managers',
}

export enum MicrosoftStorSimpleManagersAccessControlRecordsApiVersion {
  "MicrosoftStorSimpleManagersAccessControlRecordsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * Properties of access control record
 *
 * @schema #/definitions/AccessControlRecordProperties
 */
export interface AccessControlRecordProperties {
  /**
   * The Iscsi initiator name (IQN)
   *
   * @schema #/definitions/AccessControlRecordProperties#initiatorName
   */
  readonly initiatorName: string;

}

export enum MicrosoftStorSimpleManagersAccessControlRecordsType {
  "MicrosoftStorSimpleManagersAccessControlRecordsType_MICROSOFT_STOR_SIMPLE_MANAGERS_ACCESS_CONTROL_RECORDS" = 'Microsoft.StorSimple/managers/accessControlRecords',
}

export enum MicrosoftStorSimpleManagersCertificatesApiVersion {
  "MicrosoftStorSimpleManagersCertificatesApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * Raw Certificate Data From IDM
 *
 * @schema #/definitions/RawCertificateData
 */
export interface RawCertificateData {
  /**
   * Specify the Authentication type.
   *
   * @schema #/definitions/RawCertificateData#authType
   */
  readonly authType?: RawCertificateDataAuthType;

  /**
   * Gets or sets the base64 encoded certificate raw data string
   *
   * @schema #/definitions/RawCertificateData#certificate
   */
  readonly certificate: string;

}

export enum MicrosoftStorSimpleManagersCertificatesType {
  "MicrosoftStorSimpleManagersCertificatesType_MICROSOFT_STOR_SIMPLE_MANAGERS_CERTIFICATES" = 'Microsoft.StorSimple/managers/certificates',
}

export enum MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion {
  "MicrosoftStorSimpleManagersDevicesAlertSettingsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * @schema MicrosoftStorSimpleManagersDevicesAlertSettingsName
 */
export class MicrosoftStorSimpleManagersDevicesAlertSettingsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Class containing the properties of AlertSettings
 *
 * @schema #/definitions/AlertSettingsProperties
 */
export interface AlertSettingsProperties {
  /**
   * List of email addresses (apart from admin/co-admin of subscription) to whom the alert emails need to be sent
   *
   * @schema #/definitions/AlertSettingsProperties#additionalRecipientEmailList
   */
  readonly additionalRecipientEmailList?: string[];

  /**
   * Culture setting to be used while building alert emails. For eg: "en-US"
   *
   * @schema #/definitions/AlertSettingsProperties#alertNotificationCulture
   */
  readonly alertNotificationCulture: string;

  /**
   * Value indicating whether user/admins will receive emails when an alert condition occurs on the system.
   *
   * @schema #/definitions/AlertSettingsProperties#emailNotification
   */
  readonly emailNotification: AlertSettingsPropertiesEmailNotification;

  /**
   * Value indicating whether service owners will receive emails when an alert condition occurs on the system. Applicable only if emailNotification flag is Enabled.
   *
   * @schema #/definitions/AlertSettingsProperties#notificationToServiceOwners
   */
  readonly notificationToServiceOwners: AlertSettingsPropertiesNotificationToServiceOwners;

}

export enum MicrosoftStorSimpleManagersDevicesAlertSettingsType {
  "MicrosoftStorSimpleManagersDevicesAlertSettingsType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_ALERT_SETTINGS" = 'Microsoft.StorSimple/managers/devices/alertSettings',
}

export enum MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsApiVersion {
  "MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The Backup Schedule Group Properties
 *
 * @schema #/definitions/BackupScheduleGroupProperties
 */
export interface BackupScheduleGroupProperties {
  /**
   * The Time.
   *
   * @schema #/definitions/BackupScheduleGroupProperties#startTime
   */
  readonly startTime: Time;

}

export enum MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsType {
  "MicrosoftStorSimpleManagersDevicesBackupScheduleGroupsType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_BACKUP_SCHEDULE_GROUPS" = 'Microsoft.StorSimple/managers/devices/backupScheduleGroups',
}

export enum MicrosoftStorSimpleManagersDevicesChapSettingsApiVersion {
  "MicrosoftStorSimpleManagersDevicesChapSettingsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * Chap properties
 *
 * @schema #/definitions/ChapProperties
 */
export interface ChapProperties {
  /**
   * This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
   *
   * @schema #/definitions/ChapProperties#password
   */
  readonly password: AsymmetricEncryptedSecret;

}

export enum MicrosoftStorSimpleManagersDevicesChapSettingsType {
  "MicrosoftStorSimpleManagersDevicesChapSettingsType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_CHAP_SETTINGS" = 'Microsoft.StorSimple/managers/devices/chapSettings',
}

export enum MicrosoftStorSimpleManagersDevicesFileserversApiVersion {
  "MicrosoftStorSimpleManagersDevicesFileserversApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The file server properties.
 *
 * @schema #/definitions/FileServerProperties
 */
export interface FileServerProperties {
  /**
   * The backup policy id.
   *
   * @schema #/definitions/FileServerProperties#backupScheduleGroupId
   */
  readonly backupScheduleGroupId: string;

  /**
   * The description of the file server
   *
   * @schema #/definitions/FileServerProperties#description
   */
  readonly description?: string;

  /**
   * Domain of the file server
   *
   * @schema #/definitions/FileServerProperties#domainName
   */
  readonly domainName: string;

  /**
   * The storage domain id.
   *
   * @schema #/definitions/FileServerProperties#storageDomainId
   */
  readonly storageDomainId: string;

}

/**
 * Microsoft.StorSimple/managers/devices/fileservers/shares
 *
 * @schema #/definitions/managers_devices_fileservers_shares_childResource
 */
export interface ManagersDevicesFileserversSharesChildResource {
  /**
   * @schema #/definitions/managers_devices_fileservers_shares_childResource#apiVersion
   */
  readonly apiVersion: ManagersDevicesFileserversSharesChildResourceApiVersion;

  /**
   * The file share name.
   *
   * @schema #/definitions/managers_devices_fileservers_shares_childResource#name
   */
  readonly name: string;

  /**
   * The File Share.
   *
   * @schema #/definitions/managers_devices_fileservers_shares_childResource#properties
   */
  readonly properties: FileShareProperties;

  /**
   * @schema #/definitions/managers_devices_fileservers_shares_childResource#type
   */
  readonly type: ManagersDevicesFileserversSharesChildResourceType;

}

export enum MicrosoftStorSimpleManagersDevicesFileserversType {
  "MicrosoftStorSimpleManagersDevicesFileserversType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_FILESERVERS" = 'Microsoft.StorSimple/managers/devices/fileservers',
}

export enum MicrosoftStorSimpleManagersDevicesFileserversSharesApiVersion {
  "MicrosoftStorSimpleManagersDevicesFileserversSharesApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The File Share.
 *
 * @schema #/definitions/FileShareProperties
 */
export interface FileShareProperties {
  /**
   * The user/group who will have full permission in this share. Active directory email address. Example: xyz@contoso.com or Contoso\xyz.
   *
   * @schema #/definitions/FileShareProperties#adminUser
   */
  readonly adminUser: string;

  /**
   * The data policy.
   *
   * @schema #/definitions/FileShareProperties#dataPolicy
   */
  readonly dataPolicy: FileSharePropertiesDataPolicy;

  /**
   * Description for file share
   *
   * @schema #/definitions/FileShareProperties#description
   */
  readonly description?: string;

  /**
   * The monitoring status.
   *
   * @schema #/definitions/FileShareProperties#monitoringStatus
   */
  readonly monitoringStatus: FileSharePropertiesMonitoringStatus;

  /**
   * The total provisioned capacity in Bytes
   *
   * @schema #/definitions/FileShareProperties#provisionedCapacityInBytes
   */
  readonly provisionedCapacityInBytes: number;

  /**
   * The Share Status.
   *
   * @schema #/definitions/FileShareProperties#shareStatus
   */
  readonly shareStatus: FileSharePropertiesShareStatus;

}

export enum MicrosoftStorSimpleManagersDevicesFileserversSharesType {
  "MicrosoftStorSimpleManagersDevicesFileserversSharesType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_FILESERVERS_SHARES" = 'Microsoft.StorSimple/managers/devices/fileservers/shares',
}

export enum MicrosoftStorSimpleManagersDevicesIscsiserversApiVersion {
  "MicrosoftStorSimpleManagersDevicesIscsiserversApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The iSCSI server properties.
 *
 * @schema #/definitions/ISCSIServerProperties
 */
export interface IscsiServerProperties {
  /**
   * The backup policy id.
   *
   * @schema #/definitions/ISCSIServerProperties#backupScheduleGroupId
   */
  readonly backupScheduleGroupId: string;

  /**
   * The chap id.
   *
   * @schema #/definitions/ISCSIServerProperties#chapId
   */
  readonly chapId?: string;

  /**
   * The description.
   *
   * @schema #/definitions/ISCSIServerProperties#description
   */
  readonly description?: string;

  /**
   * The reverse chap id.
   *
   * @schema #/definitions/ISCSIServerProperties#reverseChapId
   */
  readonly reverseChapId?: string;

  /**
   * The storage domain id.
   *
   * @schema #/definitions/ISCSIServerProperties#storageDomainId
   */
  readonly storageDomainId: string;

}

/**
 * Microsoft.StorSimple/managers/devices/iscsiservers/disks
 *
 * @schema #/definitions/managers_devices_iscsiservers_disks_childResource
 */
export interface ManagersDevicesIscsiserversDisksChildResource {
  /**
   * @schema #/definitions/managers_devices_iscsiservers_disks_childResource#apiVersion
   */
  readonly apiVersion: ManagersDevicesIscsiserversDisksChildResourceApiVersion;

  /**
   * The disk name.
   *
   * @schema #/definitions/managers_devices_iscsiservers_disks_childResource#name
   */
  readonly name: string;

  /**
   * The iSCSI disk properties.
   *
   * @schema #/definitions/managers_devices_iscsiservers_disks_childResource#properties
   */
  readonly properties: IscsiDiskProperties;

  /**
   * @schema #/definitions/managers_devices_iscsiservers_disks_childResource#type
   */
  readonly type: ManagersDevicesIscsiserversDisksChildResourceType;

}

export enum MicrosoftStorSimpleManagersDevicesIscsiserversType {
  "MicrosoftStorSimpleManagersDevicesIscsiserversType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_ISCSISERVERS" = 'Microsoft.StorSimple/managers/devices/iscsiservers',
}

export enum MicrosoftStorSimpleManagersDevicesIscsiserversDisksApiVersion {
  "MicrosoftStorSimpleManagersDevicesIscsiserversDisksApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The iSCSI disk properties.
 *
 * @schema #/definitions/ISCSIDiskProperties
 */
export interface IscsiDiskProperties {
  /**
   * The access control records.
   *
   * @schema #/definitions/ISCSIDiskProperties#accessControlRecords
   */
  readonly accessControlRecords: string[];

  /**
   * The data policy.
   *
   * @schema #/definitions/ISCSIDiskProperties#dataPolicy
   */
  readonly dataPolicy: IscsiDiskPropertiesDataPolicy;

  /**
   * The description.
   *
   * @schema #/definitions/ISCSIDiskProperties#description
   */
  readonly description?: string;

  /**
   * The disk status.
   *
   * @schema #/definitions/ISCSIDiskProperties#diskStatus
   */
  readonly diskStatus: IscsiDiskPropertiesDiskStatus;

  /**
   * The monitoring.
   *
   * @schema #/definitions/ISCSIDiskProperties#monitoringStatus
   */
  readonly monitoringStatus: IscsiDiskPropertiesMonitoringStatus;

  /**
   * The provisioned capacity in bytes.
   *
   * @schema #/definitions/ISCSIDiskProperties#provisionedCapacityInBytes
   */
  readonly provisionedCapacityInBytes: number;

}

export enum MicrosoftStorSimpleManagersDevicesIscsiserversDisksType {
  "MicrosoftStorSimpleManagersDevicesIscsiserversDisksType_MICROSOFT_STOR_SIMPLE_MANAGERS_DEVICES_ISCSISERVERS_DISKS" = 'Microsoft.StorSimple/managers/devices/iscsiservers/disks',
}

export enum MicrosoftStorSimpleManagersExtendedInformationApiVersion {
  "MicrosoftStorSimpleManagersExtendedInformationApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * @schema MicrosoftStorSimpleManagersExtendedInformationName
 */
export class MicrosoftStorSimpleManagersExtendedInformationNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of the ManagerExtendedInfo
 *
 * @schema #/definitions/ManagerExtendedInfoProperties
 */
export interface ManagerExtendedInfoProperties {
  /**
   * Represents the encryption algorithm used to encrypt the other keys. None - if EncryptionKey is saved in plain text format. AlgorithmName - if encryption is used
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#algorithm
   */
  readonly algorithm: string;

  /**
   * Represents the CEK of the resource
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#encryptionKey
   */
  readonly encryptionKey?: string;

  /**
   * Represents the Cert thumbprint that was used to encrypt the CEK
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#encryptionKeyThumbprint
   */
  readonly encryptionKeyThumbprint?: string;

  /**
   * Represents the CIK of the resource
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#integrityKey
   */
  readonly integrityKey: string;

  /**
   * Represents the portal thumbprint which can be used optionally to encrypt the entire data before storing it.
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#portalCertificateThumbprint
   */
  readonly portalCertificateThumbprint?: string;

  /**
   * Represents the version of the ExtendedInfo object being persisted
   *
   * @schema #/definitions/ManagerExtendedInfoProperties#version
   */
  readonly version?: string;

}

export enum MicrosoftStorSimpleManagersExtendedInformationType {
  "MicrosoftStorSimpleManagersExtendedInformationType_MICROSOFT_STOR_SIMPLE_MANAGERS_EXTENDED_INFORMATION" = 'Microsoft.StorSimple/managers/extendedInformation',
}

export enum MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion {
  "MicrosoftStorSimpleManagersStorageAccountCredentialsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * Storage account properties
 *
 * @schema #/definitions/StorageAccountCredentialProperties
 */
export interface StorageAccountCredentialProperties {
  /**
   * This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
   *
   * @schema #/definitions/StorageAccountCredentialProperties#accessKey
   */
  readonly accessKey?: AsymmetricEncryptedSecret;

  /**
   * The cloud service provider.
   *
   * @schema #/definitions/StorageAccountCredentialProperties#cloudType
   */
  readonly cloudType: StorageAccountCredentialPropertiesCloudType;

  /**
   * SSL needs to be enabled or not.
   *
   * @schema #/definitions/StorageAccountCredentialProperties#enableSSL
   */
  readonly enableSSL: StorageAccountCredentialPropertiesEnableSsl;

  /**
   * The storage endpoint
   *
   * @schema #/definitions/StorageAccountCredentialProperties#endPoint
   */
  readonly endPoint: string;

  /**
   * The storage account's geo location
   *
   * @schema #/definitions/StorageAccountCredentialProperties#location
   */
  readonly location?: string;

  /**
   * The storage account login
   *
   * @schema #/definitions/StorageAccountCredentialProperties#login
   */
  readonly login: string;

}

export enum MicrosoftStorSimpleManagersStorageAccountCredentialsType {
  "MicrosoftStorSimpleManagersStorageAccountCredentialsType_MICROSOFT_STOR_SIMPLE_MANAGERS_STORAGE_ACCOUNT_CREDENTIALS" = 'Microsoft.StorSimple/managers/storageAccountCredentials',
}

export enum MicrosoftStorSimpleManagersStorageDomainsApiVersion {
  "MicrosoftStorSimpleManagersStorageDomainsApiVersion_2016_10_01" = '2016-10-01',
}

/**
 * The storage domain properties.
 *
 * @schema #/definitions/StorageDomainProperties
 */
export interface StorageDomainProperties {
  /**
   * This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
   *
   * @schema #/definitions/StorageDomainProperties#encryptionKey
   */
  readonly encryptionKey?: AsymmetricEncryptedSecret;

  /**
   * The encryption status "Enabled | Disabled".
   *
   * @schema #/definitions/StorageDomainProperties#encryptionStatus
   */
  readonly encryptionStatus: StorageDomainPropertiesEncryptionStatus;

  /**
   * The storage account credentials.
   *
   * @schema #/definitions/StorageDomainProperties#storageAccountCredentialIds
   */
  readonly storageAccountCredentialIds: string[];

}

export enum MicrosoftStorSimpleManagersStorageDomainsType {
  "MicrosoftStorSimpleManagersStorageDomainsType_MICROSOFT_STOR_SIMPLE_MANAGERS_STORAGE_DOMAINS" = 'Microsoft.StorSimple/managers/storageDomains',
}

/**
 * Intrinsic settings which refers to the type of the StorSimple manager
 *
 * @schema #/definitions/ManagerIntrinsicSettings
 */
export interface ManagerIntrinsicSettings {
  /**
   * Refers to the type of the StorSimple Manager.
   *
   * @schema #/definitions/ManagerIntrinsicSettings#type
   */
  readonly type: ManagerIntrinsicSettingsType;

}

/**
 * The Sku.
 *
 * @schema #/definitions/ManagerSku
 */
export interface ManagerSku {
  /**
   * Refers to the sku name which should be "Standard"
   *
   * @schema #/definitions/ManagerSku#name
   */
  readonly name: ManagerSkuName;

}

/**
 * Microsoft.StorSimple/managers/certificates
 *
 * @schema #/definitions/managers_certificates_childResource
 */
export interface ManagersCertificatesChildResource {
  /**
   * @schema #/definitions/managers_certificates_childResource#apiVersion
   */
  readonly apiVersion: ManagersCertificatesChildResourceApiVersion;

  /**
   * Certificate Name
   *
   * @schema #/definitions/managers_certificates_childResource#name
   */
  readonly name: string;

  /**
   * Raw Certificate Data From IDM
   *
   * @schema #/definitions/managers_certificates_childResource#properties
   */
  readonly properties: RawCertificateData;

  /**
   * @schema #/definitions/managers_certificates_childResource#type
   */
  readonly type: ManagersCertificatesChildResourceType;

}

/**
 * Microsoft.StorSimple/managers/extendedInformation
 *
 * @schema #/definitions/managers_extendedInformation_childResource
 */
export interface ManagersExtendedInformationChildResource {
  /**
   * @schema #/definitions/managers_extendedInformation_childResource#apiVersion
   */
  readonly apiVersion: ManagersExtendedInformationChildResourceApiVersion;

  /**
   * ETag of the Resource
   *
   * @schema #/definitions/managers_extendedInformation_childResource#etag
   */
  readonly etag?: string;

  /**
   * @schema #/definitions/managers_extendedInformation_childResource#name
   */
  readonly name: ManagersExtendedInformationChildResourceName;

  /**
   * Properties of the ManagerExtendedInfo
   *
   * @schema #/definitions/managers_extendedInformation_childResource#properties
   */
  readonly properties: ManagerExtendedInfoProperties;

  /**
   * @schema #/definitions/managers_extendedInformation_childResource#type
   */
  readonly type: ManagersExtendedInformationChildResourceType;

}

/**
 * Microsoft.StorSimple/managers/accessControlRecords
 *
 * @schema #/definitions/managers_accessControlRecords_childResource
 */
export interface ManagersAccessControlRecordsChildResource {
  /**
   * @schema #/definitions/managers_accessControlRecords_childResource#apiVersion
   */
  readonly apiVersion: ManagersAccessControlRecordsChildResourceApiVersion;

  /**
   * The name of the access control record.
   *
   * @schema #/definitions/managers_accessControlRecords_childResource#name
   */
  readonly name: string;

  /**
   * Properties of access control record
   *
   * @schema #/definitions/managers_accessControlRecords_childResource#properties
   */
  readonly properties: AccessControlRecordProperties;

  /**
   * @schema #/definitions/managers_accessControlRecords_childResource#type
   */
  readonly type: ManagersAccessControlRecordsChildResourceType;

}

/**
 * Microsoft.StorSimple/managers/storageAccountCredentials
 *
 * @schema #/definitions/managers_storageAccountCredentials_childResource
 */
export interface ManagersStorageAccountCredentialsChildResource {
  /**
   * @schema #/definitions/managers_storageAccountCredentials_childResource#apiVersion
   */
  readonly apiVersion: ManagersStorageAccountCredentialsChildResourceApiVersion;

  /**
   * The credential name.
   *
   * @schema #/definitions/managers_storageAccountCredentials_childResource#name
   */
  readonly name: string;

  /**
   * Storage account properties
   *
   * @schema #/definitions/managers_storageAccountCredentials_childResource#properties
   */
  readonly properties: StorageAccountCredentialProperties;

  /**
   * @schema #/definitions/managers_storageAccountCredentials_childResource#type
   */
  readonly type: ManagersStorageAccountCredentialsChildResourceType;

}

/**
 * Microsoft.StorSimple/managers/storageDomains
 *
 * @schema #/definitions/managers_storageDomains_childResource
 */
export interface ManagersStorageDomainsChildResource {
  /**
   * @schema #/definitions/managers_storageDomains_childResource#apiVersion
   */
  readonly apiVersion: ManagersStorageDomainsChildResourceApiVersion;

  /**
   * The storage domain name.
   *
   * @schema #/definitions/managers_storageDomains_childResource#name
   */
  readonly name: string;

  /**
   * The storage domain properties.
   *
   * @schema #/definitions/managers_storageDomains_childResource#properties
   */
  readonly properties: StorageDomainProperties;

  /**
   * @schema #/definitions/managers_storageDomains_childResource#type
   */
  readonly type: ManagersStorageDomainsChildResourceType;

}

export enum RawCertificateDataAuthType {
  INVALID = 'Invalid',
  ACCESS_CONTROL_SERVICE = 'AccessControlService',
  AZURE_ACTIVE_DIRECTORY = 'AzureActiveDirectory',
}

export enum AlertSettingsPropertiesEmailNotification {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum AlertSettingsPropertiesNotificationToServiceOwners {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * The Time.
 *
 * @schema #/definitions/Time
 */
export interface Time {
  /**
   * The hour.
   *
   * @schema #/definitions/Time#hour
   */
  readonly hour: number;

  /**
   * The minute.
   *
   * @schema #/definitions/Time#minute
   */
  readonly minute: number;

}

/**
 * This class can be used as the Type for any secret entity represented as Password, CertThumbprint, Algorithm. This class is intended to be used when the secret is encrypted with an asymmetric key pair. The encryptionAlgorithm field is mainly for future usage to potentially allow different entities encrypted using different algorithms.
 *
 * @schema #/definitions/AsymmetricEncryptedSecret
 */
export interface AsymmetricEncryptedSecret {
  /**
   * Algorithm used to encrypt "Value".
   *
   * @schema #/definitions/AsymmetricEncryptedSecret#encryptionAlgorithm
   */
  readonly encryptionAlgorithm: AsymmetricEncryptedSecretEncryptionAlgorithm;

  /**
   * Thumbprint certificate that was used to encrypt "Value"
   *
   * @schema #/definitions/AsymmetricEncryptedSecret#encryptionCertificateThumbprint
   */
  readonly encryptionCertificateThumbprint?: string;

  /**
   * The value of the secret itself. If the secret is in plaintext then EncryptionAlgorithm will be none and EncryptionCertThumbprint will be null.
   *
   * @schema #/definitions/AsymmetricEncryptedSecret#value
   */
  readonly value: string;

}

export enum ManagersDevicesFileserversSharesChildResourceApiVersion {
  "ManagersDevicesFileserversSharesChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersDevicesFileserversSharesChildResourceType {
  SHARES = 'shares',
}

export enum FileSharePropertiesDataPolicy {
  INVALID = 'Invalid',
  LOCAL = 'Local',
  TIERED = 'Tiered',
  CLOUD = 'Cloud',
}

export enum FileSharePropertiesMonitoringStatus {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum FileSharePropertiesShareStatus {
  ONLINE = 'Online',
  OFFLINE = 'Offline',
}

export enum ManagersDevicesIscsiserversDisksChildResourceApiVersion {
  "ManagersDevicesIscsiserversDisksChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersDevicesIscsiserversDisksChildResourceType {
  DISKS = 'disks',
}

export enum IscsiDiskPropertiesDataPolicy {
  INVALID = 'Invalid',
  LOCAL = 'Local',
  TIERED = 'Tiered',
  CLOUD = 'Cloud',
}

export enum IscsiDiskPropertiesDiskStatus {
  ONLINE = 'Online',
  OFFLINE = 'Offline',
}

export enum IscsiDiskPropertiesMonitoringStatus {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum StorageAccountCredentialPropertiesCloudType {
  AZURE = 'Azure',
  "StorageAccountCredentialPropertiesCloudType_S3" = 'S3',
  "StorageAccountCredentialPropertiesCloudType_S3_RRS" = 'S3_RRS',
  OPEN_STACK = 'OpenStack',
  HP = 'HP',
}

export enum StorageAccountCredentialPropertiesEnableSsl {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum StorageDomainPropertiesEncryptionStatus {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

export enum ManagerIntrinsicSettingsType {
  "ManagerIntrinsicSettingsType_GARDA_V1" = 'GardaV1',
  "ManagerIntrinsicSettingsType_HELSINKI_V1" = 'HelsinkiV1',
}

export enum ManagerSkuName {
  STANDARD = 'Standard',
}

export enum ManagersCertificatesChildResourceApiVersion {
  "ManagersCertificatesChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersCertificatesChildResourceType {
  CERTIFICATES = 'certificates',
}

export enum ManagersExtendedInformationChildResourceApiVersion {
  "ManagersExtendedInformationChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersExtendedInformationChildResourceName {
  VAULT_EXTENDED_INFO = 'vaultExtendedInfo',
}

export enum ManagersExtendedInformationChildResourceType {
  EXTENDED_INFORMATION = 'extendedInformation',
}

export enum ManagersAccessControlRecordsChildResourceApiVersion {
  "ManagersAccessControlRecordsChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersAccessControlRecordsChildResourceType {
  ACCESS_CONTROL_RECORDS = 'accessControlRecords',
}

export enum ManagersStorageAccountCredentialsChildResourceApiVersion {
  "ManagersStorageAccountCredentialsChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersStorageAccountCredentialsChildResourceType {
  STORAGE_ACCOUNT_CREDENTIALS = 'storageAccountCredentials',
}

export enum ManagersStorageDomainsChildResourceApiVersion {
  "ManagersStorageDomainsChildResourceApiVersion_2016_10_01" = '2016-10-01',
}

export enum ManagersStorageDomainsChildResourceType {
  STORAGE_DOMAINS = 'storageDomains',
}

export enum AsymmetricEncryptedSecretEncryptionAlgorithm {
  NONE = 'None',
  "AsymmetricEncryptedSecretEncryptionAlgorithm_AES256" = 'AES256',
  "AsymmetricEncryptedSecretEncryptionAlgorithm_RSAES_PKCS1_V_1_5" = 'RSAES_PKCS1_v_1_5',
}

