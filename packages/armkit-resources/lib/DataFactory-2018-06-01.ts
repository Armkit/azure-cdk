// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.DataFactory/factories
 *
 * @schema Microsoft.DataFactory.factories
 */
export class Factories extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/dataflows
 *
 * @schema Microsoft.DataFactory.factories_dataflows
 */
export class FactoriesDataflows extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_dataflows" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesDataflowsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_dataflows',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/datasets
 *
 * @schema Microsoft.DataFactory.factories_datasets
 */
export class FactoriesDatasets extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_datasets" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesDatasetsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_datasets',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/integrationRuntimes
 *
 * @schema Microsoft.DataFactory.factories_integrationRuntimes
 */
export class FactoriesIntegrationRuntimes extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_integrationRuntimes" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesIntegrationRuntimesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_integrationRuntimes',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/linkedservices
 *
 * @schema Microsoft.DataFactory.factories_linkedservices
 */
export class FactoriesLinkedservices extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_linkedservices" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesLinkedservicesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_linkedservices',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks
 *
 * @schema Microsoft.DataFactory.factories_managedVirtualNetworks
 */
export class FactoriesManagedVirtualNetworks extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_managedVirtualNetworks" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesManagedVirtualNetworksOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_managedVirtualNetworks',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints
 *
 * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints
 */
export class FactoriesManagedVirtualNetworksManagedPrivateEndpoints extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesManagedVirtualNetworksManagedPrivateEndpointsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_managedVirtualNetworks_managedPrivateEndpoints',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/pipelines
 *
 * @schema Microsoft.DataFactory.factories_pipelines
 */
export class FactoriesPipelines extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_pipelines" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesPipelinesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_pipelines',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/privateEndpointConnections
 *
 * @schema Microsoft.DataFactory.factories_privateEndpointConnections
 */
export class FactoriesPrivateEndpointConnections extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_privateEndpointConnections" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesPrivateEndpointConnectionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_privateEndpointConnections',
    });
  }
}

/**
 * Microsoft.DataFactory/factories/triggers
 *
 * @schema Microsoft.DataFactory.factories_triggers
 */
export class FactoriesTriggers extends ArmResource {
  /**
   * Defines a "Microsoft.DataFactory.factories_triggers" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: FactoriesTriggersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'factories_triggers',
    });
  }
}

/**
 * Microsoft.DataFactory/factories
 *
 * @schema Microsoft.DataFactory.factories
 */
export interface FactoriesOptions {
  /**
   * @schema Microsoft.DataFactory.factories#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesApiVersion;

  /**
   * Identity properties of the factory resource.
   *
   * @schema Microsoft.DataFactory.factories#identity
   */
  readonly identity?: FactoryIdentity;

  /**
   * The resource location.
   *
   * @schema Microsoft.DataFactory.factories#location
   */
  readonly location?: string;

  /**
   * The factory name.
   *
   * @schema Microsoft.DataFactory.factories#name
   */
  readonly name: MicrosoftDataFactoryFactoriesNamePattern;

  /**
   * Factory resource properties.
   *
   * @schema Microsoft.DataFactory.factories#properties
   */
  readonly properties: FactoryProperties;

  /**
   * @schema Microsoft.DataFactory.factories#resources
   */
  readonly resources?: MicrosoftDataFactoryFactoriesResources[];

  /**
   * The resource tags.
   *
   * @schema Microsoft.DataFactory.factories#tags
   */
  readonly tags?: MicrosoftDataFactoryFactoriesTags;

  /**
   * @schema Microsoft.DataFactory.factories#type
   */
  readonly type: MicrosoftDataFactoryFactoriesType;

}

/**
 * Microsoft.DataFactory/factories/dataflows
 *
 * @schema Microsoft.DataFactory.factories_dataflows
 */
export interface FactoriesDataflowsOptions {
  /**
   * @schema Microsoft.DataFactory.factories_dataflows#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesDataflowsApiVersion;

  /**
   * The data flow name.
   *
   * @schema Microsoft.DataFactory.factories_dataflows#name
   */
  readonly name: MicrosoftDataFactoryFactoriesDataflowsNamePattern;

  /**
   * Azure Data Factory nested object which contains a flow with data movements and transformations.
   *
   * @schema Microsoft.DataFactory.factories_dataflows#properties
   */
  readonly properties: MappingDataFlow;

  /**
   * @schema Microsoft.DataFactory.factories_dataflows#type
   */
  readonly type: MicrosoftDataFactoryFactoriesDataflowsType;

}

/**
 * Microsoft.DataFactory/factories/datasets
 *
 * @schema Microsoft.DataFactory.factories_datasets
 */
export interface FactoriesDatasetsOptions {
  /**
   * @schema Microsoft.DataFactory.factories_datasets#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesDatasetsApiVersion;

  /**
   * The dataset name.
   *
   * @schema Microsoft.DataFactory.factories_datasets#name
   */
  readonly name: MicrosoftDataFactoryFactoriesDatasetsNamePattern;

  /**
   * The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
   *
   * @schema Microsoft.DataFactory.factories_datasets#properties
   */
  readonly properties: Dataset;

  /**
   * @schema Microsoft.DataFactory.factories_datasets#type
   */
  readonly type: MicrosoftDataFactoryFactoriesDatasetsType;

}

/**
 * Microsoft.DataFactory/factories/integrationRuntimes
 *
 * @schema Microsoft.DataFactory.factories_integrationRuntimes
 */
export interface FactoriesIntegrationRuntimesOptions {
  /**
   * @schema Microsoft.DataFactory.factories_integrationRuntimes#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesIntegrationRuntimesApiVersion;

  /**
   * The integration runtime name.
   *
   * @schema Microsoft.DataFactory.factories_integrationRuntimes#name
   */
  readonly name: MicrosoftDataFactoryFactoriesIntegrationRuntimesNamePattern;

  /**
   * Azure Data Factory nested object which serves as a compute resource for activities.
   *
   * @schema Microsoft.DataFactory.factories_integrationRuntimes#properties
   */
  readonly properties: IntegrationRuntime;

  /**
   * @schema Microsoft.DataFactory.factories_integrationRuntimes#type
   */
  readonly type: MicrosoftDataFactoryFactoriesIntegrationRuntimesType;

}

/**
 * Microsoft.DataFactory/factories/linkedservices
 *
 * @schema Microsoft.DataFactory.factories_linkedservices
 */
export interface FactoriesLinkedservicesOptions {
  /**
   * @schema Microsoft.DataFactory.factories_linkedservices#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesLinkedservicesApiVersion;

  /**
   * The linked service name.
   *
   * @schema Microsoft.DataFactory.factories_linkedservices#name
   */
  readonly name: MicrosoftDataFactoryFactoriesLinkedservicesNamePattern;

  /**
   * The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
   *
   * @schema Microsoft.DataFactory.factories_linkedservices#properties
   */
  readonly properties: LinkedService;

  /**
   * @schema Microsoft.DataFactory.factories_linkedservices#type
   */
  readonly type: MicrosoftDataFactoryFactoriesLinkedservicesType;

}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks
 *
 * @schema Microsoft.DataFactory.factories_managedVirtualNetworks
 */
export interface FactoriesManagedVirtualNetworksOptions {
  /**
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesManagedVirtualNetworksApiVersion;

  /**
   * Managed virtual network name
   *
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks#name
   */
  readonly name: MicrosoftDataFactoryFactoriesManagedVirtualNetworksNamePattern;

  /**
   * A managed Virtual Network associated with the Azure Data Factory
   *
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks#properties
   */
  readonly properties: ManagedVirtualNetwork;

  /**
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks#resources
   */
  readonly resources?: FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResource[];

  /**
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks#type
   */
  readonly type: MicrosoftDataFactoryFactoriesManagedVirtualNetworksType;

}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints
 *
 * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints
 */
export interface FactoriesManagedVirtualNetworksManagedPrivateEndpointsOptions {
  /**
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsApiVersion;

  /**
   * Managed private endpoint name
   *
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints#name
   */
  readonly name: MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsNamePattern;

  /**
   * Properties of a managed private endpoint
   *
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints#properties
   */
  readonly properties: ManagedPrivateEndpoint;

  /**
   * @schema Microsoft.DataFactory.factories_managedVirtualNetworks_managedPrivateEndpoints#type
   */
  readonly type: MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsType;

}

/**
 * Microsoft.DataFactory/factories/pipelines
 *
 * @schema Microsoft.DataFactory.factories_pipelines
 */
export interface FactoriesPipelinesOptions {
  /**
   * @schema Microsoft.DataFactory.factories_pipelines#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesPipelinesApiVersion;

  /**
   * The pipeline name.
   *
   * @schema Microsoft.DataFactory.factories_pipelines#name
   */
  readonly name: MicrosoftDataFactoryFactoriesPipelinesNamePattern;

  /**
   * A data factory pipeline.
   *
   * @schema Microsoft.DataFactory.factories_pipelines#properties
   */
  readonly properties: Pipeline;

  /**
   * @schema Microsoft.DataFactory.factories_pipelines#type
   */
  readonly type: MicrosoftDataFactoryFactoriesPipelinesType;

}

/**
 * Microsoft.DataFactory/factories/privateEndpointConnections
 *
 * @schema Microsoft.DataFactory.factories_privateEndpointConnections
 */
export interface FactoriesPrivateEndpointConnectionsOptions {
  /**
   * @schema Microsoft.DataFactory.factories_privateEndpointConnections#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsApiVersion;

  /**
   * The private endpoint connection name.
   *
   * @schema Microsoft.DataFactory.factories_privateEndpointConnections#name
   */
  readonly name: string;

  /**
   * A request to approve or reject a private endpoint connection
   *
   * @schema Microsoft.DataFactory.factories_privateEndpointConnections#properties
   */
  readonly properties: PrivateLinkConnectionApprovalRequest;

  /**
   * @schema Microsoft.DataFactory.factories_privateEndpointConnections#type
   */
  readonly type: MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsType;

}

/**
 * Microsoft.DataFactory/factories/triggers
 *
 * @schema Microsoft.DataFactory.factories_triggers
 */
export interface FactoriesTriggersOptions {
  /**
   * @schema Microsoft.DataFactory.factories_triggers#apiVersion
   */
  readonly apiVersion?: MicrosoftDataFactoryFactoriesTriggersApiVersion;

  /**
   * The trigger name.
   *
   * @schema Microsoft.DataFactory.factories_triggers#name
   */
  readonly name: MicrosoftDataFactoryFactoriesTriggersNamePattern;

  /**
   * Azure data factory nested object which contains information about creating pipeline run
   *
   * @schema Microsoft.DataFactory.factories_triggers#properties
   */
  readonly properties: Trigger;

  /**
   * @schema Microsoft.DataFactory.factories_triggers#type
   */
  readonly type: MicrosoftDataFactoryFactoriesTriggersType;

}

export enum MicrosoftDataFactoryFactoriesApiVersion {
  "MicrosoftDataFactoryFactoriesApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * Identity properties of the factory resource.
 *
 * @schema #/definitions/FactoryIdentity
 */
export interface FactoryIdentity {
  /**
   * The identity type.
   *
   * @schema #/definitions/FactoryIdentity#type
   */
  readonly type: FactoryIdentityType;

  /**
   * Definition of all user assigned identities for a factory.
   *
   * @schema #/definitions/FactoryIdentity#userAssignedIdentities
   */
  readonly userAssignedIdentities?: FactoryIdentityUserAssignedIdentities;

}

/**
 * @schema MicrosoftDataFactoryFactoriesName
 */
export class MicrosoftDataFactoryFactoriesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Factory resource properties.
 *
 * @schema #/definitions/FactoryProperties
 */
export interface FactoryProperties {
  /**
   * Definition of CMK for the factory.
   *
   * @schema #/definitions/FactoryProperties#encryption
   */
  readonly encryption?: EncryptionConfiguration;

  /**
   * Definition of all parameters for an entity.
   *
   * @schema #/definitions/FactoryProperties#globalParameters
   */
  readonly globalParameters?: FactoryPropertiesGlobalParameters;

  /**
   * Whether or not public network access is allowed for the data factory.
   *
   * @schema #/definitions/FactoryProperties#publicNetworkAccess
   */
  readonly publicNetworkAccess?: FactoryPropertiesPublicNetworkAccess;

  /**
   * Factory's git repo information.
   *
   * @schema #/definitions/FactoryProperties#repoConfiguration
   */
  readonly repoConfiguration?: FactoryRepoConfiguration;

}

/**
 * @schema MicrosoftDataFactoryFactoriesResources
 */
export class MicrosoftDataFactoryFactoriesResources {
  public static fromFactoriesIntegrationRuntimesChildResource(value: FactoriesIntegrationRuntimesChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesLinkedservicesChildResource(value: FactoriesLinkedservicesChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesDatasetsChildResource(value: FactoriesDatasetsChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesPipelinesChildResource(value: FactoriesPipelinesChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesTriggersChildResource(value: FactoriesTriggersChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesDataflowsChildResource(value: FactoriesDataflowsChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesManagedVirtualNetworksChildResource(value: FactoriesManagedVirtualNetworksChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  public static fromFactoriesPrivateEndpointConnectionsChildResource(value: FactoriesPrivateEndpointConnectionsChildResource): MicrosoftDataFactoryFactoriesResources {
    return new MicrosoftDataFactoryFactoriesResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema MicrosoftDataFactoryFactoriesTags
 */
export interface MicrosoftDataFactoryFactoriesTags {
}

export enum MicrosoftDataFactoryFactoriesType {
  "MicrosoftDataFactoryFactoriesType_MICROSOFT_DATA_FACTORY_FACTORIES" = 'Microsoft.DataFactory/factories',
}

export enum MicrosoftDataFactoryFactoriesDataflowsApiVersion {
  "MicrosoftDataFactoryFactoriesDataflowsApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesDataflowsName
 */
export class MicrosoftDataFactoryFactoriesDataflowsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Mapping data flow.
 *
 * @schema #/definitions/MappingDataFlow
 */
export interface MappingDataFlow {
  /**
   * @schema #/definitions/MappingDataFlow#type
   */
  readonly type: MappingDataFlowType;

  /**
   * Mapping data flow type properties.
   *
   * @schema #/definitions/MappingDataFlow#typeProperties
   */
  readonly typeProperties?: MappingDataFlowTypeProperties;

}

export enum MicrosoftDataFactoryFactoriesDataflowsType {
  "MicrosoftDataFactoryFactoriesDataflowsType_MICROSOFT_DATA_FACTORY_FACTORIES_DATAFLOWS" = 'Microsoft.DataFactory/factories/dataflows',
}

export enum MicrosoftDataFactoryFactoriesDatasetsApiVersion {
  "MicrosoftDataFactoryFactoriesDatasetsApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesDatasetsName
 */
export class MicrosoftDataFactoryFactoriesDatasetsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
 *
 * @schema #/definitions/Dataset
 */
export class Dataset {
  public static fromAmazonS3Dataset(value: AmazonS3Dataset): Dataset {
    return new Dataset(value);
  }
  public static fromAvroDataset(value: AvroDataset): Dataset {
    return new Dataset(value);
  }
  public static fromExcelDataset(value: ExcelDataset): Dataset {
    return new Dataset(value);
  }
  public static fromParquetDataset(value: ParquetDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDelimitedTextDataset(value: DelimitedTextDataset): Dataset {
    return new Dataset(value);
  }
  public static fromJsonDataset(value: JsonDataset): Dataset {
    return new Dataset(value);
  }
  public static fromXmlDataset(value: XmlDataset): Dataset {
    return new Dataset(value);
  }
  public static fromOrcDataset(value: OrcDataset): Dataset {
    return new Dataset(value);
  }
  public static fromBinaryDataset(value: BinaryDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureBlobDataset(value: AzureBlobDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureTableDataset(value: AzureTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureSqlTableDataset(value: AzureSqlTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureSqlMiTableDataset(value: AzureSqlMiTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureSqlDwTableDataset(value: AzureSqlDwTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCassandraTableDataset(value: CassandraTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCustomDataset(value: CustomDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCosmosDbSqlApiCollectionDataset(value: CosmosDbSqlApiCollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDocumentDbCollectionDataset(value: DocumentDbCollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDynamicsEntityDataset(value: DynamicsEntityDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDynamicsCrmEntityDataset(value: DynamicsCrmEntityDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCommonDataServiceForAppsEntityDataset(value: CommonDataServiceForAppsEntityDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureDataLakeStoreDataset(value: AzureDataLakeStoreDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureBlobFsDataset(value: AzureBlobFsDataset): Dataset {
    return new Dataset(value);
  }
  public static fromOffice365Dataset(value: Office365Dataset): Dataset {
    return new Dataset(value);
  }
  public static fromFileShareDataset(value: FileShareDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMongoDbCollectionDataset(value: MongoDbCollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMongoDbAtlasCollectionDataset(value: MongoDbAtlasCollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMongoDbV2CollectionDataset(value: MongoDbV2CollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCosmosDbMongoDbApiCollectionDataset(value: CosmosDbMongoDbApiCollectionDataset): Dataset {
    return new Dataset(value);
  }
  public static fromODataResourceDataset(value: ODataResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromOracleTableDataset(value: OracleTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromTeradataTableDataset(value: TeradataTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureMySqlTableDataset(value: AzureMySqlTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAmazonRedshiftTableDataset(value: AmazonRedshiftTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDb2TableDataset(value: Db2TableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromRelationalTableDataset(value: RelationalTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromInformixTableDataset(value: InformixTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromOdbcTableDataset(value: OdbcTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMySqlTableDataset(value: MySqlTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromPostgreSqlTableDataset(value: PostgreSqlTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMicrosoftAccessTableDataset(value: MicrosoftAccessTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSalesforceObjectDataset(value: SalesforceObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSalesforceServiceCloudObjectDataset(value: SalesforceServiceCloudObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSybaseTableDataset(value: SybaseTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapBwCubeDataset(value: SapBwCubeDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapCloudForCustomerResourceDataset(value: SapCloudForCustomerResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapEccResourceDataset(value: SapEccResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapHanaTableDataset(value: SapHanaTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapOpenHubTableDataset(value: SapOpenHubTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSqlServerTableDataset(value: SqlServerTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromRestResourceDataset(value: RestResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSapTableResourceDataset(value: SapTableResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromWebTableDataset(value: WebTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureSearchIndexDataset(value: AzureSearchIndexDataset): Dataset {
    return new Dataset(value);
  }
  public static fromHttpDataset(value: HttpDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAmazonMwsObjectDataset(value: AmazonMwsObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzurePostgreSqlTableDataset(value: AzurePostgreSqlTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromConcurObjectDataset(value: ConcurObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromCouchbaseTableDataset(value: CouchbaseTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDrillTableDataset(value: DrillTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromEloquaObjectDataset(value: EloquaObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromGoogleBigQueryObjectDataset(value: GoogleBigQueryObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromGreenplumTableDataset(value: GreenplumTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromHBaseObjectDataset(value: HBaseObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromHiveObjectDataset(value: HiveObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromHubspotObjectDataset(value: HubspotObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromImpalaObjectDataset(value: ImpalaObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromJiraObjectDataset(value: JiraObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMagentoObjectDataset(value: MagentoObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMariaDbTableDataset(value: MariaDbTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureMariaDbTableDataset(value: AzureMariaDbTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromMarketoObjectDataset(value: MarketoObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromPaypalObjectDataset(value: PaypalObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromPhoenixObjectDataset(value: PhoenixObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromPrestoObjectDataset(value: PrestoObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromQuickBooksObjectDataset(value: QuickBooksObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromServiceNowObjectDataset(value: ServiceNowObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromShopifyObjectDataset(value: ShopifyObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSparkObjectDataset(value: SparkObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSquareObjectDataset(value: SquareObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromXeroObjectDataset(value: XeroObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromZohoObjectDataset(value: ZohoObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromNetezzaTableDataset(value: NetezzaTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromVerticaTableDataset(value: VerticaTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSalesforceMarketingCloudObjectDataset(value: SalesforceMarketingCloudObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromResponsysObjectDataset(value: ResponsysObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromDynamicsAxResourceDataset(value: DynamicsAxResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromOracleServiceCloudObjectDataset(value: OracleServiceCloudObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureDataExplorerTableDataset(value: AzureDataExplorerTableDataset): Dataset {
    return new Dataset(value);
  }
  public static fromGoogleAdWordsObjectDataset(value: GoogleAdWordsObjectDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSnowflakeDataset(value: SnowflakeDataset): Dataset {
    return new Dataset(value);
  }
  public static fromSharePointOnlineListResourceDataset(value: SharePointOnlineListResourceDataset): Dataset {
    return new Dataset(value);
  }
  public static fromAzureDatabricksDeltaLakeDataset(value: AzureDatabricksDeltaLakeDataset): Dataset {
    return new Dataset(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftDataFactoryFactoriesDatasetsType {
  "MicrosoftDataFactoryFactoriesDatasetsType_MICROSOFT_DATA_FACTORY_FACTORIES_DATASETS" = 'Microsoft.DataFactory/factories/datasets',
}

export enum MicrosoftDataFactoryFactoriesIntegrationRuntimesApiVersion {
  "MicrosoftDataFactoryFactoriesIntegrationRuntimesApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesIntegrationRuntimesName
 */
export class MicrosoftDataFactoryFactoriesIntegrationRuntimesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Azure Data Factory nested object which serves as a compute resource for activities.
 *
 * @schema #/definitions/IntegrationRuntime
 */
export class IntegrationRuntime {
  public static fromManagedIntegrationRuntime(value: ManagedIntegrationRuntime): IntegrationRuntime {
    return new IntegrationRuntime(value);
  }
  public static fromSelfHostedIntegrationRuntime(value: SelfHostedIntegrationRuntime): IntegrationRuntime {
    return new IntegrationRuntime(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftDataFactoryFactoriesIntegrationRuntimesType {
  "MicrosoftDataFactoryFactoriesIntegrationRuntimesType_MICROSOFT_DATA_FACTORY_FACTORIES_INTEGRATION_RUNTIMES" = 'Microsoft.DataFactory/factories/integrationRuntimes',
}

export enum MicrosoftDataFactoryFactoriesLinkedservicesApiVersion {
  "MicrosoftDataFactoryFactoriesLinkedservicesApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesLinkedservicesName
 */
export class MicrosoftDataFactoryFactoriesLinkedservicesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
 *
 * @schema #/definitions/LinkedService
 */
export class LinkedService {
  public static fromAzureStorageLinkedService(value: AzureStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureBlobStorageLinkedService(value: AzureBlobStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureTableStorageLinkedService(value: AzureTableStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureSqlDwLinkedService(value: AzureSqlDwLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSqlServerLinkedService(value: SqlServerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureSqlDatabaseLinkedService(value: AzureSqlDatabaseLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureSqlMiLinkedService(value: AzureSqlMiLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureBatchLinkedService(value: AzureBatchLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureKeyVaultLinkedService(value: AzureKeyVaultLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCosmosDbLinkedService(value: CosmosDbLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromDynamicsLinkedService(value: DynamicsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromDynamicsCrmLinkedService(value: DynamicsCrmLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCommonDataServiceForAppsLinkedService(value: CommonDataServiceForAppsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHdInsightLinkedService(value: HdInsightLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromFileServerLinkedService(value: FileServerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureFileStorageLinkedService(value: AzureFileStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAmazonS3CompatibleLinkedService(value: AmazonS3CompatibleLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromOracleCloudStorageLinkedService(value: OracleCloudStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromGoogleCloudStorageLinkedService(value: GoogleCloudStorageLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromOracleLinkedService(value: OracleLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureMySqlLinkedService(value: AzureMySqlLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMySqlLinkedService(value: MySqlLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromPostgreSqlLinkedService(value: PostgreSqlLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSybaseLinkedService(value: SybaseLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromDb2LinkedService(value: Db2LinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromTeradataLinkedService(value: TeradataLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureMlLinkedService(value: AzureMlLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureMlServiceLinkedService(value: AzureMlServiceLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromOdbcLinkedService(value: OdbcLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromInformixLinkedService(value: InformixLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMicrosoftAccessLinkedService(value: MicrosoftAccessLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHdfsLinkedService(value: HdfsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromODataLinkedService(value: ODataLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromWebLinkedService(value: WebLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCassandraLinkedService(value: CassandraLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMongoDbLinkedService(value: MongoDbLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMongoDbAtlasLinkedService(value: MongoDbAtlasLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMongoDbV2LinkedService(value: MongoDbV2LinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCosmosDbMongoDbApiLinkedService(value: CosmosDbMongoDbApiLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureDataLakeStoreLinkedService(value: AzureDataLakeStoreLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureBlobFsLinkedService(value: AzureBlobFsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromOffice365LinkedService(value: Office365LinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSalesforceLinkedService(value: SalesforceLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSalesforceServiceCloudLinkedService(value: SalesforceServiceCloudLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapCloudForCustomerLinkedService(value: SapCloudForCustomerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapEccLinkedService(value: SapEccLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapOpenHubLinkedService(value: SapOpenHubLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromRestServiceLinkedService(value: RestServiceLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAmazonS3LinkedService(value: AmazonS3LinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAmazonRedshiftLinkedService(value: AmazonRedshiftLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCustomDataSourceLinkedService(value: CustomDataSourceLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureSearchLinkedService(value: AzureSearchLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHttpLinkedService(value: HttpLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromFtpServerLinkedService(value: FtpServerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSftpServerLinkedService(value: SftpServerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapBwLinkedService(value: SapBwLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapHanaLinkedService(value: SapHanaLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAmazonMwsLinkedService(value: AmazonMwsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzurePostgreSqlLinkedService(value: AzurePostgreSqlLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromConcurLinkedService(value: ConcurLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromCouchbaseLinkedService(value: CouchbaseLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromDrillLinkedService(value: DrillLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromEloquaLinkedService(value: EloquaLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromGoogleBigQueryLinkedService(value: GoogleBigQueryLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromGreenplumLinkedService(value: GreenplumLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHBaseLinkedService(value: HBaseLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHiveLinkedService(value: HiveLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHubspotLinkedService(value: HubspotLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromImpalaLinkedService(value: ImpalaLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromJiraLinkedService(value: JiraLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMagentoLinkedService(value: MagentoLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMariaDbLinkedService(value: MariaDbLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureMariaDbLinkedService(value: AzureMariaDbLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromMarketoLinkedService(value: MarketoLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromPaypalLinkedService(value: PaypalLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromPhoenixLinkedService(value: PhoenixLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromPrestoLinkedService(value: PrestoLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromQuickBooksLinkedService(value: QuickBooksLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromServiceNowLinkedService(value: ServiceNowLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromShopifyLinkedService(value: ShopifyLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSparkLinkedService(value: SparkLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSquareLinkedService(value: SquareLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromXeroLinkedService(value: XeroLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromZohoLinkedService(value: ZohoLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromVerticaLinkedService(value: VerticaLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromNetezzaLinkedService(value: NetezzaLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSalesforceMarketingCloudLinkedService(value: SalesforceMarketingCloudLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromHdInsightOnDemandLinkedService(value: HdInsightOnDemandLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureDataLakeAnalyticsLinkedService(value: AzureDataLakeAnalyticsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureDatabricksLinkedService(value: AzureDatabricksLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureDatabricksDeltaLakeLinkedService(value: AzureDatabricksDeltaLakeLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromResponsysLinkedService(value: ResponsysLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromDynamicsAxLinkedService(value: DynamicsAxLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromOracleServiceCloudLinkedService(value: OracleServiceCloudLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromGoogleAdWordsLinkedService(value: GoogleAdWordsLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSapTableLinkedService(value: SapTableLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureDataExplorerLinkedService(value: AzureDataExplorerLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromAzureFunctionLinkedService(value: AzureFunctionLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSnowflakeLinkedService(value: SnowflakeLinkedService): LinkedService {
    return new LinkedService(value);
  }
  public static fromSharePointOnlineListLinkedService(value: SharePointOnlineListLinkedService): LinkedService {
    return new LinkedService(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftDataFactoryFactoriesLinkedservicesType {
  "MicrosoftDataFactoryFactoriesLinkedservicesType_MICROSOFT_DATA_FACTORY_FACTORIES_LINKEDSERVICES" = 'Microsoft.DataFactory/factories/linkedservices',
}

export enum MicrosoftDataFactoryFactoriesManagedVirtualNetworksApiVersion {
  "MicrosoftDataFactoryFactoriesManagedVirtualNetworksApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesManagedVirtualNetworksName
 */
export class MicrosoftDataFactoryFactoriesManagedVirtualNetworksNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * A managed Virtual Network associated with the Azure Data Factory
 *
 * @schema #/definitions/ManagedVirtualNetwork
 */
export interface ManagedVirtualNetwork {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/ManagedVirtualNetwork#additionalProperties
   */
  readonly additionalProperties?: ManagedVirtualNetworkAdditionalProperties;

}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints
 *
 * @schema #/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource
 */
export interface FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResource {
  /**
   * @schema #/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource#apiVersion
   */
  readonly apiVersion: FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceApiVersion;

  /**
   * Managed private endpoint name
   *
   * @schema #/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource#name
   */
  readonly name: FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceNamePattern;

  /**
   * Properties of a managed private endpoint
   *
   * @schema #/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource#properties
   */
  readonly properties: ManagedPrivateEndpoint;

  /**
   * @schema #/definitions/factories_managedVirtualNetworks_managedPrivateEndpoints_childResource#type
   */
  readonly type: FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceType;

}

export enum MicrosoftDataFactoryFactoriesManagedVirtualNetworksType {
  "MicrosoftDataFactoryFactoriesManagedVirtualNetworksType_MICROSOFT_DATA_FACTORY_FACTORIES_MANAGED_VIRTUAL_NETWORKS" = 'Microsoft.DataFactory/factories/managedVirtualNetworks',
}

export enum MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsApiVersion {
  "MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsName
 */
export class MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties of a managed private endpoint
 *
 * @schema #/definitions/ManagedPrivateEndpoint
 */
export interface ManagedPrivateEndpoint {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/ManagedPrivateEndpoint#additionalProperties
   */
  readonly additionalProperties?: ManagedPrivateEndpointAdditionalProperties;

  /**
   * The connection state of a managed private endpoint
   *
   * @schema #/definitions/ManagedPrivateEndpoint#connectionState
   */
  readonly connectionState?: ConnectionStateProperties;

  /**
   * Fully qualified domain names
   *
   * @schema #/definitions/ManagedPrivateEndpoint#fqdns
   */
  readonly fqdns?: string[];

  /**
   * The groupId to which the managed private endpoint is created
   *
   * @schema #/definitions/ManagedPrivateEndpoint#groupId
   */
  readonly groupId?: string;

  /**
   * The ARM resource ID of the resource to which the managed private endpoint is created
   *
   * @schema #/definitions/ManagedPrivateEndpoint#privateLinkResourceId
   */
  readonly privateLinkResourceId?: string;

}

export enum MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsType {
  "MicrosoftDataFactoryFactoriesManagedVirtualNetworksManagedPrivateEndpointsType_MICROSOFT_DATA_FACTORY_FACTORIES_MANAGED_VIRTUAL_NETWORKS_MANAGED_PRIVATE_ENDPOINTS" = 'Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints',
}

export enum MicrosoftDataFactoryFactoriesPipelinesApiVersion {
  "MicrosoftDataFactoryFactoriesPipelinesApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesPipelinesName
 */
export class MicrosoftDataFactoryFactoriesPipelinesNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * A data factory pipeline.
 *
 * @schema #/definitions/Pipeline
 */
export interface Pipeline {
  /**
   * List of activities in pipeline.
   *
   * @schema #/definitions/Pipeline#activities
   */
  readonly activities?: Activity[];

  /**
   * List of tags that can be used for describing the Pipeline.
   *
   * @schema #/definitions/Pipeline#annotations
   */
  readonly annotations?: PipelineAnnotations[];

  /**
   * The max number of concurrent runs for the pipeline.
   *
   * @schema #/definitions/Pipeline#concurrency
   */
  readonly concurrency?: number;

  /**
   * The description of the pipeline.
   *
   * @schema #/definitions/Pipeline#description
   */
  readonly description?: string;

  /**
   * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
   *
   * @schema #/definitions/Pipeline#folder
   */
  readonly folder?: PipelineFolder;

  /**
   * Definition of all parameters for an entity.
   *
   * @schema #/definitions/Pipeline#parameters
   */
  readonly parameters?: PipelineParameters;

  /**
   * Pipeline Policy.
   *
   * @schema #/definitions/Pipeline#policy
   */
  readonly policy?: PipelinePolicy;

  /**
   * Dimensions emitted by Pipeline.
   *
   * @schema #/definitions/Pipeline#runDimensions
   */
  readonly runDimensions?: PipelineRunDimensions;

  /**
   * Definition of variable for a Pipeline.
   *
   * @schema #/definitions/Pipeline#variables
   */
  readonly variables?: PipelineVariables;

}

export enum MicrosoftDataFactoryFactoriesPipelinesType {
  "MicrosoftDataFactoryFactoriesPipelinesType_MICROSOFT_DATA_FACTORY_FACTORIES_PIPELINES" = 'Microsoft.DataFactory/factories/pipelines',
}

export enum MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsApiVersion {
  "MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * A request to approve or reject a private endpoint connection
 *
 * @schema #/definitions/PrivateLinkConnectionApprovalRequest
 */
export interface PrivateLinkConnectionApprovalRequest {
  /**
   * The state of a private link connection
   *
   * @schema #/definitions/PrivateLinkConnectionApprovalRequest#privateLinkServiceConnectionState
   */
  readonly privateLinkServiceConnectionState?: PrivateLinkConnectionState;

}

export enum MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsType {
  "MicrosoftDataFactoryFactoriesPrivateEndpointConnectionsType_MICROSOFT_DATA_FACTORY_FACTORIES_PRIVATE_ENDPOINT_CONNECTIONS" = 'Microsoft.DataFactory/factories/privateEndpointConnections',
}

export enum MicrosoftDataFactoryFactoriesTriggersApiVersion {
  "MicrosoftDataFactoryFactoriesTriggersApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema MicrosoftDataFactoryFactoriesTriggersName
 */
export class MicrosoftDataFactoryFactoriesTriggersNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Azure data factory nested object which contains information about creating pipeline run
 *
 * @schema #/definitions/Trigger
 */
export class Trigger {
  public static fromMultiplePipelineTrigger(value: MultiplePipelineTrigger): Trigger {
    return new Trigger(value);
  }
  public static fromTumblingWindowTrigger(value: TumblingWindowTrigger): Trigger {
    return new Trigger(value);
  }
  public static fromRerunTumblingWindowTrigger(value: RerunTumblingWindowTrigger): Trigger {
    return new Trigger(value);
  }
  public static fromChainingTrigger(value: ChainingTrigger): Trigger {
    return new Trigger(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftDataFactoryFactoriesTriggersType {
  "MicrosoftDataFactoryFactoriesTriggersType_MICROSOFT_DATA_FACTORY_FACTORIES_TRIGGERS" = 'Microsoft.DataFactory/factories/triggers',
}

export enum FactoryIdentityType {
  SYSTEM_ASSIGNED = 'SystemAssigned',
  USER_ASSIGNED = 'UserAssigned',
  "FactoryIdentityType_SYSTEM_ASSIGNED_USER_ASSIGNED" = 'SystemAssigned,UserAssigned',
}

/**
 * @schema #/definitions/factoryIdentityUserAssignedIdentities
 */
export interface FactoryIdentityUserAssignedIdentities {
}

/**
 * Definition of CMK for the factory.
 *
 * @schema #/definitions/EncryptionConfiguration
 */
export interface EncryptionConfiguration {
  /**
   * Managed Identity used for CMK.
   *
   * @schema #/definitions/EncryptionConfiguration#identity
   */
  readonly identity?: CmkIdentityDefinition;

  /**
   * The name of the key in Azure Key Vault to use as Customer Managed Key.
   *
   * @schema #/definitions/EncryptionConfiguration#keyName
   */
  readonly keyName: string;

  /**
   * The version of the key used for CMK. If not provided, latest version will be used.
   *
   * @schema #/definitions/EncryptionConfiguration#keyVersion
   */
  readonly keyVersion?: string;

  /**
   * The url of the Azure Key Vault used for CMK.
   *
   * @schema #/definitions/EncryptionConfiguration#vaultBaseUrl
   */
  readonly vaultBaseUrl: string;

}

/**
 * @schema #/definitions/factoryPropertiesGlobalParameters
 */
export interface FactoryPropertiesGlobalParameters {
}

export enum FactoryPropertiesPublicNetworkAccess {
  ENABLED = 'Enabled',
  DISABLED = 'Disabled',
}

/**
 * Factory's git repo information.
 *
 * @schema #/definitions/FactoryRepoConfiguration
 */
export class FactoryRepoConfiguration {
  public static fromFactoryVstsConfiguration(value: FactoryVstsConfiguration): FactoryRepoConfiguration {
    return new FactoryRepoConfiguration(value);
  }
  public static fromFactoryGitHubConfiguration(value: FactoryGitHubConfiguration): FactoryRepoConfiguration {
    return new FactoryRepoConfiguration(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Microsoft.DataFactory/factories/integrationRuntimes
 *
 * @schema #/definitions/factories_integrationRuntimes_childResource
 */
export interface FactoriesIntegrationRuntimesChildResource {
  /**
   * @schema #/definitions/factories_integrationRuntimes_childResource#apiVersion
   */
  readonly apiVersion: FactoriesIntegrationRuntimesChildResourceApiVersion;

  /**
   * The integration runtime name.
   *
   * @schema #/definitions/factories_integrationRuntimes_childResource#name
   */
  readonly name: FactoriesIntegrationRuntimesChildResourceNamePattern;

  /**
   * Azure Data Factory nested object which serves as a compute resource for activities.
   *
   * @schema #/definitions/factories_integrationRuntimes_childResource#properties
   */
  readonly properties: IntegrationRuntime;

  /**
   * @schema #/definitions/factories_integrationRuntimes_childResource#type
   */
  readonly type: FactoriesIntegrationRuntimesChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/linkedservices
 *
 * @schema #/definitions/factories_linkedservices_childResource
 */
export interface FactoriesLinkedservicesChildResource {
  /**
   * @schema #/definitions/factories_linkedservices_childResource#apiVersion
   */
  readonly apiVersion: FactoriesLinkedservicesChildResourceApiVersion;

  /**
   * The linked service name.
   *
   * @schema #/definitions/factories_linkedservices_childResource#name
   */
  readonly name: FactoriesLinkedservicesChildResourceNamePattern;

  /**
   * The Azure Data Factory nested object which contains the information and credential which can be used to connect with related store or compute resource.
   *
   * @schema #/definitions/factories_linkedservices_childResource#properties
   */
  readonly properties: LinkedService;

  /**
   * @schema #/definitions/factories_linkedservices_childResource#type
   */
  readonly type: FactoriesLinkedservicesChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/datasets
 *
 * @schema #/definitions/factories_datasets_childResource
 */
export interface FactoriesDatasetsChildResource {
  /**
   * @schema #/definitions/factories_datasets_childResource#apiVersion
   */
  readonly apiVersion: FactoriesDatasetsChildResourceApiVersion;

  /**
   * The dataset name.
   *
   * @schema #/definitions/factories_datasets_childResource#name
   */
  readonly name: FactoriesDatasetsChildResourceNamePattern;

  /**
   * The Azure Data Factory nested object which identifies data within different data stores, such as tables, files, folders, and documents.
   *
   * @schema #/definitions/factories_datasets_childResource#properties
   */
  readonly properties: Dataset;

  /**
   * @schema #/definitions/factories_datasets_childResource#type
   */
  readonly type: FactoriesDatasetsChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/pipelines
 *
 * @schema #/definitions/factories_pipelines_childResource
 */
export interface FactoriesPipelinesChildResource {
  /**
   * @schema #/definitions/factories_pipelines_childResource#apiVersion
   */
  readonly apiVersion: FactoriesPipelinesChildResourceApiVersion;

  /**
   * The pipeline name.
   *
   * @schema #/definitions/factories_pipelines_childResource#name
   */
  readonly name: FactoriesPipelinesChildResourceNamePattern;

  /**
   * A data factory pipeline.
   *
   * @schema #/definitions/factories_pipelines_childResource#properties
   */
  readonly properties: Pipeline;

  /**
   * @schema #/definitions/factories_pipelines_childResource#type
   */
  readonly type: FactoriesPipelinesChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/triggers
 *
 * @schema #/definitions/factories_triggers_childResource
 */
export interface FactoriesTriggersChildResource {
  /**
   * @schema #/definitions/factories_triggers_childResource#apiVersion
   */
  readonly apiVersion: FactoriesTriggersChildResourceApiVersion;

  /**
   * The trigger name.
   *
   * @schema #/definitions/factories_triggers_childResource#name
   */
  readonly name: FactoriesTriggersChildResourceNamePattern;

  /**
   * Azure data factory nested object which contains information about creating pipeline run
   *
   * @schema #/definitions/factories_triggers_childResource#properties
   */
  readonly properties: Trigger;

  /**
   * @schema #/definitions/factories_triggers_childResource#type
   */
  readonly type: FactoriesTriggersChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/dataflows
 *
 * @schema #/definitions/factories_dataflows_childResource
 */
export interface FactoriesDataflowsChildResource {
  /**
   * @schema #/definitions/factories_dataflows_childResource#apiVersion
   */
  readonly apiVersion: FactoriesDataflowsChildResourceApiVersion;

  /**
   * The data flow name.
   *
   * @schema #/definitions/factories_dataflows_childResource#name
   */
  readonly name: FactoriesDataflowsChildResourceNamePattern;

  /**
   * Azure Data Factory nested object which contains a flow with data movements and transformations.
   *
   * @schema #/definitions/factories_dataflows_childResource#properties
   */
  readonly properties: MappingDataFlow;

  /**
   * @schema #/definitions/factories_dataflows_childResource#type
   */
  readonly type: FactoriesDataflowsChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/managedVirtualNetworks
 *
 * @schema #/definitions/factories_managedVirtualNetworks_childResource
 */
export interface FactoriesManagedVirtualNetworksChildResource {
  /**
   * @schema #/definitions/factories_managedVirtualNetworks_childResource#apiVersion
   */
  readonly apiVersion: FactoriesManagedVirtualNetworksChildResourceApiVersion;

  /**
   * Managed virtual network name
   *
   * @schema #/definitions/factories_managedVirtualNetworks_childResource#name
   */
  readonly name: FactoriesManagedVirtualNetworksChildResourceNamePattern;

  /**
   * A managed Virtual Network associated with the Azure Data Factory
   *
   * @schema #/definitions/factories_managedVirtualNetworks_childResource#properties
   */
  readonly properties: ManagedVirtualNetwork;

  /**
   * @schema #/definitions/factories_managedVirtualNetworks_childResource#type
   */
  readonly type: FactoriesManagedVirtualNetworksChildResourceType;

}

/**
 * Microsoft.DataFactory/factories/privateEndpointConnections
 *
 * @schema #/definitions/factories_privateEndpointConnections_childResource
 */
export interface FactoriesPrivateEndpointConnectionsChildResource {
  /**
   * @schema #/definitions/factories_privateEndpointConnections_childResource#apiVersion
   */
  readonly apiVersion: FactoriesPrivateEndpointConnectionsChildResourceApiVersion;

  /**
   * The private endpoint connection name.
   *
   * @schema #/definitions/factories_privateEndpointConnections_childResource#name
   */
  readonly name: string;

  /**
   * A request to approve or reject a private endpoint connection
   *
   * @schema #/definitions/factories_privateEndpointConnections_childResource#properties
   */
  readonly properties: PrivateLinkConnectionApprovalRequest;

  /**
   * @schema #/definitions/factories_privateEndpointConnections_childResource#type
   */
  readonly type: FactoriesPrivateEndpointConnectionsChildResourceType;

}

export enum MappingDataFlowType {
  MAPPING_DATA_FLOW = 'MappingDataFlow',
}

/**
 * Mapping data flow type properties.
 *
 * @schema #/definitions/MappingDataFlowTypeProperties
 */
export interface MappingDataFlowTypeProperties {
  /**
   * DataFlow script.
   *
   * @schema #/definitions/MappingDataFlowTypeProperties#script
   */
  readonly script?: string;

  /**
   * List of sinks in data flow.
   *
   * @schema #/definitions/MappingDataFlowTypeProperties#sinks
   */
  readonly sinks?: DataFlowSink[];

  /**
   * List of sources in data flow.
   *
   * @schema #/definitions/MappingDataFlowTypeProperties#sources
   */
  readonly sources?: DataFlowSource[];

  /**
   * List of transformations in data flow.
   *
   * @schema #/definitions/MappingDataFlowTypeProperties#transformations
   */
  readonly transformations?: Transformation[];

}

/**
 * A single Amazon Simple Storage Service (S3) object or a set of S3 objects.
 *
 * @schema #/definitions/AmazonS3Dataset
 */
export interface AmazonS3Dataset {
  /**
   * @schema #/definitions/AmazonS3Dataset#type
   */
  readonly type: AmazonS3DatasetType;

  /**
   * Amazon S3 dataset properties.
   *
   * @schema #/definitions/AmazonS3Dataset#typeProperties
   */
  readonly typeProperties: AmazonS3DatasetTypeProperties;

}

/**
 * Avro dataset.
 *
 * @schema #/definitions/AvroDataset
 */
export interface AvroDataset {
  /**
   * @schema #/definitions/AvroDataset#type
   */
  readonly type: AvroDatasetType;

  /**
   * Avro dataset properties.
   *
   * @schema #/definitions/AvroDataset#typeProperties
   */
  readonly typeProperties?: AvroDatasetTypeProperties;

}

/**
 * Excel dataset.
 *
 * @schema #/definitions/ExcelDataset
 */
export interface ExcelDataset {
  /**
   * @schema #/definitions/ExcelDataset#type
   */
  readonly type: ExcelDatasetType;

  /**
   * Excel dataset properties.
   *
   * @schema #/definitions/ExcelDataset#typeProperties
   */
  readonly typeProperties?: ExcelDatasetTypeProperties;

}

/**
 * Parquet dataset.
 *
 * @schema #/definitions/ParquetDataset
 */
export interface ParquetDataset {
  /**
   * @schema #/definitions/ParquetDataset#type
   */
  readonly type: ParquetDatasetType;

  /**
   * Parquet dataset properties.
   *
   * @schema #/definitions/ParquetDataset#typeProperties
   */
  readonly typeProperties?: ParquetDatasetTypeProperties;

}

/**
 * Delimited text dataset.
 *
 * @schema #/definitions/DelimitedTextDataset
 */
export interface DelimitedTextDataset {
  /**
   * @schema #/definitions/DelimitedTextDataset#type
   */
  readonly type: DelimitedTextDatasetType;

  /**
   * DelimitedText dataset properties.
   *
   * @schema #/definitions/DelimitedTextDataset#typeProperties
   */
  readonly typeProperties?: DelimitedTextDatasetTypeProperties;

}

/**
 * Json dataset.
 *
 * @schema #/definitions/JsonDataset
 */
export interface JsonDataset {
  /**
   * @schema #/definitions/JsonDataset#type
   */
  readonly type: JsonDatasetType;

  /**
   * Json dataset properties.
   *
   * @schema #/definitions/JsonDataset#typeProperties
   */
  readonly typeProperties?: JsonDatasetTypeProperties;

}

/**
 * Xml dataset.
 *
 * @schema #/definitions/XmlDataset
 */
export interface XmlDataset {
  /**
   * @schema #/definitions/XmlDataset#type
   */
  readonly type: XmlDatasetType;

  /**
   * Xml dataset properties.
   *
   * @schema #/definitions/XmlDataset#typeProperties
   */
  readonly typeProperties?: XmlDatasetTypeProperties;

}

/**
 * ORC dataset.
 *
 * @schema #/definitions/OrcDataset
 */
export interface OrcDataset {
  /**
   * @schema #/definitions/OrcDataset#type
   */
  readonly type: OrcDatasetType;

  /**
   * ORC dataset properties.
   *
   * @schema #/definitions/OrcDataset#typeProperties
   */
  readonly typeProperties?: OrcDatasetTypeProperties;

}

/**
 * Binary dataset.
 *
 * @schema #/definitions/BinaryDataset
 */
export interface BinaryDataset {
  /**
   * @schema #/definitions/BinaryDataset#type
   */
  readonly type: BinaryDatasetType;

  /**
   * Binary dataset properties.
   *
   * @schema #/definitions/BinaryDataset#typeProperties
   */
  readonly typeProperties?: BinaryDatasetTypeProperties;

}

/**
 * The Azure Blob storage.
 *
 * @schema #/definitions/AzureBlobDataset
 */
export interface AzureBlobDataset {
  /**
   * @schema #/definitions/AzureBlobDataset#type
   */
  readonly type: AzureBlobDatasetType;

  /**
   * Azure Blob dataset properties.
   *
   * @schema #/definitions/AzureBlobDataset#typeProperties
   */
  readonly typeProperties?: AzureBlobDatasetTypeProperties;

}

/**
 * The Azure Table storage dataset.
 *
 * @schema #/definitions/AzureTableDataset
 */
export interface AzureTableDataset {
  /**
   * @schema #/definitions/AzureTableDataset#type
   */
  readonly type: AzureTableDatasetType;

  /**
   * Azure Table dataset properties.
   *
   * @schema #/definitions/AzureTableDataset#typeProperties
   */
  readonly typeProperties: AzureTableDatasetTypeProperties;

}

/**
 * The Azure SQL Server database dataset.
 *
 * @schema #/definitions/AzureSqlTableDataset
 */
export interface AzureSqlTableDataset {
  /**
   * @schema #/definitions/AzureSqlTableDataset#type
   */
  readonly type: AzureSqlTableDatasetType;

  /**
   * Azure SQL dataset properties.
   *
   * @schema #/definitions/AzureSqlTableDataset#typeProperties
   */
  readonly typeProperties?: AzureSqlTableDatasetTypeProperties;

}

/**
 * The Azure SQL Managed Instance dataset.
 *
 * @schema #/definitions/AzureSqlMITableDataset
 */
export interface AzureSqlMiTableDataset {
  /**
   * @schema #/definitions/AzureSqlMITableDataset#type
   */
  readonly type: AzureSqlMiTableDatasetType;

  /**
   * Azure SQL Managed Instance dataset properties.
   *
   * @schema #/definitions/AzureSqlMITableDataset#typeProperties
   */
  readonly typeProperties?: AzureSqlMiTableDatasetTypeProperties;

}

/**
 * The Azure SQL Data Warehouse dataset.
 *
 * @schema #/definitions/AzureSqlDWTableDataset
 */
export interface AzureSqlDwTableDataset {
  /**
   * @schema #/definitions/AzureSqlDWTableDataset#type
   */
  readonly type: AzureSqlDwTableDatasetType;

  /**
   * Azure SQL Data Warehouse dataset properties.
   *
   * @schema #/definitions/AzureSqlDWTableDataset#typeProperties
   */
  readonly typeProperties?: AzureSqlDwTableDatasetTypeProperties;

}

/**
 * The Cassandra database dataset.
 *
 * @schema #/definitions/CassandraTableDataset
 */
export interface CassandraTableDataset {
  /**
   * @schema #/definitions/CassandraTableDataset#type
   */
  readonly type: CassandraTableDatasetType;

  /**
   * Cassandra dataset properties.
   *
   * @schema #/definitions/CassandraTableDataset#typeProperties
   */
  readonly typeProperties?: CassandraTableDatasetTypeProperties;

}

/**
 * The custom dataset.
 *
 * @schema #/definitions/CustomDataset
 */
export interface CustomDataset {
  /**
   * @schema #/definitions/CustomDataset#type
   */
  readonly type: CustomDatasetType;

  /**
   * Custom dataset properties.
   *
   * @schema #/definitions/CustomDataset#typeProperties
   */
  readonly typeProperties?: CustomDatasetTypeProperties;

}

/**
 * Microsoft Azure CosmosDB (SQL API) Collection dataset.
 *
 * @schema #/definitions/CosmosDbSqlApiCollectionDataset
 */
export interface CosmosDbSqlApiCollectionDataset {
  /**
   * @schema #/definitions/CosmosDbSqlApiCollectionDataset#type
   */
  readonly type: CosmosDbSqlApiCollectionDatasetType;

  /**
   * CosmosDB (SQL API) Collection dataset properties.
   *
   * @schema #/definitions/CosmosDbSqlApiCollectionDataset#typeProperties
   */
  readonly typeProperties: CosmosDbSqlApiCollectionDatasetTypeProperties;

}

/**
 * Microsoft Azure Document Database Collection dataset.
 *
 * @schema #/definitions/DocumentDbCollectionDataset
 */
export interface DocumentDbCollectionDataset {
  /**
   * @schema #/definitions/DocumentDbCollectionDataset#type
   */
  readonly type: DocumentDbCollectionDatasetType;

  /**
   * DocumentDB Collection dataset properties.
   *
   * @schema #/definitions/DocumentDbCollectionDataset#typeProperties
   */
  readonly typeProperties: DocumentDbCollectionDatasetTypeProperties;

}

/**
 * The Dynamics entity dataset.
 *
 * @schema #/definitions/DynamicsEntityDataset
 */
export interface DynamicsEntityDataset {
  /**
   * @schema #/definitions/DynamicsEntityDataset#type
   */
  readonly type: DynamicsEntityDatasetType;

  /**
   * Dynamics entity dataset properties.
   *
   * @schema #/definitions/DynamicsEntityDataset#typeProperties
   */
  readonly typeProperties?: DynamicsEntityDatasetTypeProperties;

}

/**
 * The Dynamics CRM entity dataset.
 *
 * @schema #/definitions/DynamicsCrmEntityDataset
 */
export interface DynamicsCrmEntityDataset {
  /**
   * @schema #/definitions/DynamicsCrmEntityDataset#type
   */
  readonly type: DynamicsCrmEntityDatasetType;

  /**
   * Dynamics CRM entity dataset properties.
   *
   * @schema #/definitions/DynamicsCrmEntityDataset#typeProperties
   */
  readonly typeProperties?: DynamicsCrmEntityDatasetTypeProperties;

}

/**
 * The Common Data Service for Apps entity dataset.
 *
 * @schema #/definitions/CommonDataServiceForAppsEntityDataset
 */
export interface CommonDataServiceForAppsEntityDataset {
  /**
   * @schema #/definitions/CommonDataServiceForAppsEntityDataset#type
   */
  readonly type: CommonDataServiceForAppsEntityDatasetType;

  /**
   * Common Data Service for Apps entity dataset properties.
   *
   * @schema #/definitions/CommonDataServiceForAppsEntityDataset#typeProperties
   */
  readonly typeProperties?: CommonDataServiceForAppsEntityDatasetTypeProperties;

}

/**
 * Azure Data Lake Store dataset.
 *
 * @schema #/definitions/AzureDataLakeStoreDataset
 */
export interface AzureDataLakeStoreDataset {
  /**
   * @schema #/definitions/AzureDataLakeStoreDataset#type
   */
  readonly type: AzureDataLakeStoreDatasetType;

  /**
   * Azure Data Lake Store dataset properties.
   *
   * @schema #/definitions/AzureDataLakeStoreDataset#typeProperties
   */
  readonly typeProperties?: AzureDataLakeStoreDatasetTypeProperties;

}

/**
 * The Azure Data Lake Storage Gen2 storage.
 *
 * @schema #/definitions/AzureBlobFSDataset
 */
export interface AzureBlobFsDataset {
  /**
   * @schema #/definitions/AzureBlobFSDataset#type
   */
  readonly type: AzureBlobFsDatasetType;

  /**
   * Azure Data Lake Storage Gen2 dataset properties.
   *
   * @schema #/definitions/AzureBlobFSDataset#typeProperties
   */
  readonly typeProperties?: AzureBlobFsDatasetTypeProperties;

}

/**
 * The Office365 account.
 *
 * @schema #/definitions/Office365Dataset
 */
export interface Office365Dataset {
  /**
   * @schema #/definitions/Office365Dataset#type
   */
  readonly type: Office365DatasetType;

  /**
   * Office365 dataset properties.
   *
   * @schema #/definitions/Office365Dataset#typeProperties
   */
  readonly typeProperties: Office365DatasetTypeProperties;

}

/**
 * An on-premises file system dataset.
 *
 * @schema #/definitions/FileShareDataset
 */
export interface FileShareDataset {
  /**
   * @schema #/definitions/FileShareDataset#type
   */
  readonly type: FileShareDatasetType;

  /**
   * On-premises file system dataset properties.
   *
   * @schema #/definitions/FileShareDataset#typeProperties
   */
  readonly typeProperties?: FileShareDatasetTypeProperties;

}

/**
 * The MongoDB database dataset.
 *
 * @schema #/definitions/MongoDbCollectionDataset
 */
export interface MongoDbCollectionDataset {
  /**
   * @schema #/definitions/MongoDbCollectionDataset#type
   */
  readonly type: MongoDbCollectionDatasetType;

  /**
   * MongoDB database dataset properties.
   *
   * @schema #/definitions/MongoDbCollectionDataset#typeProperties
   */
  readonly typeProperties: MongoDbCollectionDatasetTypeProperties;

}

/**
 * The MongoDB Atlas database dataset.
 *
 * @schema #/definitions/MongoDbAtlasCollectionDataset
 */
export interface MongoDbAtlasCollectionDataset {
  /**
   * @schema #/definitions/MongoDbAtlasCollectionDataset#type
   */
  readonly type: MongoDbAtlasCollectionDatasetType;

  /**
   * MongoDB Atlas database dataset properties.
   *
   * @schema #/definitions/MongoDbAtlasCollectionDataset#typeProperties
   */
  readonly typeProperties: MongoDbAtlasCollectionDatasetTypeProperties;

}

/**
 * The MongoDB database dataset.
 *
 * @schema #/definitions/MongoDbV2CollectionDataset
 */
export interface MongoDbV2CollectionDataset {
  /**
   * @schema #/definitions/MongoDbV2CollectionDataset#type
   */
  readonly type: MongoDbV2CollectionDatasetType;

  /**
   * MongoDB database dataset properties.
   *
   * @schema #/definitions/MongoDbV2CollectionDataset#typeProperties
   */
  readonly typeProperties: MongoDbV2CollectionDatasetTypeProperties;

}

/**
 * The CosmosDB (MongoDB API) database dataset.
 *
 * @schema #/definitions/CosmosDbMongoDbApiCollectionDataset
 */
export interface CosmosDbMongoDbApiCollectionDataset {
  /**
   * @schema #/definitions/CosmosDbMongoDbApiCollectionDataset#type
   */
  readonly type: CosmosDbMongoDbApiCollectionDatasetType;

  /**
   * CosmosDB (MongoDB API) database dataset properties.
   *
   * @schema #/definitions/CosmosDbMongoDbApiCollectionDataset#typeProperties
   */
  readonly typeProperties: CosmosDbMongoDbApiCollectionDatasetTypeProperties;

}

/**
 * The Open Data Protocol (OData) resource dataset.
 *
 * @schema #/definitions/ODataResourceDataset
 */
export interface ODataResourceDataset {
  /**
   * @schema #/definitions/ODataResourceDataset#type
   */
  readonly type: ODataResourceDatasetType;

  /**
   * OData dataset properties.
   *
   * @schema #/definitions/ODataResourceDataset#typeProperties
   */
  readonly typeProperties?: ODataResourceDatasetTypeProperties;

}

/**
 * The on-premises Oracle database dataset.
 *
 * @schema #/definitions/OracleTableDataset
 */
export interface OracleTableDataset {
  /**
   * @schema #/definitions/OracleTableDataset#type
   */
  readonly type: OracleTableDatasetType;

  /**
   * On-premises Oracle dataset properties.
   *
   * @schema #/definitions/OracleTableDataset#typeProperties
   */
  readonly typeProperties?: OracleTableDatasetTypeProperties;

}

/**
 * The Teradata database dataset.
 *
 * @schema #/definitions/TeradataTableDataset
 */
export interface TeradataTableDataset {
  /**
   * @schema #/definitions/TeradataTableDataset#type
   */
  readonly type: TeradataTableDatasetType;

  /**
   * Teradata dataset properties.
   *
   * @schema #/definitions/TeradataTableDataset#typeProperties
   */
  readonly typeProperties?: TeradataTableDatasetTypeProperties;

}

/**
 * The Azure MySQL database dataset.
 *
 * @schema #/definitions/AzureMySqlTableDataset
 */
export interface AzureMySqlTableDataset {
  /**
   * @schema #/definitions/AzureMySqlTableDataset#type
   */
  readonly type: AzureMySqlTableDatasetType;

  /**
   * Azure MySQL database dataset properties.
   *
   * @schema #/definitions/AzureMySqlTableDataset#typeProperties
   */
  readonly typeProperties: AzureMySqlTableDatasetTypeProperties;

}

/**
 * The Amazon Redshift table dataset.
 *
 * @schema #/definitions/AmazonRedshiftTableDataset
 */
export interface AmazonRedshiftTableDataset {
  /**
   * @schema #/definitions/AmazonRedshiftTableDataset#type
   */
  readonly type: AmazonRedshiftTableDatasetType;

  /**
   * Amazon Redshift table dataset properties.
   *
   * @schema #/definitions/AmazonRedshiftTableDataset#typeProperties
   */
  readonly typeProperties?: AmazonRedshiftTableDatasetTypeProperties;

}

/**
 * The Db2 table dataset.
 *
 * @schema #/definitions/Db2TableDataset
 */
export interface Db2TableDataset {
  /**
   * @schema #/definitions/Db2TableDataset#type
   */
  readonly type: Db2TableDatasetType;

  /**
   * Db2 table dataset properties.
   *
   * @schema #/definitions/Db2TableDataset#typeProperties
   */
  readonly typeProperties?: Db2TableDatasetTypeProperties;

}

/**
 * The relational table dataset.
 *
 * @schema #/definitions/RelationalTableDataset
 */
export interface RelationalTableDataset {
  /**
   * @schema #/definitions/RelationalTableDataset#type
   */
  readonly type: RelationalTableDatasetType;

  /**
   * Relational table dataset properties.
   *
   * @schema #/definitions/RelationalTableDataset#typeProperties
   */
  readonly typeProperties?: RelationalTableDatasetTypeProperties;

}

/**
 * The Informix table dataset.
 *
 * @schema #/definitions/InformixTableDataset
 */
export interface InformixTableDataset {
  /**
   * @schema #/definitions/InformixTableDataset#type
   */
  readonly type: InformixTableDatasetType;

  /**
   * Informix table dataset properties.
   *
   * @schema #/definitions/InformixTableDataset#typeProperties
   */
  readonly typeProperties?: InformixTableDatasetTypeProperties;

}

/**
 * The ODBC table dataset.
 *
 * @schema #/definitions/OdbcTableDataset
 */
export interface OdbcTableDataset {
  /**
   * @schema #/definitions/OdbcTableDataset#type
   */
  readonly type: OdbcTableDatasetType;

  /**
   * ODBC table dataset properties.
   *
   * @schema #/definitions/OdbcTableDataset#typeProperties
   */
  readonly typeProperties?: OdbcTableDatasetTypeProperties;

}

/**
 * The MySQL table dataset.
 *
 * @schema #/definitions/MySqlTableDataset
 */
export interface MySqlTableDataset {
  /**
   * @schema #/definitions/MySqlTableDataset#type
   */
  readonly type: MySqlTableDatasetType;

  /**
   * MySql table dataset properties.
   *
   * @schema #/definitions/MySqlTableDataset#typeProperties
   */
  readonly typeProperties?: MySqlTableDatasetTypeProperties;

}

/**
 * The PostgreSQL table dataset.
 *
 * @schema #/definitions/PostgreSqlTableDataset
 */
export interface PostgreSqlTableDataset {
  /**
   * @schema #/definitions/PostgreSqlTableDataset#type
   */
  readonly type: PostgreSqlTableDatasetType;

  /**
   * PostgreSQL table dataset properties.
   *
   * @schema #/definitions/PostgreSqlTableDataset#typeProperties
   */
  readonly typeProperties?: PostgreSqlTableDatasetTypeProperties;

}

/**
 * The Microsoft Access table dataset.
 *
 * @schema #/definitions/MicrosoftAccessTableDataset
 */
export interface MicrosoftAccessTableDataset {
  /**
   * @schema #/definitions/MicrosoftAccessTableDataset#type
   */
  readonly type: MicrosoftAccessTableDatasetType;

  /**
   * Microsoft Access table dataset properties.
   *
   * @schema #/definitions/MicrosoftAccessTableDataset#typeProperties
   */
  readonly typeProperties?: MicrosoftAccessTableDatasetTypeProperties;

}

/**
 * The Salesforce object dataset.
 *
 * @schema #/definitions/SalesforceObjectDataset
 */
export interface SalesforceObjectDataset {
  /**
   * @schema #/definitions/SalesforceObjectDataset#type
   */
  readonly type: SalesforceObjectDatasetType;

  /**
   * Salesforce object dataset properties.
   *
   * @schema #/definitions/SalesforceObjectDataset#typeProperties
   */
  readonly typeProperties?: SalesforceObjectDatasetTypeProperties;

}

/**
 * The Salesforce Service Cloud object dataset.
 *
 * @schema #/definitions/SalesforceServiceCloudObjectDataset
 */
export interface SalesforceServiceCloudObjectDataset {
  /**
   * @schema #/definitions/SalesforceServiceCloudObjectDataset#type
   */
  readonly type: SalesforceServiceCloudObjectDatasetType;

  /**
   * Salesforce Service Cloud object dataset properties.
   *
   * @schema #/definitions/SalesforceServiceCloudObjectDataset#typeProperties
   */
  readonly typeProperties?: SalesforceServiceCloudObjectDatasetTypeProperties;

}

/**
 * The Sybase table dataset.
 *
 * @schema #/definitions/SybaseTableDataset
 */
export interface SybaseTableDataset {
  /**
   * @schema #/definitions/SybaseTableDataset#type
   */
  readonly type: SybaseTableDatasetType;

  /**
   * Sybase table dataset properties.
   *
   * @schema #/definitions/SybaseTableDataset#typeProperties
   */
  readonly typeProperties?: SybaseTableDatasetTypeProperties;

}

/**
 * The SAP BW cube dataset.
 *
 * @schema #/definitions/SapBwCubeDataset
 */
export interface SapBwCubeDataset {
  /**
   * @schema #/definitions/SapBwCubeDataset#type
   */
  readonly type: SapBwCubeDatasetType;

}

/**
 * The path of the SAP Cloud for Customer OData entity.
 *
 * @schema #/definitions/SapCloudForCustomerResourceDataset
 */
export interface SapCloudForCustomerResourceDataset {
  /**
   * @schema #/definitions/SapCloudForCustomerResourceDataset#type
   */
  readonly type: SapCloudForCustomerResourceDatasetType;

  /**
   * Sap Cloud For Customer OData resource dataset properties.
   *
   * @schema #/definitions/SapCloudForCustomerResourceDataset#typeProperties
   */
  readonly typeProperties: SapCloudForCustomerResourceDatasetTypeProperties;

}

/**
 * The path of the SAP ECC OData entity.
 *
 * @schema #/definitions/SapEccResourceDataset
 */
export interface SapEccResourceDataset {
  /**
   * @schema #/definitions/SapEccResourceDataset#type
   */
  readonly type: SapEccResourceDatasetType;

  /**
   * Sap ECC OData resource dataset properties.
   *
   * @schema #/definitions/SapEccResourceDataset#typeProperties
   */
  readonly typeProperties: SapEccResourceDatasetTypeProperties;

}

/**
 * SAP HANA Table properties.
 *
 * @schema #/definitions/SapHanaTableDataset
 */
export interface SapHanaTableDataset {
  /**
   * @schema #/definitions/SapHanaTableDataset#type
   */
  readonly type: SapHanaTableDatasetType;

  /**
   * SAP HANA Table properties.
   *
   * @schema #/definitions/SapHanaTableDataset#typeProperties
   */
  readonly typeProperties?: SapHanaTableDatasetTypeProperties;

}

/**
 * Sap Business Warehouse Open Hub Destination Table properties.
 *
 * @schema #/definitions/SapOpenHubTableDataset
 */
export interface SapOpenHubTableDataset {
  /**
   * @schema #/definitions/SapOpenHubTableDataset#type
   */
  readonly type: SapOpenHubTableDatasetType;

  /**
   * Sap Business Warehouse Open Hub Destination Table properties.
   *
   * @schema #/definitions/SapOpenHubTableDataset#typeProperties
   */
  readonly typeProperties: SapOpenHubTableDatasetTypeProperties;

}

/**
 * The on-premises SQL Server dataset.
 *
 * @schema #/definitions/SqlServerTableDataset
 */
export interface SqlServerTableDataset {
  /**
   * @schema #/definitions/SqlServerTableDataset#type
   */
  readonly type: SqlServerTableDatasetType;

  /**
   * On-premises SQL Server dataset properties.
   *
   * @schema #/definitions/SqlServerTableDataset#typeProperties
   */
  readonly typeProperties?: SqlServerTableDatasetTypeProperties;

}

/**
 * A Rest service dataset.
 *
 * @schema #/definitions/RestResourceDataset
 */
export interface RestResourceDataset {
  /**
   * @schema #/definitions/RestResourceDataset#type
   */
  readonly type: RestResourceDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/RestResourceDataset#typeProperties
   */
  readonly typeProperties?: RestResourceDatasetTypeProperties;

}

/**
 * SAP Table Resource properties.
 *
 * @schema #/definitions/SapTableResourceDataset
 */
export interface SapTableResourceDataset {
  /**
   * @schema #/definitions/SapTableResourceDataset#type
   */
  readonly type: SapTableResourceDatasetType;

  /**
   * SAP Table Resource properties.
   *
   * @schema #/definitions/SapTableResourceDataset#typeProperties
   */
  readonly typeProperties: SapTableResourceDatasetTypeProperties;

}

/**
 * The dataset points to a HTML table in the web page.
 *
 * @schema #/definitions/WebTableDataset
 */
export interface WebTableDataset {
  /**
   * @schema #/definitions/WebTableDataset#type
   */
  readonly type: WebTableDatasetType;

  /**
   * Web table dataset properties.
   *
   * @schema #/definitions/WebTableDataset#typeProperties
   */
  readonly typeProperties: WebTableDatasetTypeProperties;

}

/**
 * The Azure Search Index.
 *
 * @schema #/definitions/AzureSearchIndexDataset
 */
export interface AzureSearchIndexDataset {
  /**
   * @schema #/definitions/AzureSearchIndexDataset#type
   */
  readonly type: AzureSearchIndexDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/AzureSearchIndexDataset#typeProperties
   */
  readonly typeProperties: AzureSearchIndexDatasetTypeProperties;

}

/**
 * A file in an HTTP web server.
 *
 * @schema #/definitions/HttpDataset
 */
export interface HttpDataset {
  /**
   * @schema #/definitions/HttpDataset#type
   */
  readonly type: HttpDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/HttpDataset#typeProperties
   */
  readonly typeProperties?: HttpDatasetTypeProperties;

}

/**
 * Amazon Marketplace Web Service dataset.
 *
 * @schema #/definitions/AmazonMWSObjectDataset
 */
export interface AmazonMwsObjectDataset {
  /**
   * @schema #/definitions/AmazonMWSObjectDataset#type
   */
  readonly type: AmazonMwsObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/AmazonMWSObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Azure PostgreSQL dataset.
 *
 * @schema #/definitions/AzurePostgreSqlTableDataset
 */
export interface AzurePostgreSqlTableDataset {
  /**
   * @schema #/definitions/AzurePostgreSqlTableDataset#type
   */
  readonly type: AzurePostgreSqlTableDatasetType;

  /**
   * Azure PostgreSQL dataset properties.
   *
   * @schema #/definitions/AzurePostgreSqlTableDataset#typeProperties
   */
  readonly typeProperties?: AzurePostgreSqlTableDatasetTypeProperties;

}

/**
 * Concur Service dataset.
 *
 * @schema #/definitions/ConcurObjectDataset
 */
export interface ConcurObjectDataset {
  /**
   * @schema #/definitions/ConcurObjectDataset#type
   */
  readonly type: ConcurObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/ConcurObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Couchbase server dataset.
 *
 * @schema #/definitions/CouchbaseTableDataset
 */
export interface CouchbaseTableDataset {
  /**
   * @schema #/definitions/CouchbaseTableDataset#type
   */
  readonly type: CouchbaseTableDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/CouchbaseTableDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Drill server dataset.
 *
 * @schema #/definitions/DrillTableDataset
 */
export interface DrillTableDataset {
  /**
   * @schema #/definitions/DrillTableDataset#type
   */
  readonly type: DrillTableDatasetType;

  /**
   * Drill Dataset Properties
   *
   * @schema #/definitions/DrillTableDataset#typeProperties
   */
  readonly typeProperties?: DrillDatasetTypeProperties;

}

/**
 * Eloqua server dataset.
 *
 * @schema #/definitions/EloquaObjectDataset
 */
export interface EloquaObjectDataset {
  /**
   * @schema #/definitions/EloquaObjectDataset#type
   */
  readonly type: EloquaObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/EloquaObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Google BigQuery service dataset.
 *
 * @schema #/definitions/GoogleBigQueryObjectDataset
 */
export interface GoogleBigQueryObjectDataset {
  /**
   * @schema #/definitions/GoogleBigQueryObjectDataset#type
   */
  readonly type: GoogleBigQueryObjectDatasetType;

  /**
   * Google BigQuery Dataset Properties
   *
   * @schema #/definitions/GoogleBigQueryObjectDataset#typeProperties
   */
  readonly typeProperties?: GoogleBigQueryDatasetTypeProperties;

}

/**
 * Greenplum Database dataset.
 *
 * @schema #/definitions/GreenplumTableDataset
 */
export interface GreenplumTableDataset {
  /**
   * @schema #/definitions/GreenplumTableDataset#type
   */
  readonly type: GreenplumTableDatasetType;

  /**
   * Greenplum Dataset Properties
   *
   * @schema #/definitions/GreenplumTableDataset#typeProperties
   */
  readonly typeProperties?: GreenplumDatasetTypeProperties;

}

/**
 * HBase server dataset.
 *
 * @schema #/definitions/HBaseObjectDataset
 */
export interface HBaseObjectDataset {
  /**
   * @schema #/definitions/HBaseObjectDataset#type
   */
  readonly type: HBaseObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/HBaseObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Hive Server dataset.
 *
 * @schema #/definitions/HiveObjectDataset
 */
export interface HiveObjectDataset {
  /**
   * @schema #/definitions/HiveObjectDataset#type
   */
  readonly type: HiveObjectDatasetType;

  /**
   * Hive Properties
   *
   * @schema #/definitions/HiveObjectDataset#typeProperties
   */
  readonly typeProperties?: HiveDatasetTypeProperties;

}

/**
 * Hubspot Service dataset.
 *
 * @schema #/definitions/HubspotObjectDataset
 */
export interface HubspotObjectDataset {
  /**
   * @schema #/definitions/HubspotObjectDataset#type
   */
  readonly type: HubspotObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/HubspotObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Impala server dataset.
 *
 * @schema #/definitions/ImpalaObjectDataset
 */
export interface ImpalaObjectDataset {
  /**
   * @schema #/definitions/ImpalaObjectDataset#type
   */
  readonly type: ImpalaObjectDatasetType;

  /**
   * Impala Dataset Properties
   *
   * @schema #/definitions/ImpalaObjectDataset#typeProperties
   */
  readonly typeProperties?: ImpalaDatasetTypeProperties;

}

/**
 * Jira Service dataset.
 *
 * @schema #/definitions/JiraObjectDataset
 */
export interface JiraObjectDataset {
  /**
   * @schema #/definitions/JiraObjectDataset#type
   */
  readonly type: JiraObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/JiraObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Magento server dataset.
 *
 * @schema #/definitions/MagentoObjectDataset
 */
export interface MagentoObjectDataset {
  /**
   * @schema #/definitions/MagentoObjectDataset#type
   */
  readonly type: MagentoObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/MagentoObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * MariaDB server dataset.
 *
 * @schema #/definitions/MariaDBTableDataset
 */
export interface MariaDbTableDataset {
  /**
   * @schema #/definitions/MariaDBTableDataset#type
   */
  readonly type: MariaDbTableDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/MariaDBTableDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Azure Database for MariaDB dataset.
 *
 * @schema #/definitions/AzureMariaDBTableDataset
 */
export interface AzureMariaDbTableDataset {
  /**
   * @schema #/definitions/AzureMariaDBTableDataset#type
   */
  readonly type: AzureMariaDbTableDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/AzureMariaDBTableDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Marketo server dataset.
 *
 * @schema #/definitions/MarketoObjectDataset
 */
export interface MarketoObjectDataset {
  /**
   * @schema #/definitions/MarketoObjectDataset#type
   */
  readonly type: MarketoObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/MarketoObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Paypal Service dataset.
 *
 * @schema #/definitions/PaypalObjectDataset
 */
export interface PaypalObjectDataset {
  /**
   * @schema #/definitions/PaypalObjectDataset#type
   */
  readonly type: PaypalObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/PaypalObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Phoenix server dataset.
 *
 * @schema #/definitions/PhoenixObjectDataset
 */
export interface PhoenixObjectDataset {
  /**
   * @schema #/definitions/PhoenixObjectDataset#type
   */
  readonly type: PhoenixObjectDatasetType;

  /**
   * Phoenix Dataset Properties
   *
   * @schema #/definitions/PhoenixObjectDataset#typeProperties
   */
  readonly typeProperties?: PhoenixDatasetTypeProperties;

}

/**
 * Presto server dataset.
 *
 * @schema #/definitions/PrestoObjectDataset
 */
export interface PrestoObjectDataset {
  /**
   * @schema #/definitions/PrestoObjectDataset#type
   */
  readonly type: PrestoObjectDatasetType;

  /**
   * Presto Dataset Properties
   *
   * @schema #/definitions/PrestoObjectDataset#typeProperties
   */
  readonly typeProperties?: PrestoDatasetTypeProperties;

}

/**
 * QuickBooks server dataset.
 *
 * @schema #/definitions/QuickBooksObjectDataset
 */
export interface QuickBooksObjectDataset {
  /**
   * @schema #/definitions/QuickBooksObjectDataset#type
   */
  readonly type: QuickBooksObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/QuickBooksObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * ServiceNow server dataset.
 *
 * @schema #/definitions/ServiceNowObjectDataset
 */
export interface ServiceNowObjectDataset {
  /**
   * @schema #/definitions/ServiceNowObjectDataset#type
   */
  readonly type: ServiceNowObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/ServiceNowObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Shopify Service dataset.
 *
 * @schema #/definitions/ShopifyObjectDataset
 */
export interface ShopifyObjectDataset {
  /**
   * @schema #/definitions/ShopifyObjectDataset#type
   */
  readonly type: ShopifyObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/ShopifyObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Spark Server dataset.
 *
 * @schema #/definitions/SparkObjectDataset
 */
export interface SparkObjectDataset {
  /**
   * @schema #/definitions/SparkObjectDataset#type
   */
  readonly type: SparkObjectDatasetType;

  /**
   * Spark Properties
   *
   * @schema #/definitions/SparkObjectDataset#typeProperties
   */
  readonly typeProperties?: SparkDatasetTypeProperties;

}

/**
 * Square Service dataset.
 *
 * @schema #/definitions/SquareObjectDataset
 */
export interface SquareObjectDataset {
  /**
   * @schema #/definitions/SquareObjectDataset#type
   */
  readonly type: SquareObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/SquareObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Xero Service dataset.
 *
 * @schema #/definitions/XeroObjectDataset
 */
export interface XeroObjectDataset {
  /**
   * @schema #/definitions/XeroObjectDataset#type
   */
  readonly type: XeroObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/XeroObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Zoho server dataset.
 *
 * @schema #/definitions/ZohoObjectDataset
 */
export interface ZohoObjectDataset {
  /**
   * @schema #/definitions/ZohoObjectDataset#type
   */
  readonly type: ZohoObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/ZohoObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Netezza dataset.
 *
 * @schema #/definitions/NetezzaTableDataset
 */
export interface NetezzaTableDataset {
  /**
   * @schema #/definitions/NetezzaTableDataset#type
   */
  readonly type: NetezzaTableDatasetType;

  /**
   * Netezza dataset properties.
   *
   * @schema #/definitions/NetezzaTableDataset#typeProperties
   */
  readonly typeProperties?: NetezzaTableDatasetTypeProperties;

}

/**
 * Vertica dataset.
 *
 * @schema #/definitions/VerticaTableDataset
 */
export interface VerticaTableDataset {
  /**
   * @schema #/definitions/VerticaTableDataset#type
   */
  readonly type: VerticaTableDatasetType;

  /**
   * Vertica Properties
   *
   * @schema #/definitions/VerticaTableDataset#typeProperties
   */
  readonly typeProperties?: VerticaDatasetTypeProperties;

}

/**
 * Salesforce Marketing Cloud dataset.
 *
 * @schema #/definitions/SalesforceMarketingCloudObjectDataset
 */
export interface SalesforceMarketingCloudObjectDataset {
  /**
   * @schema #/definitions/SalesforceMarketingCloudObjectDataset#type
   */
  readonly type: SalesforceMarketingCloudObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/SalesforceMarketingCloudObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * Responsys dataset.
 *
 * @schema #/definitions/ResponsysObjectDataset
 */
export interface ResponsysObjectDataset {
  /**
   * @schema #/definitions/ResponsysObjectDataset#type
   */
  readonly type: ResponsysObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/ResponsysObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * The path of the Dynamics AX OData entity.
 *
 * @schema #/definitions/DynamicsAXResourceDataset
 */
export interface DynamicsAxResourceDataset {
  /**
   * @schema #/definitions/DynamicsAXResourceDataset#type
   */
  readonly type: DynamicsAxResourceDatasetType;

  /**
   * Dynamics AX OData resource dataset properties.
   *
   * @schema #/definitions/DynamicsAXResourceDataset#typeProperties
   */
  readonly typeProperties: DynamicsAxResourceDatasetTypeProperties;

}

/**
 * Oracle Service Cloud dataset.
 *
 * @schema #/definitions/OracleServiceCloudObjectDataset
 */
export interface OracleServiceCloudObjectDataset {
  /**
   * @schema #/definitions/OracleServiceCloudObjectDataset#type
   */
  readonly type: OracleServiceCloudObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/OracleServiceCloudObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * The Azure Data Explorer (Kusto) dataset.
 *
 * @schema #/definitions/AzureDataExplorerTableDataset
 */
export interface AzureDataExplorerTableDataset {
  /**
   * @schema #/definitions/AzureDataExplorerTableDataset#type
   */
  readonly type: AzureDataExplorerTableDatasetType;

  /**
   * Azure Data Explorer (Kusto) dataset properties.
   *
   * @schema #/definitions/AzureDataExplorerTableDataset#typeProperties
   */
  readonly typeProperties: AzureDataExplorerDatasetTypeProperties;

}

/**
 * Google AdWords service dataset.
 *
 * @schema #/definitions/GoogleAdWordsObjectDataset
 */
export interface GoogleAdWordsObjectDataset {
  /**
   * @schema #/definitions/GoogleAdWordsObjectDataset#type
   */
  readonly type: GoogleAdWordsObjectDatasetType;

  /**
   * Properties specific to this dataset type.
   *
   * @schema #/definitions/GoogleAdWordsObjectDataset#typeProperties
   */
  readonly typeProperties?: GenericDatasetTypeProperties;

}

/**
 * The snowflake dataset.
 *
 * @schema #/definitions/SnowflakeDataset
 */
export interface SnowflakeDataset {
  /**
   * @schema #/definitions/SnowflakeDataset#type
   */
  readonly type: SnowflakeDatasetType;

  /**
   * Snowflake dataset properties.
   *
   * @schema #/definitions/SnowflakeDataset#typeProperties
   */
  readonly typeProperties: SnowflakeDatasetTypeProperties;

}

/**
 * The sharepoint online list resource dataset.
 *
 * @schema #/definitions/SharePointOnlineListResourceDataset
 */
export interface SharePointOnlineListResourceDataset {
  /**
   * @schema #/definitions/SharePointOnlineListResourceDataset#type
   */
  readonly type: SharePointOnlineListResourceDatasetType;

  /**
   * Sharepoint online list dataset properties.
   *
   * @schema #/definitions/SharePointOnlineListResourceDataset#typeProperties
   */
  readonly typeProperties?: SharePointOnlineListDatasetTypeProperties;

}

/**
 * Azure Databricks Delta Lake dataset.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeDataset
 */
export interface AzureDatabricksDeltaLakeDataset {
  /**
   * @schema #/definitions/AzureDatabricksDeltaLakeDataset#type
   */
  readonly type: AzureDatabricksDeltaLakeDatasetType;

  /**
   * Azure Databricks Delta Lake Dataset Properties
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeDataset#typeProperties
   */
  readonly typeProperties?: AzureDatabricksDeltaLakeDatasetTypeProperties;

}

/**
 * Managed integration runtime, including managed elastic and managed dedicated integration runtimes.
 *
 * @schema #/definitions/ManagedIntegrationRuntime
 */
export interface ManagedIntegrationRuntime {
  /**
   * Managed Virtual Network reference type.
   *
   * @schema #/definitions/ManagedIntegrationRuntime#managedVirtualNetwork
   */
  readonly managedVirtualNetwork?: ManagedVirtualNetworkReference;

  /**
   * @schema #/definitions/ManagedIntegrationRuntime#type
   */
  readonly type: ManagedIntegrationRuntimeType;

  /**
   * Managed integration runtime type properties.
   *
   * @schema #/definitions/ManagedIntegrationRuntime#typeProperties
   */
  readonly typeProperties: ManagedIntegrationRuntimeTypeProperties;

}

/**
 * Self-hosted integration runtime.
 *
 * @schema #/definitions/SelfHostedIntegrationRuntime
 */
export interface SelfHostedIntegrationRuntime {
  /**
   * @schema #/definitions/SelfHostedIntegrationRuntime#type
   */
  readonly type: SelfHostedIntegrationRuntimeType;

  /**
   * The self-hosted integration runtime properties.
   *
   * @schema #/definitions/SelfHostedIntegrationRuntime#typeProperties
   */
  readonly typeProperties?: SelfHostedIntegrationRuntimeTypeProperties;

}

/**
 * The storage account linked service.
 *
 * @schema #/definitions/AzureStorageLinkedService
 */
export interface AzureStorageLinkedService {
  /**
   * @schema #/definitions/AzureStorageLinkedService#type
   */
  readonly type: AzureStorageLinkedServiceType;

  /**
   * Azure Storage linked service properties.
   *
   * @schema #/definitions/AzureStorageLinkedService#typeProperties
   */
  readonly typeProperties: AzureStorageLinkedServiceTypeProperties;

}

/**
 * The azure blob storage linked service.
 *
 * @schema #/definitions/AzureBlobStorageLinkedService
 */
export interface AzureBlobStorageLinkedService {
  /**
   * @schema #/definitions/AzureBlobStorageLinkedService#type
   */
  readonly type: AzureBlobStorageLinkedServiceType;

  /**
   * Azure Blob Storage linked service properties.
   *
   * @schema #/definitions/AzureBlobStorageLinkedService#typeProperties
   */
  readonly typeProperties: AzureBlobStorageLinkedServiceTypeProperties;

}

/**
 * The azure table storage linked service.
 *
 * @schema #/definitions/AzureTableStorageLinkedService
 */
export interface AzureTableStorageLinkedService {
  /**
   * @schema #/definitions/AzureTableStorageLinkedService#type
   */
  readonly type: AzureTableStorageLinkedServiceType;

  /**
   * Azure Storage linked service properties.
   *
   * @schema #/definitions/AzureTableStorageLinkedService#typeProperties
   */
  readonly typeProperties: AzureStorageLinkedServiceTypeProperties;

}

/**
 * Azure SQL Data Warehouse linked service.
 *
 * @schema #/definitions/AzureSqlDWLinkedService
 */
export interface AzureSqlDwLinkedService {
  /**
   * @schema #/definitions/AzureSqlDWLinkedService#type
   */
  readonly type: AzureSqlDwLinkedServiceType;

  /**
   * Azure SQL Data Warehouse linked service properties.
   *
   * @schema #/definitions/AzureSqlDWLinkedService#typeProperties
   */
  readonly typeProperties: AzureSqlDwLinkedServiceTypeProperties;

}

/**
 * SQL Server linked service.
 *
 * @schema #/definitions/SqlServerLinkedService
 */
export interface SqlServerLinkedService {
  /**
   * @schema #/definitions/SqlServerLinkedService#type
   */
  readonly type: SqlServerLinkedServiceType;

  /**
   * SQL Server linked service properties.
   *
   * @schema #/definitions/SqlServerLinkedService#typeProperties
   */
  readonly typeProperties: SqlServerLinkedServiceTypeProperties;

}

/**
 * Microsoft Azure SQL Database linked service.
 *
 * @schema #/definitions/AzureSqlDatabaseLinkedService
 */
export interface AzureSqlDatabaseLinkedService {
  /**
   * @schema #/definitions/AzureSqlDatabaseLinkedService#type
   */
  readonly type: AzureSqlDatabaseLinkedServiceType;

  /**
   * Azure SQL Database linked service properties.
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedService#typeProperties
   */
  readonly typeProperties: AzureSqlDatabaseLinkedServiceTypeProperties;

}

/**
 * Azure SQL Managed Instance linked service.
 *
 * @schema #/definitions/AzureSqlMILinkedService
 */
export interface AzureSqlMiLinkedService {
  /**
   * @schema #/definitions/AzureSqlMILinkedService#type
   */
  readonly type: AzureSqlMiLinkedServiceType;

  /**
   * Azure SQL Managed Instance linked service properties.
   *
   * @schema #/definitions/AzureSqlMILinkedService#typeProperties
   */
  readonly typeProperties: AzureSqlMiLinkedServiceTypeProperties;

}

/**
 * Azure Batch linked service.
 *
 * @schema #/definitions/AzureBatchLinkedService
 */
export interface AzureBatchLinkedService {
  /**
   * @schema #/definitions/AzureBatchLinkedService#type
   */
  readonly type: AzureBatchLinkedServiceType;

  /**
   * Azure Batch linked service properties.
   *
   * @schema #/definitions/AzureBatchLinkedService#typeProperties
   */
  readonly typeProperties: AzureBatchLinkedServiceTypeProperties;

}

/**
 * Azure Key Vault linked service.
 *
 * @schema #/definitions/AzureKeyVaultLinkedService
 */
export interface AzureKeyVaultLinkedService {
  /**
   * @schema #/definitions/AzureKeyVaultLinkedService#type
   */
  readonly type: AzureKeyVaultLinkedServiceType;

  /**
   * Azure Key Vault linked service properties.
   *
   * @schema #/definitions/AzureKeyVaultLinkedService#typeProperties
   */
  readonly typeProperties: AzureKeyVaultLinkedServiceTypeProperties;

}

/**
 * Microsoft Azure Cosmos Database (CosmosDB) linked service.
 *
 * @schema #/definitions/CosmosDbLinkedService
 */
export interface CosmosDbLinkedService {
  /**
   * @schema #/definitions/CosmosDbLinkedService#type
   */
  readonly type: CosmosDbLinkedServiceType;

  /**
   * CosmosDB linked service properties.
   *
   * @schema #/definitions/CosmosDbLinkedService#typeProperties
   */
  readonly typeProperties: CosmosDbLinkedServiceTypeProperties;

}

/**
 * Dynamics linked service.
 *
 * @schema #/definitions/DynamicsLinkedService
 */
export interface DynamicsLinkedService {
  /**
   * @schema #/definitions/DynamicsLinkedService#type
   */
  readonly type: DynamicsLinkedServiceType;

  /**
   * Dynamics linked service properties.
   *
   * @schema #/definitions/DynamicsLinkedService#typeProperties
   */
  readonly typeProperties: DynamicsLinkedServiceTypeProperties;

}

/**
 * Dynamics CRM linked service.
 *
 * @schema #/definitions/DynamicsCrmLinkedService
 */
export interface DynamicsCrmLinkedService {
  /**
   * @schema #/definitions/DynamicsCrmLinkedService#type
   */
  readonly type: DynamicsCrmLinkedServiceType;

  /**
   * Dynamics CRM linked service properties.
   *
   * @schema #/definitions/DynamicsCrmLinkedService#typeProperties
   */
  readonly typeProperties: DynamicsCrmLinkedServiceTypeProperties;

}

/**
 * Common Data Service for Apps linked service.
 *
 * @schema #/definitions/CommonDataServiceForAppsLinkedService
 */
export interface CommonDataServiceForAppsLinkedService {
  /**
   * @schema #/definitions/CommonDataServiceForAppsLinkedService#type
   */
  readonly type: CommonDataServiceForAppsLinkedServiceType;

  /**
   * Common Data Service for Apps linked service properties.
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedService#typeProperties
   */
  readonly typeProperties: CommonDataServiceForAppsLinkedServiceTypeProperties;

}

/**
 * HDInsight linked service.
 *
 * @schema #/definitions/HDInsightLinkedService
 */
export interface HdInsightLinkedService {
  /**
   * @schema #/definitions/HDInsightLinkedService#type
   */
  readonly type: HdInsightLinkedServiceType;

  /**
   * HDInsight linked service properties.
   *
   * @schema #/definitions/HDInsightLinkedService#typeProperties
   */
  readonly typeProperties: HdInsightLinkedServiceTypeProperties;

}

/**
 * File system linked service.
 *
 * @schema #/definitions/FileServerLinkedService
 */
export interface FileServerLinkedService {
  /**
   * @schema #/definitions/FileServerLinkedService#type
   */
  readonly type: FileServerLinkedServiceType;

  /**
   * File system linked service properties.
   *
   * @schema #/definitions/FileServerLinkedService#typeProperties
   */
  readonly typeProperties: FileServerLinkedServiceTypeProperties;

}

/**
 * Azure File Storage linked service.
 *
 * @schema #/definitions/AzureFileStorageLinkedService
 */
export interface AzureFileStorageLinkedService {
  /**
   * @schema #/definitions/AzureFileStorageLinkedService#type
   */
  readonly type: AzureFileStorageLinkedServiceType;

  /**
   * Azure File Storage linked service properties.
   *
   * @schema #/definitions/AzureFileStorageLinkedService#typeProperties
   */
  readonly typeProperties: AzureFileStorageLinkedServiceTypeProperties;

}

/**
 * Linked service for Amazon S3 Compatible.
 *
 * @schema #/definitions/AmazonS3CompatibleLinkedService
 */
export interface AmazonS3CompatibleLinkedService {
  /**
   * @schema #/definitions/AmazonS3CompatibleLinkedService#type
   */
  readonly type: AmazonS3CompatibleLinkedServiceType;

  /**
   * Amazon S3 Compatible linked service properties.
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedService#typeProperties
   */
  readonly typeProperties: AmazonS3CompatibleLinkedServiceTypeProperties;

}

/**
 * Linked service for Oracle Cloud Storage.
 *
 * @schema #/definitions/OracleCloudStorageLinkedService
 */
export interface OracleCloudStorageLinkedService {
  /**
   * @schema #/definitions/OracleCloudStorageLinkedService#type
   */
  readonly type: OracleCloudStorageLinkedServiceType;

  /**
   * Oracle Cloud Storage linked service properties.
   *
   * @schema #/definitions/OracleCloudStorageLinkedService#typeProperties
   */
  readonly typeProperties: OracleCloudStorageLinkedServiceTypeProperties;

}

/**
 * Linked service for Google Cloud Storage.
 *
 * @schema #/definitions/GoogleCloudStorageLinkedService
 */
export interface GoogleCloudStorageLinkedService {
  /**
   * @schema #/definitions/GoogleCloudStorageLinkedService#type
   */
  readonly type: GoogleCloudStorageLinkedServiceType;

  /**
   * Google Cloud Storage linked service properties.
   *
   * @schema #/definitions/GoogleCloudStorageLinkedService#typeProperties
   */
  readonly typeProperties: GoogleCloudStorageLinkedServiceTypeProperties;

}

/**
 * Oracle database.
 *
 * @schema #/definitions/OracleLinkedService
 */
export interface OracleLinkedService {
  /**
   * @schema #/definitions/OracleLinkedService#type
   */
  readonly type: OracleLinkedServiceType;

  /**
   * Oracle database linked service properties.
   *
   * @schema #/definitions/OracleLinkedService#typeProperties
   */
  readonly typeProperties: OracleLinkedServiceTypeProperties;

}

/**
 * Azure MySQL database linked service.
 *
 * @schema #/definitions/AzureMySqlLinkedService
 */
export interface AzureMySqlLinkedService {
  /**
   * @schema #/definitions/AzureMySqlLinkedService#type
   */
  readonly type: AzureMySqlLinkedServiceType;

  /**
   * Azure MySQL database linked service properties.
   *
   * @schema #/definitions/AzureMySqlLinkedService#typeProperties
   */
  readonly typeProperties: AzureMySqlLinkedServiceTypeProperties;

}

/**
 * Linked service for MySQL data source.
 *
 * @schema #/definitions/MySqlLinkedService
 */
export interface MySqlLinkedService {
  /**
   * @schema #/definitions/MySqlLinkedService#type
   */
  readonly type: MySqlLinkedServiceType;

  /**
   * MySQL linked service properties.
   *
   * @schema #/definitions/MySqlLinkedService#typeProperties
   */
  readonly typeProperties: MySqlLinkedServiceTypeProperties;

}

/**
 * Linked service for PostgreSQL data source.
 *
 * @schema #/definitions/PostgreSqlLinkedService
 */
export interface PostgreSqlLinkedService {
  /**
   * @schema #/definitions/PostgreSqlLinkedService#type
   */
  readonly type: PostgreSqlLinkedServiceType;

  /**
   * PostgreSQL linked service properties.
   *
   * @schema #/definitions/PostgreSqlLinkedService#typeProperties
   */
  readonly typeProperties: PostgreSqlLinkedServiceTypeProperties;

}

/**
 * Linked service for Sybase data source.
 *
 * @schema #/definitions/SybaseLinkedService
 */
export interface SybaseLinkedService {
  /**
   * @schema #/definitions/SybaseLinkedService#type
   */
  readonly type: SybaseLinkedServiceType;

  /**
   * Sybase linked service properties.
   *
   * @schema #/definitions/SybaseLinkedService#typeProperties
   */
  readonly typeProperties: SybaseLinkedServiceTypeProperties;

}

/**
 * Linked service for DB2 data source.
 *
 * @schema #/definitions/Db2LinkedService
 */
export interface Db2LinkedService {
  /**
   * @schema #/definitions/Db2LinkedService#type
   */
  readonly type: Db2LinkedServiceType;

  /**
   * DB2 linked service properties.
   *
   * @schema #/definitions/Db2LinkedService#typeProperties
   */
  readonly typeProperties: Db2LinkedServiceTypeProperties;

}

/**
 * Linked service for Teradata data source.
 *
 * @schema #/definitions/TeradataLinkedService
 */
export interface TeradataLinkedService {
  /**
   * @schema #/definitions/TeradataLinkedService#type
   */
  readonly type: TeradataLinkedServiceType;

  /**
   * Teradata linked service properties.
   *
   * @schema #/definitions/TeradataLinkedService#typeProperties
   */
  readonly typeProperties: TeradataLinkedServiceTypeProperties;

}

/**
 * Azure ML Studio Web Service linked service.
 *
 * @schema #/definitions/AzureMLLinkedService
 */
export interface AzureMlLinkedService {
  /**
   * @schema #/definitions/AzureMLLinkedService#type
   */
  readonly type: AzureMlLinkedServiceType;

  /**
   * Azure ML Studio Web Service linked service properties.
   *
   * @schema #/definitions/AzureMLLinkedService#typeProperties
   */
  readonly typeProperties: AzureMlLinkedServiceTypeProperties;

}

/**
 * Azure ML Service linked service.
 *
 * @schema #/definitions/AzureMLServiceLinkedService
 */
export interface AzureMlServiceLinkedService {
  /**
   * @schema #/definitions/AzureMLServiceLinkedService#type
   */
  readonly type: AzureMlServiceLinkedServiceType;

  /**
   * Azure ML Service linked service properties.
   *
   * @schema #/definitions/AzureMLServiceLinkedService#typeProperties
   */
  readonly typeProperties: AzureMlServiceLinkedServiceTypeProperties;

}

/**
 * Open Database Connectivity (ODBC) linked service.
 *
 * @schema #/definitions/OdbcLinkedService
 */
export interface OdbcLinkedService {
  /**
   * @schema #/definitions/OdbcLinkedService#type
   */
  readonly type: OdbcLinkedServiceType;

  /**
   * ODBC linked service properties.
   *
   * @schema #/definitions/OdbcLinkedService#typeProperties
   */
  readonly typeProperties: OdbcLinkedServiceTypeProperties;

}

/**
 * Informix linked service.
 *
 * @schema #/definitions/InformixLinkedService
 */
export interface InformixLinkedService {
  /**
   * @schema #/definitions/InformixLinkedService#type
   */
  readonly type: InformixLinkedServiceType;

  /**
   * Informix linked service properties.
   *
   * @schema #/definitions/InformixLinkedService#typeProperties
   */
  readonly typeProperties: InformixLinkedServiceTypeProperties;

}

/**
 * Microsoft Access linked service.
 *
 * @schema #/definitions/MicrosoftAccessLinkedService
 */
export interface MicrosoftAccessLinkedService {
  /**
   * @schema #/definitions/MicrosoftAccessLinkedService#type
   */
  readonly type: MicrosoftAccessLinkedServiceType;

  /**
   * Microsoft Access linked service properties.
   *
   * @schema #/definitions/MicrosoftAccessLinkedService#typeProperties
   */
  readonly typeProperties: MicrosoftAccessLinkedServiceTypeProperties;

}

/**
 * Hadoop Distributed File System (HDFS) linked service.
 *
 * @schema #/definitions/HdfsLinkedService
 */
export interface HdfsLinkedService {
  /**
   * @schema #/definitions/HdfsLinkedService#type
   */
  readonly type: HdfsLinkedServiceType;

  /**
   * HDFS linked service properties.
   *
   * @schema #/definitions/HdfsLinkedService#typeProperties
   */
  readonly typeProperties: HdfsLinkedServiceTypeProperties;

}

/**
 * Open Data Protocol (OData) linked service.
 *
 * @schema #/definitions/ODataLinkedService
 */
export interface ODataLinkedService {
  /**
   * @schema #/definitions/ODataLinkedService#type
   */
  readonly type: ODataLinkedServiceType;

  /**
   * OData linked service properties.
   *
   * @schema #/definitions/ODataLinkedService#typeProperties
   */
  readonly typeProperties: ODataLinkedServiceTypeProperties;

}

/**
 * Web linked service.
 *
 * @schema #/definitions/WebLinkedService
 */
export interface WebLinkedService {
  /**
   * @schema #/definitions/WebLinkedService#type
   */
  readonly type: WebLinkedServiceType;

  /**
   * Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.
   *
   * @schema #/definitions/WebLinkedService#typeProperties
   */
  readonly typeProperties: WebLinkedServiceTypeProperties;

}

/**
 * Linked service for Cassandra data source.
 *
 * @schema #/definitions/CassandraLinkedService
 */
export interface CassandraLinkedService {
  /**
   * @schema #/definitions/CassandraLinkedService#type
   */
  readonly type: CassandraLinkedServiceType;

  /**
   * Cassandra linked service properties.
   *
   * @schema #/definitions/CassandraLinkedService#typeProperties
   */
  readonly typeProperties: CassandraLinkedServiceTypeProperties;

}

/**
 * Linked service for MongoDb data source.
 *
 * @schema #/definitions/MongoDbLinkedService
 */
export interface MongoDbLinkedService {
  /**
   * @schema #/definitions/MongoDbLinkedService#type
   */
  readonly type: MongoDbLinkedServiceType;

  /**
   * MongoDB linked service properties.
   *
   * @schema #/definitions/MongoDbLinkedService#typeProperties
   */
  readonly typeProperties: MongoDbLinkedServiceTypeProperties;

}

/**
 * Linked service for MongoDB Atlas data source.
 *
 * @schema #/definitions/MongoDbAtlasLinkedService
 */
export interface MongoDbAtlasLinkedService {
  /**
   * @schema #/definitions/MongoDbAtlasLinkedService#type
   */
  readonly type: MongoDbAtlasLinkedServiceType;

  /**
   * MongoDB Atlas linked service properties.
   *
   * @schema #/definitions/MongoDbAtlasLinkedService#typeProperties
   */
  readonly typeProperties: MongoDbAtlasLinkedServiceTypeProperties;

}

/**
 * Linked service for MongoDB data source.
 *
 * @schema #/definitions/MongoDbV2LinkedService
 */
export interface MongoDbV2LinkedService {
  /**
   * @schema #/definitions/MongoDbV2LinkedService#type
   */
  readonly type: MongoDbV2LinkedServiceType;

  /**
   * MongoDB linked service properties.
   *
   * @schema #/definitions/MongoDbV2LinkedService#typeProperties
   */
  readonly typeProperties: MongoDbV2LinkedServiceTypeProperties;

}

/**
 * Linked service for CosmosDB (MongoDB API) data source.
 *
 * @schema #/definitions/CosmosDbMongoDbApiLinkedService
 */
export interface CosmosDbMongoDbApiLinkedService {
  /**
   * @schema #/definitions/CosmosDbMongoDbApiLinkedService#type
   */
  readonly type: CosmosDbMongoDbApiLinkedServiceType;

  /**
   * CosmosDB (MongoDB API) linked service properties.
   *
   * @schema #/definitions/CosmosDbMongoDbApiLinkedService#typeProperties
   */
  readonly typeProperties: CosmosDbMongoDbApiLinkedServiceTypeProperties;

}

/**
 * Azure Data Lake Store linked service.
 *
 * @schema #/definitions/AzureDataLakeStoreLinkedService
 */
export interface AzureDataLakeStoreLinkedService {
  /**
   * @schema #/definitions/AzureDataLakeStoreLinkedService#type
   */
  readonly type: AzureDataLakeStoreLinkedServiceType;

  /**
   * Azure Data Lake Store linked service properties.
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedService#typeProperties
   */
  readonly typeProperties: AzureDataLakeStoreLinkedServiceTypeProperties;

}

/**
 * Azure Data Lake Storage Gen2 linked service.
 *
 * @schema #/definitions/AzureBlobFSLinkedService
 */
export interface AzureBlobFsLinkedService {
  /**
   * @schema #/definitions/AzureBlobFSLinkedService#type
   */
  readonly type: AzureBlobFsLinkedServiceType;

  /**
   * Azure Data Lake Storage Gen2 linked service properties.
   *
   * @schema #/definitions/AzureBlobFSLinkedService#typeProperties
   */
  readonly typeProperties: AzureBlobFsLinkedServiceTypeProperties;

}

/**
 * Office365 linked service.
 *
 * @schema #/definitions/Office365LinkedService
 */
export interface Office365LinkedService {
  /**
   * @schema #/definitions/Office365LinkedService#type
   */
  readonly type: Office365LinkedServiceType;

  /**
   * Office365 linked service properties.
   *
   * @schema #/definitions/Office365LinkedService#typeProperties
   */
  readonly typeProperties: Office365LinkedServiceTypeProperties;

}

/**
 * Linked service for Salesforce.
 *
 * @schema #/definitions/SalesforceLinkedService
 */
export interface SalesforceLinkedService {
  /**
   * @schema #/definitions/SalesforceLinkedService#type
   */
  readonly type: SalesforceLinkedServiceType;

  /**
   * Salesforce linked service properties.
   *
   * @schema #/definitions/SalesforceLinkedService#typeProperties
   */
  readonly typeProperties: SalesforceLinkedServiceTypeProperties;

}

/**
 * Linked service for Salesforce Service Cloud.
 *
 * @schema #/definitions/SalesforceServiceCloudLinkedService
 */
export interface SalesforceServiceCloudLinkedService {
  /**
   * @schema #/definitions/SalesforceServiceCloudLinkedService#type
   */
  readonly type: SalesforceServiceCloudLinkedServiceType;

  /**
   * Salesforce Service Cloud linked service properties.
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedService#typeProperties
   */
  readonly typeProperties: SalesforceServiceCloudLinkedServiceTypeProperties;

}

/**
 * Linked service for SAP Cloud for Customer.
 *
 * @schema #/definitions/SapCloudForCustomerLinkedService
 */
export interface SapCloudForCustomerLinkedService {
  /**
   * @schema #/definitions/SapCloudForCustomerLinkedService#type
   */
  readonly type: SapCloudForCustomerLinkedServiceType;

  /**
   * SAP Cloud for Customer linked service properties.
   *
   * @schema #/definitions/SapCloudForCustomerLinkedService#typeProperties
   */
  readonly typeProperties: SapCloudForCustomerLinkedServiceTypeProperties;

}

/**
 * Linked service for SAP ERP Central Component(SAP ECC).
 *
 * @schema #/definitions/SapEccLinkedService
 */
export interface SapEccLinkedService {
  /**
   * @schema #/definitions/SapEccLinkedService#type
   */
  readonly type: SapEccLinkedServiceType;

  /**
   * SAP ECC linked service properties.
   *
   * @schema #/definitions/SapEccLinkedService#typeProperties
   */
  readonly typeProperties: SapEccLinkedServiceTypeProperties;

}

/**
 * SAP Business Warehouse Open Hub Destination Linked Service.
 *
 * @schema #/definitions/SapOpenHubLinkedService
 */
export interface SapOpenHubLinkedService {
  /**
   * @schema #/definitions/SapOpenHubLinkedService#type
   */
  readonly type: SapOpenHubLinkedServiceType;

  /**
   * Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
   *
   * @schema #/definitions/SapOpenHubLinkedService#typeProperties
   */
  readonly typeProperties: SapOpenHubLinkedServiceTypeProperties;

}

/**
 * Rest Service linked service.
 *
 * @schema #/definitions/RestServiceLinkedService
 */
export interface RestServiceLinkedService {
  /**
   * @schema #/definitions/RestServiceLinkedService#type
   */
  readonly type: RestServiceLinkedServiceType;

  /**
   * Rest Service linked service properties.
   *
   * @schema #/definitions/RestServiceLinkedService#typeProperties
   */
  readonly typeProperties: RestServiceLinkedServiceTypeProperties;

}

/**
 * Linked service for Amazon S3.
 *
 * @schema #/definitions/AmazonS3LinkedService
 */
export interface AmazonS3LinkedService {
  /**
   * @schema #/definitions/AmazonS3LinkedService#type
   */
  readonly type: AmazonS3LinkedServiceType;

  /**
   * Amazon S3 linked service properties.
   *
   * @schema #/definitions/AmazonS3LinkedService#typeProperties
   */
  readonly typeProperties: AmazonS3LinkedServiceTypeProperties;

}

/**
 * Linked service for Amazon Redshift.
 *
 * @schema #/definitions/AmazonRedshiftLinkedService
 */
export interface AmazonRedshiftLinkedService {
  /**
   * @schema #/definitions/AmazonRedshiftLinkedService#type
   */
  readonly type: AmazonRedshiftLinkedServiceType;

  /**
   * Amazon Redshift linked service properties.
   *
   * @schema #/definitions/AmazonRedshiftLinkedService#typeProperties
   */
  readonly typeProperties: AmazonRedshiftLinkedServiceTypeProperties;

}

/**
 * Custom linked service.
 *
 * @schema #/definitions/CustomDataSourceLinkedService
 */
export interface CustomDataSourceLinkedService {
  /**
   * @schema #/definitions/CustomDataSourceLinkedService#type
   */
  readonly type: CustomDataSourceLinkedServiceType;

  /**
   * Custom linked service properties.
   *
   * @schema #/definitions/CustomDataSourceLinkedService#typeProperties
   */
  readonly typeProperties: CustomDataSourceLinkedServiceTypeProperties;

}

/**
 * Linked service for Windows Azure Search Service.
 *
 * @schema #/definitions/AzureSearchLinkedService
 */
export interface AzureSearchLinkedService {
  /**
   * @schema #/definitions/AzureSearchLinkedService#type
   */
  readonly type: AzureSearchLinkedServiceType;

  /**
   * Windows Azure Search Service linked service properties.
   *
   * @schema #/definitions/AzureSearchLinkedService#typeProperties
   */
  readonly typeProperties: AzureSearchLinkedServiceTypeProperties;

}

/**
 * Linked service for an HTTP source.
 *
 * @schema #/definitions/HttpLinkedService
 */
export interface HttpLinkedService {
  /**
   * @schema #/definitions/HttpLinkedService#type
   */
  readonly type: HttpLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/HttpLinkedService#typeProperties
   */
  readonly typeProperties: HttpLinkedServiceTypeProperties;

}

/**
 * A FTP server Linked Service.
 *
 * @schema #/definitions/FtpServerLinkedService
 */
export interface FtpServerLinkedService {
  /**
   * @schema #/definitions/FtpServerLinkedService#type
   */
  readonly type: FtpServerLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/FtpServerLinkedService#typeProperties
   */
  readonly typeProperties: FtpServerLinkedServiceTypeProperties;

}

/**
 * A linked service for an SSH File Transfer Protocol (SFTP) server. 
 *
 * @schema #/definitions/SftpServerLinkedService
 */
export interface SftpServerLinkedService {
  /**
   * @schema #/definitions/SftpServerLinkedService#type
   */
  readonly type: SftpServerLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/SftpServerLinkedService#typeProperties
   */
  readonly typeProperties: SftpServerLinkedServiceTypeProperties;

}

/**
 * SAP Business Warehouse Linked Service.
 *
 * @schema #/definitions/SapBWLinkedService
 */
export interface SapBwLinkedService {
  /**
   * @schema #/definitions/SapBWLinkedService#type
   */
  readonly type: SapBwLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/SapBWLinkedService#typeProperties
   */
  readonly typeProperties: SapBwLinkedServiceTypeProperties;

}

/**
 * SAP HANA Linked Service.
 *
 * @schema #/definitions/SapHanaLinkedService
 */
export interface SapHanaLinkedService {
  /**
   * @schema #/definitions/SapHanaLinkedService#type
   */
  readonly type: SapHanaLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/SapHanaLinkedService#typeProperties
   */
  readonly typeProperties: SapHanaLinkedServiceProperties;

}

/**
 * Amazon Marketplace Web Service linked service.
 *
 * @schema #/definitions/AmazonMWSLinkedService
 */
export interface AmazonMwsLinkedService {
  /**
   * @schema #/definitions/AmazonMWSLinkedService#type
   */
  readonly type: AmazonMwsLinkedServiceType;

  /**
   * Amazon Marketplace Web Service linked service properties.
   *
   * @schema #/definitions/AmazonMWSLinkedService#typeProperties
   */
  readonly typeProperties: AmazonMwsLinkedServiceTypeProperties;

}

/**
 * Azure PostgreSQL linked service.
 *
 * @schema #/definitions/AzurePostgreSqlLinkedService
 */
export interface AzurePostgreSqlLinkedService {
  /**
   * @schema #/definitions/AzurePostgreSqlLinkedService#type
   */
  readonly type: AzurePostgreSqlLinkedServiceType;

  /**
   * Azure PostgreSQL linked service properties.
   *
   * @schema #/definitions/AzurePostgreSqlLinkedService#typeProperties
   */
  readonly typeProperties: AzurePostgreSqlLinkedServiceTypeProperties;

}

/**
 * Concur Service linked service.
 *
 * @schema #/definitions/ConcurLinkedService
 */
export interface ConcurLinkedService {
  /**
   * @schema #/definitions/ConcurLinkedService#type
   */
  readonly type: ConcurLinkedServiceType;

  /**
   * Concur Service linked service properties.
   *
   * @schema #/definitions/ConcurLinkedService#typeProperties
   */
  readonly typeProperties: ConcurLinkedServiceTypeProperties;

}

/**
 * Couchbase server linked service.
 *
 * @schema #/definitions/CouchbaseLinkedService
 */
export interface CouchbaseLinkedService {
  /**
   * @schema #/definitions/CouchbaseLinkedService#type
   */
  readonly type: CouchbaseLinkedServiceType;

  /**
   * Couchbase server linked service properties.
   *
   * @schema #/definitions/CouchbaseLinkedService#typeProperties
   */
  readonly typeProperties: CouchbaseLinkedServiceTypeProperties;

}

/**
 * Drill server linked service.
 *
 * @schema #/definitions/DrillLinkedService
 */
export interface DrillLinkedService {
  /**
   * @schema #/definitions/DrillLinkedService#type
   */
  readonly type: DrillLinkedServiceType;

  /**
   * Drill server linked service properties.
   *
   * @schema #/definitions/DrillLinkedService#typeProperties
   */
  readonly typeProperties: DrillLinkedServiceTypeProperties;

}

/**
 * Eloqua server linked service.
 *
 * @schema #/definitions/EloquaLinkedService
 */
export interface EloquaLinkedService {
  /**
   * @schema #/definitions/EloquaLinkedService#type
   */
  readonly type: EloquaLinkedServiceType;

  /**
   * Eloqua server linked service properties.
   *
   * @schema #/definitions/EloquaLinkedService#typeProperties
   */
  readonly typeProperties: EloquaLinkedServiceTypeProperties;

}

/**
 * Google BigQuery service linked service.
 *
 * @schema #/definitions/GoogleBigQueryLinkedService
 */
export interface GoogleBigQueryLinkedService {
  /**
   * @schema #/definitions/GoogleBigQueryLinkedService#type
   */
  readonly type: GoogleBigQueryLinkedServiceType;

  /**
   * Google BigQuery service linked service properties.
   *
   * @schema #/definitions/GoogleBigQueryLinkedService#typeProperties
   */
  readonly typeProperties: GoogleBigQueryLinkedServiceTypeProperties;

}

/**
 * Greenplum Database linked service.
 *
 * @schema #/definitions/GreenplumLinkedService
 */
export interface GreenplumLinkedService {
  /**
   * @schema #/definitions/GreenplumLinkedService#type
   */
  readonly type: GreenplumLinkedServiceType;

  /**
   * Greenplum Database linked service properties.
   *
   * @schema #/definitions/GreenplumLinkedService#typeProperties
   */
  readonly typeProperties: GreenplumLinkedServiceTypeProperties;

}

/**
 * HBase server linked service.
 *
 * @schema #/definitions/HBaseLinkedService
 */
export interface HBaseLinkedService {
  /**
   * @schema #/definitions/HBaseLinkedService#type
   */
  readonly type: HBaseLinkedServiceType;

  /**
   * HBase server linked service properties.
   *
   * @schema #/definitions/HBaseLinkedService#typeProperties
   */
  readonly typeProperties: HBaseLinkedServiceTypeProperties;

}

/**
 * Hive Server linked service.
 *
 * @schema #/definitions/HiveLinkedService
 */
export interface HiveLinkedService {
  /**
   * @schema #/definitions/HiveLinkedService#type
   */
  readonly type: HiveLinkedServiceType;

  /**
   * Hive Server linked service properties.
   *
   * @schema #/definitions/HiveLinkedService#typeProperties
   */
  readonly typeProperties: HiveLinkedServiceTypeProperties;

}

/**
 * Hubspot Service linked service.
 *
 * @schema #/definitions/HubspotLinkedService
 */
export interface HubspotLinkedService {
  /**
   * @schema #/definitions/HubspotLinkedService#type
   */
  readonly type: HubspotLinkedServiceType;

  /**
   * Hubspot Service linked service properties.
   *
   * @schema #/definitions/HubspotLinkedService#typeProperties
   */
  readonly typeProperties: HubspotLinkedServiceTypeProperties;

}

/**
 * Impala server linked service.
 *
 * @schema #/definitions/ImpalaLinkedService
 */
export interface ImpalaLinkedService {
  /**
   * @schema #/definitions/ImpalaLinkedService#type
   */
  readonly type: ImpalaLinkedServiceType;

  /**
   * Impala server linked service properties.
   *
   * @schema #/definitions/ImpalaLinkedService#typeProperties
   */
  readonly typeProperties: ImpalaLinkedServiceTypeProperties;

}

/**
 * Jira Service linked service.
 *
 * @schema #/definitions/JiraLinkedService
 */
export interface JiraLinkedService {
  /**
   * @schema #/definitions/JiraLinkedService#type
   */
  readonly type: JiraLinkedServiceType;

  /**
   * Jira Service linked service properties.
   *
   * @schema #/definitions/JiraLinkedService#typeProperties
   */
  readonly typeProperties: JiraLinkedServiceTypeProperties;

}

/**
 * Magento server linked service.
 *
 * @schema #/definitions/MagentoLinkedService
 */
export interface MagentoLinkedService {
  /**
   * @schema #/definitions/MagentoLinkedService#type
   */
  readonly type: MagentoLinkedServiceType;

  /**
   * Magento server linked service properties.
   *
   * @schema #/definitions/MagentoLinkedService#typeProperties
   */
  readonly typeProperties: MagentoLinkedServiceTypeProperties;

}

/**
 * MariaDB server linked service.
 *
 * @schema #/definitions/MariaDBLinkedService
 */
export interface MariaDbLinkedService {
  /**
   * @schema #/definitions/MariaDBLinkedService#type
   */
  readonly type: MariaDbLinkedServiceType;

  /**
   * MariaDB server linked service properties.
   *
   * @schema #/definitions/MariaDBLinkedService#typeProperties
   */
  readonly typeProperties: MariaDbLinkedServiceTypeProperties;

}

/**
 * Azure Database for MariaDB linked service.
 *
 * @schema #/definitions/AzureMariaDBLinkedService
 */
export interface AzureMariaDbLinkedService {
  /**
   * @schema #/definitions/AzureMariaDBLinkedService#type
   */
  readonly type: AzureMariaDbLinkedServiceType;

  /**
   * Azure Database for MariaDB linked service properties.
   *
   * @schema #/definitions/AzureMariaDBLinkedService#typeProperties
   */
  readonly typeProperties: AzureMariaDbLinkedServiceTypeProperties;

}

/**
 * Marketo server linked service.
 *
 * @schema #/definitions/MarketoLinkedService
 */
export interface MarketoLinkedService {
  /**
   * @schema #/definitions/MarketoLinkedService#type
   */
  readonly type: MarketoLinkedServiceType;

  /**
   * Marketo server linked service properties.
   *
   * @schema #/definitions/MarketoLinkedService#typeProperties
   */
  readonly typeProperties: MarketoLinkedServiceTypeProperties;

}

/**
 * Paypal Service linked service.
 *
 * @schema #/definitions/PaypalLinkedService
 */
export interface PaypalLinkedService {
  /**
   * @schema #/definitions/PaypalLinkedService#type
   */
  readonly type: PaypalLinkedServiceType;

  /**
   * Paypal Service linked service properties.
   *
   * @schema #/definitions/PaypalLinkedService#typeProperties
   */
  readonly typeProperties: PaypalLinkedServiceTypeProperties;

}

/**
 * Phoenix server linked service.
 *
 * @schema #/definitions/PhoenixLinkedService
 */
export interface PhoenixLinkedService {
  /**
   * @schema #/definitions/PhoenixLinkedService#type
   */
  readonly type: PhoenixLinkedServiceType;

  /**
   * Phoenix server linked service properties.
   *
   * @schema #/definitions/PhoenixLinkedService#typeProperties
   */
  readonly typeProperties: PhoenixLinkedServiceTypeProperties;

}

/**
 * Presto server linked service.
 *
 * @schema #/definitions/PrestoLinkedService
 */
export interface PrestoLinkedService {
  /**
   * @schema #/definitions/PrestoLinkedService#type
   */
  readonly type: PrestoLinkedServiceType;

  /**
   * Presto server linked service properties.
   *
   * @schema #/definitions/PrestoLinkedService#typeProperties
   */
  readonly typeProperties: PrestoLinkedServiceTypeProperties;

}

/**
 * QuickBooks server linked service.
 *
 * @schema #/definitions/QuickBooksLinkedService
 */
export interface QuickBooksLinkedService {
  /**
   * @schema #/definitions/QuickBooksLinkedService#type
   */
  readonly type: QuickBooksLinkedServiceType;

  /**
   * QuickBooks server linked service properties.
   *
   * @schema #/definitions/QuickBooksLinkedService#typeProperties
   */
  readonly typeProperties: QuickBooksLinkedServiceTypeProperties;

}

/**
 * ServiceNow server linked service.
 *
 * @schema #/definitions/ServiceNowLinkedService
 */
export interface ServiceNowLinkedService {
  /**
   * @schema #/definitions/ServiceNowLinkedService#type
   */
  readonly type: ServiceNowLinkedServiceType;

  /**
   * ServiceNow server linked service properties.
   *
   * @schema #/definitions/ServiceNowLinkedService#typeProperties
   */
  readonly typeProperties: ServiceNowLinkedServiceTypeProperties;

}

/**
 * Shopify Service linked service.
 *
 * @schema #/definitions/ShopifyLinkedService
 */
export interface ShopifyLinkedService {
  /**
   * @schema #/definitions/ShopifyLinkedService#type
   */
  readonly type: ShopifyLinkedServiceType;

  /**
   * Shopify Service linked service properties.
   *
   * @schema #/definitions/ShopifyLinkedService#typeProperties
   */
  readonly typeProperties: ShopifyLinkedServiceTypeProperties;

}

/**
 * Spark Server linked service.
 *
 * @schema #/definitions/SparkLinkedService
 */
export interface SparkLinkedService {
  /**
   * @schema #/definitions/SparkLinkedService#type
   */
  readonly type: SparkLinkedServiceType;

  /**
   * Spark Server linked service properties.
   *
   * @schema #/definitions/SparkLinkedService#typeProperties
   */
  readonly typeProperties: SparkLinkedServiceTypeProperties;

}

/**
 * Square Service linked service.
 *
 * @schema #/definitions/SquareLinkedService
 */
export interface SquareLinkedService {
  /**
   * @schema #/definitions/SquareLinkedService#type
   */
  readonly type: SquareLinkedServiceType;

  /**
   * Square Service linked service properties.
   *
   * @schema #/definitions/SquareLinkedService#typeProperties
   */
  readonly typeProperties: SquareLinkedServiceTypeProperties;

}

/**
 * Xero Service linked service.
 *
 * @schema #/definitions/XeroLinkedService
 */
export interface XeroLinkedService {
  /**
   * @schema #/definitions/XeroLinkedService#type
   */
  readonly type: XeroLinkedServiceType;

  /**
   * Xero Service linked service properties.
   *
   * @schema #/definitions/XeroLinkedService#typeProperties
   */
  readonly typeProperties: XeroLinkedServiceTypeProperties;

}

/**
 * Zoho server linked service.
 *
 * @schema #/definitions/ZohoLinkedService
 */
export interface ZohoLinkedService {
  /**
   * @schema #/definitions/ZohoLinkedService#type
   */
  readonly type: ZohoLinkedServiceType;

  /**
   * Zoho server linked service properties.
   *
   * @schema #/definitions/ZohoLinkedService#typeProperties
   */
  readonly typeProperties: ZohoLinkedServiceTypeProperties;

}

/**
 * Vertica linked service.
 *
 * @schema #/definitions/VerticaLinkedService
 */
export interface VerticaLinkedService {
  /**
   * @schema #/definitions/VerticaLinkedService#type
   */
  readonly type: VerticaLinkedServiceType;

  /**
   * Vertica linked service properties.
   *
   * @schema #/definitions/VerticaLinkedService#typeProperties
   */
  readonly typeProperties: VerticaLinkedServiceTypeProperties;

}

/**
 * Netezza linked service.
 *
 * @schema #/definitions/NetezzaLinkedService
 */
export interface NetezzaLinkedService {
  /**
   * @schema #/definitions/NetezzaLinkedService#type
   */
  readonly type: NetezzaLinkedServiceType;

  /**
   * Netezza linked service properties.
   *
   * @schema #/definitions/NetezzaLinkedService#typeProperties
   */
  readonly typeProperties: NetezzaLinkedServiceTypeProperties;

}

/**
 * Salesforce Marketing Cloud linked service.
 *
 * @schema #/definitions/SalesforceMarketingCloudLinkedService
 */
export interface SalesforceMarketingCloudLinkedService {
  /**
   * @schema #/definitions/SalesforceMarketingCloudLinkedService#type
   */
  readonly type: SalesforceMarketingCloudLinkedServiceType;

  /**
   * Salesforce Marketing Cloud linked service properties.
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedService#typeProperties
   */
  readonly typeProperties: SalesforceMarketingCloudLinkedServiceTypeProperties;

}

/**
 * HDInsight ondemand linked service.
 *
 * @schema #/definitions/HDInsightOnDemandLinkedService
 */
export interface HdInsightOnDemandLinkedService {
  /**
   * @schema #/definitions/HDInsightOnDemandLinkedService#type
   */
  readonly type: HdInsightOnDemandLinkedServiceType;

  /**
   * HDInsight ondemand linked service properties.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedService#typeProperties
   */
  readonly typeProperties: HdInsightOnDemandLinkedServiceTypeProperties;

}

/**
 * Azure Data Lake Analytics linked service.
 *
 * @schema #/definitions/AzureDataLakeAnalyticsLinkedService
 */
export interface AzureDataLakeAnalyticsLinkedService {
  /**
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedService#type
   */
  readonly type: AzureDataLakeAnalyticsLinkedServiceType;

  /**
   * Azure Data Lake Analytics linked service properties.
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedService#typeProperties
   */
  readonly typeProperties: AzureDataLakeAnalyticsLinkedServiceTypeProperties;

}

/**
 * Azure Databricks linked service.
 *
 * @schema #/definitions/AzureDatabricksLinkedService
 */
export interface AzureDatabricksLinkedService {
  /**
   * @schema #/definitions/AzureDatabricksLinkedService#type
   */
  readonly type: AzureDatabricksLinkedServiceType;

  /**
   * Azure Databricks linked service properties.
   *
   * @schema #/definitions/AzureDatabricksLinkedService#typeProperties
   */
  readonly typeProperties: AzureDatabricksLinkedServiceTypeProperties;

}

/**
 * Azure Databricks Delta Lake linked service.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeLinkedService
 */
export interface AzureDatabricksDeltaLakeLinkedService {
  /**
   * @schema #/definitions/AzureDatabricksDeltaLakeLinkedService#type
   */
  readonly type: AzureDatabricksDeltaLakeLinkedServiceType;

  /**
   * Azure Databricks Delta Lake linked service properties.
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeLinkedService#typeProperties
   */
  readonly typeProperties: AzureDatabricksDetltaLakeLinkedServiceTypeProperties;

}

/**
 * Responsys linked service.
 *
 * @schema #/definitions/ResponsysLinkedService
 */
export interface ResponsysLinkedService {
  /**
   * @schema #/definitions/ResponsysLinkedService#type
   */
  readonly type: ResponsysLinkedServiceType;

  /**
   * Responsys linked service properties.
   *
   * @schema #/definitions/ResponsysLinkedService#typeProperties
   */
  readonly typeProperties: ResponsysLinkedServiceTypeProperties;

}

/**
 * Dynamics AX linked service.
 *
 * @schema #/definitions/DynamicsAXLinkedService
 */
export interface DynamicsAxLinkedService {
  /**
   * @schema #/definitions/DynamicsAXLinkedService#type
   */
  readonly type: DynamicsAxLinkedServiceType;

  /**
   * Dynamics AX linked service properties.
   *
   * @schema #/definitions/DynamicsAXLinkedService#typeProperties
   */
  readonly typeProperties: DynamicsAxLinkedServiceTypeProperties;

}

/**
 * Oracle Service Cloud linked service.
 *
 * @schema #/definitions/OracleServiceCloudLinkedService
 */
export interface OracleServiceCloudLinkedService {
  /**
   * @schema #/definitions/OracleServiceCloudLinkedService#type
   */
  readonly type: OracleServiceCloudLinkedServiceType;

  /**
   * Oracle Service Cloud linked service properties.
   *
   * @schema #/definitions/OracleServiceCloudLinkedService#typeProperties
   */
  readonly typeProperties: OracleServiceCloudLinkedServiceTypeProperties;

}

/**
 * Google AdWords service linked service.
 *
 * @schema #/definitions/GoogleAdWordsLinkedService
 */
export interface GoogleAdWordsLinkedService {
  /**
   * @schema #/definitions/GoogleAdWordsLinkedService#type
   */
  readonly type: GoogleAdWordsLinkedServiceType;

  /**
   * Google AdWords service linked service properties.
   *
   * @schema #/definitions/GoogleAdWordsLinkedService#typeProperties
   */
  readonly typeProperties: GoogleAdWordsLinkedServiceTypeProperties;

}

/**
 * SAP Table Linked Service.
 *
 * @schema #/definitions/SapTableLinkedService
 */
export interface SapTableLinkedService {
  /**
   * @schema #/definitions/SapTableLinkedService#type
   */
  readonly type: SapTableLinkedServiceType;

  /**
   * Properties specific to this linked service type.
   *
   * @schema #/definitions/SapTableLinkedService#typeProperties
   */
  readonly typeProperties: SapTableLinkedServiceTypeProperties;

}

/**
 * Azure Data Explorer (Kusto) linked service.
 *
 * @schema #/definitions/AzureDataExplorerLinkedService
 */
export interface AzureDataExplorerLinkedService {
  /**
   * @schema #/definitions/AzureDataExplorerLinkedService#type
   */
  readonly type: AzureDataExplorerLinkedServiceType;

  /**
   * Azure Data Explorer (Kusto) linked service properties.
   *
   * @schema #/definitions/AzureDataExplorerLinkedService#typeProperties
   */
  readonly typeProperties: AzureDataExplorerLinkedServiceTypeProperties;

}

/**
 * Azure Function linked service.
 *
 * @schema #/definitions/AzureFunctionLinkedService
 */
export interface AzureFunctionLinkedService {
  /**
   * @schema #/definitions/AzureFunctionLinkedService#type
   */
  readonly type: AzureFunctionLinkedServiceType;

  /**
   * Azure Function linked service properties.
   *
   * @schema #/definitions/AzureFunctionLinkedService#typeProperties
   */
  readonly typeProperties: AzureFunctionLinkedServiceTypeProperties;

}

/**
 * Snowflake linked service.
 *
 * @schema #/definitions/SnowflakeLinkedService
 */
export interface SnowflakeLinkedService {
  /**
   * @schema #/definitions/SnowflakeLinkedService#type
   */
  readonly type: SnowflakeLinkedServiceType;

  /**
   * Snowflake linked service properties.
   *
   * @schema #/definitions/SnowflakeLinkedService#typeProperties
   */
  readonly typeProperties: SnowflakeLinkedServiceTypeProperties;

}

/**
 * SharePoint Online List linked service.
 *
 * @schema #/definitions/SharePointOnlineListLinkedService
 */
export interface SharePointOnlineListLinkedService {
  /**
   * @schema #/definitions/SharePointOnlineListLinkedService#type
   */
  readonly type: SharePointOnlineListLinkedServiceType;

  /**
   * SharePoint Online List linked service properties.
   *
   * @schema #/definitions/SharePointOnlineListLinkedService#typeProperties
   */
  readonly typeProperties: SharePointOnlineListLinkedServiceTypeProperties;

}

/**
 * @schema #/definitions/managedVirtualNetworkAdditionalProperties
 */
export interface ManagedVirtualNetworkAdditionalProperties {
}

export enum FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceApiVersion {
  "FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceName
 */
export class FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesManagedVirtualNetworksManagedPrivateEndpointsChildResourceType {
  MANAGED_PRIVATE_ENDPOINTS = 'managedPrivateEndpoints',
}

/**
 * @schema #/definitions/managedPrivateEndpointAdditionalProperties
 */
export interface ManagedPrivateEndpointAdditionalProperties {
}

/**
 * The connection state of a managed private endpoint
 *
 * @schema #/definitions/ConnectionStateProperties
 */
export interface ConnectionStateProperties {
}

/**
 * A pipeline activity.
 *
 * @schema #/definitions/Activity
 */
export class Activity {
  public static fromControlActivity(value: ControlActivity): Activity {
    return new Activity(value);
  }
  public static fromExecutionActivity(value: ExecutionActivity): Activity {
    return new Activity(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema #/definitions/pipelineAnnotations
 */
export interface PipelineAnnotations {
}

/**
 * The folder that this Pipeline is in. If not specified, Pipeline will appear at the root level.
 *
 * @schema #/definitions/PipelineFolder
 */
export interface PipelineFolder {
  /**
   * The name of the folder that this Pipeline is in.
   *
   * @schema #/definitions/PipelineFolder#name
   */
  readonly name?: string;

}

/**
 * @schema #/definitions/pipelineParameters
 */
export interface PipelineParameters {
}

/**
 * Pipeline Policy.
 *
 * @schema #/definitions/PipelinePolicy
 */
export interface PipelinePolicy {
  /**
   * Pipeline ElapsedTime Metric Policy.
   *
   * @schema #/definitions/PipelinePolicy#elapsedTimeMetric
   */
  readonly elapsedTimeMetric?: PipelineElapsedTimeMetricPolicy;

}

/**
 * @schema #/definitions/pipelineRunDimensions
 */
export interface PipelineRunDimensions {
}

/**
 * @schema #/definitions/pipelineVariables
 */
export interface PipelineVariables {
}

/**
 * The state of a private link connection
 *
 * @schema #/definitions/PrivateLinkConnectionState
 */
export interface PrivateLinkConnectionState {
  /**
   * ActionsRequired for a private link connection
   *
   * @schema #/definitions/PrivateLinkConnectionState#actionsRequired
   */
  readonly actionsRequired?: string;

  /**
   * Description of a private link connection
   *
   * @schema #/definitions/PrivateLinkConnectionState#description
   */
  readonly description?: string;

  /**
   * Status of a private link connection
   *
   * @schema #/definitions/PrivateLinkConnectionState#status
   */
  readonly status?: string;

}

/**
 * Base class for all triggers that support one to many model for trigger to pipeline.
 *
 * @schema #/definitions/MultiplePipelineTrigger
 */
export class MultiplePipelineTrigger {
  public static fromScheduleTrigger(value: ScheduleTrigger): MultiplePipelineTrigger {
    return new MultiplePipelineTrigger(value);
  }
  public static fromBlobTrigger(value: BlobTrigger): MultiplePipelineTrigger {
    return new MultiplePipelineTrigger(value);
  }
  public static fromBlobEventsTrigger(value: BlobEventsTrigger): MultiplePipelineTrigger {
    return new MultiplePipelineTrigger(value);
  }
  public static fromCustomEventsTrigger(value: CustomEventsTrigger): MultiplePipelineTrigger {
    return new MultiplePipelineTrigger(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Trigger that schedules pipeline runs for all fixed time interval windows from a start time without gaps and also supports backfill scenarios (when start time is in the past).
 *
 * @schema #/definitions/TumblingWindowTrigger
 */
export interface TumblingWindowTrigger {
  /**
   * Pipeline that needs to be triggered with the given parameters.
   *
   * @schema #/definitions/TumblingWindowTrigger#pipeline
   */
  readonly pipeline: TriggerPipelineReference;

  /**
   * @schema #/definitions/TumblingWindowTrigger#type
   */
  readonly type: TumblingWindowTriggerType;

  /**
   * Tumbling Window Trigger properties.
   *
   * @schema #/definitions/TumblingWindowTrigger#typeProperties
   */
  readonly typeProperties: TumblingWindowTriggerTypeProperties;

}

/**
 * Trigger that schedules pipeline reruns for all fixed time interval windows from a requested start time to requested end time.
 *
 * @schema #/definitions/RerunTumblingWindowTrigger
 */
export interface RerunTumblingWindowTrigger {
  /**
   * @schema #/definitions/RerunTumblingWindowTrigger#type
   */
  readonly type: RerunTumblingWindowTriggerType;

  /**
   * Rerun Trigger properties.
   *
   * @schema #/definitions/RerunTumblingWindowTrigger#typeProperties
   */
  readonly typeProperties: RerunTumblingWindowTriggerTypeProperties;

}

/**
 * Trigger that allows the referenced pipeline to depend on other pipeline runs based on runDimension Name/Value pairs. Upstream pipelines should declare the same runDimension Name and their runs should have the values for those runDimensions. The referenced pipeline run would be triggered if the values for the runDimension match for all upstream pipeline runs.
 *
 * @schema #/definitions/ChainingTrigger
 */
export interface ChainingTrigger {
  /**
   * Pipeline that needs to be triggered with the given parameters.
   *
   * @schema #/definitions/ChainingTrigger#pipeline
   */
  readonly pipeline: TriggerPipelineReference;

  /**
   * @schema #/definitions/ChainingTrigger#type
   */
  readonly type: ChainingTriggerType;

  /**
   * Chaining Trigger properties.
   *
   * @schema #/definitions/ChainingTrigger#typeProperties
   */
  readonly typeProperties: ChainingTriggerTypeProperties;

}

/**
 * Managed Identity used for CMK.
 *
 * @schema #/definitions/CMKIdentityDefinition
 */
export interface CmkIdentityDefinition {
  /**
   * The resource id of the user assigned identity to authenticate to customer's key vault.
   *
   * @schema #/definitions/CMKIdentityDefinition#userAssignedIdentity
   */
  readonly userAssignedIdentity?: string;

}

/**
 * Factory's VSTS repo information.
 *
 * @schema #/definitions/FactoryVSTSConfiguration
 */
export interface FactoryVstsConfiguration {
  /**
   * VSTS project name.
   *
   * @schema #/definitions/FactoryVSTSConfiguration#projectName
   */
  readonly projectName: string;

  /**
   * VSTS tenant id.
   *
   * @schema #/definitions/FactoryVSTSConfiguration#tenantId
   */
  readonly tenantId?: string;

  /**
   * @schema #/definitions/FactoryVSTSConfiguration#type
   */
  readonly type: FactoryVstsConfigurationType;

}

/**
 * Factory's GitHub repo information.
 *
 * @schema #/definitions/FactoryGitHubConfiguration
 */
export interface FactoryGitHubConfiguration {
  /**
   * GitHub Enterprise host name. For example: https://github.mydomain.com
   *
   * @schema #/definitions/FactoryGitHubConfiguration#hostName
   */
  readonly hostName?: string;

  /**
   * @schema #/definitions/FactoryGitHubConfiguration#type
   */
  readonly type: FactoryGitHubConfigurationType;

}

export enum FactoriesIntegrationRuntimesChildResourceApiVersion {
  "FactoriesIntegrationRuntimesChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesIntegrationRuntimesChildResourceName
 */
export class FactoriesIntegrationRuntimesChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesIntegrationRuntimesChildResourceType {
  INTEGRATION_RUNTIMES = 'integrationRuntimes',
}

export enum FactoriesLinkedservicesChildResourceApiVersion {
  "FactoriesLinkedservicesChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesLinkedservicesChildResourceName
 */
export class FactoriesLinkedservicesChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesLinkedservicesChildResourceType {
  LINKEDSERVICES = 'linkedservices',
}

export enum FactoriesDatasetsChildResourceApiVersion {
  "FactoriesDatasetsChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesDatasetsChildResourceName
 */
export class FactoriesDatasetsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesDatasetsChildResourceType {
  DATASETS = 'datasets',
}

export enum FactoriesPipelinesChildResourceApiVersion {
  "FactoriesPipelinesChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesPipelinesChildResourceName
 */
export class FactoriesPipelinesChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesPipelinesChildResourceType {
  PIPELINES = 'pipelines',
}

export enum FactoriesTriggersChildResourceApiVersion {
  "FactoriesTriggersChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesTriggersChildResourceName
 */
export class FactoriesTriggersChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesTriggersChildResourceType {
  TRIGGERS = 'triggers',
}

export enum FactoriesDataflowsChildResourceApiVersion {
  "FactoriesDataflowsChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesDataflowsChildResourceName
 */
export class FactoriesDataflowsChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesDataflowsChildResourceType {
  DATAFLOWS = 'dataflows',
}

export enum FactoriesManagedVirtualNetworksChildResourceApiVersion {
  "FactoriesManagedVirtualNetworksChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

/**
 * @schema #/definitions/factoriesManagedVirtualNetworksChildResourceName
 */
export class FactoriesManagedVirtualNetworksChildResourceNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum FactoriesManagedVirtualNetworksChildResourceType {
  MANAGED_VIRTUAL_NETWORKS = 'managedVirtualNetworks',
}

export enum FactoriesPrivateEndpointConnectionsChildResourceApiVersion {
  "FactoriesPrivateEndpointConnectionsChildResourceApiVersion_2018_06_01" = '2018-06-01',
}

export enum FactoriesPrivateEndpointConnectionsChildResourceType {
  PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
}

/**
 * Transformation for data flow sink.
 *
 * @schema #/definitions/DataFlowSink
 */
export interface DataFlowSink {
  /**
   * Dataset reference type.
   *
   * @schema #/definitions/DataFlowSink#dataset
   */
  readonly dataset?: DatasetReference;

  /**
   * Transformation description.
   *
   * @schema #/definitions/DataFlowSink#description
   */
  readonly description?: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataFlowSink#linkedService
   */
  readonly linkedService?: LinkedServiceReference;

  /**
   * Transformation name.
   *
   * @schema #/definitions/DataFlowSink#name
   */
  readonly name: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataFlowSink#schemaLinkedService
   */
  readonly schemaLinkedService?: LinkedServiceReference;

}

/**
 * Transformation for data flow source.
 *
 * @schema #/definitions/DataFlowSource
 */
export interface DataFlowSource {
  /**
   * Dataset reference type.
   *
   * @schema #/definitions/DataFlowSource#dataset
   */
  readonly dataset?: DatasetReference;

  /**
   * Transformation description.
   *
   * @schema #/definitions/DataFlowSource#description
   */
  readonly description?: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataFlowSource#linkedService
   */
  readonly linkedService?: LinkedServiceReference;

  /**
   * Transformation name.
   *
   * @schema #/definitions/DataFlowSource#name
   */
  readonly name: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataFlowSource#schemaLinkedService
   */
  readonly schemaLinkedService?: LinkedServiceReference;

}

/**
 * A data flow transformation.
 *
 * @schema #/definitions/Transformation
 */
export interface Transformation {
  /**
   * Transformation description.
   *
   * @schema #/definitions/Transformation#description
   */
  readonly description?: string;

  /**
   * Transformation name.
   *
   * @schema #/definitions/Transformation#name
   */
  readonly name: string;

}

export enum AmazonS3DatasetType {
  "AmazonS3DatasetType_AMAZON_S3_OBJECT" = 'AmazonS3Object',
}

/**
 * Amazon S3 dataset properties.
 *
 * @schema #/definitions/AmazonS3DatasetTypeProperties
 */
export interface AmazonS3DatasetTypeProperties {
  /**
   * The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#bucketName
   */
  readonly bucketName: AmazonS3DatasetTypePropertiesBucketName;

  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

  /**
   * The key of the Amazon S3 object. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#key
   */
  readonly key?: AmazonS3DatasetTypePropertiesKey;

  /**
   * The end of S3 object's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AmazonS3DatasetTypePropertiesModifiedDatetimeEnd;

  /**
   * The start of S3 object's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AmazonS3DatasetTypePropertiesModifiedDatetimeStart;

  /**
   * The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#prefix
   */
  readonly prefix?: AmazonS3DatasetTypePropertiesPrefix;

  /**
   * The version for the S3 object. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3DatasetTypeProperties#version
   */
  readonly version?: AmazonS3DatasetTypePropertiesVersion;

}

export enum AvroDatasetType {
  AVRO = 'Avro',
}

/**
 * Avro dataset properties.
 *
 * @schema #/definitions/AvroDatasetTypeProperties
 */
export interface AvroDatasetTypeProperties {
  /**
   * @schema #/definitions/AvroDatasetTypeProperties#avroCompressionCodec
   */
  readonly avroCompressionCodec?: AvroDatasetTypePropertiesAvroCompressionCodec;

  /**
   * @schema #/definitions/AvroDatasetTypeProperties#avroCompressionLevel
   */
  readonly avroCompressionLevel?: number;

  /**
   * Dataset location.
   *
   * @schema #/definitions/AvroDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

}

export enum ExcelDatasetType {
  EXCEL = 'Excel',
}

/**
 * Excel dataset properties.
 *
 * @schema #/definitions/ExcelDatasetTypeProperties
 */
export interface ExcelDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#firstRowAsHeader
   */
  readonly firstRowAsHeader?: ExcelDatasetTypePropertiesFirstRowAsHeader;

  /**
   * Dataset location.
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

  /**
   * The null value string. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#nullValue
   */
  readonly nullValue?: ExcelDatasetTypePropertiesNullValue;

  /**
   * The partial data of one sheet. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#range
   */
  readonly range?: ExcelDatasetTypePropertiesRange;

  /**
   * The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#sheetIndex
   */
  readonly sheetIndex?: ExcelDatasetTypePropertiesSheetIndex;

  /**
   * The sheet name of excel file. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExcelDatasetTypeProperties#sheetName
   */
  readonly sheetName?: ExcelDatasetTypePropertiesSheetName;

}

export enum ParquetDatasetType {
  PARQUET = 'Parquet',
}

/**
 * Parquet dataset properties.
 *
 * @schema #/definitions/ParquetDatasetTypeProperties
 */
export interface ParquetDatasetTypeProperties {
  /**
   * @schema #/definitions/ParquetDatasetTypeProperties#compressionCodec
   */
  readonly compressionCodec?: ParquetDatasetTypePropertiesCompressionCodec;

  /**
   * Dataset location.
   *
   * @schema #/definitions/ParquetDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

}

export enum DelimitedTextDatasetType {
  DELIMITED_TEXT = 'DelimitedText',
}

/**
 * DelimitedText dataset properties.
 *
 * @schema #/definitions/DelimitedTextDatasetTypeProperties
 */
export interface DelimitedTextDatasetTypeProperties {
  /**
   * The column delimiter. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#columnDelimiter
   */
  readonly columnDelimiter?: DelimitedTextDatasetTypePropertiesColumnDelimiter;

  /**
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#compressionCodec
   */
  readonly compressionCodec?: DelimitedTextDatasetTypePropertiesCompressionCodec;

  /**
   * The data compression method used for DelimitedText.
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#compressionLevel
   */
  readonly compressionLevel?: DelimitedTextDatasetTypePropertiesCompressionLevel;

  /**
   * The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#encodingName
   */
  readonly encodingName?: DelimitedTextDatasetTypePropertiesEncodingName;

  /**
   * The escape character. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#escapeChar
   */
  readonly escapeChar?: DelimitedTextDatasetTypePropertiesEscapeChar;

  /**
   * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#firstRowAsHeader
   */
  readonly firstRowAsHeader?: DelimitedTextDatasetTypePropertiesFirstRowAsHeader;

  /**
   * Dataset location.
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

  /**
   * The null value string. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#nullValue
   */
  readonly nullValue?: DelimitedTextDatasetTypePropertiesNullValue;

  /**
   * The quote character. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#quoteChar
   */
  readonly quoteChar?: DelimitedTextDatasetTypePropertiesQuoteChar;

  /**
   * The row delimiter. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextDatasetTypeProperties#rowDelimiter
   */
  readonly rowDelimiter?: DelimitedTextDatasetTypePropertiesRowDelimiter;

}

export enum JsonDatasetType {
  JSON = 'Json',
}

/**
 * Json dataset properties.
 *
 * @schema #/definitions/JsonDatasetTypeProperties
 */
export interface JsonDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/JsonDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JsonDatasetTypeProperties#encodingName
   */
  readonly encodingName?: JsonDatasetTypePropertiesEncodingName;

  /**
   * Dataset location.
   *
   * @schema #/definitions/JsonDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

}

export enum XmlDatasetType {
  XML = 'Xml',
}

/**
 * Xml dataset properties.
 *
 * @schema #/definitions/XmlDatasetTypeProperties
 */
export interface XmlDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/XmlDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/XmlDatasetTypeProperties#encodingName
   */
  readonly encodingName?: XmlDatasetTypePropertiesEncodingName;

  /**
   * Dataset location.
   *
   * @schema #/definitions/XmlDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

  /**
   * The null value string. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/XmlDatasetTypeProperties#nullValue
   */
  readonly nullValue?: XmlDatasetTypePropertiesNullValue;

}

export enum OrcDatasetType {
  ORC = 'Orc',
}

/**
 * ORC dataset properties.
 *
 * @schema #/definitions/OrcDatasetTypeProperties
 */
export interface OrcDatasetTypeProperties {
  /**
   * Dataset location.
   *
   * @schema #/definitions/OrcDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

  /**
   * @schema #/definitions/OrcDatasetTypeProperties#orcCompressionCodec
   */
  readonly orcCompressionCodec?: OrcDatasetTypePropertiesOrcCompressionCodec;

}

export enum BinaryDatasetType {
  BINARY = 'Binary',
}

/**
 * Binary dataset properties.
 *
 * @schema #/definitions/BinaryDatasetTypeProperties
 */
export interface BinaryDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/BinaryDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * Dataset location.
   *
   * @schema #/definitions/BinaryDatasetTypeProperties#location
   */
  readonly location: DatasetLocation;

}

export enum AzureBlobDatasetType {
  AZURE_BLOB = 'AzureBlob',
}

/**
 * Azure Blob dataset properties.
 *
 * @schema #/definitions/AzureBlobDatasetTypeProperties
 */
export interface AzureBlobDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The name of the Azure Blob. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#fileName
   */
  readonly fileName?: AzureBlobDatasetTypePropertiesFileName;

  /**
   * The path of the Azure Blob storage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#folderPath
   */
  readonly folderPath?: AzureBlobDatasetTypePropertiesFolderPath;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

  /**
   * The end of Azure Blob's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AzureBlobDatasetTypePropertiesModifiedDatetimeEnd;

  /**
   * The start of Azure Blob's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AzureBlobDatasetTypePropertiesModifiedDatetimeStart;

  /**
   * The root of blob path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobDatasetTypeProperties#tableRootLocation
   */
  readonly tableRootLocation?: AzureBlobDatasetTypePropertiesTableRootLocation;

}

export enum AzureTableDatasetType {
  AZURE_TABLE = 'AzureTable',
}

/**
 * Azure Table dataset properties.
 *
 * @schema #/definitions/AzureTableDatasetTypeProperties
 */
export interface AzureTableDatasetTypeProperties {
  /**
   * The table name of the Azure Table storage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableDatasetTypeProperties#tableName
   */
  readonly tableName: AzureTableDatasetTypePropertiesTableName;

}

export enum AzureSqlTableDatasetType {
  AZURE_SQL_TABLE = 'AzureSqlTable',
}

/**
 * Azure SQL dataset properties.
 *
 * @schema #/definitions/AzureSqlTableDatasetTypeProperties
 */
export interface AzureSqlTableDatasetTypeProperties {
  /**
   * The schema name of the Azure SQL database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlTableDatasetTypeProperties#schema
   */
  readonly schema?: AzureSqlTableDatasetTypePropertiesSchema;

  /**
   * The table name of the Azure SQL database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlTableDatasetTypeProperties#table
   */
  readonly table?: AzureSqlTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/AzureSqlTableDatasetTypeProperties#tableName
   */
  readonly tableName?: AzureSqlTableDatasetTypePropertiesTableName;

}

export enum AzureSqlMiTableDatasetType {
  AZURE_SQL_MI_TABLE = 'AzureSqlMITable',
}

/**
 * Azure SQL Managed Instance dataset properties.
 *
 * @schema #/definitions/AzureSqlMITableDatasetTypeProperties
 */
export interface AzureSqlMiTableDatasetTypeProperties {
  /**
   * The schema name of the Azure SQL Managed Instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMITableDatasetTypeProperties#schema
   */
  readonly schema?: AzureSqlMiTableDatasetTypePropertiesSchema;

  /**
   * The table name of the Azure SQL Managed Instance dataset. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMITableDatasetTypeProperties#table
   */
  readonly table?: AzureSqlMiTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/AzureSqlMITableDatasetTypeProperties#tableName
   */
  readonly tableName?: AzureSqlMiTableDatasetTypePropertiesTableName;

}

export enum AzureSqlDwTableDatasetType {
  AZURE_SQL_DW_TABLE = 'AzureSqlDWTable',
}

/**
 * Azure SQL Data Warehouse dataset properties.
 *
 * @schema #/definitions/AzureSqlDWTableDatasetTypeProperties
 */
export interface AzureSqlDwTableDatasetTypeProperties {
  /**
   * The schema name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWTableDatasetTypeProperties#schema
   */
  readonly schema?: AzureSqlDwTableDatasetTypePropertiesSchema;

  /**
   * The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWTableDatasetTypeProperties#table
   */
  readonly table?: AzureSqlDwTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/AzureSqlDWTableDatasetTypeProperties#tableName
   */
  readonly tableName?: AzureSqlDwTableDatasetTypePropertiesTableName;

}

export enum CassandraTableDatasetType {
  CASSANDRA_TABLE = 'CassandraTable',
}

/**
 * Cassandra dataset properties.
 *
 * @schema #/definitions/CassandraTableDatasetTypeProperties
 */
export interface CassandraTableDatasetTypeProperties {
  /**
   * The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraTableDatasetTypeProperties#keyspace
   */
  readonly keyspace?: CassandraTableDatasetTypePropertiesKeyspace;

  /**
   * The table name of the Cassandra database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraTableDatasetTypeProperties#tableName
   */
  readonly tableName?: CassandraTableDatasetTypePropertiesTableName;

}

export enum CustomDatasetType {
  CUSTOM_DATASET = 'CustomDataset',
}

/**
 * Custom dataset properties.
 *
 * @schema #/definitions/customDatasetTypeProperties
 */
export interface CustomDatasetTypeProperties {
}

export enum CosmosDbSqlApiCollectionDatasetType {
  COSMOS_DB_SQL_API_COLLECTION = 'CosmosDbSqlApiCollection',
}

/**
 * CosmosDB (SQL API) Collection dataset properties.
 *
 * @schema #/definitions/CosmosDbSqlApiCollectionDatasetTypeProperties
 */
export interface CosmosDbSqlApiCollectionDatasetTypeProperties {
  /**
   * CosmosDB (SQL API) collection name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbSqlApiCollectionDatasetTypeProperties#collectionName
   */
  readonly collectionName: CosmosDbSqlApiCollectionDatasetTypePropertiesCollectionName;

}

export enum DocumentDbCollectionDatasetType {
  DOCUMENT_DB_COLLECTION = 'DocumentDbCollection',
}

/**
 * DocumentDB Collection dataset properties.
 *
 * @schema #/definitions/DocumentDbCollectionDatasetTypeProperties
 */
export interface DocumentDbCollectionDatasetTypeProperties {
  /**
   * Document Database collection name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DocumentDbCollectionDatasetTypeProperties#collectionName
   */
  readonly collectionName: DocumentDbCollectionDatasetTypePropertiesCollectionName;

}

export enum DynamicsEntityDatasetType {
  DYNAMICS_ENTITY = 'DynamicsEntity',
}

/**
 * Dynamics entity dataset properties.
 *
 * @schema #/definitions/DynamicsEntityDatasetTypeProperties
 */
export interface DynamicsEntityDatasetTypeProperties {
  /**
   * The logical name of the entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsEntityDatasetTypeProperties#entityName
   */
  readonly entityName?: DynamicsEntityDatasetTypePropertiesEntityName;

}

export enum DynamicsCrmEntityDatasetType {
  DYNAMICS_CRM_ENTITY = 'DynamicsCrmEntity',
}

/**
 * Dynamics CRM entity dataset properties.
 *
 * @schema #/definitions/DynamicsCrmEntityDatasetTypeProperties
 */
export interface DynamicsCrmEntityDatasetTypeProperties {
  /**
   * The logical name of the entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmEntityDatasetTypeProperties#entityName
   */
  readonly entityName?: DynamicsCrmEntityDatasetTypePropertiesEntityName;

}

export enum CommonDataServiceForAppsEntityDatasetType {
  COMMON_DATA_SERVICE_FOR_APPS_ENTITY = 'CommonDataServiceForAppsEntity',
}

/**
 * Common Data Service for Apps entity dataset properties.
 *
 * @schema #/definitions/CommonDataServiceForAppsEntityDatasetTypeProperties
 */
export interface CommonDataServiceForAppsEntityDatasetTypeProperties {
  /**
   * The logical name of the entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsEntityDatasetTypeProperties#entityName
   */
  readonly entityName?: CommonDataServiceForAppsEntityDatasetTypePropertiesEntityName;

}

export enum AzureDataLakeStoreDatasetType {
  AZURE_DATA_LAKE_STORE_FILE = 'AzureDataLakeStoreFile',
}

/**
 * Azure Data Lake Store dataset properties.
 *
 * @schema #/definitions/AzureDataLakeStoreDatasetTypeProperties
 */
export interface AzureDataLakeStoreDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/AzureDataLakeStoreDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreDatasetTypeProperties#fileName
   */
  readonly fileName?: AzureDataLakeStoreDatasetTypePropertiesFileName;

  /**
   * Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreDatasetTypeProperties#folderPath
   */
  readonly folderPath?: AzureDataLakeStoreDatasetTypePropertiesFolderPath;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/AzureDataLakeStoreDatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

}

export enum AzureBlobFsDatasetType {
  AZURE_BLOB_FS_FILE = 'AzureBlobFSFile',
}

/**
 * Azure Data Lake Storage Gen2 dataset properties.
 *
 * @schema #/definitions/AzureBlobFSDatasetTypeProperties
 */
export interface AzureBlobFsDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/AzureBlobFSDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The name of the Azure Data Lake Storage Gen2. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSDatasetTypeProperties#fileName
   */
  readonly fileName?: AzureBlobFsDatasetTypePropertiesFileName;

  /**
   * The path of the Azure Data Lake Storage Gen2 storage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSDatasetTypeProperties#folderPath
   */
  readonly folderPath?: AzureBlobFsDatasetTypePropertiesFolderPath;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/AzureBlobFSDatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

}

export enum Office365DatasetType {
  "Office365DatasetType_OFFICE365_TABLE" = 'Office365Table',
}

/**
 * Office365 dataset properties.
 *
 * @schema #/definitions/Office365DatasetTypeProperties
 */
export interface Office365DatasetTypeProperties {
  /**
   * A predicate expression that can be used to filter the specific rows to extract from Office 365. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365DatasetTypeProperties#predicate
   */
  readonly predicate?: Office365DatasetTypePropertiesPredicate;

  /**
   * Name of the dataset to extract from Office 365. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365DatasetTypeProperties#tableName
   */
  readonly tableName: Office365DatasetTypePropertiesTableName;

}

export enum FileShareDatasetType {
  FILE_SHARE = 'FileShare',
}

/**
 * On-premises file system dataset properties.
 *
 * @schema #/definitions/FileShareDatasetTypeProperties
 */
export interface FileShareDatasetTypeProperties {
  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#fileFilter
   */
  readonly fileFilter?: FileShareDatasetTypePropertiesFileFilter;

  /**
   * The name of the on-premises file system. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#fileName
   */
  readonly fileName?: FileShareDatasetTypePropertiesFileName;

  /**
   * The path of the on-premises file system. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#folderPath
   */
  readonly folderPath?: FileShareDatasetTypePropertiesFolderPath;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: FileShareDatasetTypePropertiesModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileShareDatasetTypeProperties#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: FileShareDatasetTypePropertiesModifiedDatetimeStart;

}

export enum MongoDbCollectionDatasetType {
  MONGO_DB_COLLECTION = 'MongoDbCollection',
}

/**
 * MongoDB database dataset properties.
 *
 * @schema #/definitions/MongoDbCollectionDatasetTypeProperties
 */
export interface MongoDbCollectionDatasetTypeProperties {
  /**
   * The table name of the MongoDB database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbCollectionDatasetTypeProperties#collectionName
   */
  readonly collectionName: MongoDbCollectionDatasetTypePropertiesCollectionName;

}

export enum MongoDbAtlasCollectionDatasetType {
  MONGO_DB_ATLAS_COLLECTION = 'MongoDbAtlasCollection',
}

/**
 * MongoDB Atlas database dataset properties.
 *
 * @schema #/definitions/MongoDbAtlasCollectionDatasetTypeProperties
 */
export interface MongoDbAtlasCollectionDatasetTypeProperties {
  /**
   * The collection name of the MongoDB Atlas database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbAtlasCollectionDatasetTypeProperties#collection
   */
  readonly collection: MongoDbAtlasCollectionDatasetTypePropertiesCollection;

}

export enum MongoDbV2CollectionDatasetType {
  "MongoDbV2CollectionDatasetType_MONGO_DB_V2_COLLECTION" = 'MongoDbV2Collection',
}

/**
 * MongoDB database dataset properties.
 *
 * @schema #/definitions/MongoDbV2CollectionDatasetTypeProperties
 */
export interface MongoDbV2CollectionDatasetTypeProperties {
  /**
   * The collection name of the MongoDB database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbV2CollectionDatasetTypeProperties#collection
   */
  readonly collection: MongoDbV2CollectionDatasetTypePropertiesCollection;

}

export enum CosmosDbMongoDbApiCollectionDatasetType {
  COSMOS_DB_MONGO_DB_API_COLLECTION = 'CosmosDbMongoDbApiCollection',
}

/**
 * CosmosDB (MongoDB API) database dataset properties.
 *
 * @schema #/definitions/CosmosDbMongoDbApiCollectionDatasetTypeProperties
 */
export interface CosmosDbMongoDbApiCollectionDatasetTypeProperties {
  /**
   * The collection name of the CosmosDB (MongoDB API) database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbMongoDbApiCollectionDatasetTypeProperties#collection
   */
  readonly collection: CosmosDbMongoDbApiCollectionDatasetTypePropertiesCollection;

}

export enum ODataResourceDatasetType {
  O_DATA_RESOURCE = 'ODataResource',
}

/**
 * OData dataset properties.
 *
 * @schema #/definitions/ODataResourceDatasetTypeProperties
 */
export interface ODataResourceDatasetTypeProperties {
  /**
   * The OData resource path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataResourceDatasetTypeProperties#path
   */
  readonly path?: ODataResourceDatasetTypePropertiesPath;

}

export enum OracleTableDatasetType {
  ORACLE_TABLE = 'OracleTable',
}

/**
 * On-premises Oracle dataset properties.
 *
 * @schema #/definitions/OracleTableDatasetTypeProperties
 */
export interface OracleTableDatasetTypeProperties {
  /**
   * The schema name of the on-premises Oracle database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleTableDatasetTypeProperties#schema
   */
  readonly schema?: OracleTableDatasetTypePropertiesSchema;

  /**
   * The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleTableDatasetTypeProperties#table
   */
  readonly table?: OracleTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/OracleTableDatasetTypeProperties#tableName
   */
  readonly tableName?: OracleTableDatasetTypePropertiesTableName;

}

export enum TeradataTableDatasetType {
  TERADATA_TABLE = 'TeradataTable',
}

/**
 * Teradata dataset properties.
 *
 * @schema #/definitions/TeradataTableDatasetTypeProperties
 */
export interface TeradataTableDatasetTypeProperties {
  /**
   * The database name of Teradata. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataTableDatasetTypeProperties#database
   */
  readonly database?: TeradataTableDatasetTypePropertiesDatabase;

  /**
   * The table name of Teradata. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataTableDatasetTypeProperties#table
   */
  readonly table?: TeradataTableDatasetTypePropertiesTable;

}

export enum AzureMySqlTableDatasetType {
  AZURE_MY_SQL_TABLE = 'AzureMySqlTable',
}

/**
 * Azure MySQL database dataset properties.
 *
 * @schema #/definitions/AzureMySqlTableDatasetTypeProperties
 */
export interface AzureMySqlTableDatasetTypeProperties {
  /**
   * The name of Azure MySQL database table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMySqlTableDatasetTypeProperties#table
   */
  readonly table?: AzureMySqlTableDatasetTypePropertiesTable;

  /**
   * The Azure MySQL database table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMySqlTableDatasetTypeProperties#tableName
   */
  readonly tableName?: AzureMySqlTableDatasetTypePropertiesTableName;

}

export enum AmazonRedshiftTableDatasetType {
  AMAZON_REDSHIFT_TABLE = 'AmazonRedshiftTable',
}

/**
 * Amazon Redshift table dataset properties.
 *
 * @schema #/definitions/AmazonRedshiftTableDatasetTypeProperties
 */
export interface AmazonRedshiftTableDatasetTypeProperties {
  /**
   * The Amazon Redshift schema name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftTableDatasetTypeProperties#schema
   */
  readonly schema?: AmazonRedshiftTableDatasetTypePropertiesSchema;

  /**
   * The Amazon Redshift table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftTableDatasetTypeProperties#table
   */
  readonly table?: AmazonRedshiftTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/AmazonRedshiftTableDatasetTypeProperties#tableName
   */
  readonly tableName?: AmazonRedshiftTableDatasetTypePropertiesTableName;

}

export enum Db2TableDatasetType {
  "Db2TableDatasetType_DB2_TABLE" = 'Db2Table',
}

/**
 * Db2 table dataset properties.
 *
 * @schema #/definitions/Db2TableDatasetTypeProperties
 */
export interface Db2TableDatasetTypeProperties {
  /**
   * The Db2 schema name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2TableDatasetTypeProperties#schema
   */
  readonly schema?: Db2TableDatasetTypePropertiesSchema;

  /**
   * The Db2 table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2TableDatasetTypeProperties#table
   */
  readonly table?: Db2TableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/Db2TableDatasetTypeProperties#tableName
   */
  readonly tableName?: Db2TableDatasetTypePropertiesTableName;

}

export enum RelationalTableDatasetType {
  RELATIONAL_TABLE = 'RelationalTable',
}

/**
 * Relational table dataset properties.
 *
 * @schema #/definitions/RelationalTableDatasetTypeProperties
 */
export interface RelationalTableDatasetTypeProperties {
  /**
   * The relational table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RelationalTableDatasetTypeProperties#tableName
   */
  readonly tableName?: RelationalTableDatasetTypePropertiesTableName;

}

export enum InformixTableDatasetType {
  INFORMIX_TABLE = 'InformixTable',
}

/**
 * Informix table dataset properties.
 *
 * @schema #/definitions/InformixTableDatasetTypeProperties
 */
export interface InformixTableDatasetTypeProperties {
  /**
   * The Informix table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixTableDatasetTypeProperties#tableName
   */
  readonly tableName?: InformixTableDatasetTypePropertiesTableName;

}

export enum OdbcTableDatasetType {
  ODBC_TABLE = 'OdbcTable',
}

/**
 * ODBC table dataset properties.
 *
 * @schema #/definitions/OdbcTableDatasetTypeProperties
 */
export interface OdbcTableDatasetTypeProperties {
  /**
   * The ODBC table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcTableDatasetTypeProperties#tableName
   */
  readonly tableName?: OdbcTableDatasetTypePropertiesTableName;

}

export enum MySqlTableDatasetType {
  MY_SQL_TABLE = 'MySqlTable',
}

/**
 * MySql table dataset properties.
 *
 * @schema #/definitions/MySqlTableDatasetTypeProperties
 */
export interface MySqlTableDatasetTypeProperties {
  /**
   * The MySQL table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MySqlTableDatasetTypeProperties#tableName
   */
  readonly tableName?: MySqlTableDatasetTypePropertiesTableName;

}

export enum PostgreSqlTableDatasetType {
  POSTGRE_SQL_TABLE = 'PostgreSqlTable',
}

/**
 * PostgreSQL table dataset properties.
 *
 * @schema #/definitions/PostgreSqlTableDatasetTypeProperties
 */
export interface PostgreSqlTableDatasetTypeProperties {
  /**
   * The PostgreSQL schema name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PostgreSqlTableDatasetTypeProperties#schema
   */
  readonly schema?: PostgreSqlTableDatasetTypePropertiesSchema;

  /**
   * The PostgreSQL table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PostgreSqlTableDatasetTypeProperties#table
   */
  readonly table?: PostgreSqlTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/PostgreSqlTableDatasetTypeProperties#tableName
   */
  readonly tableName?: PostgreSqlTableDatasetTypePropertiesTableName;

}

export enum MicrosoftAccessTableDatasetType {
  MICROSOFT_ACCESS_TABLE = 'MicrosoftAccessTable',
}

/**
 * Microsoft Access table dataset properties.
 *
 * @schema #/definitions/MicrosoftAccessTableDatasetTypeProperties
 */
export interface MicrosoftAccessTableDatasetTypeProperties {
  /**
   * The Microsoft Access table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessTableDatasetTypeProperties#tableName
   */
  readonly tableName?: MicrosoftAccessTableDatasetTypePropertiesTableName;

}

export enum SalesforceObjectDatasetType {
  SALESFORCE_OBJECT = 'SalesforceObject',
}

/**
 * Salesforce object dataset properties.
 *
 * @schema #/definitions/SalesforceObjectDatasetTypeProperties
 */
export interface SalesforceObjectDatasetTypeProperties {
  /**
   * The Salesforce object API name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceObjectDatasetTypeProperties#objectApiName
   */
  readonly objectApiName?: SalesforceObjectDatasetTypePropertiesObjectApiName;

}

export enum SalesforceServiceCloudObjectDatasetType {
  SALESFORCE_SERVICE_CLOUD_OBJECT = 'SalesforceServiceCloudObject',
}

/**
 * Salesforce Service Cloud object dataset properties.
 *
 * @schema #/definitions/SalesforceServiceCloudObjectDatasetTypeProperties
 */
export interface SalesforceServiceCloudObjectDatasetTypeProperties {
  /**
   * The Salesforce Service Cloud object API name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudObjectDatasetTypeProperties#objectApiName
   */
  readonly objectApiName?: SalesforceServiceCloudObjectDatasetTypePropertiesObjectApiName;

}

export enum SybaseTableDatasetType {
  SYBASE_TABLE = 'SybaseTable',
}

/**
 * Sybase table dataset properties.
 *
 * @schema #/definitions/SybaseTableDatasetTypeProperties
 */
export interface SybaseTableDatasetTypeProperties {
  /**
   * The Sybase table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseTableDatasetTypeProperties#tableName
   */
  readonly tableName?: SybaseTableDatasetTypePropertiesTableName;

}

export enum SapBwCubeDatasetType {
  SAP_BW_CUBE = 'SapBwCube',
}

export enum SapCloudForCustomerResourceDatasetType {
  SAP_CLOUD_FOR_CUSTOMER_RESOURCE = 'SapCloudForCustomerResource',
}

/**
 * Sap Cloud For Customer OData resource dataset properties.
 *
 * @schema #/definitions/SapCloudForCustomerResourceDatasetTypeProperties
 */
export interface SapCloudForCustomerResourceDatasetTypeProperties {
  /**
   * The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapCloudForCustomerResourceDatasetTypeProperties#path
   */
  readonly path: SapCloudForCustomerResourceDatasetTypePropertiesPath;

}

export enum SapEccResourceDatasetType {
  SAP_ECC_RESOURCE = 'SapEccResource',
}

/**
 * Sap ECC OData resource dataset properties.
 *
 * @schema #/definitions/SapEccResourceDatasetTypeProperties
 */
export interface SapEccResourceDatasetTypeProperties {
  /**
   * The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapEccResourceDatasetTypeProperties#path
   */
  readonly path: SapEccResourceDatasetTypePropertiesPath;

}

export enum SapHanaTableDatasetType {
  SAP_HANA_TABLE = 'SapHanaTable',
}

/**
 * SAP HANA Table properties.
 *
 * @schema #/definitions/SapHanaTableDatasetTypeProperties
 */
export interface SapHanaTableDatasetTypeProperties {
  /**
   * The schema name of SAP HANA. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaTableDatasetTypeProperties#schema
   */
  readonly schema?: SapHanaTableDatasetTypePropertiesSchema;

  /**
   * The table name of SAP HANA. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaTableDatasetTypeProperties#table
   */
  readonly table?: SapHanaTableDatasetTypePropertiesTable;

}

export enum SapOpenHubTableDatasetType {
  SAP_OPEN_HUB_TABLE = 'SapOpenHubTable',
}

/**
 * Sap Business Warehouse Open Hub Destination Table properties.
 *
 * @schema #/definitions/SapOpenHubTableDatasetTypeProperties
 */
export interface SapOpenHubTableDatasetTypeProperties {
  /**
   * The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
   *
   * @schema #/definitions/SapOpenHubTableDatasetTypeProperties#baseRequestId
   */
  readonly baseRequestId?: SapOpenHubTableDatasetTypePropertiesBaseRequestId;

  /**
   * Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SapOpenHubTableDatasetTypeProperties#excludeLastRequest
   */
  readonly excludeLastRequest?: SapOpenHubTableDatasetTypePropertiesExcludeLastRequest;

  /**
   * The name of the Open Hub Destination with destination type as Database Table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubTableDatasetTypeProperties#openHubDestinationName
   */
  readonly openHubDestinationName: SapOpenHubTableDatasetTypePropertiesOpenHubDestinationName;

}

export enum SqlServerTableDatasetType {
  SQL_SERVER_TABLE = 'SqlServerTable',
}

/**
 * On-premises SQL Server dataset properties.
 *
 * @schema #/definitions/SqlServerTableDatasetTypeProperties
 */
export interface SqlServerTableDatasetTypeProperties {
  /**
   * The schema name of the SQL Server dataset. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerTableDatasetTypeProperties#schema
   */
  readonly schema?: SqlServerTableDatasetTypePropertiesSchema;

  /**
   * The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerTableDatasetTypeProperties#table
   */
  readonly table?: SqlServerTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/SqlServerTableDatasetTypeProperties#tableName
   */
  readonly tableName?: SqlServerTableDatasetTypePropertiesTableName;

}

export enum RestResourceDatasetType {
  REST_RESOURCE = 'RestResource',
}

/**
 * Properties specific to this dataset type.
 *
 * @schema #/definitions/RestResourceDatasetTypeProperties
 */
export interface RestResourceDatasetTypeProperties {
  /**
   * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestResourceDatasetTypeProperties#additionalHeaders
   */
  readonly additionalHeaders?: RestResourceDatasetTypePropertiesAdditionalHeaders;

  /**
   * The pagination rules to compose next page requests. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestResourceDatasetTypeProperties#paginationRules
   */
  readonly paginationRules?: RestResourceDatasetTypePropertiesPaginationRules;

  /**
   * The relative URL to the resource that the RESTful API provides. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestResourceDatasetTypeProperties#relativeUrl
   */
  readonly relativeUrl?: RestResourceDatasetTypePropertiesRelativeUrl;

  /**
   * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestResourceDatasetTypeProperties#requestBody
   */
  readonly requestBody?: RestResourceDatasetTypePropertiesRequestBody;

  /**
   * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestResourceDatasetTypeProperties#requestMethod
   */
  readonly requestMethod?: RestResourceDatasetTypePropertiesRequestMethod;

}

export enum SapTableResourceDatasetType {
  SAP_TABLE_RESOURCE = 'SapTableResource',
}

/**
 * SAP Table Resource properties.
 *
 * @schema #/definitions/SapTableResourceDatasetTypeProperties
 */
export interface SapTableResourceDatasetTypeProperties {
  /**
   * The name of the SAP Table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableResourceDatasetTypeProperties#tableName
   */
  readonly tableName: SapTableResourceDatasetTypePropertiesTableName;

}

export enum WebTableDatasetType {
  WEB_TABLE = 'WebTable',
}

/**
 * Web table dataset properties.
 *
 * @schema #/definitions/WebTableDatasetTypeProperties
 */
export interface WebTableDatasetTypeProperties {
  /**
   * The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/WebTableDatasetTypeProperties#index
   */
  readonly index: WebTableDatasetTypePropertiesIndex;

  /**
   * The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebTableDatasetTypeProperties#path
   */
  readonly path?: WebTableDatasetTypePropertiesPath;

}

export enum AzureSearchIndexDatasetType {
  AZURE_SEARCH_INDEX = 'AzureSearchIndex',
}

/**
 * Properties specific to this dataset type.
 *
 * @schema #/definitions/AzureSearchIndexDatasetTypeProperties
 */
export interface AzureSearchIndexDatasetTypeProperties {
  /**
   * The name of the Azure Search Index. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSearchIndexDatasetTypeProperties#indexName
   */
  readonly indexName: AzureSearchIndexDatasetTypePropertiesIndexName;

}

export enum HttpDatasetType {
  HTTP_FILE = 'HttpFile',
}

/**
 * Properties specific to this dataset type.
 *
 * @schema #/definitions/HttpDatasetTypeProperties
 */
export interface HttpDatasetTypeProperties {
  /**
   * The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
...
request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpDatasetTypeProperties#additionalHeaders
   */
  readonly additionalHeaders?: HttpDatasetTypePropertiesAdditionalHeaders;

  /**
   * The compression method used on a dataset.
   *
   * @schema #/definitions/HttpDatasetTypeProperties#compression
   */
  readonly compression?: DatasetCompression;

  /**
   * The format definition of a storage.
   *
   * @schema #/definitions/HttpDatasetTypeProperties#format
   */
  readonly format?: DatasetStorageFormat;

  /**
   * The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpDatasetTypeProperties#relativeUrl
   */
  readonly relativeUrl?: HttpDatasetTypePropertiesRelativeUrl;

  /**
   * The body for the HTTP request. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpDatasetTypeProperties#requestBody
   */
  readonly requestBody?: HttpDatasetTypePropertiesRequestBody;

  /**
   * The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpDatasetTypeProperties#requestMethod
   */
  readonly requestMethod?: HttpDatasetTypePropertiesRequestMethod;

}

export enum AmazonMwsObjectDatasetType {
  AMAZON_MWS_OBJECT = 'AmazonMWSObject',
}

/**
 * Properties specific to this dataset type.
 *
 * @schema #/definitions/GenericDatasetTypeProperties
 */
export interface GenericDatasetTypeProperties {
  /**
   * The table name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GenericDatasetTypeProperties#tableName
   */
  readonly tableName?: GenericDatasetTypePropertiesTableName;

}

export enum AzurePostgreSqlTableDatasetType {
  AZURE_POSTGRE_SQL_TABLE = 'AzurePostgreSqlTable',
}

/**
 * Azure PostgreSQL dataset properties.
 *
 * @schema #/definitions/AzurePostgreSqlTableDatasetTypeProperties
 */
export interface AzurePostgreSqlTableDatasetTypeProperties {
  /**
   * The schema name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlTableDatasetTypeProperties#schema
   */
  readonly schema?: AzurePostgreSqlTableDatasetTypePropertiesSchema;

  /**
   * The table name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlTableDatasetTypeProperties#table
   */
  readonly table?: AzurePostgreSqlTableDatasetTypePropertiesTable;

  /**
   * The table name of the Azure PostgreSQL database which includes both schema and table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlTableDatasetTypeProperties#tableName
   */
  readonly tableName?: AzurePostgreSqlTableDatasetTypePropertiesTableName;

}

export enum ConcurObjectDatasetType {
  CONCUR_OBJECT = 'ConcurObject',
}

export enum CouchbaseTableDatasetType {
  COUCHBASE_TABLE = 'CouchbaseTable',
}

export enum DrillTableDatasetType {
  DRILL_TABLE = 'DrillTable',
}

/**
 * Drill Dataset Properties
 *
 * @schema #/definitions/DrillDatasetTypeProperties
 */
export interface DrillDatasetTypeProperties {
  /**
   * The schema name of the Drill. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DrillDatasetTypeProperties#schema
   */
  readonly schema?: DrillDatasetTypePropertiesSchema;

  /**
   * The table name of the Drill. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DrillDatasetTypeProperties#table
   */
  readonly table?: DrillDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/DrillDatasetTypeProperties#tableName
   */
  readonly tableName?: DrillDatasetTypePropertiesTableName;

}

export enum EloquaObjectDatasetType {
  ELOQUA_OBJECT = 'EloquaObject',
}

export enum GoogleBigQueryObjectDatasetType {
  GOOGLE_BIG_QUERY_OBJECT = 'GoogleBigQueryObject',
}

/**
 * Google BigQuery Dataset Properties
 *
 * @schema #/definitions/GoogleBigQueryDatasetTypeProperties
 */
export interface GoogleBigQueryDatasetTypeProperties {
  /**
   * The database name of the Google BigQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleBigQueryDatasetTypeProperties#dataset
   */
  readonly dataset?: GoogleBigQueryDatasetTypePropertiesDataset;

  /**
   * The table name of the Google BigQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleBigQueryDatasetTypeProperties#table
   */
  readonly table?: GoogleBigQueryDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using database + table properties instead.
   *
   * @schema #/definitions/GoogleBigQueryDatasetTypeProperties#tableName
   */
  readonly tableName?: GoogleBigQueryDatasetTypePropertiesTableName;

}

export enum GreenplumTableDatasetType {
  GREENPLUM_TABLE = 'GreenplumTable',
}

/**
 * Greenplum Dataset Properties
 *
 * @schema #/definitions/GreenplumDatasetTypeProperties
 */
export interface GreenplumDatasetTypeProperties {
  /**
   * The schema name of Greenplum. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GreenplumDatasetTypeProperties#schema
   */
  readonly schema?: GreenplumDatasetTypePropertiesSchema;

  /**
   * The table name of Greenplum. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GreenplumDatasetTypeProperties#table
   */
  readonly table?: GreenplumDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/GreenplumDatasetTypeProperties#tableName
   */
  readonly tableName?: GreenplumDatasetTypePropertiesTableName;

}

export enum HBaseObjectDatasetType {
  H_BASE_OBJECT = 'HBaseObject',
}

export enum HiveObjectDatasetType {
  HIVE_OBJECT = 'HiveObject',
}

/**
 * Hive Properties
 *
 * @schema #/definitions/HiveDatasetTypeProperties
 */
export interface HiveDatasetTypeProperties {
  /**
   * The schema name of the Hive. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HiveDatasetTypeProperties#schema
   */
  readonly schema?: HiveDatasetTypePropertiesSchema;

  /**
   * The table name of the Hive. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HiveDatasetTypeProperties#table
   */
  readonly table?: HiveDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/HiveDatasetTypeProperties#tableName
   */
  readonly tableName?: HiveDatasetTypePropertiesTableName;

}

export enum HubspotObjectDatasetType {
  HUBSPOT_OBJECT = 'HubspotObject',
}

export enum ImpalaObjectDatasetType {
  IMPALA_OBJECT = 'ImpalaObject',
}

/**
 * Impala Dataset Properties
 *
 * @schema #/definitions/ImpalaDatasetTypeProperties
 */
export interface ImpalaDatasetTypeProperties {
  /**
   * The schema name of the Impala. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ImpalaDatasetTypeProperties#schema
   */
  readonly schema?: ImpalaDatasetTypePropertiesSchema;

  /**
   * The table name of the Impala. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ImpalaDatasetTypeProperties#table
   */
  readonly table?: ImpalaDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/ImpalaDatasetTypeProperties#tableName
   */
  readonly tableName?: ImpalaDatasetTypePropertiesTableName;

}

export enum JiraObjectDatasetType {
  JIRA_OBJECT = 'JiraObject',
}

export enum MagentoObjectDatasetType {
  MAGENTO_OBJECT = 'MagentoObject',
}

export enum MariaDbTableDatasetType {
  MARIA_DB_TABLE = 'MariaDBTable',
}

export enum AzureMariaDbTableDatasetType {
  AZURE_MARIA_DB_TABLE = 'AzureMariaDBTable',
}

export enum MarketoObjectDatasetType {
  MARKETO_OBJECT = 'MarketoObject',
}

export enum PaypalObjectDatasetType {
  PAYPAL_OBJECT = 'PaypalObject',
}

export enum PhoenixObjectDatasetType {
  PHOENIX_OBJECT = 'PhoenixObject',
}

/**
 * Phoenix Dataset Properties
 *
 * @schema #/definitions/PhoenixDatasetTypeProperties
 */
export interface PhoenixDatasetTypeProperties {
  /**
   * The schema name of the Phoenix. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PhoenixDatasetTypeProperties#schema
   */
  readonly schema?: PhoenixDatasetTypePropertiesSchema;

  /**
   * The table name of the Phoenix. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PhoenixDatasetTypeProperties#table
   */
  readonly table?: PhoenixDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/PhoenixDatasetTypeProperties#tableName
   */
  readonly tableName?: PhoenixDatasetTypePropertiesTableName;

}

export enum PrestoObjectDatasetType {
  PRESTO_OBJECT = 'PrestoObject',
}

/**
 * Presto Dataset Properties
 *
 * @schema #/definitions/PrestoDatasetTypeProperties
 */
export interface PrestoDatasetTypeProperties {
  /**
   * The schema name of the Presto. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PrestoDatasetTypeProperties#schema
   */
  readonly schema?: PrestoDatasetTypePropertiesSchema;

  /**
   * The table name of the Presto. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PrestoDatasetTypeProperties#table
   */
  readonly table?: PrestoDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/PrestoDatasetTypeProperties#tableName
   */
  readonly tableName?: PrestoDatasetTypePropertiesTableName;

}

export enum QuickBooksObjectDatasetType {
  QUICK_BOOKS_OBJECT = 'QuickBooksObject',
}

export enum ServiceNowObjectDatasetType {
  SERVICE_NOW_OBJECT = 'ServiceNowObject',
}

export enum ShopifyObjectDatasetType {
  SHOPIFY_OBJECT = 'ShopifyObject',
}

export enum SparkObjectDatasetType {
  SPARK_OBJECT = 'SparkObject',
}

/**
 * Spark Properties
 *
 * @schema #/definitions/SparkDatasetTypeProperties
 */
export interface SparkDatasetTypeProperties {
  /**
   * The schema name of the Spark. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SparkDatasetTypeProperties#schema
   */
  readonly schema?: SparkDatasetTypePropertiesSchema;

  /**
   * The table name of the Spark. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SparkDatasetTypeProperties#table
   */
  readonly table?: SparkDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/SparkDatasetTypeProperties#tableName
   */
  readonly tableName?: SparkDatasetTypePropertiesTableName;

}

export enum SquareObjectDatasetType {
  SQUARE_OBJECT = 'SquareObject',
}

export enum XeroObjectDatasetType {
  XERO_OBJECT = 'XeroObject',
}

export enum ZohoObjectDatasetType {
  ZOHO_OBJECT = 'ZohoObject',
}

export enum NetezzaTableDatasetType {
  NETEZZA_TABLE = 'NetezzaTable',
}

/**
 * Netezza dataset properties.
 *
 * @schema #/definitions/NetezzaTableDatasetTypeProperties
 */
export interface NetezzaTableDatasetTypeProperties {
  /**
   * The schema name of the Netezza. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaTableDatasetTypeProperties#schema
   */
  readonly schema?: NetezzaTableDatasetTypePropertiesSchema;

  /**
   * The table name of the Netezza. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaTableDatasetTypeProperties#table
   */
  readonly table?: NetezzaTableDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/NetezzaTableDatasetTypeProperties#tableName
   */
  readonly tableName?: NetezzaTableDatasetTypePropertiesTableName;

}

export enum VerticaTableDatasetType {
  VERTICA_TABLE = 'VerticaTable',
}

/**
 * Vertica Properties
 *
 * @schema #/definitions/VerticaDatasetTypeProperties
 */
export interface VerticaDatasetTypeProperties {
  /**
   * The schema name of the Vertica. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/VerticaDatasetTypeProperties#schema
   */
  readonly schema?: VerticaDatasetTypePropertiesSchema;

  /**
   * The table name of the Vertica. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/VerticaDatasetTypeProperties#table
   */
  readonly table?: VerticaDatasetTypePropertiesTable;

  /**
   * This property will be retired. Please consider using schema + table properties instead.
   *
   * @schema #/definitions/VerticaDatasetTypeProperties#tableName
   */
  readonly tableName?: VerticaDatasetTypePropertiesTableName;

}

export enum SalesforceMarketingCloudObjectDatasetType {
  SALESFORCE_MARKETING_CLOUD_OBJECT = 'SalesforceMarketingCloudObject',
}

export enum ResponsysObjectDatasetType {
  RESPONSYS_OBJECT = 'ResponsysObject',
}

export enum DynamicsAxResourceDatasetType {
  DYNAMICS_AX_RESOURCE = 'DynamicsAXResource',
}

/**
 * Dynamics AX OData resource dataset properties.
 *
 * @schema #/definitions/DynamicsAXResourceDatasetTypeProperties
 */
export interface DynamicsAxResourceDatasetTypeProperties {
  /**
   * The path of the Dynamics AX OData entity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXResourceDatasetTypeProperties#path
   */
  readonly path: DynamicsAxResourceDatasetTypePropertiesPath;

}

export enum OracleServiceCloudObjectDatasetType {
  ORACLE_SERVICE_CLOUD_OBJECT = 'OracleServiceCloudObject',
}

export enum AzureDataExplorerTableDatasetType {
  AZURE_DATA_EXPLORER_TABLE = 'AzureDataExplorerTable',
}

/**
 * Azure Data Explorer (Kusto) dataset properties.
 *
 * @schema #/definitions/AzureDataExplorerDatasetTypeProperties
 */
export interface AzureDataExplorerDatasetTypeProperties {
  /**
   * The table name of the Azure Data Explorer database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerDatasetTypeProperties#table
   */
  readonly table?: AzureDataExplorerDatasetTypePropertiesTable;

}

export enum GoogleAdWordsObjectDatasetType {
  GOOGLE_AD_WORDS_OBJECT = 'GoogleAdWordsObject',
}

export enum SnowflakeDatasetType {
  SNOWFLAKE_TABLE = 'SnowflakeTable',
}

/**
 * Snowflake dataset properties.
 *
 * @schema #/definitions/SnowflakeDatasetTypeProperties
 */
export interface SnowflakeDatasetTypeProperties {
  /**
   * The schema name of the Snowflake database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SnowflakeDatasetTypeProperties#schema
   */
  readonly schema?: SnowflakeDatasetTypePropertiesSchema;

  /**
   * The table name of the Snowflake database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SnowflakeDatasetTypeProperties#table
   */
  readonly table?: SnowflakeDatasetTypePropertiesTable;

}

export enum SharePointOnlineListResourceDatasetType {
  SHARE_POINT_ONLINE_LIST_RESOURCE = 'SharePointOnlineListResource',
}

/**
 * Sharepoint online list dataset properties.
 *
 * @schema #/definitions/SharePointOnlineListDatasetTypeProperties
 */
export interface SharePointOnlineListDatasetTypeProperties {
  /**
   * The name of the SharePoint Online list. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListDatasetTypeProperties#listName
   */
  readonly listName?: SharePointOnlineListDatasetTypePropertiesListName;

}

export enum AzureDatabricksDeltaLakeDatasetType {
  AZURE_DATABRICKS_DELTA_LAKE_DATASET = 'AzureDatabricksDeltaLakeDataset',
}

/**
 * Azure Databricks Delta Lake Dataset Properties
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeDatasetTypeProperties
 */
export interface AzureDatabricksDeltaLakeDatasetTypeProperties {
  /**
   * The database name of delta table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeDatasetTypeProperties#database
   */
  readonly database?: AzureDatabricksDeltaLakeDatasetTypePropertiesDatabase;

  /**
   * The name of delta table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeDatasetTypeProperties#table
   */
  readonly table?: AzureDatabricksDeltaLakeDatasetTypePropertiesTable;

}

/**
 * Managed Virtual Network reference type.
 *
 * @schema #/definitions/ManagedVirtualNetworkReference
 */
export interface ManagedVirtualNetworkReference {
  /**
   * Reference ManagedVirtualNetwork name.
   *
   * @schema #/definitions/ManagedVirtualNetworkReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Managed Virtual Network reference type.
   *
   * @schema #/definitions/ManagedVirtualNetworkReference#type
   */
  readonly type: ManagedVirtualNetworkReferenceType;

}

export enum ManagedIntegrationRuntimeType {
  MANAGED = 'Managed',
}

/**
 * Managed integration runtime type properties.
 *
 * @schema #/definitions/ManagedIntegrationRuntimeTypeProperties
 */
export interface ManagedIntegrationRuntimeTypeProperties {
  /**
   * The compute resource properties for managed integration runtime.
   *
   * @schema #/definitions/ManagedIntegrationRuntimeTypeProperties#computeProperties
   */
  readonly computeProperties?: IntegrationRuntimeComputeProperties;

  /**
   * SSIS properties for managed integration runtime.
   *
   * @schema #/definitions/ManagedIntegrationRuntimeTypeProperties#ssisProperties
   */
  readonly ssisProperties?: IntegrationRuntimeSsisProperties;

}

export enum SelfHostedIntegrationRuntimeType {
  SELF_HOSTED = 'SelfHosted',
}

/**
 * The self-hosted integration runtime properties.
 *
 * @schema #/definitions/SelfHostedIntegrationRuntimeTypeProperties
 */
export interface SelfHostedIntegrationRuntimeTypeProperties {
  /**
   * The base definition of a linked integration runtime.
   *
   * @schema #/definitions/SelfHostedIntegrationRuntimeTypeProperties#linkedInfo
   */
  readonly linkedInfo?: LinkedIntegrationRuntimeType;

}

export enum AzureStorageLinkedServiceType {
  AZURE_STORAGE = 'AzureStorage',
}

/**
 * Azure Storage linked service properties.
 *
 * @schema #/definitions/AzureStorageLinkedServiceTypeProperties
 */
export interface AzureStorageLinkedServiceTypeProperties {
  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureStorageLinkedServiceTypeProperties#accountKey
   */
  readonly accountKey?: AzureKeyVaultSecretReference;

  /**
   * The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureStorageLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: AzureStorageLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureStorageLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: string;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureStorageLinkedServiceTypeProperties#sasToken
   */
  readonly sasToken?: AzureKeyVaultSecretReference;

  /**
   * SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureStorageLinkedServiceTypeProperties#sasUri
   */
  readonly sasUri?: AzureStorageLinkedServiceTypePropertiesSasUri;

}

export enum AzureBlobStorageLinkedServiceType {
  AZURE_BLOB_STORAGE = 'AzureBlobStorage',
}

/**
 * Azure Blob Storage linked service properties.
 *
 * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties
 */
export interface AzureBlobStorageLinkedServiceTypeProperties {
  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#accountKey
   */
  readonly accountKey?: AzureKeyVaultSecretReference;

  /**
   * Specify the kind of your storage account. Allowed values are: Storage (general purpose v1), StorageV2 (general purpose v2), BlobStorage, or BlockBlobStorage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#accountKind
   */
  readonly accountKind?: string;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureBlobStorageLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: AzureBlobStorageLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: string;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#sasToken
   */
  readonly sasToken?: AzureKeyVaultSecretReference;

  /**
   * SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#sasUri
   */
  readonly sasUri?: AzureBlobStorageLinkedServiceTypePropertiesSasUri;

  /**
   * Blob service endpoint of the Azure Blob Storage resource. It is mutually exclusive with connectionString, sasUri property.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#serviceEndpoint
   */
  readonly serviceEndpoint?: string;

  /**
   * The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureBlobStorageLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureBlobStorageLinkedServiceTypePropertiesTenant;

}

export enum AzureTableStorageLinkedServiceType {
  AZURE_TABLE_STORAGE = 'AzureTableStorage',
}

export enum AzureSqlDwLinkedServiceType {
  AZURE_SQL_DW = 'AzureSqlDW',
}

/**
 * Azure SQL Data Warehouse linked service properties.
 *
 * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties
 */
export interface AzureSqlDwLinkedServiceTypeProperties {
  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureSqlDwLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: AzureSqlDwLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureSqlDwLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

  /**
   * The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureSqlDwLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDWLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureSqlDwLinkedServiceTypePropertiesTenant;

}

export enum SqlServerLinkedServiceType {
  SQL_SERVER = 'SqlServer',
}

/**
 * SQL Server linked service properties.
 *
 * @schema #/definitions/SqlServerLinkedServiceTypeProperties
 */
export interface SqlServerLinkedServiceTypeProperties {
  /**
   * Sql always encrypted properties.
   *
   * @schema #/definitions/SqlServerLinkedServiceTypeProperties#alwaysEncryptedSettings
   */
  readonly alwaysEncryptedSettings?: SqlAlwaysEncryptedProperties;

  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/SqlServerLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: SqlServerLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SqlServerLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SqlServerLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerLinkedServiceTypeProperties#userName
   */
  readonly userName?: SqlServerLinkedServiceTypePropertiesUserName;

}

export enum AzureSqlDatabaseLinkedServiceType {
  AZURE_SQL_DATABASE = 'AzureSqlDatabase',
}

/**
 * Azure SQL Database linked service properties.
 *
 * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties
 */
export interface AzureSqlDatabaseLinkedServiceTypeProperties {
  /**
   * Sql always encrypted properties.
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#alwaysEncryptedSettings
   */
  readonly alwaysEncryptedSettings?: SqlAlwaysEncryptedProperties;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureSqlDatabaseLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: AzureSqlDatabaseLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureSqlDatabaseLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

  /**
   * The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureSqlDatabaseLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlDatabaseLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureSqlDatabaseLinkedServiceTypePropertiesTenant;

}

export enum AzureSqlMiLinkedServiceType {
  AZURE_SQL_MI = 'AzureSqlMI',
}

/**
 * Azure SQL Managed Instance linked service properties.
 *
 * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties
 */
export interface AzureSqlMiLinkedServiceTypeProperties {
  /**
   * Sql always encrypted properties.
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#alwaysEncryptedSettings
   */
  readonly alwaysEncryptedSettings?: SqlAlwaysEncryptedProperties;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureSqlMiLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: AzureSqlMiLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureSqlMiLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

  /**
   * The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureSqlMiLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlMILinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureSqlMiLinkedServiceTypePropertiesTenant;

}

export enum AzureBatchLinkedServiceType {
  AZURE_BATCH = 'AzureBatch',
}

/**
 * Azure Batch linked service properties.
 *
 * @schema #/definitions/AzureBatchLinkedServiceTypeProperties
 */
export interface AzureBatchLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#accessKey
   */
  readonly accessKey?: SecretBase;

  /**
   * The Azure Batch account name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#accountName
   */
  readonly accountName: AzureBatchLinkedServiceTypePropertiesAccountName;

  /**
   * The Azure Batch URI. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#batchUri
   */
  readonly batchUri: AzureBatchLinkedServiceTypePropertiesBatchUri;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureBatchLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#linkedServiceName
   */
  readonly linkedServiceName: LinkedServiceReference;

  /**
   * The Azure Batch pool name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBatchLinkedServiceTypeProperties#poolName
   */
  readonly poolName: AzureBatchLinkedServiceTypePropertiesPoolName;

}

export enum AzureKeyVaultLinkedServiceType {
  AZURE_KEY_VAULT = 'AzureKeyVault',
}

/**
 * Azure Key Vault linked service properties.
 *
 * @schema #/definitions/AzureKeyVaultLinkedServiceTypeProperties
 */
export interface AzureKeyVaultLinkedServiceTypeProperties {
  /**
   * The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureKeyVaultLinkedServiceTypeProperties#baseUrl
   */
  readonly baseUrl: AzureKeyVaultLinkedServiceTypePropertiesBaseUrl;

}

export enum CosmosDbLinkedServiceType {
  COSMOS_DB = 'CosmosDb',
}

/**
 * CosmosDB linked service properties.
 *
 * @schema #/definitions/CosmosDbLinkedServiceTypeProperties
 */
export interface CosmosDbLinkedServiceTypeProperties {
  /**
   * The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#accountEndpoint
   */
  readonly accountEndpoint?: CosmosDbLinkedServiceTypePropertiesAccountEndpoint;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#accountKey
   */
  readonly accountKey?: SecretBase;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: CosmosDbLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The connection mode used to access CosmosDB account. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#connectionMode
   */
  readonly connectionMode?: CosmosDbLinkedServiceTypePropertiesConnectionMode;

  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: CosmosDbLinkedServiceTypePropertiesConnectionString;

  /**
   * The name of the database. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#database
   */
  readonly database?: CosmosDbLinkedServiceTypePropertiesDatabase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: CosmosDbLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#servicePrincipalCredential
   */
  readonly servicePrincipalCredential?: SecretBase;

  /**
   * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#servicePrincipalCredentialType
   */
  readonly servicePrincipalCredentialType?: CosmosDbLinkedServiceTypePropertiesServicePrincipalCredentialType;

  /**
   * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: CosmosDbLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: CosmosDbLinkedServiceTypePropertiesTenant;

}

export enum DynamicsLinkedServiceType {
  DYNAMICS = 'Dynamics',
}

/**
 * Dynamics linked service properties.
 *
 * @schema #/definitions/DynamicsLinkedServiceTypeProperties
 */
export interface DynamicsLinkedServiceTypeProperties {
  /**
   * The authentication type to connect to Dynamics server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: DynamicsLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The deployment type of the Dynamics instance. 'Online' for Dynamics Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#deploymentType
   */
  readonly deploymentType: DynamicsLinkedServiceTypePropertiesDeploymentType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: DynamicsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#hostName
   */
  readonly hostName?: DynamicsLinkedServiceTypePropertiesHostName;

  /**
   * The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#organizationName
   */
  readonly organizationName?: DynamicsLinkedServiceTypePropertiesOrganizationName;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#port
   */
  readonly port?: DynamicsLinkedServiceTypePropertiesPort;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#servicePrincipalCredential
   */
  readonly servicePrincipalCredential?: SecretBase;

  /**
   * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#servicePrincipalCredentialType
   */
  readonly servicePrincipalCredentialType?: DynamicsLinkedServiceTypePropertiesServicePrincipalCredentialType;

  /**
   * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: DynamicsLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#serviceUri
   */
  readonly serviceUri?: DynamicsLinkedServiceTypePropertiesServiceUri;

  /**
   * User name to access the Dynamics instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsLinkedServiceTypeProperties#username
   */
  readonly username?: DynamicsLinkedServiceTypePropertiesUsername;

}

export enum DynamicsCrmLinkedServiceType {
  DYNAMICS_CRM = 'DynamicsCrm',
}

/**
 * Dynamics CRM linked service properties.
 *
 * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties
 */
export interface DynamicsCrmLinkedServiceTypeProperties {
  /**
   * The authentication type to connect to Dynamics CRM server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario, 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: DynamicsCrmLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The deployment type of the Dynamics CRM instance. 'Online' for Dynamics CRM Online and 'OnPremisesWithIfd' for Dynamics CRM on-premises with Ifd. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#deploymentType
   */
  readonly deploymentType: DynamicsCrmLinkedServiceTypePropertiesDeploymentType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: DynamicsCrmLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#hostName
   */
  readonly hostName?: DynamicsCrmLinkedServiceTypePropertiesHostName;

  /**
   * The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#organizationName
   */
  readonly organizationName?: DynamicsCrmLinkedServiceTypePropertiesOrganizationName;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#port
   */
  readonly port?: DynamicsCrmLinkedServiceTypePropertiesPort;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#servicePrincipalCredential
   */
  readonly servicePrincipalCredential?: SecretBase;

  /**
   * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#servicePrincipalCredentialType
   */
  readonly servicePrincipalCredentialType?: DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredentialType;

  /**
   * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: DynamicsCrmLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#serviceUri
   */
  readonly serviceUri?: DynamicsCrmLinkedServiceTypePropertiesServiceUri;

  /**
   * User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmLinkedServiceTypeProperties#username
   */
  readonly username?: DynamicsCrmLinkedServiceTypePropertiesUsername;

}

export enum CommonDataServiceForAppsLinkedServiceType {
  COMMON_DATA_SERVICE_FOR_APPS = 'CommonDataServiceForApps',
}

/**
 * Common Data Service for Apps linked service properties.
 *
 * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties
 */
export interface CommonDataServiceForAppsLinkedServiceTypeProperties {
  /**
   * The authentication type to connect to Common Data Service for Apps server. 'Office365' for online scenario, 'Ifd' for on-premises with Ifd scenario. 'AADServicePrincipal' for Server-To-Server authentication in online scenario. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The deployment type of the Common Data Service for Apps instance. 'Online' for Common Data Service for Apps Online and 'OnPremisesWithIfd' for Common Data Service for Apps on-premises with Ifd. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#deploymentType
   */
  readonly deploymentType: CommonDataServiceForAppsLinkedServiceTypePropertiesDeploymentType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: CommonDataServiceForAppsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#hostName
   */
  readonly hostName?: CommonDataServiceForAppsLinkedServiceTypePropertiesHostName;

  /**
   * The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#organizationName
   */
  readonly organizationName?: CommonDataServiceForAppsLinkedServiceTypePropertiesOrganizationName;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#port
   */
  readonly port?: CommonDataServiceForAppsLinkedServiceTypePropertiesPort;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#servicePrincipalCredential
   */
  readonly servicePrincipalCredential?: SecretBase;

  /**
   * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#servicePrincipalCredentialType
   */
  readonly servicePrincipalCredentialType?: CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType;

  /**
   * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#serviceUri
   */
  readonly serviceUri?: CommonDataServiceForAppsLinkedServiceTypePropertiesServiceUri;

  /**
   * User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsLinkedServiceTypeProperties#username
   */
  readonly username?: CommonDataServiceForAppsLinkedServiceTypePropertiesUsername;

}

export enum HdInsightLinkedServiceType {
  HD_INSIGHT = 'HDInsight',
}

/**
 * HDInsight linked service properties.
 *
 * @schema #/definitions/HDInsightLinkedServiceTypeProperties
 */
export interface HdInsightLinkedServiceTypeProperties {
  /**
   * HDInsight cluster URI. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#clusterUri
   */
  readonly clusterUri: HdInsightLinkedServiceTypePropertiesClusterUri;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HdInsightLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#fileSystem
   */
  readonly fileSystem?: HdInsightLinkedServiceTypePropertiesFileSystem;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#hcatalogLinkedServiceName
   */
  readonly hcatalogLinkedServiceName?: LinkedServiceReference;

  /**
   * Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#isEspEnabled
   */
  readonly isEspEnabled?: HdInsightLinkedServiceTypePropertiesIsEspEnabled;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#linkedServiceName
   */
  readonly linkedServiceName?: LinkedServiceReference;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * HDInsight cluster user name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightLinkedServiceTypeProperties#userName
   */
  readonly userName?: HdInsightLinkedServiceTypePropertiesUserName;

}

export enum FileServerLinkedServiceType {
  FILE_SERVER = 'FileServer',
}

/**
 * File system linked service properties.
 *
 * @schema #/definitions/FileServerLinkedServiceTypeProperties
 */
export interface FileServerLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: FileServerLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Host name of the server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerLinkedServiceTypeProperties#host
   */
  readonly host: FileServerLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/FileServerLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * User ID to logon the server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerLinkedServiceTypeProperties#userId
   */
  readonly userId?: FileServerLinkedServiceTypePropertiesUserId;

}

export enum AzureFileStorageLinkedServiceType {
  AZURE_FILE_STORAGE = 'AzureFileStorage',
}

/**
 * Azure File Storage linked service properties.
 *
 * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties
 */
export interface AzureFileStorageLinkedServiceTypeProperties {
  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#accountKey
   */
  readonly accountKey?: AzureKeyVaultSecretReference;

  /**
   * The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: AzureFileStorageLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureFileStorageLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The azure file share name. It is required when auth with accountKey/sasToken. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#fileShare
   */
  readonly fileShare?: AzureFileStorageLinkedServiceTypePropertiesFileShare;

  /**
   * Host name of the server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#host
   */
  readonly host?: AzureFileStorageLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#sasToken
   */
  readonly sasToken?: AzureKeyVaultSecretReference;

  /**
   * SAS URI of the Azure File resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#sasUri
   */
  readonly sasUri?: AzureFileStorageLinkedServiceTypePropertiesSasUri;

  /**
   * The azure file share snapshot version. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#snapshot
   */
  readonly snapshot?: AzureFileStorageLinkedServiceTypePropertiesSnapshot;

  /**
   * User ID to logon the server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageLinkedServiceTypeProperties#userId
   */
  readonly userId?: AzureFileStorageLinkedServiceTypePropertiesUserId;

}

export enum AmazonS3CompatibleLinkedServiceType {
  "AmazonS3CompatibleLinkedServiceType_AMAZON_S3_COMPATIBLE" = 'AmazonS3Compatible',
}

/**
 * Amazon S3 Compatible linked service properties.
 *
 * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties
 */
export interface AmazonS3CompatibleLinkedServiceTypeProperties {
  /**
   * The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties#accessKeyId
   */
  readonly accessKeyId?: AmazonS3CompatibleLinkedServiceTypePropertiesAccessKeyId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AmazonS3CompatibleLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties#forcePathStyle
   */
  readonly forcePathStyle?: AmazonS3CompatibleLinkedServiceTypePropertiesForcePathStyle;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties#secretAccessKey
   */
  readonly secretAccessKey?: SecretBase;

  /**
   * This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleLinkedServiceTypeProperties#serviceUrl
   */
  readonly serviceUrl?: AmazonS3CompatibleLinkedServiceTypePropertiesServiceUrl;

}

export enum OracleCloudStorageLinkedServiceType {
  ORACLE_CLOUD_STORAGE = 'OracleCloudStorage',
}

/**
 * Oracle Cloud Storage linked service properties.
 *
 * @schema #/definitions/OracleCloudStorageLinkedServiceTypeProperties
 */
export interface OracleCloudStorageLinkedServiceTypeProperties {
  /**
   * The access key identifier of the Oracle Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageLinkedServiceTypeProperties#accessKeyId
   */
  readonly accessKeyId?: OracleCloudStorageLinkedServiceTypePropertiesAccessKeyId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: OracleCloudStorageLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/OracleCloudStorageLinkedServiceTypeProperties#secretAccessKey
   */
  readonly secretAccessKey?: SecretBase;

  /**
   * This value specifies the endpoint to access with the Oracle Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageLinkedServiceTypeProperties#serviceUrl
   */
  readonly serviceUrl?: OracleCloudStorageLinkedServiceTypePropertiesServiceUrl;

}

export enum GoogleCloudStorageLinkedServiceType {
  GOOGLE_CLOUD_STORAGE = 'GoogleCloudStorage',
}

/**
 * Google Cloud Storage linked service properties.
 *
 * @schema #/definitions/GoogleCloudStorageLinkedServiceTypeProperties
 */
export interface GoogleCloudStorageLinkedServiceTypeProperties {
  /**
   * The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageLinkedServiceTypeProperties#accessKeyId
   */
  readonly accessKeyId?: GoogleCloudStorageLinkedServiceTypePropertiesAccessKeyId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: GoogleCloudStorageLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleCloudStorageLinkedServiceTypeProperties#secretAccessKey
   */
  readonly secretAccessKey?: SecretBase;

  /**
   * This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageLinkedServiceTypeProperties#serviceUrl
   */
  readonly serviceUrl?: GoogleCloudStorageLinkedServiceTypePropertiesServiceUrl;

}

export enum OracleLinkedServiceType {
  ORACLE = 'Oracle',
}

/**
 * Oracle database linked service properties.
 *
 * @schema #/definitions/OracleLinkedServiceTypeProperties
 */
export interface OracleLinkedServiceTypeProperties {
  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/OracleLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: OracleLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: OracleLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/OracleLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum AzureMySqlLinkedServiceType {
  AZURE_MY_SQL = 'AzureMySql',
}

/**
 * Azure MySQL database linked service properties.
 *
 * @schema #/definitions/AzureMySqlLinkedServiceTypeProperties
 */
export interface AzureMySqlLinkedServiceTypeProperties {
  /**
   * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureMySqlLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: AzureMySqlLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMySqlLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureMySqlLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureMySqlLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum MySqlLinkedServiceType {
  MY_SQL = 'MySql',
}

/**
 * MySQL linked service properties.
 *
 * @schema #/definitions/MySqlLinkedServiceTypeProperties
 */
export interface MySqlLinkedServiceTypeProperties {
  /**
   * The connection string.
   *
   * @schema #/definitions/MySqlLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: MySqlLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MySqlLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MySqlLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/MySqlLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum PostgreSqlLinkedServiceType {
  POSTGRE_SQL = 'PostgreSql',
}

/**
 * PostgreSQL linked service properties.
 *
 * @schema #/definitions/PostgreSqlLinkedServiceTypeProperties
 */
export interface PostgreSqlLinkedServiceTypeProperties {
  /**
   * The connection string.
   *
   * @schema #/definitions/PostgreSqlLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: PostgreSqlLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PostgreSqlLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: PostgreSqlLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/PostgreSqlLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum SybaseLinkedServiceType {
  SYBASE = 'Sybase',
}

/**
 * Sybase linked service properties.
 *
 * @schema #/definitions/SybaseLinkedServiceTypeProperties
 */
export interface SybaseLinkedServiceTypeProperties {
  /**
   * AuthenticationType to be used for connection.
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: SybaseLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Database name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#database
   */
  readonly database: SybaseLinkedServiceTypePropertiesDatabase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SybaseLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Schema name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#schema
   */
  readonly schema?: SybaseLinkedServiceTypePropertiesSchema;

  /**
   * Server name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#server
   */
  readonly server: SybaseLinkedServiceTypePropertiesServer;

  /**
   * Username for authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseLinkedServiceTypeProperties#username
   */
  readonly username?: SybaseLinkedServiceTypePropertiesUsername;

}

export enum Db2LinkedServiceType {
  "Db2LinkedServiceType_DB2" = 'Db2',
}

/**
 * DB2 linked service properties.
 *
 * @schema #/definitions/Db2LinkedServiceTypeProperties
 */
export interface Db2LinkedServiceTypeProperties {
  /**
   * AuthenticationType to be used for connection. It is mutually exclusive with connectionString property.
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: Db2LinkedServiceTypePropertiesAuthenticationType;

  /**
   * Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#certificateCommonName
   */
  readonly certificateCommonName?: Db2LinkedServiceTypePropertiesCertificateCommonName;

  /**
   * The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: Db2LinkedServiceTypePropertiesConnectionString;

  /**
   * Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#database
   */
  readonly database?: Db2LinkedServiceTypePropertiesDatabase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: Db2LinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#packageCollection
   */
  readonly packageCollection?: Db2LinkedServiceTypePropertiesPackageCollection;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#server
   */
  readonly server?: Db2LinkedServiceTypePropertiesServer;

  /**
   * Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2LinkedServiceTypeProperties#username
   */
  readonly username?: Db2LinkedServiceTypePropertiesUsername;

}

export enum TeradataLinkedServiceType {
  TERADATA = 'Teradata',
}

/**
 * Teradata linked service properties.
 *
 * @schema #/definitions/TeradataLinkedServiceTypeProperties
 */
export interface TeradataLinkedServiceTypeProperties {
  /**
   * AuthenticationType to be used for connection.
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: TeradataLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: TeradataLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: TeradataLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Server name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#server
   */
  readonly server?: TeradataLinkedServiceTypePropertiesServer;

  /**
   * Username for authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataLinkedServiceTypeProperties#username
   */
  readonly username?: TeradataLinkedServiceTypePropertiesUsername;

}

export enum AzureMlLinkedServiceType {
  AZURE_ML = 'AzureML',
}

/**
 * Azure ML Studio Web Service linked service properties.
 *
 * @schema #/definitions/AzureMLLinkedServiceTypeProperties
 */
export interface AzureMlLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#apiKey
   */
  readonly apiKey: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureMlLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#mlEndpoint
   */
  readonly mlEndpoint: AzureMlLinkedServiceTypePropertiesMlEndpoint;

  /**
   * The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureMlLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureMlLinkedServiceTypePropertiesTenant;

  /**
   * The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLLinkedServiceTypeProperties#updateResourceEndpoint
   */
  readonly updateResourceEndpoint?: AzureMlLinkedServiceTypePropertiesUpdateResourceEndpoint;

}

export enum AzureMlServiceLinkedServiceType {
  AZURE_ML_SERVICE = 'AzureMLService',
}

/**
 * Azure ML Service linked service properties.
 *
 * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties
 */
export interface AzureMlServiceLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureMlServiceLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure ML Service workspace name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#mlWorkspaceName
   */
  readonly mlWorkspaceName: AzureMlServiceLinkedServiceTypePropertiesMlWorkspaceName;

  /**
   * Azure ML Service workspace resource group name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#resourceGroupName
   */
  readonly resourceGroupName: AzureMlServiceLinkedServiceTypePropertiesResourceGroupName;

  /**
   * The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureMlServiceLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#subscriptionId
   */
  readonly subscriptionId: AzureMlServiceLinkedServiceTypePropertiesSubscriptionId;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLServiceLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureMlServiceLinkedServiceTypePropertiesTenant;

}

export enum OdbcLinkedServiceType {
  ODBC = 'Odbc',
}

/**
 * ODBC linked service properties.
 *
 * @schema #/definitions/OdbcLinkedServiceTypeProperties
 */
export interface OdbcLinkedServiceTypeProperties {
  /**
   * Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: OdbcLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: OdbcLinkedServiceTypePropertiesConnectionString;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#credential
   */
  readonly credential?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: OdbcLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * User name for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcLinkedServiceTypeProperties#userName
   */
  readonly userName?: OdbcLinkedServiceTypePropertiesUserName;

}

export enum InformixLinkedServiceType {
  INFORMIX = 'Informix',
}

/**
 * Informix linked service properties.
 *
 * @schema #/definitions/InformixLinkedServiceTypeProperties
 */
export interface InformixLinkedServiceTypeProperties {
  /**
   * Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: InformixLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: InformixLinkedServiceTypePropertiesConnectionString;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#credential
   */
  readonly credential?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: InformixLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * User name for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixLinkedServiceTypeProperties#userName
   */
  readonly userName?: InformixLinkedServiceTypePropertiesUserName;

}

export enum MicrosoftAccessLinkedServiceType {
  MICROSOFT_ACCESS = 'MicrosoftAccess',
}

/**
 * Microsoft Access linked service properties.
 *
 * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties
 */
export interface MicrosoftAccessLinkedServiceTypeProperties {
  /**
   * Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: MicrosoftAccessLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: MicrosoftAccessLinkedServiceTypePropertiesConnectionString;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#credential
   */
  readonly credential?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MicrosoftAccessLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * User name for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessLinkedServiceTypeProperties#userName
   */
  readonly userName?: MicrosoftAccessLinkedServiceTypePropertiesUserName;

}

export enum HdfsLinkedServiceType {
  HDFS = 'Hdfs',
}

/**
 * HDFS linked service properties.
 *
 * @schema #/definitions/HdfsLinkedServiceTypeProperties
 */
export interface HdfsLinkedServiceTypeProperties {
  /**
   * Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: HdfsLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HdfsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HdfsLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsLinkedServiceTypeProperties#url
   */
  readonly url: HdfsLinkedServiceTypePropertiesUrl;

  /**
   * User name for Windows authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsLinkedServiceTypeProperties#userName
   */
  readonly userName?: HdfsLinkedServiceTypePropertiesUserName;

}

export enum ODataLinkedServiceType {
  O_DATA = 'OData',
}

/**
 * OData linked service properties.
 *
 * @schema #/definitions/ODataLinkedServiceTypeProperties
 */
export interface ODataLinkedServiceTypeProperties {
  /**
   * Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#aadResourceId
   */
  readonly aadResourceId?: ODataLinkedServiceTypePropertiesAadResourceId;

  /**
   * Specify the credential type (key or cert) is used for service principal.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#aadServicePrincipalCredentialType
   */
  readonly aadServicePrincipalCredentialType?: ODataLinkedServiceTypePropertiesAadServicePrincipalCredentialType;

  /**
   * Type of authentication used to connect to the OData service.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: ODataLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#authHeaders
   */
  readonly authHeaders?: ODataLinkedServiceTypePropertiesAuthHeaders;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: ODataLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ODataLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#servicePrincipalEmbeddedCert
   */
  readonly servicePrincipalEmbeddedCert?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#servicePrincipalEmbeddedCertPassword
   */
  readonly servicePrincipalEmbeddedCertPassword?: SecretBase;

  /**
   * Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: ODataLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: ODataLinkedServiceTypePropertiesTenant;

  /**
   * The URL of the OData service endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#url
   */
  readonly url: ODataLinkedServiceTypePropertiesUrl;

  /**
   * User name of the OData service. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataLinkedServiceTypeProperties#userName
   */
  readonly userName?: ODataLinkedServiceTypePropertiesUserName;

}

export enum WebLinkedServiceType {
  WEB = 'Web',
}

/**
 * Base definition of WebLinkedServiceTypeProperties, this typeProperties is polymorphic based on authenticationType, so not flattened in SDK models.
 *
 * @schema #/definitions/WebLinkedServiceTypeProperties
 */
export class WebLinkedServiceTypeProperties {
  public static fromWebAnonymousAuthentication(value: WebAnonymousAuthentication): WebLinkedServiceTypeProperties {
    return new WebLinkedServiceTypeProperties(value);
  }
  public static fromWebBasicAuthentication(value: WebBasicAuthentication): WebLinkedServiceTypeProperties {
    return new WebLinkedServiceTypeProperties(value);
  }
  public static fromWebClientCertificateAuthentication(value: WebClientCertificateAuthentication): WebLinkedServiceTypeProperties {
    return new WebLinkedServiceTypeProperties(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum CassandraLinkedServiceType {
  CASSANDRA = 'Cassandra',
}

/**
 * Cassandra linked service properties.
 *
 * @schema #/definitions/CassandraLinkedServiceTypeProperties
 */
export interface CassandraLinkedServiceTypeProperties {
  /**
   * AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: CassandraLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: CassandraLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Host name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#host
   */
  readonly host: CassandraLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The port for the connection. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#port
   */
  readonly port?: CassandraLinkedServiceTypePropertiesPort;

  /**
   * Username for authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraLinkedServiceTypeProperties#username
   */
  readonly username?: CassandraLinkedServiceTypePropertiesUsername;

}

export enum MongoDbLinkedServiceType {
  MONGO_DB = 'MongoDb',
}

/**
 * MongoDB linked service properties.
 *
 * @schema #/definitions/MongoDbLinkedServiceTypeProperties
 */
export interface MongoDbLinkedServiceTypeProperties {
  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: MongoDbLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication type to be used to connect to the MongoDB database.
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: MongoDbLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Database to verify the username and password. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#authSource
   */
  readonly authSource?: MongoDbLinkedServiceTypePropertiesAuthSource;

  /**
   * The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#databaseName
   */
  readonly databaseName: MongoDbLinkedServiceTypePropertiesDatabaseName;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: MongoDbLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MongoDbLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#port
   */
  readonly port?: MongoDbLinkedServiceTypePropertiesPort;

  /**
   * The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#server
   */
  readonly server: MongoDbLinkedServiceTypePropertiesServer;

  /**
   * Username for authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbLinkedServiceTypeProperties#username
   */
  readonly username?: MongoDbLinkedServiceTypePropertiesUsername;

}

export enum MongoDbAtlasLinkedServiceType {
  MONGO_DB_ATLAS = 'MongoDbAtlas',
}

/**
 * MongoDB Atlas linked service properties.
 *
 * @schema #/definitions/MongoDbAtlasLinkedServiceTypeProperties
 */
export interface MongoDbAtlasLinkedServiceTypeProperties {
  /**
   * The MongoDB Atlas connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/MongoDbAtlasLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: MongoDbAtlasLinkedServiceTypePropertiesConnectionString;

  /**
   * The name of the MongoDB Atlas database that you want to access. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbAtlasLinkedServiceTypeProperties#database
   */
  readonly database: MongoDbAtlasLinkedServiceTypePropertiesDatabase;

}

export enum MongoDbV2LinkedServiceType {
  "MongoDbV2LinkedServiceType_MONGO_DB_V2" = 'MongoDbV2',
}

/**
 * MongoDB linked service properties.
 *
 * @schema #/definitions/MongoDbV2LinkedServiceTypeProperties
 */
export interface MongoDbV2LinkedServiceTypeProperties {
  /**
   * The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/MongoDbV2LinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: MongoDbV2LinkedServiceTypePropertiesConnectionString;

  /**
   * The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbV2LinkedServiceTypeProperties#database
   */
  readonly database: MongoDbV2LinkedServiceTypePropertiesDatabase;

}

export enum CosmosDbMongoDbApiLinkedServiceType {
  COSMOS_DB_MONGO_DB_API = 'CosmosDbMongoDbApi',
}

/**
 * CosmosDB (MongoDB API) linked service properties.
 *
 * @schema #/definitions/CosmosDbMongoDbApiLinkedServiceTypeProperties
 */
export interface CosmosDbMongoDbApiLinkedServiceTypeProperties {
  /**
   * The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/CosmosDbMongoDbApiLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: CosmosDbMongoDbApiLinkedServiceTypePropertiesConnectionString;

  /**
   * The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbMongoDbApiLinkedServiceTypeProperties#database
   */
  readonly database: CosmosDbMongoDbApiLinkedServiceTypePropertiesDatabase;

}

export enum AzureDataLakeStoreLinkedServiceType {
  AZURE_DATA_LAKE_STORE = 'AzureDataLakeStore',
}

/**
 * Azure Data Lake Store linked service properties.
 *
 * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties
 */
export interface AzureDataLakeStoreLinkedServiceTypeProperties {
  /**
   * Data Lake Store account name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#accountName
   */
  readonly accountName?: AzureDataLakeStoreLinkedServiceTypePropertiesAccountName;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureDataLakeStoreLinkedServiceTypePropertiesAzureCloudType;

  /**
   * Data Lake Store service URI. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#dataLakeStoreUri
   */
  readonly dataLakeStoreUri: AzureDataLakeStoreLinkedServiceTypePropertiesDataLakeStoreUri;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureDataLakeStoreLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#resourceGroupName
   */
  readonly resourceGroupName?: AzureDataLakeStoreLinkedServiceTypePropertiesResourceGroupName;

  /**
   * The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureDataLakeStoreLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#subscriptionId
   */
  readonly subscriptionId?: AzureDataLakeStoreLinkedServiceTypePropertiesSubscriptionId;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureDataLakeStoreLinkedServiceTypePropertiesTenant;

}

export enum AzureBlobFsLinkedServiceType {
  AZURE_BLOB_FS = 'AzureBlobFS',
}

/**
 * Azure Data Lake Storage Gen2 linked service properties.
 *
 * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties
 */
export interface AzureBlobFsLinkedServiceTypeProperties {
  /**
   * Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#accountKey
   */
  readonly accountKey?: AzureBlobFsLinkedServiceTypePropertiesAccountKey;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: AzureBlobFsLinkedServiceTypePropertiesAzureCloudType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureBlobFsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureBlobFsLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureBlobFsLinkedServiceTypePropertiesTenant;

  /**
   * Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLinkedServiceTypeProperties#url
   */
  readonly url: AzureBlobFsLinkedServiceTypePropertiesUrl;

}

export enum Office365LinkedServiceType {
  "Office365LinkedServiceType_OFFICE365" = 'Office365',
}

/**
 * Office365 linked service properties.
 *
 * @schema #/definitions/Office365LinkedServiceTypeProperties
 */
export interface Office365LinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365LinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: Office365LinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365LinkedServiceTypeProperties#office365TenantId
   */
  readonly office365TenantId: Office365LinkedServiceTypePropertiesOffice365TenantId;

  /**
   * Specify the application's client ID. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365LinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId: Office365LinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/Office365LinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey: SecretBase;

  /**
   * Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365LinkedServiceTypeProperties#servicePrincipalTenantId
   */
  readonly servicePrincipalTenantId: Office365LinkedServiceTypePropertiesServicePrincipalTenantId;

}

export enum SalesforceLinkedServiceType {
  SALESFORCE = 'Salesforce',
}

/**
 * Salesforce linked service properties.
 *
 * @schema #/definitions/SalesforceLinkedServiceTypeProperties
 */
export interface SalesforceLinkedServiceTypeProperties {
  /**
   * The Salesforce API version used in ADF. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#apiVersion
   */
  readonly apiVersion?: SalesforceLinkedServiceTypePropertiesApiVersion;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SalesforceLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
   *
   * @default https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#environmentUrl
   */
  readonly environmentUrl?: SalesforceLinkedServiceTypePropertiesEnvironmentUrl;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#securityToken
   */
  readonly securityToken?: SecretBase;

  /**
   * The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceLinkedServiceTypeProperties#username
   */
  readonly username?: SalesforceLinkedServiceTypePropertiesUsername;

}

export enum SalesforceServiceCloudLinkedServiceType {
  SALESFORCE_SERVICE_CLOUD = 'SalesforceServiceCloud',
}

/**
 * Salesforce Service Cloud linked service properties.
 *
 * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties
 */
export interface SalesforceServiceCloudLinkedServiceTypeProperties {
  /**
   * The Salesforce API version used in ADF. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#apiVersion
   */
  readonly apiVersion?: SalesforceServiceCloudLinkedServiceTypePropertiesApiVersion;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SalesforceServiceCloudLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of Salesforce Service Cloud instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
   *
   * @default https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#environmentUrl
   */
  readonly environmentUrl?: SalesforceServiceCloudLinkedServiceTypePropertiesEnvironmentUrl;

  /**
   * Extended properties appended to the connection string. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#extendedProperties
   */
  readonly extendedProperties?: SalesforceServiceCloudLinkedServiceTypePropertiesExtendedProperties;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#securityToken
   */
  readonly securityToken?: SecretBase;

  /**
   * The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudLinkedServiceTypeProperties#username
   */
  readonly username?: SalesforceServiceCloudLinkedServiceTypePropertiesUsername;

}

export enum SapCloudForCustomerLinkedServiceType {
  SAP_CLOUD_FOR_CUSTOMER = 'SapCloudForCustomer',
}

/**
 * SAP Cloud for Customer linked service properties.
 *
 * @schema #/definitions/SapCloudForCustomerLinkedServiceTypeProperties
 */
export interface SapCloudForCustomerLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapCloudForCustomerLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SapCloudForCustomerLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapCloudForCustomerLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapCloudForCustomerLinkedServiceTypeProperties#url
   */
  readonly url: SapCloudForCustomerLinkedServiceTypePropertiesUrl;

  /**
   * The username for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapCloudForCustomerLinkedServiceTypeProperties#username
   */
  readonly username?: SapCloudForCustomerLinkedServiceTypePropertiesUsername;

}

export enum SapEccLinkedServiceType {
  SAP_ECC = 'SapEcc',
}

/**
 * SAP ECC linked service properties.
 *
 * @schema #/definitions/SapEccLinkedServiceTypeProperties
 */
export interface SapEccLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapEccLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: string;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapEccLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The URL of SAP ECC OData API. For example, '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapEccLinkedServiceTypeProperties#url
   */
  readonly url: string;

  /**
   * The username for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapEccLinkedServiceTypeProperties#username
   */
  readonly username?: string;

}

export enum SapOpenHubLinkedServiceType {
  SAP_OPEN_HUB = 'SapOpenHub',
}

/**
 * Properties specific to SAP Business Warehouse Open Hub Destination linked service type.
 *
 * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties
 */
export interface SapOpenHubLinkedServiceTypeProperties {
  /**
   * Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: SapOpenHubLinkedServiceTypePropertiesClientId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SapOpenHubLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#language
   */
  readonly language?: SapOpenHubLinkedServiceTypePropertiesLanguage;

  /**
   * The Logon Group for the SAP System. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#logonGroup
   */
  readonly logonGroup?: SapOpenHubLinkedServiceTypePropertiesLogonGroup;

  /**
   * The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#messageServer
   */
  readonly messageServer?: SapOpenHubLinkedServiceTypePropertiesMessageServer;

  /**
   * The service name or port number of the Message Server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#messageServerService
   */
  readonly messageServerService?: SapOpenHubLinkedServiceTypePropertiesMessageServerService;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#server
   */
  readonly server?: SapOpenHubLinkedServiceTypePropertiesServer;

  /**
   * SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#systemId
   */
  readonly systemId?: SapOpenHubLinkedServiceTypePropertiesSystemId;

  /**
   * System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#systemNumber
   */
  readonly systemNumber?: SapOpenHubLinkedServiceTypePropertiesSystemNumber;

  /**
   * Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubLinkedServiceTypeProperties#userName
   */
  readonly userName?: SapOpenHubLinkedServiceTypePropertiesUserName;

}

export enum RestServiceLinkedServiceType {
  REST_SERVICE = 'RestService',
}

/**
 * Rest Service linked service properties.
 *
 * @schema #/definitions/RestServiceLinkedServiceTypeProperties
 */
export interface RestServiceLinkedServiceTypeProperties {
  /**
   * The resource you are requesting authorization to use.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#aadResourceId
   */
  readonly aadResourceId?: RestServiceLinkedServiceTypePropertiesAadResourceId;

  /**
   * Type of authentication used to connect to the REST service.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: RestServiceLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#authHeaders
   */
  readonly authHeaders?: RestServiceLinkedServiceTypePropertiesAuthHeaders;

  /**
   * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#azureCloudType
   */
  readonly azureCloudType?: RestServiceLinkedServiceTypePropertiesAzureCloudType;

  /**
   * Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#enableServerCertificateValidation
   */
  readonly enableServerCertificateValidation?: RestServiceLinkedServiceTypePropertiesEnableServerCertificateValidation;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: RestServiceLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The application's client ID used in AadServicePrincipal authentication type.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: RestServiceLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: RestServiceLinkedServiceTypePropertiesTenant;

  /**
   * The base URL of the REST service.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#url
   */
  readonly url: RestServiceLinkedServiceTypePropertiesUrl;

  /**
   * The user name used in Basic authentication type.
   *
   * @schema #/definitions/RestServiceLinkedServiceTypeProperties#userName
   */
  readonly userName?: RestServiceLinkedServiceTypePropertiesUserName;

}

export enum AmazonS3LinkedServiceType {
  "AmazonS3LinkedServiceType_AMAZON_S3" = 'AmazonS3',
}

/**
 * Amazon S3 linked service properties.
 *
 * @schema #/definitions/AmazonS3LinkedServiceTypeProperties
 */
export interface AmazonS3LinkedServiceTypeProperties {
  /**
   * The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#accessKeyId
   */
  readonly accessKeyId?: AmazonS3LinkedServiceTypePropertiesAccessKeyId;

  /**
   * The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: AmazonS3LinkedServiceTypePropertiesAuthenticationType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AmazonS3LinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#secretAccessKey
   */
  readonly secretAccessKey?: SecretBase;

  /**
   * This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#serviceUrl
   */
  readonly serviceUrl?: AmazonS3LinkedServiceTypePropertiesServiceUrl;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonS3LinkedServiceTypeProperties#sessionToken
   */
  readonly sessionToken?: SecretBase;

}

export enum AmazonRedshiftLinkedServiceType {
  AMAZON_REDSHIFT = 'AmazonRedshift',
}

/**
 * Amazon Redshift linked service properties.
 *
 * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties
 */
export interface AmazonRedshiftLinkedServiceTypeProperties {
  /**
   * The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#database
   */
  readonly database: AmazonRedshiftLinkedServiceTypePropertiesDatabase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AmazonRedshiftLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#port
   */
  readonly port?: AmazonRedshiftLinkedServiceTypePropertiesPort;

  /**
   * The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#server
   */
  readonly server: AmazonRedshiftLinkedServiceTypePropertiesServer;

  /**
   * The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftLinkedServiceTypeProperties#username
   */
  readonly username?: AmazonRedshiftLinkedServiceTypePropertiesUsername;

}

export enum CustomDataSourceLinkedServiceType {
  CUSTOM_DATA_SOURCE = 'CustomDataSource',
}

/**
 * Custom linked service properties.
 *
 * @schema #/definitions/customDataSourceLinkedServiceTypeProperties
 */
export interface CustomDataSourceLinkedServiceTypeProperties {
}

export enum AzureSearchLinkedServiceType {
  AZURE_SEARCH = 'AzureSearch',
}

/**
 * Windows Azure Search Service linked service properties.
 *
 * @schema #/definitions/AzureSearchLinkedServiceTypeProperties
 */
export interface AzureSearchLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSearchLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureSearchLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureSearchLinkedServiceTypeProperties#key
   */
  readonly key?: SecretBase;

  /**
   * URL for Azure Search service. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSearchLinkedServiceTypeProperties#url
   */
  readonly url: AzureSearchLinkedServiceTypePropertiesUrl;

}

export enum HttpLinkedServiceType {
  HTTP_SERVER = 'HttpServer',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/HttpLinkedServiceTypeProperties
 */
export interface HttpLinkedServiceTypeProperties {
  /**
   * The authentication type to be used to connect to the HTTP server.
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: HttpLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#authHeaders
   */
  readonly authHeaders?: HttpLinkedServiceTypePropertiesAuthHeaders;

  /**
   * Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#certThumbprint
   */
  readonly certThumbprint?: HttpLinkedServiceTypePropertiesCertThumbprint;

  /**
   * Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#embeddedCertData
   */
  readonly embeddedCertData?: HttpLinkedServiceTypePropertiesEmbeddedCertData;

  /**
   * If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#enableServerCertificateValidation
   */
  readonly enableServerCertificateValidation?: HttpLinkedServiceTypePropertiesEnableServerCertificateValidation;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HttpLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#url
   */
  readonly url: HttpLinkedServiceTypePropertiesUrl;

  /**
   * User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpLinkedServiceTypeProperties#userName
   */
  readonly userName?: HttpLinkedServiceTypePropertiesUserName;

}

export enum FtpServerLinkedServiceType {
  FTP_SERVER = 'FtpServer',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/FtpServerLinkedServiceTypeProperties
 */
export interface FtpServerLinkedServiceTypeProperties {
  /**
   * The authentication type to be used to connect to the FTP server.
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: FtpServerLinkedServiceTypePropertiesAuthenticationType;

  /**
   * If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#enableServerCertificateValidation
   */
  readonly enableServerCertificateValidation?: FtpServerLinkedServiceTypePropertiesEnableServerCertificateValidation;

  /**
   * If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: FtpServerLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: FtpServerLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Host name of the FTP server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#host
   */
  readonly host: FtpServerLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#port
   */
  readonly port?: FtpServerLinkedServiceTypePropertiesPort;

  /**
   * Username to logon the FTP server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpServerLinkedServiceTypeProperties#userName
   */
  readonly userName?: FtpServerLinkedServiceTypePropertiesUserName;

}

export enum SftpServerLinkedServiceType {
  SFTP = 'Sftp',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/SftpServerLinkedServiceTypeProperties
 */
export interface SftpServerLinkedServiceTypeProperties {
  /**
   * The authentication type to be used to connect to the FTP server.
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType?: SftpServerLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SftpServerLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The SFTP server host name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#host
   */
  readonly host: SftpServerLinkedServiceTypePropertiesHost;

  /**
   * The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#hostKeyFingerprint
   */
  readonly hostKeyFingerprint?: SftpServerLinkedServiceTypePropertiesHostKeyFingerprint;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#passPhrase
   */
  readonly passPhrase?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#port
   */
  readonly port?: SftpServerLinkedServiceTypePropertiesPort;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#privateKeyContent
   */
  readonly privateKeyContent?: SecretBase;

  /**
   * The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#privateKeyPath
   */
  readonly privateKeyPath?: SftpServerLinkedServiceTypePropertiesPrivateKeyPath;

  /**
   * If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#skipHostKeyValidation
   */
  readonly skipHostKeyValidation?: SftpServerLinkedServiceTypePropertiesSkipHostKeyValidation;

  /**
   * The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpServerLinkedServiceTypeProperties#userName
   */
  readonly userName?: SftpServerLinkedServiceTypePropertiesUserName;

}

export enum SapBwLinkedServiceType {
  SAP_BW = 'SapBW',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/SapBWLinkedServiceTypeProperties
 */
export interface SapBwLinkedServiceTypeProperties {
  /**
   * Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#clientId
   */
  readonly clientId: SapBwLinkedServiceTypePropertiesClientId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SapBwLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Host name of the SAP BW instance. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#server
   */
  readonly server: SapBwLinkedServiceTypePropertiesServer;

  /**
   * System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#systemNumber
   */
  readonly systemNumber: SapBwLinkedServiceTypePropertiesSystemNumber;

  /**
   * Username to access the SAP BW server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBWLinkedServiceTypeProperties#userName
   */
  readonly userName?: SapBwLinkedServiceTypePropertiesUserName;

}

export enum SapHanaLinkedServiceType {
  SAP_HANA = 'SapHana',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/SapHanaLinkedServiceProperties
 */
export interface SapHanaLinkedServiceProperties {
  /**
   * The authentication type to be used to connect to the SAP HANA server.
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#authenticationType
   */
  readonly authenticationType?: SapHanaLinkedServicePropertiesAuthenticationType;

  /**
   * SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#connectionString
   */
  readonly connectionString?: SapHanaLinkedServicePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#encryptedCredential
   */
  readonly encryptedCredential?: SapHanaLinkedServicePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Host name of the SAP HANA server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#server
   */
  readonly server?: SapHanaLinkedServicePropertiesServer;

  /**
   * Username to access the SAP HANA server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaLinkedServiceProperties#userName
   */
  readonly userName?: SapHanaLinkedServicePropertiesUserName;

}

export enum AmazonMwsLinkedServiceType {
  AMAZON_MWS = 'AmazonMWS',
}

/**
 * Amazon Marketplace Web Service linked service properties.
 *
 * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties
 */
export interface AmazonMwsLinkedServiceTypeProperties {
  /**
   * The access key id used to access data.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#accessKeyId
   */
  readonly accessKeyId: AmazonMwsLinkedServiceTypePropertiesAccessKeyId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AmazonMwsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: AmazonMwsLinkedServiceTypePropertiesEndpoint;

  /**
   * The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#marketplaceID
   */
  readonly marketplaceID: AmazonMwsLinkedServiceTypePropertiesMarketplaceId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#mwsAuthToken
   */
  readonly mwsAuthToken?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#secretKey
   */
  readonly secretKey?: SecretBase;

  /**
   * The Amazon seller ID.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#sellerID
   */
  readonly sellerID: AmazonMwsLinkedServiceTypePropertiesSellerId;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: AmazonMwsLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: AmazonMwsLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/AmazonMWSLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: AmazonMwsLinkedServiceTypePropertiesUsePeerVerification;

}

export enum AzurePostgreSqlLinkedServiceType {
  AZURE_POSTGRE_SQL = 'AzurePostgreSql',
}

/**
 * Azure PostgreSQL linked service properties.
 *
 * @schema #/definitions/AzurePostgreSqlLinkedServiceTypeProperties
 */
export interface AzurePostgreSqlLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzurePostgreSqlLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: AzurePostgreSqlLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzurePostgreSqlLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzurePostgreSqlLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum ConcurLinkedServiceType {
  CONCUR = 'Concur',
}

/**
 * Concur Service linked service properties.
 *
 * @schema #/definitions/ConcurLinkedServiceTypeProperties
 */
export interface ConcurLinkedServiceTypeProperties {
  /**
   * Application client_id supplied by Concur App Management.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#clientId
   */
  readonly clientId: ConcurLinkedServiceTypePropertiesClientId;

  /**
   * Properties used to connect to Concur. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: ConcurLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ConcurLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: ConcurLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: ConcurLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: ConcurLinkedServiceTypePropertiesUsePeerVerification;

  /**
   * The user name that you use to access Concur Service.
   *
   * @schema #/definitions/ConcurLinkedServiceTypeProperties#username
   */
  readonly username: ConcurLinkedServiceTypePropertiesUsername;

}

export enum CouchbaseLinkedServiceType {
  COUCHBASE = 'Couchbase',
}

/**
 * Couchbase server linked service properties.
 *
 * @schema #/definitions/CouchbaseLinkedServiceTypeProperties
 */
export interface CouchbaseLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/CouchbaseLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: CouchbaseLinkedServiceTypePropertiesConnectionString;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/CouchbaseLinkedServiceTypeProperties#credString
   */
  readonly credString?: AzureKeyVaultSecretReference;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CouchbaseLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: CouchbaseLinkedServiceTypePropertiesEncryptedCredential;

}

export enum DrillLinkedServiceType {
  DRILL = 'Drill',
}

/**
 * Drill server linked service properties.
 *
 * @schema #/definitions/DrillLinkedServiceTypeProperties
 */
export interface DrillLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/DrillLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: DrillLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DrillLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: DrillLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/DrillLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum EloquaLinkedServiceType {
  ELOQUA = 'Eloqua',
}

/**
 * Eloqua server linked service properties.
 *
 * @schema #/definitions/EloquaLinkedServiceTypeProperties
 */
export interface EloquaLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: EloquaLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Eloqua server. (i.e. eloqua.example.com)
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: EloquaLinkedServiceTypePropertiesEndpoint;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: EloquaLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: EloquaLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: EloquaLinkedServiceTypePropertiesUsePeerVerification;

  /**
   * The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
   *
   * @schema #/definitions/EloquaLinkedServiceTypeProperties#username
   */
  readonly username: EloquaLinkedServiceTypePropertiesUsername;

}

export enum GoogleBigQueryLinkedServiceType {
  GOOGLE_BIG_QUERY = 'GoogleBigQuery',
}

/**
 * Google BigQuery service linked service properties.
 *
 * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties
 */
export interface GoogleBigQueryLinkedServiceTypeProperties {
  /**
   * A comma-separated list of public BigQuery projects to access.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#additionalProjects
   */
  readonly additionalProjects?: GoogleBigQueryLinkedServiceTypePropertiesAdditionalProjects;

  /**
   * The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: GoogleBigQueryLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: GoogleBigQueryLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#email
   */
  readonly email?: GoogleBigQueryLinkedServiceTypePropertiesEmail;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: GoogleBigQueryLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#keyFilePath
   */
  readonly keyFilePath?: GoogleBigQueryLinkedServiceTypePropertiesKeyFilePath;

  /**
   * The default BigQuery project to query against.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#project
   */
  readonly project: GoogleBigQueryLinkedServiceTypePropertiesProject;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#refreshToken
   */
  readonly refreshToken?: SecretBase;

  /**
   * Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#requestGoogleDriveScope
   */
  readonly requestGoogleDriveScope?: GoogleBigQueryLinkedServiceTypePropertiesRequestGoogleDriveScope;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: GoogleBigQueryLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/GoogleBigQueryLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: GoogleBigQueryLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum GreenplumLinkedServiceType {
  GREENPLUM = 'Greenplum',
}

/**
 * Greenplum Database linked service properties.
 *
 * @schema #/definitions/GreenplumLinkedServiceTypeProperties
 */
export interface GreenplumLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/GreenplumLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: GreenplumLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GreenplumLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: GreenplumLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/GreenplumLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum HBaseLinkedServiceType {
  H_BASE = 'HBase',
}

/**
 * HBase server linked service properties.
 *
 * @schema #/definitions/HBaseLinkedServiceTypeProperties
 */
export interface HBaseLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: HBaseLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: HBaseLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication mechanism to use to connect to the HBase server.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: HBaseLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: HBaseLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HBaseLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The IP address or host name of the HBase server. (i.e. 192.168.222.160)
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#host
   */
  readonly host: HBaseLinkedServiceTypePropertiesHost;

  /**
   * The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#httpPath
   */
  readonly httpPath?: HBaseLinkedServiceTypePropertiesHttpPath;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#port
   */
  readonly port?: HBaseLinkedServiceTypePropertiesPort;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: HBaseLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * The user name used to connect to the HBase instance.
   *
   * @schema #/definitions/HBaseLinkedServiceTypeProperties#username
   */
  readonly username?: HBaseLinkedServiceTypePropertiesUsername;

}

export enum HiveLinkedServiceType {
  HIVE = 'Hive',
}

/**
 * Hive Server linked service properties.
 *
 * @schema #/definitions/HiveLinkedServiceTypeProperties
 */
export interface HiveLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: HiveLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: HiveLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication method used to access the Hive server.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: HiveLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: HiveLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HiveLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#host
   */
  readonly host: HiveLinkedServiceTypePropertiesHost;

  /**
   * The partial URL corresponding to the Hive server.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#httpPath
   */
  readonly httpPath?: HiveLinkedServiceTypePropertiesHttpPath;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Hive server uses to listen for client connections.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#port
   */
  readonly port?: HiveLinkedServiceTypePropertiesPort;

  /**
   * The type of Hive server.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#serverType
   */
  readonly serverType?: HiveLinkedServiceTypePropertiesServerType;

  /**
   * true to indicate using the ZooKeeper service, false not.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#serviceDiscoveryMode
   */
  readonly serviceDiscoveryMode?: HiveLinkedServiceTypePropertiesServiceDiscoveryMode;

  /**
   * The transport protocol to use in the Thrift layer.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#thriftTransportProtocol
   */
  readonly thriftTransportProtocol?: HiveLinkedServiceTypePropertiesThriftTransportProtocol;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: HiveLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#useNativeQuery
   */
  readonly useNativeQuery?: HiveLinkedServiceTypePropertiesUseNativeQuery;

  /**
   * The user name that you use to access Hive Server.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#username
   */
  readonly username?: HiveLinkedServiceTypePropertiesUsername;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: HiveLinkedServiceTypePropertiesUseSystemTrustStore;

  /**
   * The namespace on ZooKeeper under which Hive Server 2 nodes are added.
   *
   * @schema #/definitions/HiveLinkedServiceTypeProperties#zooKeeperNameSpace
   */
  readonly zooKeeperNameSpace?: HiveLinkedServiceTypePropertiesZooKeeperNameSpace;

}

export enum HubspotLinkedServiceType {
  HUBSPOT = 'Hubspot',
}

/**
 * Hubspot Service linked service properties.
 *
 * @schema #/definitions/HubspotLinkedServiceTypeProperties
 */
export interface HubspotLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * The client ID associated with your Hubspot application.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#clientId
   */
  readonly clientId: HubspotLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HubspotLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#refreshToken
   */
  readonly refreshToken?: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: HubspotLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: HubspotLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/HubspotLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: HubspotLinkedServiceTypePropertiesUsePeerVerification;

}

export enum ImpalaLinkedServiceType {
  IMPALA = 'Impala',
}

/**
 * Impala server linked service properties.
 *
 * @schema #/definitions/ImpalaLinkedServiceTypeProperties
 */
export interface ImpalaLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: ImpalaLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: ImpalaLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication type to use.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: ImpalaLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: ImpalaLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ImpalaLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The IP address or host name of the Impala server. (i.e. 192.168.222.160)
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#host
   */
  readonly host: ImpalaLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#port
   */
  readonly port?: ImpalaLinkedServiceTypePropertiesPort;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: ImpalaLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#username
   */
  readonly username?: ImpalaLinkedServiceTypePropertiesUsername;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/ImpalaLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: ImpalaLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum JiraLinkedServiceType {
  JIRA = 'Jira',
}

/**
 * Jira Service linked service properties.
 *
 * @schema #/definitions/JiraLinkedServiceTypeProperties
 */
export interface JiraLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: JiraLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The IP address or host name of the Jira service. (e.g. jira.example.com)
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#host
   */
  readonly host: JiraLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#port
   */
  readonly port?: JiraLinkedServiceTypePropertiesPort;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: JiraLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: JiraLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: JiraLinkedServiceTypePropertiesUsePeerVerification;

  /**
   * The user name that you use to access Jira Service.
   *
   * @schema #/definitions/JiraLinkedServiceTypeProperties#username
   */
  readonly username: JiraLinkedServiceTypePropertiesUsername;

}

export enum MagentoLinkedServiceType {
  MAGENTO = 'Magento',
}

/**
 * Magento server linked service properties.
 *
 * @schema #/definitions/MagentoLinkedServiceTypeProperties
 */
export interface MagentoLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MagentoLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#host
   */
  readonly host: MagentoLinkedServiceTypePropertiesHost;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: MagentoLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: MagentoLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/MagentoLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: MagentoLinkedServiceTypePropertiesUsePeerVerification;

}

export enum MariaDbLinkedServiceType {
  MARIA_DB = 'MariaDB',
}

/**
 * MariaDB server linked service properties.
 *
 * @schema #/definitions/MariaDBLinkedServiceTypeProperties
 */
export interface MariaDbLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/MariaDBLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: MariaDbLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MariaDBLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MariaDbLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/MariaDBLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum AzureMariaDbLinkedServiceType {
  AZURE_MARIA_DB = 'AzureMariaDB',
}

/**
 * Azure Database for MariaDB linked service properties.
 *
 * @schema #/definitions/AzureMariaDBLinkedServiceTypeProperties
 */
export interface AzureMariaDbLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/AzureMariaDBLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: AzureMariaDbLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMariaDBLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureMariaDbLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/AzureMariaDBLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum MarketoLinkedServiceType {
  MARKETO = 'Marketo',
}

/**
 * Marketo server linked service properties.
 *
 * @schema #/definitions/MarketoLinkedServiceTypeProperties
 */
export interface MarketoLinkedServiceTypeProperties {
  /**
   * The client Id of your Marketo service.
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#clientId
   */
  readonly clientId: MarketoLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: MarketoLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: MarketoLinkedServiceTypePropertiesEndpoint;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: MarketoLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: MarketoLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/MarketoLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: MarketoLinkedServiceTypePropertiesUsePeerVerification;

}

export enum PaypalLinkedServiceType {
  PAYPAL = 'Paypal',
}

/**
 * Paypal Service linked service properties.
 *
 * @schema #/definitions/PaypalLinkedServiceTypeProperties
 */
export interface PaypalLinkedServiceTypeProperties {
  /**
   * The client ID associated with your PayPal application.
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#clientId
   */
  readonly clientId: PaypalLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: PaypalLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#host
   */
  readonly host: PaypalLinkedServiceTypePropertiesHost;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: PaypalLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: PaypalLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/PaypalLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: PaypalLinkedServiceTypePropertiesUsePeerVerification;

}

export enum PhoenixLinkedServiceType {
  PHOENIX = 'Phoenix',
}

/**
 * Phoenix server linked service properties.
 *
 * @schema #/definitions/PhoenixLinkedServiceTypeProperties
 */
export interface PhoenixLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: PhoenixLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: PhoenixLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication mechanism used to connect to the Phoenix server.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: PhoenixLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: PhoenixLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: PhoenixLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#host
   */
  readonly host: PhoenixLinkedServiceTypePropertiesHost;

  /**
   * The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#httpPath
   */
  readonly httpPath?: PhoenixLinkedServiceTypePropertiesHttpPath;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#port
   */
  readonly port?: PhoenixLinkedServiceTypePropertiesPort;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: PhoenixLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * The user name used to connect to the Phoenix server.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#username
   */
  readonly username?: PhoenixLinkedServiceTypePropertiesUsername;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/PhoenixLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: PhoenixLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum PrestoLinkedServiceType {
  PRESTO = 'Presto',
}

/**
 * Presto server linked service properties.
 *
 * @schema #/definitions/PrestoLinkedServiceTypeProperties
 */
export interface PrestoLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: PrestoLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: PrestoLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication mechanism used to connect to the Presto server.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: PrestoLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The catalog context for all request against the server.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#catalog
   */
  readonly catalog: PrestoLinkedServiceTypePropertiesCatalog;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: PrestoLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: PrestoLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The IP address or host name of the Presto server. (i.e. 192.168.222.160)
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#host
   */
  readonly host: PrestoLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#port
   */
  readonly port?: PrestoLinkedServiceTypePropertiesPort;

  /**
   * The version of the Presto server. (i.e. 0.148-t)
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#serverVersion
   */
  readonly serverVersion: PrestoLinkedServiceTypePropertiesServerVersion;

  /**
   * The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#timeZoneID
   */
  readonly timeZoneID?: PrestoLinkedServiceTypePropertiesTimeZoneId;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: PrestoLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * The user name used to connect to the Presto server.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#username
   */
  readonly username?: PrestoLinkedServiceTypePropertiesUsername;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/PrestoLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: PrestoLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum QuickBooksLinkedServiceType {
  QUICK_BOOKS = 'QuickBooks',
}

/**
 * QuickBooks server linked service properties.
 *
 * @schema #/definitions/QuickBooksLinkedServiceTypeProperties
 */
export interface QuickBooksLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#accessTokenSecret
   */
  readonly accessTokenSecret?: SecretBase;

  /**
   * The company ID of the QuickBooks company to authorize.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#companyId
   */
  readonly companyId?: QuickBooksLinkedServiceTypePropertiesCompanyId;

  /**
   * Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: QuickBooksLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The consumer key for OAuth 1.0 authentication.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#consumerKey
   */
  readonly consumerKey?: QuickBooksLinkedServiceTypePropertiesConsumerKey;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#consumerSecret
   */
  readonly consumerSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: QuickBooksLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint?: QuickBooksLinkedServiceTypePropertiesEndpoint;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/QuickBooksLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: QuickBooksLinkedServiceTypePropertiesUseEncryptedEndpoints;

}

export enum ServiceNowLinkedServiceType {
  SERVICE_NOW = 'ServiceNow',
}

/**
 * ServiceNow server linked service properties.
 *
 * @schema #/definitions/ServiceNowLinkedServiceTypeProperties
 */
export interface ServiceNowLinkedServiceTypeProperties {
  /**
   * The authentication type to use.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: ServiceNowLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The client id for OAuth2 authentication.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: ServiceNowLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ServiceNowLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: ServiceNowLinkedServiceTypePropertiesEndpoint;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: ServiceNowLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: ServiceNowLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: ServiceNowLinkedServiceTypePropertiesUsePeerVerification;

  /**
   * The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
   *
   * @schema #/definitions/ServiceNowLinkedServiceTypeProperties#username
   */
  readonly username?: ServiceNowLinkedServiceTypePropertiesUsername;

}

export enum ShopifyLinkedServiceType {
  SHOPIFY = 'Shopify',
}

/**
 * Shopify Service linked service properties.
 *
 * @schema #/definitions/ShopifyLinkedServiceTypeProperties
 */
export interface ShopifyLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ShopifyLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#host
   */
  readonly host: ShopifyLinkedServiceTypePropertiesHost;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: ShopifyLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: ShopifyLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ShopifyLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: ShopifyLinkedServiceTypePropertiesUsePeerVerification;

}

export enum SparkLinkedServiceType {
  SPARK = 'Spark',
}

/**
 * Spark Server linked service properties.
 *
 * @schema #/definitions/SparkLinkedServiceTypeProperties
 */
export interface SparkLinkedServiceTypeProperties {
  /**
   * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#allowHostNameCNMismatch
   */
  readonly allowHostNameCNMismatch?: SparkLinkedServiceTypePropertiesAllowHostNameCnMismatch;

  /**
   * Specifies whether to allow self-signed certificates from the server. The default value is false.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#allowSelfSignedServerCert
   */
  readonly allowSelfSignedServerCert?: SparkLinkedServiceTypePropertiesAllowSelfSignedServerCert;

  /**
   * The authentication method used to access the Spark server.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: SparkLinkedServiceTypePropertiesAuthenticationType;

  /**
   * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#enableSsl
   */
  readonly enableSsl?: SparkLinkedServiceTypePropertiesEnableSsl;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SparkLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * IP address or host name of the Spark server
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#host
   */
  readonly host: SparkLinkedServiceTypePropertiesHost;

  /**
   * The partial URL corresponding to the Spark server.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#httpPath
   */
  readonly httpPath?: SparkLinkedServiceTypePropertiesHttpPath;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * The TCP port that the Spark server uses to listen for client connections.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#port
   */
  readonly port: SparkLinkedServiceTypePropertiesPort;

  /**
   * The type of Spark server.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#serverType
   */
  readonly serverType?: SparkLinkedServiceTypePropertiesServerType;

  /**
   * The transport protocol to use in the Thrift layer.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#thriftTransportProtocol
   */
  readonly thriftTransportProtocol?: SparkLinkedServiceTypePropertiesThriftTransportProtocol;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: SparkLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * The user name that you use to access Spark Server.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#username
   */
  readonly username?: SparkLinkedServiceTypePropertiesUsername;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/SparkLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: SparkLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum SquareLinkedServiceType {
  SQUARE = 'Square',
}

/**
 * Square Service linked service properties.
 *
 * @schema #/definitions/SquareLinkedServiceTypeProperties
 */
export interface SquareLinkedServiceTypeProperties {
  /**
   * The client ID associated with your Square application.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: SquareLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * Properties used to connect to Square. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: SquareLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SquareLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of the Square instance. (i.e. mystore.mysquare.com)
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#host
   */
  readonly host?: SquareLinkedServiceTypePropertiesHost;

  /**
   * The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#redirectUri
   */
  readonly redirectUri?: SquareLinkedServiceTypePropertiesRedirectUri;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: SquareLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: SquareLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/SquareLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: SquareLinkedServiceTypePropertiesUsePeerVerification;

}

export enum XeroLinkedServiceType {
  XERO = 'Xero',
}

/**
 * Xero Service linked service properties.
 *
 * @schema #/definitions/XeroLinkedServiceTypeProperties
 */
export interface XeroLinkedServiceTypeProperties {
  /**
   * Properties used to connect to Xero. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: XeroLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#consumerKey
   */
  readonly consumerKey?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: XeroLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Xero server. (i.e. api.xero.com)
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#host
   */
  readonly host?: XeroLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#privateKey
   */
  readonly privateKey?: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: XeroLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: XeroLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/XeroLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: XeroLinkedServiceTypePropertiesUsePeerVerification;

}

export enum ZohoLinkedServiceType {
  ZOHO = 'Zoho',
}

/**
 * Zoho server linked service properties.
 *
 * @schema #/definitions/ZohoLinkedServiceTypeProperties
 */
export interface ZohoLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * Properties used to connect to Zoho. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: ZohoLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ZohoLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint?: ZohoLinkedServiceTypePropertiesEndpoint;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: ZohoLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: ZohoLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
   *
   * @schema #/definitions/ZohoLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: ZohoLinkedServiceTypePropertiesUsePeerVerification;

}

export enum VerticaLinkedServiceType {
  VERTICA = 'Vertica',
}

/**
 * Vertica linked service properties.
 *
 * @schema #/definitions/VerticaLinkedServiceTypeProperties
 */
export interface VerticaLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/VerticaLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: VerticaLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/VerticaLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: VerticaLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/VerticaLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum NetezzaLinkedServiceType {
  NETEZZA = 'Netezza',
}

/**
 * Netezza linked service properties.
 *
 * @schema #/definitions/NetezzaLinkedServiceTypeProperties
 */
export interface NetezzaLinkedServiceTypeProperties {
  /**
   * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
   *
   * @schema #/definitions/NetezzaLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString?: NetezzaLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: NetezzaLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/NetezzaLinkedServiceTypeProperties#pwd
   */
  readonly pwd?: AzureKeyVaultSecretReference;

}

export enum SalesforceMarketingCloudLinkedServiceType {
  SALESFORCE_MARKETING_CLOUD = 'SalesforceMarketingCloud',
}

/**
 * Salesforce Marketing Cloud linked service properties.
 *
 * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties
 */
export interface SalesforceMarketingCloudLinkedServiceTypeProperties {
  /**
   * The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: SalesforceMarketingCloudLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * Properties used to connect to Salesforce Marketing Cloud. It is mutually exclusive with any other properties in the linked service. Type: object.
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#connectionProperties
   */
  readonly connectionProperties?: SalesforceMarketingCloudLinkedServiceTypePropertiesConnectionProperties;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SalesforceMarketingCloudLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: SalesforceMarketingCloudLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: SalesforceMarketingCloudLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SalesforceMarketingCloudLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: SalesforceMarketingCloudLinkedServiceTypePropertiesUsePeerVerification;

}

export enum HdInsightOnDemandLinkedServiceType {
  HD_INSIGHT_ON_DEMAND = 'HDInsightOnDemand',
}

/**
 * HDInsight ondemand linked service properties.
 *
 * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties
 */
export interface HdInsightOnDemandLinkedServiceTypeProperties {
  /**
   * Specifies additional storage accounts for the HDInsight linked service so that the Data Factory service can register them on your behalf.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#additionalLinkedServiceNames
   */
  readonly additionalLinkedServiceNames?: LinkedServiceReference[];

  /**
   * The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterNamePrefix
   */
  readonly clusterNamePrefix?: HdInsightOnDemandLinkedServiceTypePropertiesClusterNamePrefix;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterPassword
   */
  readonly clusterPassword?: SecretBase;

  /**
   * The resource group where the cluster belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterResourceGroup
   */
  readonly clusterResourceGroup: HdInsightOnDemandLinkedServiceTypePropertiesClusterResourceGroup;

  /**
   * Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterSize
   */
  readonly clusterSize: HdInsightOnDemandLinkedServiceTypePropertiesClusterSize;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterSshPassword
   */
  readonly clusterSshPassword?: SecretBase;

  /**
   * The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterSshUserName
   */
  readonly clusterSshUserName?: HdInsightOnDemandLinkedServiceTypePropertiesClusterSshUserName;

  /**
   * The cluster type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterType
   */
  readonly clusterType?: HdInsightOnDemandLinkedServiceTypePropertiesClusterType;

  /**
   * The username to access the cluster. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#clusterUserName
   */
  readonly clusterUserName?: HdInsightOnDemandLinkedServiceTypePropertiesClusterUserName;

  /**
   * Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#coreConfiguration
   */
  readonly coreConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesCoreConfiguration;

  /**
   * Specifies the size of the data node for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#dataNodeSize
   */
  readonly dataNodeSize?: HdInsightOnDemandLinkedServiceTypePropertiesDataNodeSize;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: HdInsightOnDemandLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#hBaseConfiguration
   */
  readonly hBaseConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesHBaseConfiguration;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#hcatalogLinkedServiceName
   */
  readonly hcatalogLinkedServiceName?: LinkedServiceReference;

  /**
   * Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#hdfsConfiguration
   */
  readonly hdfsConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesHdfsConfiguration;

  /**
   * Specifies the size of the head node for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#headNodeSize
   */
  readonly headNodeSize?: HdInsightOnDemandLinkedServiceTypePropertiesHeadNodeSize;

  /**
   * Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#hiveConfiguration
   */
  readonly hiveConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesHiveConfiguration;

  /**
   * The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#hostSubscriptionId
   */
  readonly hostSubscriptionId: HdInsightOnDemandLinkedServiceTypePropertiesHostSubscriptionId;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#linkedServiceName
   */
  readonly linkedServiceName: LinkedServiceReference;

  /**
   * Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#mapReduceConfiguration
   */
  readonly mapReduceConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesMapReduceConfiguration;

  /**
   * Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#oozieConfiguration
   */
  readonly oozieConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesOozieConfiguration;

  /**
   * Custom script actions to run on HDI ondemand cluster once it's up. Please refer to https://docs.microsoft.com/en-us/azure/hdinsight/hdinsight-hadoop-customize-cluster-linux?toc=%2Fen-us%2Fazure%2Fhdinsight%2Fr-server%2FTOC.json&bc=%2Fen-us%2Fazure%2Fbread%2Ftoc.json#understanding-script-actions.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#scriptActions
   */
  readonly scriptActions?: ScriptAction[];

  /**
   * The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: HdInsightOnDemandLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#sparkVersion
   */
  readonly sparkVersion?: HdInsightOnDemandLinkedServiceTypePropertiesSparkVersion;

  /**
   * Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#stormConfiguration
   */
  readonly stormConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesStormConfiguration;

  /**
   * The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#subnetName
   */
  readonly subnetName?: HdInsightOnDemandLinkedServiceTypePropertiesSubnetName;

  /**
   * The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#tenant
   */
  readonly tenant: HdInsightOnDemandLinkedServiceTypePropertiesTenant;

  /**
   * The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#timeToLive
   */
  readonly timeToLive: HdInsightOnDemandLinkedServiceTypePropertiesTimeToLive;

  /**
   * Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#version
   */
  readonly version: HdInsightOnDemandLinkedServiceTypePropertiesVersion;

  /**
   * The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#virtualNetworkId
   */
  readonly virtualNetworkId?: HdInsightOnDemandLinkedServiceTypePropertiesVirtualNetworkId;

  /**
   * Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#yarnConfiguration
   */
  readonly yarnConfiguration?: HdInsightOnDemandLinkedServiceTypePropertiesYarnConfiguration;

  /**
   * Specifies the size of the Zoo Keeper node for the HDInsight cluster.
   *
   * @schema #/definitions/HDInsightOnDemandLinkedServiceTypeProperties#zookeeperNodeSize
   */
  readonly zookeeperNodeSize?: HdInsightOnDemandLinkedServiceTypePropertiesZookeeperNodeSize;

}

export enum AzureDataLakeAnalyticsLinkedServiceType {
  AZURE_DATA_LAKE_ANALYTICS = 'AzureDataLakeAnalytics',
}

/**
 * Azure Data Lake Analytics linked service properties.
 *
 * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypeProperties {
  /**
   * The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#accountName
   */
  readonly accountName: AzureDataLakeAnalyticsLinkedServiceTypePropertiesAccountName;

  /**
   * Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#dataLakeAnalyticsUri
   */
  readonly dataLakeAnalyticsUri?: AzureDataLakeAnalyticsLinkedServiceTypePropertiesDataLakeAnalyticsUri;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureDataLakeAnalyticsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#resourceGroupName
   */
  readonly resourceGroupName?: AzureDataLakeAnalyticsLinkedServiceTypePropertiesResourceGroupName;

  /**
   * The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureDataLakeAnalyticsLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#subscriptionId
   */
  readonly subscriptionId?: AzureDataLakeAnalyticsLinkedServiceTypePropertiesSubscriptionId;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeAnalyticsLinkedServiceTypeProperties#tenant
   */
  readonly tenant: AzureDataLakeAnalyticsLinkedServiceTypePropertiesTenant;

}

export enum AzureDatabricksLinkedServiceType {
  AZURE_DATABRICKS = 'AzureDatabricks',
}

/**
 * Azure Databricks linked service properties.
 *
 * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties
 */
export interface AzureDatabricksLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#authentication
   */
  readonly authentication?: AzureDatabricksLinkedServiceTypePropertiesAuthentication;

  /**
   * <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#domain
   */
  readonly domain: AzureDatabricksLinkedServiceTypePropertiesDomain;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureDatabricksLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#existingClusterId
   */
  readonly existingClusterId?: AzureDatabricksLinkedServiceTypePropertiesExistingClusterId;

  /**
   * The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#instancePoolId
   */
  readonly instancePoolId?: AzureDatabricksLinkedServiceTypePropertiesInstancePoolId;

  /**
   * Additional tags for cluster resources. This property is ignored in instance pool configurations.
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterCustomTags
   */
  readonly newClusterCustomTags?: AzureDatabricksLinkedServiceTypePropertiesNewClusterCustomTags;

  /**
   * The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterDriverNodeType
   */
  readonly newClusterDriverNodeType?: AzureDatabricksLinkedServiceTypePropertiesNewClusterDriverNodeType;

  /**
   * Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterEnableElasticDisk
   */
  readonly newClusterEnableElasticDisk?: AzureDatabricksLinkedServiceTypePropertiesNewClusterEnableElasticDisk;

  /**
   * User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterInitScripts
   */
  readonly newClusterInitScripts?: AzureDatabricksLinkedServiceTypePropertiesNewClusterInitScripts;

  /**
   * Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterLogDestination
   */
  readonly newClusterLogDestination?: AzureDatabricksLinkedServiceTypePropertiesNewClusterLogDestination;

  /**
   * The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterNodeType
   */
  readonly newClusterNodeType?: AzureDatabricksLinkedServiceTypePropertiesNewClusterNodeType;

  /**
   * If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterNumOfWorker
   */
  readonly newClusterNumOfWorker?: AzureDatabricksLinkedServiceTypePropertiesNewClusterNumOfWorker;

  /**
   * A set of optional, user-specified Spark configuration key-value pairs.
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterSparkConf
   */
  readonly newClusterSparkConf?: AzureDatabricksLinkedServiceTypePropertiesNewClusterSparkConf;

  /**
   * A set of optional, user-specified Spark environment variables key-value pairs.
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterSparkEnvVars
   */
  readonly newClusterSparkEnvVars?: AzureDatabricksLinkedServiceTypePropertiesNewClusterSparkEnvVars;

  /**
   * If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#newClusterVersion
   */
  readonly newClusterVersion?: AzureDatabricksLinkedServiceTypePropertiesNewClusterVersion;

  /**
   * The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#policyId
   */
  readonly policyId?: AzureDatabricksLinkedServiceTypePropertiesPolicyId;

  /**
   * Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksLinkedServiceTypeProperties#workspaceResourceId
   */
  readonly workspaceResourceId?: AzureDatabricksLinkedServiceTypePropertiesWorkspaceResourceId;

}

export enum AzureDatabricksDeltaLakeLinkedServiceType {
  AZURE_DATABRICKS_DELTA_LAKE = 'AzureDatabricksDeltaLake',
}

/**
 * Azure Databricks Delta Lake linked service properties.
 *
 * @schema #/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties
 */
export interface AzureDatabricksDetltaLakeLinkedServiceTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties#accessToken
   */
  readonly accessToken?: SecretBase;

  /**
   * The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties#clusterId
   */
  readonly clusterId?: AzureDatabricksDetltaLakeLinkedServiceTypePropertiesClusterId;

  /**
   * <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties#domain
   */
  readonly domain: AzureDatabricksDetltaLakeLinkedServiceTypePropertiesDomain;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDetltaLakeLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureDatabricksDetltaLakeLinkedServiceTypePropertiesEncryptedCredential;

}

export enum ResponsysLinkedServiceType {
  RESPONSYS = 'Responsys',
}

/**
 * Responsys linked service properties.
 *
 * @schema #/definitions/ResponsysLinkedServiceTypeProperties
 */
export interface ResponsysLinkedServiceTypeProperties {
  /**
   * The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#clientId
   */
  readonly clientId: ResponsysLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: ResponsysLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Responsys server.
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: ResponsysLinkedServiceTypePropertiesEndpoint;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: ResponsysLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: ResponsysLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ResponsysLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: ResponsysLinkedServiceTypePropertiesUsePeerVerification;

}

export enum DynamicsAxLinkedServiceType {
  DYNAMICS_AX = 'DynamicsAX',
}

/**
 * Dynamics AX linked service properties.
 *
 * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties
 */
export interface DynamicsAxLinkedServiceTypeProperties {
  /**
   * Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#aadResourceId
   */
  readonly aadResourceId: DynamicsAxLinkedServiceTypePropertiesAadResourceId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: DynamicsAxLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Specify the application's client ID. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId: DynamicsAxLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey: SecretBase;

  /**
   * Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#tenant
   */
  readonly tenant: DynamicsAxLinkedServiceTypePropertiesTenant;

  /**
   * The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.
   *
   * @schema #/definitions/DynamicsAXLinkedServiceTypeProperties#url
   */
  readonly url: DynamicsAxLinkedServiceTypePropertiesUrl;

}

export enum OracleServiceCloudLinkedServiceType {
  ORACLE_SERVICE_CLOUD = 'OracleServiceCloud',
}

/**
 * Oracle Service Cloud linked service properties.
 *
 * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties
 */
export interface OracleServiceCloudLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: OracleServiceCloudLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The URL of the Oracle Service Cloud instance.
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#host
   */
  readonly host: OracleServiceCloudLinkedServiceTypePropertiesHost;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#password
   */
  readonly password: SecretBase;

  /**
   * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#useEncryptedEndpoints
   */
  readonly useEncryptedEndpoints?: OracleServiceCloudLinkedServiceTypePropertiesUseEncryptedEndpoints;

  /**
   * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#useHostVerification
   */
  readonly useHostVerification?: OracleServiceCloudLinkedServiceTypePropertiesUseHostVerification;

  /**
   * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#usePeerVerification
   */
  readonly usePeerVerification?: OracleServiceCloudLinkedServiceTypePropertiesUsePeerVerification;

  /**
   * The user name that you use to access Oracle Service Cloud server.
   *
   * @schema #/definitions/OracleServiceCloudLinkedServiceTypeProperties#username
   */
  readonly username: OracleServiceCloudLinkedServiceTypePropertiesUsername;

}

export enum GoogleAdWordsLinkedServiceType {
  GOOGLE_AD_WORDS = 'GoogleAdWords',
}

/**
 * Google AdWords service linked service properties.
 *
 * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties
 */
export interface GoogleAdWordsLinkedServiceTypeProperties {
  /**
   * The OAuth 2.0 authentication mechanism used for authentication. ServiceAuthentication can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#authenticationType
   */
  readonly authenticationType: GoogleAdWordsLinkedServiceTypePropertiesAuthenticationType;

  /**
   * The Client customer ID of the AdWords account that you want to fetch report data for.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#clientCustomerID
   */
  readonly clientCustomerID: GoogleAdWordsLinkedServiceTypePropertiesClientCustomerId;

  /**
   * The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: GoogleAdWordsLinkedServiceTypePropertiesClientId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#clientSecret
   */
  readonly clientSecret?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#developerToken
   */
  readonly developerToken: SecretBase;

  /**
   * The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#email
   */
  readonly email?: GoogleAdWordsLinkedServiceTypePropertiesEmail;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: GoogleAdWordsLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#keyFilePath
   */
  readonly keyFilePath?: GoogleAdWordsLinkedServiceTypePropertiesKeyFilePath;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#refreshToken
   */
  readonly refreshToken?: SecretBase;

  /**
   * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#trustedCertPath
   */
  readonly trustedCertPath?: GoogleAdWordsLinkedServiceTypePropertiesTrustedCertPath;

  /**
   * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
   *
   * @schema #/definitions/GoogleAdWordsLinkedServiceTypeProperties#useSystemTrustStore
   */
  readonly useSystemTrustStore?: GoogleAdWordsLinkedServiceTypePropertiesUseSystemTrustStore;

}

export enum SapTableLinkedServiceType {
  SAP_TABLE = 'SapTable',
}

/**
 * Properties specific to this linked service type.
 *
 * @schema #/definitions/SapTableLinkedServiceTypeProperties
 */
export interface SapTableLinkedServiceTypeProperties {
  /**
   * Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#clientId
   */
  readonly clientId?: SapTableLinkedServiceTypePropertiesClientId;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SapTableLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#language
   */
  readonly language?: SapTableLinkedServiceTypePropertiesLanguage;

  /**
   * The Logon Group for the SAP System. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#logonGroup
   */
  readonly logonGroup?: SapTableLinkedServiceTypePropertiesLogonGroup;

  /**
   * The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#messageServer
   */
  readonly messageServer?: SapTableLinkedServiceTypePropertiesMessageServer;

  /**
   * The service name or port number of the Message Server. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#messageServerService
   */
  readonly messageServerService?: SapTableLinkedServiceTypePropertiesMessageServerService;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#password
   */
  readonly password?: SecretBase;

  /**
   * Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#server
   */
  readonly server?: SapTableLinkedServiceTypePropertiesServer;

  /**
   * External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#sncLibraryPath
   */
  readonly sncLibraryPath?: SapTableLinkedServiceTypePropertiesSncLibraryPath;

  /**
   * SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#sncMode
   */
  readonly sncMode?: SapTableLinkedServiceTypePropertiesSncMode;

  /**
   * Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#sncMyName
   */
  readonly sncMyName?: SapTableLinkedServiceTypePropertiesSncMyName;

  /**
   * Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#sncPartnerName
   */
  readonly sncPartnerName?: SapTableLinkedServiceTypePropertiesSncPartnerName;

  /**
   * SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#sncQop
   */
  readonly sncQop?: SapTableLinkedServiceTypePropertiesSncQop;

  /**
   * SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#systemId
   */
  readonly systemId?: SapTableLinkedServiceTypePropertiesSystemId;

  /**
   * System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#systemNumber
   */
  readonly systemNumber?: SapTableLinkedServiceTypePropertiesSystemNumber;

  /**
   * Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableLinkedServiceTypeProperties#userName
   */
  readonly userName?: SapTableLinkedServiceTypePropertiesUserName;

}

export enum AzureDataExplorerLinkedServiceType {
  AZURE_DATA_EXPLORER = 'AzureDataExplorer',
}

/**
 * Azure Data Explorer (Kusto) linked service properties.
 *
 * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties
 */
export interface AzureDataExplorerLinkedServiceTypeProperties {
  /**
   * Database name for connection. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties#database
   */
  readonly database: AzureDataExplorerLinkedServiceTypePropertiesDatabase;

  /**
   * The endpoint of Azure Data Explorer (the engine's endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties#endpoint
   */
  readonly endpoint: AzureDataExplorerLinkedServiceTypePropertiesEndpoint;

  /**
   * The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: AzureDataExplorerLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

  /**
   * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerLinkedServiceTypeProperties#tenant
   */
  readonly tenant?: AzureDataExplorerLinkedServiceTypePropertiesTenant;

}

export enum AzureFunctionLinkedServiceType {
  AZURE_FUNCTION = 'AzureFunction',
}

/**
 * Azure Function linked service properties.
 *
 * @schema #/definitions/AzureFunctionLinkedServiceTypeProperties
 */
export interface AzureFunctionLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFunctionLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: AzureFunctionLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net.
   *
   * @schema #/definitions/AzureFunctionLinkedServiceTypeProperties#functionAppUrl
   */
  readonly functionAppUrl: AzureFunctionLinkedServiceTypePropertiesFunctionAppUrl;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/AzureFunctionLinkedServiceTypeProperties#functionKey
   */
  readonly functionKey?: SecretBase;

}

export enum SnowflakeLinkedServiceType {
  SNOWFLAKE = 'Snowflake',
}

/**
 * Snowflake linked service properties.
 *
 * @schema #/definitions/SnowflakeLinkedServiceTypeProperties
 */
export interface SnowflakeLinkedServiceTypeProperties {
  /**
   * The connection string of snowflake. Type: string, SecureString.
   *
   * @schema #/definitions/SnowflakeLinkedServiceTypeProperties#connectionString
   */
  readonly connectionString: SnowflakeLinkedServiceTypePropertiesConnectionString;

  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SnowflakeLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SnowflakeLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * Azure Key Vault secret reference.
   *
   * @schema #/definitions/SnowflakeLinkedServiceTypeProperties#password
   */
  readonly password?: AzureKeyVaultSecretReference;

}

export enum SharePointOnlineListLinkedServiceType {
  SHARE_POINT_ONLINE_LIST = 'SharePointOnlineList',
}

/**
 * SharePoint Online List linked service properties.
 *
 * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties
 */
export interface SharePointOnlineListLinkedServiceTypeProperties {
  /**
   * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties#encryptedCredential
   */
  readonly encryptedCredential?: SharePointOnlineListLinkedServiceTypePropertiesEncryptedCredential;

  /**
   * The application (client) ID of your application registered in Azure Active Directory. Make sure to grant SharePoint site permission to this application. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties#servicePrincipalId
   */
  readonly servicePrincipalId: SharePointOnlineListLinkedServiceTypePropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey: SecretBase;

  /**
   * The URL of the SharePoint Online site. For example, https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties#siteUrl
   */
  readonly siteUrl: SharePointOnlineListLinkedServiceTypePropertiesSiteUrl;

  /**
   * The tenant ID under which your application resides. You can find it from Azure portal Active Directory overview page. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListLinkedServiceTypeProperties#tenantId
   */
  readonly tenantId: SharePointOnlineListLinkedServiceTypePropertiesTenantId;

}

/**
 * Base class for all control activities like IfCondition, ForEach , Until.
 *
 * @schema #/definitions/ControlActivity
 */
export class ControlActivity {
  public static fromExecutePipelineActivity(value: ExecutePipelineActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromIfConditionActivity(value: IfConditionActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromSwitchActivity(value: SwitchActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromForEachActivity(value: ForEachActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromWaitActivity(value: WaitActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromUntilActivity(value: UntilActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromValidationActivity(value: ValidationActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromFilterActivity(value: FilterActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromSetVariableActivity(value: SetVariableActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromAppendVariableActivity(value: AppendVariableActivity): ControlActivity {
    return new ControlActivity(value);
  }
  public static fromWebHookActivity(value: WebHookActivity): ControlActivity {
    return new ControlActivity(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Base class for all execution activities.
 *
 * @schema #/definitions/ExecutionActivity
 */
export class ExecutionActivity {
  public static fromCopyActivity(value: CopyActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromHdInsightHiveActivity(value: HdInsightHiveActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromHdInsightPigActivity(value: HdInsightPigActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromHdInsightMapReduceActivity(value: HdInsightMapReduceActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromHdInsightStreamingActivity(value: HdInsightStreamingActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromHdInsightSparkActivity(value: HdInsightSparkActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromExecuteSsisPackageActivity(value: ExecuteSsisPackageActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromCustomActivity(value: CustomActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromSqlServerStoredProcedureActivity(value: SqlServerStoredProcedureActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromDeleteActivity(value: DeleteActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromAzureDataExplorerCommandActivity(value: AzureDataExplorerCommandActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromLookupActivity(value: LookupActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromWebActivity(value: WebActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromGetMetadataActivity(value: GetMetadataActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromAzureMlBatchExecutionActivity(value: AzureMlBatchExecutionActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromAzureMlUpdateResourceActivity(value: AzureMlUpdateResourceActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromAzureMlExecutePipelineActivity(value: AzureMlExecutePipelineActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromDataLakeAnalyticsUsqlActivity(value: DataLakeAnalyticsUsqlActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromDatabricksNotebookActivity(value: DatabricksNotebookActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromDatabricksSparkJarActivity(value: DatabricksSparkJarActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromDatabricksSparkPythonActivity(value: DatabricksSparkPythonActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromAzureFunctionActivity(value: AzureFunctionActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  public static fromExecuteDataFlowActivity(value: ExecuteDataFlowActivity): ExecutionActivity {
    return new ExecutionActivity(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Pipeline ElapsedTime Metric Policy.
 *
 * @schema #/definitions/PipelineElapsedTimeMetricPolicy
 */
export interface PipelineElapsedTimeMetricPolicy {
  /**
   * TimeSpan value, after which an Azure Monitoring Metric is fired.
   *
   * @schema #/definitions/PipelineElapsedTimeMetricPolicy#duration
   */
  readonly duration?: PipelineElapsedTimeMetricPolicyDuration;

}

/**
 * Trigger that creates pipeline runs periodically, on schedule.
 *
 * @schema #/definitions/ScheduleTrigger
 */
export interface ScheduleTrigger {
  /**
   * @schema #/definitions/ScheduleTrigger#type
   */
  readonly type: ScheduleTriggerType;

  /**
   * Schedule Trigger properties.
   *
   * @schema #/definitions/ScheduleTrigger#typeProperties
   */
  readonly typeProperties: ScheduleTriggerTypeProperties;

}

/**
 * Trigger that runs every time the selected Blob container changes.
 *
 * @schema #/definitions/BlobTrigger
 */
export interface BlobTrigger {
  /**
   * @schema #/definitions/BlobTrigger#type
   */
  readonly type: BlobTriggerType;

  /**
   * Blob Trigger properties.
   *
   * @schema #/definitions/BlobTrigger#typeProperties
   */
  readonly typeProperties: BlobTriggerTypeProperties;

}

/**
 * Trigger that runs every time a Blob event occurs.
 *
 * @schema #/definitions/BlobEventsTrigger
 */
export interface BlobEventsTrigger {
  /**
   * @schema #/definitions/BlobEventsTrigger#type
   */
  readonly type: BlobEventsTriggerType;

  /**
   * Blob Events Trigger properties.
   *
   * @schema #/definitions/BlobEventsTrigger#typeProperties
   */
  readonly typeProperties: BlobEventsTriggerTypeProperties;

}

/**
 * Trigger that runs every time a custom event is received.
 *
 * @schema #/definitions/CustomEventsTrigger
 */
export interface CustomEventsTrigger {
  /**
   * @schema #/definitions/CustomEventsTrigger#type
   */
  readonly type: CustomEventsTriggerType;

  /**
   * Custom Events Trigger properties.
   *
   * @schema #/definitions/CustomEventsTrigger#typeProperties
   */
  readonly typeProperties: CustomEventsTriggerTypeProperties;

}

/**
 * Pipeline that needs to be triggered with the given parameters.
 *
 * @schema #/definitions/TriggerPipelineReference
 */
export interface TriggerPipelineReference {
  /**
   * An object mapping parameter names to argument values.
   *
   * @schema #/definitions/TriggerPipelineReference#parameters
   */
  readonly parameters?: TriggerPipelineReferenceParameters;

  /**
   * Pipeline reference type.
   *
   * @schema #/definitions/TriggerPipelineReference#pipelineReference
   */
  readonly pipelineReference?: PipelineReference;

}

export enum TumblingWindowTriggerType {
  TUMBLING_WINDOW_TRIGGER = 'TumblingWindowTrigger',
}

/**
 * Tumbling Window Trigger properties.
 *
 * @schema #/definitions/TumblingWindowTriggerTypeProperties
 */
export interface TumblingWindowTriggerTypeProperties {
  /**
   * Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#delay
   */
  readonly delay?: TumblingWindowTriggerTypePropertiesDelay;

  /**
   * Triggers that this trigger depends on. Only tumbling window triggers are supported.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#dependsOn
   */
  readonly dependsOn?: DependencyReference[];

  /**
   * The end time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#endTime
   */
  readonly endTime?: Date;

  /**
   * The frequency of the time windows.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#frequency
   */
  readonly frequency: TumblingWindowTriggerTypePropertiesFrequency;

  /**
   * The interval of the time windows. The minimum interval allowed is 15 Minutes.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#interval
   */
  readonly interval: number;

  /**
   * The max number of parallel time windows (ready for execution) for which a new run is triggered.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#maxConcurrency
   */
  readonly maxConcurrency: number;

  /**
   * Execution policy for an activity.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#retryPolicy
   */
  readonly retryPolicy?: RetryPolicy;

  /**
   * The start time for the time period for the trigger during which events are fired for windows that are ready. Only UTC time is currently supported.
   *
   * @schema #/definitions/TumblingWindowTriggerTypeProperties#startTime
   */
  readonly startTime: Date;

}

export enum RerunTumblingWindowTriggerType {
  RERUN_TUMBLING_WINDOW_TRIGGER = 'RerunTumblingWindowTrigger',
}

/**
 * Rerun Trigger properties.
 *
 * @schema #/definitions/RerunTumblingWindowTriggerTypeProperties
 */
export interface RerunTumblingWindowTriggerTypeProperties {
  /**
   * The parent trigger reference.
   *
   * @schema #/definitions/RerunTumblingWindowTriggerTypeProperties#parentTrigger
   */
  readonly parentTrigger: RerunTumblingWindowTriggerTypePropertiesParentTrigger;

  /**
   * The end time for the time period for which restatement is initiated. Only UTC time is currently supported.
   *
   * @schema #/definitions/RerunTumblingWindowTriggerTypeProperties#requestedEndTime
   */
  readonly requestedEndTime: Date;

  /**
   * The start time for the time period for which restatement is initiated. Only UTC time is currently supported.
   *
   * @schema #/definitions/RerunTumblingWindowTriggerTypeProperties#requestedStartTime
   */
  readonly requestedStartTime: Date;

  /**
   * The max number of parallel time windows (ready for execution) for which a rerun is triggered.
   *
   * @schema #/definitions/RerunTumblingWindowTriggerTypeProperties#rerunConcurrency
   */
  readonly rerunConcurrency: number;

}

export enum ChainingTriggerType {
  CHAINING_TRIGGER = 'ChainingTrigger',
}

/**
 * Chaining Trigger properties.
 *
 * @schema #/definitions/ChainingTriggerTypeProperties
 */
export interface ChainingTriggerTypeProperties {
  /**
   * Upstream Pipelines.
   *
   * @schema #/definitions/ChainingTriggerTypeProperties#dependsOn
   */
  readonly dependsOn: PipelineReference[];

  /**
   * Run Dimension property that needs to be emitted by upstream pipelines.
   *
   * @schema #/definitions/ChainingTriggerTypeProperties#runDimension
   */
  readonly runDimension: string;

}

export enum FactoryVstsConfigurationType {
  FACTORY_VSTS_CONFIGURATION = 'FactoryVSTSConfiguration',
}

export enum FactoryGitHubConfigurationType {
  FACTORY_GIT_HUB_CONFIGURATION = 'FactoryGitHubConfiguration',
}

/**
 * Dataset reference type.
 *
 * @schema #/definitions/DatasetReference
 */
export interface DatasetReference {
  /**
   * An object mapping parameter names to argument values.
   *
   * @schema #/definitions/DatasetReference#parameters
   */
  readonly parameters?: DatasetReferenceParameters;

  /**
   * Reference dataset name.
   *
   * @schema #/definitions/DatasetReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Dataset reference type.
   *
   * @schema #/definitions/DatasetReference#type
   */
  readonly type: DatasetReferenceType;

}

/**
 * Linked service reference type.
 *
 * @schema #/definitions/LinkedServiceReference
 */
export interface LinkedServiceReference {
  /**
   * An object mapping parameter names to argument values.
   *
   * @schema #/definitions/LinkedServiceReference#parameters
   */
  readonly parameters?: LinkedServiceReferenceParameters;

  /**
   * Reference LinkedService name.
   *
   * @schema #/definitions/LinkedServiceReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/LinkedServiceReference#type
   */
  readonly type: LinkedServiceReferenceType;

}

/**
 * The name of the Amazon S3 bucket. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesBucketName
 */
export interface AmazonS3DatasetTypePropertiesBucketName {
}

/**
 * The compression method used on a dataset.
 *
 * @schema #/definitions/DatasetCompression
 */
export class DatasetCompression {
  public static fromDatasetBZip2Compression(value: DatasetBZip2Compression): DatasetCompression {
    return new DatasetCompression(value);
  }
  public static fromDatasetGZipCompression(value: DatasetGZipCompression): DatasetCompression {
    return new DatasetCompression(value);
  }
  public static fromDatasetDeflateCompression(value: DatasetDeflateCompression): DatasetCompression {
    return new DatasetCompression(value);
  }
  public static fromDatasetZipDeflateCompression(value: DatasetZipDeflateCompression): DatasetCompression {
    return new DatasetCompression(value);
  }
  public static fromDatasetTarCompression(value: DatasetTarCompression): DatasetCompression {
    return new DatasetCompression(value);
  }
  public static fromDatasetTarGZipCompression(value: DatasetTarGZipCompression): DatasetCompression {
    return new DatasetCompression(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * The format definition of a storage.
 *
 * @schema #/definitions/DatasetStorageFormat
 */
export class DatasetStorageFormat {
  public static fromTextFormat(value: TextFormat): DatasetStorageFormat {
    return new DatasetStorageFormat(value);
  }
  public static fromJsonFormat(value: JsonFormat): DatasetStorageFormat {
    return new DatasetStorageFormat(value);
  }
  public static fromAvroFormat(value: AvroFormat): DatasetStorageFormat {
    return new DatasetStorageFormat(value);
  }
  public static fromOrcFormat(value: OrcFormat): DatasetStorageFormat {
    return new DatasetStorageFormat(value);
  }
  public static fromParquetFormat(value: ParquetFormat): DatasetStorageFormat {
    return new DatasetStorageFormat(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * The key of the Amazon S3 object. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesKey
 */
export interface AmazonS3DatasetTypePropertiesKey {
}

/**
 * The end of S3 object's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesModifiedDatetimeEnd
 */
export interface AmazonS3DatasetTypePropertiesModifiedDatetimeEnd {
}

/**
 * The start of S3 object's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesModifiedDatetimeStart
 */
export interface AmazonS3DatasetTypePropertiesModifiedDatetimeStart {
}

/**
 * The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesPrefix
 */
export interface AmazonS3DatasetTypePropertiesPrefix {
}

/**
 * The version for the S3 object. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3DatasetTypePropertiesVersion
 */
export interface AmazonS3DatasetTypePropertiesVersion {
}

export enum AvroDatasetTypePropertiesAvroCompressionCodec {
  NONE = 'none',
  DEFLATE = 'deflate',
  SNAPPY = 'snappy',
  XZ = 'xz',
  "AvroDatasetTypePropertiesAvroCompressionCodec_BZIP2" = 'bzip2',
}

/**
 * Dataset location.
 *
 * @schema #/definitions/DatasetLocation
 */
export class DatasetLocation {
  public static fromAzureBlobStorageLocation(value: AzureBlobStorageLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromAzureBlobFsLocation(value: AzureBlobFsLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromAzureDataLakeStoreLocation(value: AzureDataLakeStoreLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromAmazonS3Location(value: AmazonS3Location): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromFileServerLocation(value: FileServerLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromAzureFileStorageLocation(value: AzureFileStorageLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromAmazonS3CompatibleLocation(value: AmazonS3CompatibleLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromOracleCloudStorageLocation(value: OracleCloudStorageLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromGoogleCloudStorageLocation(value: GoogleCloudStorageLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromFtpServerLocation(value: FtpServerLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromSftpLocation(value: SftpLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromHttpServerLocation(value: HttpServerLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  public static fromHdfsLocation(value: HdfsLocation): DatasetLocation {
    return new DatasetLocation(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/excelDatasetTypePropertiesFirstRowAsHeader
 */
export interface ExcelDatasetTypePropertiesFirstRowAsHeader {
}

/**
 * The null value string. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/excelDatasetTypePropertiesNullValue
 */
export interface ExcelDatasetTypePropertiesNullValue {
}

/**
 * The partial data of one sheet. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/excelDatasetTypePropertiesRange
 */
export interface ExcelDatasetTypePropertiesRange {
}

/**
 * The sheet index of excel file and default value is 0. Type: integer (or Expression with resultType integer)
 *
 * @schema #/definitions/excelDatasetTypePropertiesSheetIndex
 */
export interface ExcelDatasetTypePropertiesSheetIndex {
}

/**
 * The sheet name of excel file. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/excelDatasetTypePropertiesSheetName
 */
export interface ExcelDatasetTypePropertiesSheetName {
}

export enum ParquetDatasetTypePropertiesCompressionCodec {
  NONE = 'none',
  GZIP = 'gzip',
  SNAPPY = 'snappy',
  LZO = 'lzo',
  "ParquetDatasetTypePropertiesCompressionCodec_BZIP2" = 'bzip2',
  DEFLATE = 'deflate',
  ZIP_DEFLATE = 'zipDeflate',
  "ParquetDatasetTypePropertiesCompressionCodec_LZ4" = 'lz4',
  TAR = 'tar',
  TAR_G_ZIP = 'tarGZip',
}

/**
 * The column delimiter. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesColumnDelimiter
 */
export interface DelimitedTextDatasetTypePropertiesColumnDelimiter {
}

export enum DelimitedTextDatasetTypePropertiesCompressionCodec {
  NONE = 'none',
  GZIP = 'gzip',
  SNAPPY = 'snappy',
  LZO = 'lzo',
  "DelimitedTextDatasetTypePropertiesCompressionCodec_BZIP2" = 'bzip2',
  DEFLATE = 'deflate',
  ZIP_DEFLATE = 'zipDeflate',
  "DelimitedTextDatasetTypePropertiesCompressionCodec_LZ4" = 'lz4',
  TAR = 'tar',
  TAR_G_ZIP = 'tarGZip',
}

/**
 * The data compression method used for DelimitedText.
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesCompressionLevel
 */
export interface DelimitedTextDatasetTypePropertiesCompressionLevel {
}

/**
 * The code page name of the preferred encoding. If miss, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesEncodingName
 */
export interface DelimitedTextDatasetTypePropertiesEncodingName {
}

/**
 * The escape character. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesEscapeChar
 */
export interface DelimitedTextDatasetTypePropertiesEscapeChar {
}

/**
 * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesFirstRowAsHeader
 */
export interface DelimitedTextDatasetTypePropertiesFirstRowAsHeader {
}

/**
 * The null value string. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesNullValue
 */
export interface DelimitedTextDatasetTypePropertiesNullValue {
}

/**
 * The quote character. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesQuoteChar
 */
export interface DelimitedTextDatasetTypePropertiesQuoteChar {
}

/**
 * The row delimiter. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextDatasetTypePropertiesRowDelimiter
 */
export interface DelimitedTextDatasetTypePropertiesRowDelimiter {
}

/**
 * The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jsonDatasetTypePropertiesEncodingName
 */
export interface JsonDatasetTypePropertiesEncodingName {
}

/**
 * The code page name of the preferred encoding. If not specified, the default value is UTF-8, unless BOM denotes another Unicode encoding. Refer to the name column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/xmlDatasetTypePropertiesEncodingName
 */
export interface XmlDatasetTypePropertiesEncodingName {
}

/**
 * The null value string. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/xmlDatasetTypePropertiesNullValue
 */
export interface XmlDatasetTypePropertiesNullValue {
}

export enum OrcDatasetTypePropertiesOrcCompressionCodec {
  NONE = 'none',
  ZLIB = 'zlib',
  SNAPPY = 'snappy',
  LZO = 'lzo',
}

/**
 * The name of the Azure Blob. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobDatasetTypePropertiesFileName
 */
export interface AzureBlobDatasetTypePropertiesFileName {
}

/**
 * The path of the Azure Blob storage. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobDatasetTypePropertiesFolderPath
 */
export interface AzureBlobDatasetTypePropertiesFolderPath {
}

/**
 * The end of Azure Blob's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobDatasetTypePropertiesModifiedDatetimeEnd
 */
export interface AzureBlobDatasetTypePropertiesModifiedDatetimeEnd {
}

/**
 * The start of Azure Blob's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobDatasetTypePropertiesModifiedDatetimeStart
 */
export interface AzureBlobDatasetTypePropertiesModifiedDatetimeStart {
}

/**
 * The root of blob path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobDatasetTypePropertiesTableRootLocation
 */
export interface AzureBlobDatasetTypePropertiesTableRootLocation {
}

/**
 * The table name of the Azure Table storage. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableDatasetTypePropertiesTableName
 */
export interface AzureTableDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Azure SQL database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlTableDatasetTypePropertiesSchema
 */
export interface AzureSqlTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the Azure SQL database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlTableDatasetTypePropertiesTable
 */
export interface AzureSqlTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/azureSqlTableDatasetTypePropertiesTableName
 */
export interface AzureSqlTableDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Azure SQL Managed Instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiTableDatasetTypePropertiesSchema
 */
export interface AzureSqlMiTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the Azure SQL Managed Instance dataset. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiTableDatasetTypePropertiesTable
 */
export interface AzureSqlMiTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/azureSqlMiTableDatasetTypePropertiesTableName
 */
export interface AzureSqlMiTableDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwTableDatasetTypePropertiesSchema
 */
export interface AzureSqlDwTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwTableDatasetTypePropertiesTable
 */
export interface AzureSqlDwTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/azureSqlDwTableDatasetTypePropertiesTableName
 */
export interface AzureSqlDwTableDatasetTypePropertiesTableName {
}

/**
 * The keyspace of the Cassandra database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraTableDatasetTypePropertiesKeyspace
 */
export interface CassandraTableDatasetTypePropertiesKeyspace {
}

/**
 * The table name of the Cassandra database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraTableDatasetTypePropertiesTableName
 */
export interface CassandraTableDatasetTypePropertiesTableName {
}

/**
 * CosmosDB (SQL API) collection name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbSqlApiCollectionDatasetTypePropertiesCollectionName
 */
export interface CosmosDbSqlApiCollectionDatasetTypePropertiesCollectionName {
}

/**
 * Document Database collection name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/documentDbCollectionDatasetTypePropertiesCollectionName
 */
export interface DocumentDbCollectionDatasetTypePropertiesCollectionName {
}

/**
 * The logical name of the entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsEntityDatasetTypePropertiesEntityName
 */
export interface DynamicsEntityDatasetTypePropertiesEntityName {
}

/**
 * The logical name of the entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmEntityDatasetTypePropertiesEntityName
 */
export interface DynamicsCrmEntityDatasetTypePropertiesEntityName {
}

/**
 * The logical name of the entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsEntityDatasetTypePropertiesEntityName
 */
export interface CommonDataServiceForAppsEntityDatasetTypePropertiesEntityName {
}

/**
 * The name of the file in the Azure Data Lake Store. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreDatasetTypePropertiesFileName
 */
export interface AzureDataLakeStoreDatasetTypePropertiesFileName {
}

/**
 * Path to the folder in the Azure Data Lake Store. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreDatasetTypePropertiesFolderPath
 */
export interface AzureDataLakeStoreDatasetTypePropertiesFolderPath {
}

/**
 * The name of the Azure Data Lake Storage Gen2. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsDatasetTypePropertiesFileName
 */
export interface AzureBlobFsDatasetTypePropertiesFileName {
}

/**
 * The path of the Azure Data Lake Storage Gen2 storage. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsDatasetTypePropertiesFolderPath
 */
export interface AzureBlobFsDatasetTypePropertiesFolderPath {
}

/**
 * A predicate expression that can be used to filter the specific rows to extract from Office 365. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365DatasetTypePropertiesPredicate
 */
export interface Office365DatasetTypePropertiesPredicate {
}

/**
 * Name of the dataset to extract from Office 365. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365DatasetTypePropertiesTableName
 */
export interface Office365DatasetTypePropertiesTableName {
}

/**
 * Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileShareDatasetTypePropertiesFileFilter
 */
export interface FileShareDatasetTypePropertiesFileFilter {
}

/**
 * The name of the on-premises file system. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileShareDatasetTypePropertiesFileName
 */
export interface FileShareDatasetTypePropertiesFileName {
}

/**
 * The path of the on-premises file system. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileShareDatasetTypePropertiesFolderPath
 */
export interface FileShareDatasetTypePropertiesFolderPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileShareDatasetTypePropertiesModifiedDatetimeEnd
 */
export interface FileShareDatasetTypePropertiesModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileShareDatasetTypePropertiesModifiedDatetimeStart
 */
export interface FileShareDatasetTypePropertiesModifiedDatetimeStart {
}

/**
 * The table name of the MongoDB database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbCollectionDatasetTypePropertiesCollectionName
 */
export interface MongoDbCollectionDatasetTypePropertiesCollectionName {
}

/**
 * The collection name of the MongoDB Atlas database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbAtlasCollectionDatasetTypePropertiesCollection
 */
export interface MongoDbAtlasCollectionDatasetTypePropertiesCollection {
}

/**
 * The collection name of the MongoDB database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbV2CollectionDatasetTypePropertiesCollection
 */
export interface MongoDbV2CollectionDatasetTypePropertiesCollection {
}

/**
 * The collection name of the CosmosDB (MongoDB API) database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbMongoDbApiCollectionDatasetTypePropertiesCollection
 */
export interface CosmosDbMongoDbApiCollectionDatasetTypePropertiesCollection {
}

/**
 * The OData resource path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataResourceDatasetTypePropertiesPath
 */
export interface ODataResourceDatasetTypePropertiesPath {
}

/**
 * The schema name of the on-premises Oracle database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleTableDatasetTypePropertiesSchema
 */
export interface OracleTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the on-premises Oracle database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleTableDatasetTypePropertiesTable
 */
export interface OracleTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/oracleTableDatasetTypePropertiesTableName
 */
export interface OracleTableDatasetTypePropertiesTableName {
}

/**
 * The database name of Teradata. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataTableDatasetTypePropertiesDatabase
 */
export interface TeradataTableDatasetTypePropertiesDatabase {
}

/**
 * The table name of Teradata. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataTableDatasetTypePropertiesTable
 */
export interface TeradataTableDatasetTypePropertiesTable {
}

/**
 * The name of Azure MySQL database table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMySqlTableDatasetTypePropertiesTable
 */
export interface AzureMySqlTableDatasetTypePropertiesTable {
}

/**
 * The Azure MySQL database table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMySqlTableDatasetTypePropertiesTableName
 */
export interface AzureMySqlTableDatasetTypePropertiesTableName {
}

/**
 * The Amazon Redshift schema name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftTableDatasetTypePropertiesSchema
 */
export interface AmazonRedshiftTableDatasetTypePropertiesSchema {
}

/**
 * The Amazon Redshift table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftTableDatasetTypePropertiesTable
 */
export interface AmazonRedshiftTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/amazonRedshiftTableDatasetTypePropertiesTableName
 */
export interface AmazonRedshiftTableDatasetTypePropertiesTableName {
}

/**
 * The Db2 schema name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2TableDatasetTypePropertiesSchema
 */
export interface Db2TableDatasetTypePropertiesSchema {
}

/**
 * The Db2 table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2TableDatasetTypePropertiesTable
 */
export interface Db2TableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/db2TableDatasetTypePropertiesTableName
 */
export interface Db2TableDatasetTypePropertiesTableName {
}

/**
 * The relational table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/relationalTableDatasetTypePropertiesTableName
 */
export interface RelationalTableDatasetTypePropertiesTableName {
}

/**
 * The Informix table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixTableDatasetTypePropertiesTableName
 */
export interface InformixTableDatasetTypePropertiesTableName {
}

/**
 * The ODBC table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcTableDatasetTypePropertiesTableName
 */
export interface OdbcTableDatasetTypePropertiesTableName {
}

/**
 * The MySQL table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mySqlTableDatasetTypePropertiesTableName
 */
export interface MySqlTableDatasetTypePropertiesTableName {
}

/**
 * The PostgreSQL schema name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/postgreSqlTableDatasetTypePropertiesSchema
 */
export interface PostgreSqlTableDatasetTypePropertiesSchema {
}

/**
 * The PostgreSQL table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/postgreSqlTableDatasetTypePropertiesTable
 */
export interface PostgreSqlTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/postgreSqlTableDatasetTypePropertiesTableName
 */
export interface PostgreSqlTableDatasetTypePropertiesTableName {
}

/**
 * The Microsoft Access table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessTableDatasetTypePropertiesTableName
 */
export interface MicrosoftAccessTableDatasetTypePropertiesTableName {
}

/**
 * The Salesforce object API name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceObjectDatasetTypePropertiesObjectApiName
 */
export interface SalesforceObjectDatasetTypePropertiesObjectApiName {
}

/**
 * The Salesforce Service Cloud object API name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudObjectDatasetTypePropertiesObjectApiName
 */
export interface SalesforceServiceCloudObjectDatasetTypePropertiesObjectApiName {
}

/**
 * The Sybase table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseTableDatasetTypePropertiesTableName
 */
export interface SybaseTableDatasetTypePropertiesTableName {
}

/**
 * The path of the SAP Cloud for Customer OData entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapCloudForCustomerResourceDatasetTypePropertiesPath
 */
export interface SapCloudForCustomerResourceDatasetTypePropertiesPath {
}

/**
 * The path of the SAP ECC OData entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapEccResourceDatasetTypePropertiesPath
 */
export interface SapEccResourceDatasetTypePropertiesPath {
}

/**
 * The schema name of SAP HANA. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaTableDatasetTypePropertiesSchema
 */
export interface SapHanaTableDatasetTypePropertiesSchema {
}

/**
 * The table name of SAP HANA. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaTableDatasetTypePropertiesTable
 */
export interface SapHanaTableDatasetTypePropertiesTable {
}

/**
 * The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
 *
 * @schema #/definitions/sapOpenHubTableDatasetTypePropertiesBaseRequestId
 */
export interface SapOpenHubTableDatasetTypePropertiesBaseRequestId {
}

/**
 * Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sapOpenHubTableDatasetTypePropertiesExcludeLastRequest
 */
export interface SapOpenHubTableDatasetTypePropertiesExcludeLastRequest {
}

/**
 * The name of the Open Hub Destination with destination type as Database Table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubTableDatasetTypePropertiesOpenHubDestinationName
 */
export interface SapOpenHubTableDatasetTypePropertiesOpenHubDestinationName {
}

/**
 * The schema name of the SQL Server dataset. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerTableDatasetTypePropertiesSchema
 */
export interface SqlServerTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the SQL Server dataset. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerTableDatasetTypePropertiesTable
 */
export interface SqlServerTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/sqlServerTableDatasetTypePropertiesTableName
 */
export interface SqlServerTableDatasetTypePropertiesTableName {
}

/**
 * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restResourceDatasetTypePropertiesAdditionalHeaders
 */
export interface RestResourceDatasetTypePropertiesAdditionalHeaders {
}

/**
 * The pagination rules to compose next page requests. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restResourceDatasetTypePropertiesPaginationRules
 */
export interface RestResourceDatasetTypePropertiesPaginationRules {
}

/**
 * The relative URL to the resource that the RESTful API provides. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restResourceDatasetTypePropertiesRelativeUrl
 */
export interface RestResourceDatasetTypePropertiesRelativeUrl {
}

/**
 * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restResourceDatasetTypePropertiesRequestBody
 */
export interface RestResourceDatasetTypePropertiesRequestBody {
}

/**
 * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restResourceDatasetTypePropertiesRequestMethod
 */
export interface RestResourceDatasetTypePropertiesRequestMethod {
}

/**
 * The name of the SAP Table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableResourceDatasetTypePropertiesTableName
 */
export interface SapTableResourceDatasetTypePropertiesTableName {
}

/**
 * The zero-based index of the table in the web page. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/webTableDatasetTypePropertiesIndex
 */
export interface WebTableDatasetTypePropertiesIndex {
}

/**
 * The relative URL to the web page from the linked service URL. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webTableDatasetTypePropertiesPath
 */
export interface WebTableDatasetTypePropertiesPath {
}

/**
 * The name of the Azure Search Index. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSearchIndexDatasetTypePropertiesIndexName
 */
export interface AzureSearchIndexDatasetTypePropertiesIndexName {
}

/**
 * The headers for the HTTP Request. e.g. request-header-name-1:request-header-value-1
...
request-header-name-n:request-header-value-n Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpDatasetTypePropertiesAdditionalHeaders
 */
export interface HttpDatasetTypePropertiesAdditionalHeaders {
}

/**
 * The relative URL based on the URL in the HttpLinkedService refers to an HTTP file Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpDatasetTypePropertiesRelativeUrl
 */
export interface HttpDatasetTypePropertiesRelativeUrl {
}

/**
 * The body for the HTTP request. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpDatasetTypePropertiesRequestBody
 */
export interface HttpDatasetTypePropertiesRequestBody {
}

/**
 * The HTTP method for the HTTP request. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpDatasetTypePropertiesRequestMethod
 */
export interface HttpDatasetTypePropertiesRequestMethod {
}

/**
 * The table name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/genericDatasetTypePropertiesTableName
 */
export interface GenericDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlTableDatasetTypePropertiesSchema
 */
export interface AzurePostgreSqlTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the Azure PostgreSQL database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlTableDatasetTypePropertiesTable
 */
export interface AzurePostgreSqlTableDatasetTypePropertiesTable {
}

/**
 * The table name of the Azure PostgreSQL database which includes both schema and table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlTableDatasetTypePropertiesTableName
 */
export interface AzurePostgreSqlTableDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Drill. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/drillDatasetTypePropertiesSchema
 */
export interface DrillDatasetTypePropertiesSchema {
}

/**
 * The table name of the Drill. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/drillDatasetTypePropertiesTable
 */
export interface DrillDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/drillDatasetTypePropertiesTableName
 */
export interface DrillDatasetTypePropertiesTableName {
}

/**
 * The database name of the Google BigQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleBigQueryDatasetTypePropertiesDataset
 */
export interface GoogleBigQueryDatasetTypePropertiesDataset {
}

/**
 * The table name of the Google BigQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleBigQueryDatasetTypePropertiesTable
 */
export interface GoogleBigQueryDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using database + table properties instead.
 *
 * @schema #/definitions/googleBigQueryDatasetTypePropertiesTableName
 */
export interface GoogleBigQueryDatasetTypePropertiesTableName {
}

/**
 * The schema name of Greenplum. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/greenplumDatasetTypePropertiesSchema
 */
export interface GreenplumDatasetTypePropertiesSchema {
}

/**
 * The table name of Greenplum. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/greenplumDatasetTypePropertiesTable
 */
export interface GreenplumDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/greenplumDatasetTypePropertiesTableName
 */
export interface GreenplumDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Hive. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hiveDatasetTypePropertiesSchema
 */
export interface HiveDatasetTypePropertiesSchema {
}

/**
 * The table name of the Hive. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hiveDatasetTypePropertiesTable
 */
export interface HiveDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/hiveDatasetTypePropertiesTableName
 */
export interface HiveDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Impala. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/impalaDatasetTypePropertiesSchema
 */
export interface ImpalaDatasetTypePropertiesSchema {
}

/**
 * The table name of the Impala. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/impalaDatasetTypePropertiesTable
 */
export interface ImpalaDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/impalaDatasetTypePropertiesTableName
 */
export interface ImpalaDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Phoenix. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/phoenixDatasetTypePropertiesSchema
 */
export interface PhoenixDatasetTypePropertiesSchema {
}

/**
 * The table name of the Phoenix. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/phoenixDatasetTypePropertiesTable
 */
export interface PhoenixDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/phoenixDatasetTypePropertiesTableName
 */
export interface PhoenixDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Presto. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/prestoDatasetTypePropertiesSchema
 */
export interface PrestoDatasetTypePropertiesSchema {
}

/**
 * The table name of the Presto. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/prestoDatasetTypePropertiesTable
 */
export interface PrestoDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/prestoDatasetTypePropertiesTableName
 */
export interface PrestoDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Spark. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sparkDatasetTypePropertiesSchema
 */
export interface SparkDatasetTypePropertiesSchema {
}

/**
 * The table name of the Spark. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sparkDatasetTypePropertiesTable
 */
export interface SparkDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/sparkDatasetTypePropertiesTableName
 */
export interface SparkDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Netezza. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaTableDatasetTypePropertiesSchema
 */
export interface NetezzaTableDatasetTypePropertiesSchema {
}

/**
 * The table name of the Netezza. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaTableDatasetTypePropertiesTable
 */
export interface NetezzaTableDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/netezzaTableDatasetTypePropertiesTableName
 */
export interface NetezzaTableDatasetTypePropertiesTableName {
}

/**
 * The schema name of the Vertica. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/verticaDatasetTypePropertiesSchema
 */
export interface VerticaDatasetTypePropertiesSchema {
}

/**
 * The table name of the Vertica. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/verticaDatasetTypePropertiesTable
 */
export interface VerticaDatasetTypePropertiesTable {
}

/**
 * This property will be retired. Please consider using schema + table properties instead.
 *
 * @schema #/definitions/verticaDatasetTypePropertiesTableName
 */
export interface VerticaDatasetTypePropertiesTableName {
}

/**
 * The path of the Dynamics AX OData entity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxResourceDatasetTypePropertiesPath
 */
export interface DynamicsAxResourceDatasetTypePropertiesPath {
}

/**
 * The table name of the Azure Data Explorer database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerDatasetTypePropertiesTable
 */
export interface AzureDataExplorerDatasetTypePropertiesTable {
}

/**
 * The schema name of the Snowflake database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/snowflakeDatasetTypePropertiesSchema
 */
export interface SnowflakeDatasetTypePropertiesSchema {
}

/**
 * The table name of the Snowflake database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/snowflakeDatasetTypePropertiesTable
 */
export interface SnowflakeDatasetTypePropertiesTable {
}

/**
 * The name of the SharePoint Online list. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListDatasetTypePropertiesListName
 */
export interface SharePointOnlineListDatasetTypePropertiesListName {
}

/**
 * The database name of delta table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeDatasetTypePropertiesDatabase
 */
export interface AzureDatabricksDeltaLakeDatasetTypePropertiesDatabase {
}

/**
 * The name of delta table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeDatasetTypePropertiesTable
 */
export interface AzureDatabricksDeltaLakeDatasetTypePropertiesTable {
}

export enum ManagedVirtualNetworkReferenceType {
  MANAGED_VIRTUAL_NETWORK_REFERENCE = 'ManagedVirtualNetworkReference',
}

/**
 * The compute resource properties for managed integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeComputeProperties
 */
export interface IntegrationRuntimeComputeProperties {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#additionalProperties
   */
  readonly additionalProperties?: IntegrationRuntimeComputePropertiesAdditionalProperties;

  /**
   * Data flow properties for managed integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#dataFlowProperties
   */
  readonly dataFlowProperties?: IntegrationRuntimeDataFlowProperties;

  /**
   * The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#location
   */
  readonly location?: string;

  /**
   * Maximum parallel executions count per node for managed integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#maxParallelExecutionsPerNode
   */
  readonly maxParallelExecutionsPerNode?: number;

  /**
   * The node size requirement to managed integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#nodeSize
   */
  readonly nodeSize?: string;

  /**
   * The required number of nodes for managed integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#numberOfNodes
   */
  readonly numberOfNodes?: number;

  /**
   * VNet properties for managed integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeComputeProperties#vNetProperties
   */
  readonly vNetProperties?: IntegrationRuntimeVNetProperties;

}

/**
 * SSIS properties for managed integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeSsisProperties
 */
export interface IntegrationRuntimeSsisProperties {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#additionalProperties
   */
  readonly additionalProperties?: IntegrationRuntimeSsisPropertiesAdditionalProperties;

  /**
   * Catalog information for managed dedicated integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#catalogInfo
   */
  readonly catalogInfo?: IntegrationRuntimeSsisCatalogInfo;

  /**
   * Custom setup script properties for a managed dedicated integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#customSetupScriptProperties
   */
  readonly customSetupScriptProperties?: IntegrationRuntimeCustomSetupScriptProperties;

  /**
   * Data proxy properties for a managed dedicated integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#dataProxyProperties
   */
  readonly dataProxyProperties?: IntegrationRuntimeDataProxyProperties;

  /**
   * The edition for the SSIS Integration Runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#edition
   */
  readonly edition?: IntegrationRuntimeSsisPropertiesEdition;

  /**
   * Custom setup without script properties for a SSIS integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#expressCustomSetupProperties
   */
  readonly expressCustomSetupProperties?: CustomSetupBase[];

  /**
   * License type for bringing your own license scenario.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#licenseType
   */
  readonly licenseType?: IntegrationRuntimeSsisPropertiesLicenseType;

  /**
   * The entity reference.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#managedCredential
   */
  readonly managedCredential?: EntityReference;

  /**
   * Package stores for the SSIS Integration Runtime.
   *
   * @schema #/definitions/IntegrationRuntimeSsisProperties#packageStores
   */
  readonly packageStores?: PackageStore[];

}

/**
 * The base definition of a linked integration runtime.
 *
 * @schema #/definitions/LinkedIntegrationRuntimeType
 */
export class LinkedIntegrationRuntimeType {
  public static fromLinkedIntegrationRuntimeKeyAuthorization(value: LinkedIntegrationRuntimeKeyAuthorization): LinkedIntegrationRuntimeType {
    return new LinkedIntegrationRuntimeType(value);
  }
  public static fromLinkedIntegrationRuntimeRbacAuthorization(value: LinkedIntegrationRuntimeRbacAuthorization): LinkedIntegrationRuntimeType {
    return new LinkedIntegrationRuntimeType(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Azure Key Vault secret reference.
 *
 * @schema #/definitions/AzureKeyVaultSecretReference
 */
export interface AzureKeyVaultSecretReference {
  /**
   * The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureKeyVaultSecretReference#secretName
   */
  readonly secretName: AzureKeyVaultSecretReferenceSecretName;

  /**
   * The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureKeyVaultSecretReference#secretVersion
   */
  readonly secretVersion?: AzureKeyVaultSecretReferenceSecretVersion;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/AzureKeyVaultSecretReference#store
   */
  readonly store: LinkedServiceReference;

  /**
   * @schema #/definitions/AzureKeyVaultSecretReference#type
   */
  readonly type: AzureKeyVaultSecretReferenceType;

}

/**
 * The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureStorageLinkedServiceTypePropertiesConnectionString
 */
export interface AzureStorageLinkedServiceTypePropertiesConnectionString {
}

/**
 * SAS URI of the Azure Storage resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureStorageLinkedServiceTypePropertiesSasUri
 */
export interface AzureStorageLinkedServiceTypePropertiesSasUri {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureBlobStorageLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The connection string. It is mutually exclusive with sasUri, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureBlobStorageLinkedServiceTypePropertiesConnectionString
 */
export interface AzureBlobStorageLinkedServiceTypePropertiesConnectionString {
}

/**
 * SAS URI of the Azure Blob Storage resource. It is mutually exclusive with connectionString, serviceEndpoint property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureBlobStorageLinkedServiceTypePropertiesSasUri
 */
export interface AzureBlobStorageLinkedServiceTypePropertiesSasUri {
}

/**
 * The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureBlobStorageLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The base definition of a secret type.
 *
 * @schema #/definitions/SecretBase
 */
export class SecretBase {
  public static fromSecureString(value: SecureString): SecretBase {
    return new SecretBase(value);
  }
  public static fromAzureKeyVaultSecretReference(value: AzureKeyVaultSecretReference): SecretBase {
    return new SecretBase(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageLinkedServiceTypePropertiesTenant
 */
export interface AzureBlobStorageLinkedServiceTypePropertiesTenant {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureSqlDwLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureSqlDwLinkedServiceTypePropertiesConnectionString
 */
export interface AzureSqlDwLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureSqlDwLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The ID of the service principal used to authenticate against Azure SQL Data Warehouse. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureSqlDwLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDwLinkedServiceTypePropertiesTenant
 */
export interface AzureSqlDwLinkedServiceTypePropertiesTenant {
}

/**
 * Sql always encrypted properties.
 *
 * @schema #/definitions/SqlAlwaysEncryptedProperties
 */
export interface SqlAlwaysEncryptedProperties {
  /**
   * Sql always encrypted AKV authentication type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlAlwaysEncryptedProperties#alwaysEncryptedAkvAuthType
   */
  readonly alwaysEncryptedAkvAuthType: SqlAlwaysEncryptedPropertiesAlwaysEncryptedAkvAuthType;

  /**
   * The client ID of the application in Azure Active Directory used for Azure Key Vault authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlAlwaysEncryptedProperties#servicePrincipalId
   */
  readonly servicePrincipalId?: SqlAlwaysEncryptedPropertiesServicePrincipalId;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SqlAlwaysEncryptedProperties#servicePrincipalKey
   */
  readonly servicePrincipalKey?: SecretBase;

}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/sqlServerLinkedServiceTypePropertiesConnectionString
 */
export interface SqlServerLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SqlServerLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The on-premises Windows authentication user name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerLinkedServiceTypePropertiesUserName
 */
export interface SqlServerLinkedServiceTypePropertiesUserName {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDatabaseLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureSqlDatabaseLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureSqlDatabaseLinkedServiceTypePropertiesConnectionString
 */
export interface AzureSqlDatabaseLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDatabaseLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureSqlDatabaseLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The ID of the service principal used to authenticate against Azure SQL Database. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDatabaseLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureSqlDatabaseLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlDatabaseLinkedServiceTypePropertiesTenant
 */
export interface AzureSqlDatabaseLinkedServiceTypePropertiesTenant {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureSqlMiLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureSqlMiLinkedServiceTypePropertiesConnectionString
 */
export interface AzureSqlMiLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureSqlMiLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The ID of the service principal used to authenticate against Azure SQL Managed Instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureSqlMiLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlMiLinkedServiceTypePropertiesTenant
 */
export interface AzureSqlMiLinkedServiceTypePropertiesTenant {
}

/**
 * The Azure Batch account name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBatchLinkedServiceTypePropertiesAccountName
 */
export interface AzureBatchLinkedServiceTypePropertiesAccountName {
}

/**
 * The Azure Batch URI. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBatchLinkedServiceTypePropertiesBatchUri
 */
export interface AzureBatchLinkedServiceTypePropertiesBatchUri {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBatchLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureBatchLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The Azure Batch pool name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBatchLinkedServiceTypePropertiesPoolName
 */
export interface AzureBatchLinkedServiceTypePropertiesPoolName {
}

/**
 * The base URL of the Azure Key Vault. e.g. https://myakv.vault.azure.net Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureKeyVaultLinkedServiceTypePropertiesBaseUrl
 */
export interface AzureKeyVaultLinkedServiceTypePropertiesBaseUrl {
}

/**
 * The endpoint of the Azure CosmosDB account. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesAccountEndpoint
 */
export interface CosmosDbLinkedServiceTypePropertiesAccountEndpoint {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesAzureCloudType
 */
export interface CosmosDbLinkedServiceTypePropertiesAzureCloudType {
}

export enum CosmosDbLinkedServiceTypePropertiesConnectionMode {
  GATEWAY = 'Gateway',
  DIRECT = 'Direct',
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesConnectionString
 */
export interface CosmosDbLinkedServiceTypePropertiesConnectionString {
}

/**
 * The name of the database. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesDatabase
 */
export interface CosmosDbLinkedServiceTypePropertiesDatabase {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesEncryptedCredential
 */
export interface CosmosDbLinkedServiceTypePropertiesEncryptedCredential {
}

export enum CosmosDbLinkedServiceTypePropertiesServicePrincipalCredentialType {
  SERVICE_PRINCIPAL_KEY = 'ServicePrincipalKey',
  SERVICE_PRINCIPAL_CERT = 'ServicePrincipalCert',
}

/**
 * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesServicePrincipalId
 */
export interface CosmosDbLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbLinkedServiceTypePropertiesTenant
 */
export interface CosmosDbLinkedServiceTypePropertiesTenant {
}

export enum DynamicsLinkedServiceTypePropertiesAuthenticationType {
  "DynamicsLinkedServiceTypePropertiesAuthenticationType_OFFICE365" = 'Office365',
  IFD = 'Ifd',
  AAD_SERVICE_PRINCIPAL = 'AADServicePrincipal',
}

export enum DynamicsLinkedServiceTypePropertiesDeploymentType {
  ONLINE = 'Online',
  ON_PREMISES_WITH_IFD = 'OnPremisesWithIfd',
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface DynamicsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The host name of the on-premises Dynamics server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesHostName
 */
export interface DynamicsLinkedServiceTypePropertiesHostName {
}

/**
 * The organization name of the Dynamics instance. The property is required for on-prem and required for online when there are more than one Dynamics instances associated with the user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesOrganizationName
 */
export interface DynamicsLinkedServiceTypePropertiesOrganizationName {
}

/**
 * The port of on-premises Dynamics server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesPort
 */
export interface DynamicsLinkedServiceTypePropertiesPort {
}

/**
 * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesServicePrincipalCredentialType
 */
export interface DynamicsLinkedServiceTypePropertiesServicePrincipalCredentialType {
}

/**
 * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesServicePrincipalId
 */
export interface DynamicsLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The URL to the Microsoft Dynamics server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesServiceUri
 */
export interface DynamicsLinkedServiceTypePropertiesServiceUri {
}

/**
 * User name to access the Dynamics instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsLinkedServiceTypePropertiesUsername
 */
export interface DynamicsLinkedServiceTypePropertiesUsername {
}

export enum DynamicsCrmLinkedServiceTypePropertiesAuthenticationType {
  "DynamicsCrmLinkedServiceTypePropertiesAuthenticationType_OFFICE365" = 'Office365',
  IFD = 'Ifd',
  AAD_SERVICE_PRINCIPAL = 'AADServicePrincipal',
}

export enum DynamicsCrmLinkedServiceTypePropertiesDeploymentType {
  ONLINE = 'Online',
  ON_PREMISES_WITH_IFD = 'OnPremisesWithIfd',
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesEncryptedCredential
 */
export interface DynamicsCrmLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The host name of the on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesHostName
 */
export interface DynamicsCrmLinkedServiceTypePropertiesHostName {
}

/**
 * The organization name of the Dynamics CRM instance. The property is required for on-prem and required for online when there are more than one Dynamics CRM instances associated with the user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesOrganizationName
 */
export interface DynamicsCrmLinkedServiceTypePropertiesOrganizationName {
}

/**
 * The port of on-premises Dynamics CRM server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesPort
 */
export interface DynamicsCrmLinkedServiceTypePropertiesPort {
}

/**
 * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredentialType
 */
export interface DynamicsCrmLinkedServiceTypePropertiesServicePrincipalCredentialType {
}

/**
 * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesServicePrincipalId
 */
export interface DynamicsCrmLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The URL to the Microsoft Dynamics CRM server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesServiceUri
 */
export interface DynamicsCrmLinkedServiceTypePropertiesServiceUri {
}

/**
 * User name to access the Dynamics CRM instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmLinkedServiceTypePropertiesUsername
 */
export interface DynamicsCrmLinkedServiceTypePropertiesUsername {
}

export enum CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType {
  "CommonDataServiceForAppsLinkedServiceTypePropertiesAuthenticationType_OFFICE365" = 'Office365',
  IFD = 'Ifd',
  AAD_SERVICE_PRINCIPAL = 'AADServicePrincipal',
}

export enum CommonDataServiceForAppsLinkedServiceTypePropertiesDeploymentType {
  ONLINE = 'Online',
  ON_PREMISES_WITH_IFD = 'OnPremisesWithIfd',
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The host name of the on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesHostName
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesHostName {
}

/**
 * The organization name of the Common Data Service for Apps instance. The property is required for on-prem and required for online when there are more than one Common Data Service for Apps instances associated with the user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesOrganizationName
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesOrganizationName {
}

/**
 * The port of on-premises Common Data Service for Apps server. The property is required for on-prem and not allowed for online. Default is 443. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @default 443. Type: integer (or Expression with resultType integer), minimum: 0.
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesPort
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesPort {
}

/**
 * The service principal credential type to use in Server-To-Server authentication. 'ServicePrincipalKey' for key/secret, 'ServicePrincipalCert' for certificate. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalCredentialType {
}

/**
 * The client ID of the application in Azure Active Directory used for Server-To-Server authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalId
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The URL to the Microsoft Common Data Service for Apps server. The property is required for on-line and not allowed for on-prem. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesServiceUri
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesServiceUri {
}

/**
 * User name to access the Common Data Service for Apps instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsLinkedServiceTypePropertiesUsername
 */
export interface CommonDataServiceForAppsLinkedServiceTypePropertiesUsername {
}

/**
 * HDInsight cluster URI. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightLinkedServiceTypePropertiesClusterUri
 */
export interface HdInsightLinkedServiceTypePropertiesClusterUri {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HdInsightLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specify the FileSystem if the main storage for the HDInsight is ADLS Gen2. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightLinkedServiceTypePropertiesFileSystem
 */
export interface HdInsightLinkedServiceTypePropertiesFileSystem {
}

/**
 * Specify if the HDInsight is created with ESP (Enterprise Security Package). Type: Boolean.
 *
 * @schema #/definitions/hdInsightLinkedServiceTypePropertiesIsEspEnabled
 */
export interface HdInsightLinkedServiceTypePropertiesIsEspEnabled {
}

/**
 * HDInsight cluster user name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightLinkedServiceTypePropertiesUserName
 */
export interface HdInsightLinkedServiceTypePropertiesUserName {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerLinkedServiceTypePropertiesEncryptedCredential
 */
export interface FileServerLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Host name of the server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerLinkedServiceTypePropertiesHost
 */
export interface FileServerLinkedServiceTypePropertiesHost {
}

/**
 * User ID to logon the server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerLinkedServiceTypePropertiesUserId
 */
export interface FileServerLinkedServiceTypePropertiesUserId {
}

/**
 * The connection string. It is mutually exclusive with sasUri property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesConnectionString
 */
export interface AzureFileStorageLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureFileStorageLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The azure file share name. It is required when auth with accountKey/sasToken. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesFileShare
 */
export interface AzureFileStorageLinkedServiceTypePropertiesFileShare {
}

/**
 * Host name of the server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesHost
 */
export interface AzureFileStorageLinkedServiceTypePropertiesHost {
}

/**
 * SAS URI of the Azure File resource. It is mutually exclusive with connectionString property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesSasUri
 */
export interface AzureFileStorageLinkedServiceTypePropertiesSasUri {
}

/**
 * The azure file share snapshot version. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesSnapshot
 */
export interface AzureFileStorageLinkedServiceTypePropertiesSnapshot {
}

/**
 * User ID to logon the server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageLinkedServiceTypePropertiesUserId
 */
export interface AzureFileStorageLinkedServiceTypePropertiesUserId {
}

/**
 * The access key identifier of the Amazon S3 Compatible Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleLinkedServiceTypePropertiesAccessKeyId
 */
export interface AmazonS3CompatibleLinkedServiceTypePropertiesAccessKeyId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AmazonS3CompatibleLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * If true, use S3 path-style access instead of virtual hosted-style access. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/amazonS3CompatibleLinkedServiceTypePropertiesForcePathStyle
 */
export interface AmazonS3CompatibleLinkedServiceTypePropertiesForcePathStyle {
}

/**
 * This value specifies the endpoint to access with the Amazon S3 Compatible Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleLinkedServiceTypePropertiesServiceUrl
 */
export interface AmazonS3CompatibleLinkedServiceTypePropertiesServiceUrl {
}

/**
 * The access key identifier of the Oracle Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageLinkedServiceTypePropertiesAccessKeyId
 */
export interface OracleCloudStorageLinkedServiceTypePropertiesAccessKeyId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageLinkedServiceTypePropertiesEncryptedCredential
 */
export interface OracleCloudStorageLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * This value specifies the endpoint to access with the Oracle Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageLinkedServiceTypePropertiesServiceUrl
 */
export interface OracleCloudStorageLinkedServiceTypePropertiesServiceUrl {
}

/**
 * The access key identifier of the Google Cloud Storage Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageLinkedServiceTypePropertiesAccessKeyId
 */
export interface GoogleCloudStorageLinkedServiceTypePropertiesAccessKeyId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageLinkedServiceTypePropertiesEncryptedCredential
 */
export interface GoogleCloudStorageLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * This value specifies the endpoint to access with the Google Cloud Storage Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageLinkedServiceTypePropertiesServiceUrl
 */
export interface GoogleCloudStorageLinkedServiceTypePropertiesServiceUrl {
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/oracleLinkedServiceTypePropertiesConnectionString
 */
export interface OracleLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleLinkedServiceTypePropertiesEncryptedCredential
 */
export interface OracleLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureMySqlLinkedServiceTypePropertiesConnectionString
 */
export interface AzureMySqlLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMySqlLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureMySqlLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The connection string.
 *
 * @schema #/definitions/mySqlLinkedServiceTypePropertiesConnectionString
 */
export interface MySqlLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mySqlLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MySqlLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The connection string.
 *
 * @schema #/definitions/postgreSqlLinkedServiceTypePropertiesConnectionString
 */
export interface PostgreSqlLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/postgreSqlLinkedServiceTypePropertiesEncryptedCredential
 */
export interface PostgreSqlLinkedServiceTypePropertiesEncryptedCredential {
}

export enum SybaseLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  WINDOWS = 'Windows',
}

/**
 * Database name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseLinkedServiceTypePropertiesDatabase
 */
export interface SybaseLinkedServiceTypePropertiesDatabase {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SybaseLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Schema name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseLinkedServiceTypePropertiesSchema
 */
export interface SybaseLinkedServiceTypePropertiesSchema {
}

/**
 * Server name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseLinkedServiceTypePropertiesServer
 */
export interface SybaseLinkedServiceTypePropertiesServer {
}

/**
 * Username for authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseLinkedServiceTypePropertiesUsername
 */
export interface SybaseLinkedServiceTypePropertiesUsername {
}

export enum Db2LinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
}

/**
 * Certificate Common Name when TLS is enabled. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesCertificateCommonName
 */
export interface Db2LinkedServiceTypePropertiesCertificateCommonName {
}

/**
 * The connection string. It is mutually exclusive with server, database, authenticationType, userName, packageCollection and certificateCommonName property. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesConnectionString
 */
export interface Db2LinkedServiceTypePropertiesConnectionString {
}

/**
 * Database name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesDatabase
 */
export interface Db2LinkedServiceTypePropertiesDatabase {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesEncryptedCredential
 */
export interface Db2LinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Under where packages are created when querying database. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesPackageCollection
 */
export interface Db2LinkedServiceTypePropertiesPackageCollection {
}

/**
 * Server name for connection. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesServer
 */
export interface Db2LinkedServiceTypePropertiesServer {
}

/**
 * Username for authentication. It is mutually exclusive with connectionString property. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2LinkedServiceTypePropertiesUsername
 */
export interface Db2LinkedServiceTypePropertiesUsername {
}

export enum TeradataLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  WINDOWS = 'Windows',
}

/**
 * Teradata ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/teradataLinkedServiceTypePropertiesConnectionString
 */
export interface TeradataLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataLinkedServiceTypePropertiesEncryptedCredential
 */
export interface TeradataLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Server name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataLinkedServiceTypePropertiesServer
 */
export interface TeradataLinkedServiceTypePropertiesServer {
}

/**
 * Username for authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataLinkedServiceTypePropertiesUsername
 */
export interface TeradataLinkedServiceTypePropertiesUsername {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureMlLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The Batch Execution REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlLinkedServiceTypePropertiesMlEndpoint
 */
export interface AzureMlLinkedServiceTypePropertiesMlEndpoint {
}

/**
 * The ID of the service principal used to authenticate against the ARM-based updateResourceEndpoint of an Azure ML Studio web service. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureMlLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlLinkedServiceTypePropertiesTenant
 */
export interface AzureMlLinkedServiceTypePropertiesTenant {
}

/**
 * The Update Resource REST URL for an Azure ML Studio Web Service endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlLinkedServiceTypePropertiesUpdateResourceEndpoint
 */
export interface AzureMlLinkedServiceTypePropertiesUpdateResourceEndpoint {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureMlServiceLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Azure ML Service workspace name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesMlWorkspaceName
 */
export interface AzureMlServiceLinkedServiceTypePropertiesMlWorkspaceName {
}

/**
 * Azure ML Service workspace resource group name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesResourceGroupName
 */
export interface AzureMlServiceLinkedServiceTypePropertiesResourceGroupName {
}

/**
 * The ID of the service principal used to authenticate against the endpoint of a published Azure ML Service pipeline. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureMlServiceLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Azure ML Service workspace subscription ID. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesSubscriptionId
 */
export interface AzureMlServiceLinkedServiceTypePropertiesSubscriptionId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlServiceLinkedServiceTypePropertiesTenant
 */
export interface AzureMlServiceLinkedServiceTypePropertiesTenant {
}

/**
 * Type of authentication used to connect to the ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcLinkedServiceTypePropertiesAuthenticationType
 */
export interface OdbcLinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/odbcLinkedServiceTypePropertiesConnectionString
 */
export interface OdbcLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcLinkedServiceTypePropertiesEncryptedCredential
 */
export interface OdbcLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * User name for Basic authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcLinkedServiceTypePropertiesUserName
 */
export interface OdbcLinkedServiceTypePropertiesUserName {
}

/**
 * Type of authentication used to connect to the Informix as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixLinkedServiceTypePropertiesAuthenticationType
 */
export interface InformixLinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/informixLinkedServiceTypePropertiesConnectionString
 */
export interface InformixLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixLinkedServiceTypePropertiesEncryptedCredential
 */
export interface InformixLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * User name for Basic authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixLinkedServiceTypePropertiesUserName
 */
export interface InformixLinkedServiceTypePropertiesUserName {
}

/**
 * Type of authentication used to connect to the Microsoft Access as ODBC data store. Possible values are: Anonymous and Basic. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessLinkedServiceTypePropertiesAuthenticationType
 */
export interface MicrosoftAccessLinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The non-access credential portion of the connection string as well as an optional encrypted credential. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/microsoftAccessLinkedServiceTypePropertiesConnectionString
 */
export interface MicrosoftAccessLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MicrosoftAccessLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * User name for Basic authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessLinkedServiceTypePropertiesUserName
 */
export interface MicrosoftAccessLinkedServiceTypePropertiesUserName {
}

/**
 * Type of authentication used to connect to the HDFS. Possible values are: Anonymous and Windows. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsLinkedServiceTypePropertiesAuthenticationType
 */
export interface HdfsLinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HdfsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of the HDFS service endpoint, e.g. http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsLinkedServiceTypePropertiesUrl
 */
export interface HdfsLinkedServiceTypePropertiesUrl {
}

/**
 * User name for Windows authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsLinkedServiceTypePropertiesUserName
 */
export interface HdfsLinkedServiceTypePropertiesUserName {
}

/**
 * Specify the resource you are requesting authorization to use Directory. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesAadResourceId
 */
export interface ODataLinkedServiceTypePropertiesAadResourceId {
}

export enum ODataLinkedServiceTypePropertiesAadServicePrincipalCredentialType {
  SERVICE_PRINCIPAL_KEY = 'ServicePrincipalKey',
  SERVICE_PRINCIPAL_CERT = 'ServicePrincipalCert',
}

export enum ODataLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  ANONYMOUS = 'Anonymous',
  WINDOWS = 'Windows',
  AAD_SERVICE_PRINCIPAL = 'AadServicePrincipal',
  MANAGED_SERVICE_IDENTITY = 'ManagedServiceIdentity',
}

/**
 * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesAuthHeaders
 */
export interface ODataLinkedServiceTypePropertiesAuthHeaders {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesAzureCloudType
 */
export interface ODataLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ODataLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specify the application id of your application registered in Azure Active Directory. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesServicePrincipalId
 */
export interface ODataLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Specify the tenant information (domain name or tenant ID) under which your application resides. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesTenant
 */
export interface ODataLinkedServiceTypePropertiesTenant {
}

/**
 * The URL of the OData service endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesUrl
 */
export interface ODataLinkedServiceTypePropertiesUrl {
}

/**
 * User name of the OData service. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataLinkedServiceTypePropertiesUserName
 */
export interface ODataLinkedServiceTypePropertiesUserName {
}

/**
 * A WebLinkedService that uses anonymous authentication to communicate with an HTTP endpoint.
 *
 * @schema #/definitions/WebAnonymousAuthentication
 */
export interface WebAnonymousAuthentication {
  /**
   * @schema #/definitions/WebAnonymousAuthentication#authenticationType
   */
  readonly authenticationType: WebAnonymousAuthenticationAuthenticationType;

}

/**
 * A WebLinkedService that uses basic authentication to communicate with an HTTP endpoint.
 *
 * @schema #/definitions/WebBasicAuthentication
 */
export interface WebBasicAuthentication {
  /**
   * @schema #/definitions/WebBasicAuthentication#authenticationType
   */
  readonly authenticationType: WebBasicAuthenticationAuthenticationType;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/WebBasicAuthentication#password
   */
  readonly password: SecretBase;

  /**
   * User name for Basic authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebBasicAuthentication#username
   */
  readonly username: WebBasicAuthenticationUsername;

}

/**
 * A WebLinkedService that uses client certificate based authentication to communicate with an HTTP endpoint. This scheme follows mutual authentication; the server must also provide valid credentials to the client.
 *
 * @schema #/definitions/WebClientCertificateAuthentication
 */
export interface WebClientCertificateAuthentication {
  /**
   * @schema #/definitions/WebClientCertificateAuthentication#authenticationType
   */
  readonly authenticationType: WebClientCertificateAuthenticationAuthenticationType;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/WebClientCertificateAuthentication#password
   */
  readonly password: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/WebClientCertificateAuthentication#pfx
   */
  readonly pfx: SecretBase;

}

/**
 * AuthenticationType to be used for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraLinkedServiceTypePropertiesAuthenticationType
 */
export interface CassandraLinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraLinkedServiceTypePropertiesEncryptedCredential
 */
export interface CassandraLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Host name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraLinkedServiceTypePropertiesHost
 */
export interface CassandraLinkedServiceTypePropertiesHost {
}

/**
 * The port for the connection. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/cassandraLinkedServiceTypePropertiesPort
 */
export interface CassandraLinkedServiceTypePropertiesPort {
}

/**
 * Username for authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraLinkedServiceTypePropertiesUsername
 */
export interface CassandraLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface MongoDbLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum MongoDbLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  ANONYMOUS = 'Anonymous',
}

/**
 * Database to verify the username and password. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesAuthSource
 */
export interface MongoDbLinkedServiceTypePropertiesAuthSource {
}

/**
 * The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesDatabaseName
 */
export interface MongoDbLinkedServiceTypePropertiesDatabaseName {
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesEnableSsl
 */
export interface MongoDbLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MongoDbLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The TCP port number that the MongoDB server uses to listen for client connections. The default value is 27017. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesPort
 */
export interface MongoDbLinkedServiceTypePropertiesPort {
}

/**
 * The IP address or server name of the MongoDB server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesServer
 */
export interface MongoDbLinkedServiceTypePropertiesServer {
}

/**
 * Username for authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbLinkedServiceTypePropertiesUsername
 */
export interface MongoDbLinkedServiceTypePropertiesUsername {
}

/**
 * The MongoDB Atlas connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/mongoDbAtlasLinkedServiceTypePropertiesConnectionString
 */
export interface MongoDbAtlasLinkedServiceTypePropertiesConnectionString {
}

/**
 * The name of the MongoDB Atlas database that you want to access. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbAtlasLinkedServiceTypePropertiesDatabase
 */
export interface MongoDbAtlasLinkedServiceTypePropertiesDatabase {
}

/**
 * The MongoDB connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/mongoDbV2LinkedServiceTypePropertiesConnectionString
 */
export interface MongoDbV2LinkedServiceTypePropertiesConnectionString {
}

/**
 * The name of the MongoDB database that you want to access. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbV2LinkedServiceTypePropertiesDatabase
 */
export interface MongoDbV2LinkedServiceTypePropertiesDatabase {
}

/**
 * The CosmosDB (MongoDB API) connection string. Type: string, SecureString or AzureKeyVaultSecretReference. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/cosmosDbMongoDbApiLinkedServiceTypePropertiesConnectionString
 */
export interface CosmosDbMongoDbApiLinkedServiceTypePropertiesConnectionString {
}

/**
 * The name of the CosmosDB (MongoDB API) database that you want to access. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbMongoDbApiLinkedServiceTypePropertiesDatabase
 */
export interface CosmosDbMongoDbApiLinkedServiceTypePropertiesDatabase {
}

/**
 * Data Lake Store account name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesAccountName
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesAccountName {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * Data Lake Store service URI. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesDataLakeStoreUri
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesDataLakeStoreUri {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Data Lake Store account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesResourceGroupName
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesResourceGroupName {
}

/**
 * The ID of the application used to authenticate against the Azure Data Lake Store account. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Data Lake Store account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesSubscriptionId
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesSubscriptionId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreLinkedServiceTypePropertiesTenant
 */
export interface AzureDataLakeStoreLinkedServiceTypePropertiesTenant {
}

/**
 * Account key for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesAccountKey
 */
export interface AzureBlobFsLinkedServiceTypePropertiesAccountKey {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesAzureCloudType
 */
export interface AzureBlobFsLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureBlobFsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The ID of the application used to authenticate against the Azure Data Lake Storage Gen2 account. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureBlobFsLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesTenant
 */
export interface AzureBlobFsLinkedServiceTypePropertiesTenant {
}

/**
 * Endpoint for the Azure Data Lake Storage Gen2 service. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLinkedServiceTypePropertiesUrl
 */
export interface AzureBlobFsLinkedServiceTypePropertiesUrl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365LinkedServiceTypePropertiesEncryptedCredential
 */
export interface Office365LinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Azure tenant ID to which the Office 365 account belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365LinkedServiceTypePropertiesOffice365TenantId
 */
export interface Office365LinkedServiceTypePropertiesOffice365TenantId {
}

/**
 * Specify the application's client ID. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365LinkedServiceTypePropertiesServicePrincipalId
 */
export interface Office365LinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Specify the tenant information under which your Azure AD web application resides. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365LinkedServiceTypePropertiesServicePrincipalTenantId
 */
export interface Office365LinkedServiceTypePropertiesServicePrincipalTenantId {
}

/**
 * The Salesforce API version used in ADF. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceLinkedServiceTypePropertiesApiVersion
 */
export interface SalesforceLinkedServiceTypePropertiesApiVersion {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SalesforceLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of Salesforce instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
 *
 * @default https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
 * @schema #/definitions/salesforceLinkedServiceTypePropertiesEnvironmentUrl
 */
export interface SalesforceLinkedServiceTypePropertiesEnvironmentUrl {
}

/**
 * The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceLinkedServiceTypePropertiesUsername
 */
export interface SalesforceLinkedServiceTypePropertiesUsername {
}

/**
 * The Salesforce API version used in ADF. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudLinkedServiceTypePropertiesApiVersion
 */
export interface SalesforceServiceCloudLinkedServiceTypePropertiesApiVersion {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SalesforceServiceCloudLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of Salesforce Service Cloud instance. Default is 'https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
 *
 * @default https://login.salesforce.com'. To copy data from sandbox, specify 'https://test.salesforce.com'. To copy data from custom domain, specify, for example, 'https://[domain].my.salesforce.com'. Type: string (or Expression with resultType string).
 * @schema #/definitions/salesforceServiceCloudLinkedServiceTypePropertiesEnvironmentUrl
 */
export interface SalesforceServiceCloudLinkedServiceTypePropertiesEnvironmentUrl {
}

/**
 * Extended properties appended to the connection string. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudLinkedServiceTypePropertiesExtendedProperties
 */
export interface SalesforceServiceCloudLinkedServiceTypePropertiesExtendedProperties {
}

/**
 * The username for Basic authentication of the Salesforce instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudLinkedServiceTypePropertiesUsername
 */
export interface SalesforceServiceCloudLinkedServiceTypePropertiesUsername {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Either encryptedCredential or username/password must be provided. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapCloudForCustomerLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SapCloudForCustomerLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of SAP Cloud for Customer OData API. For example, '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapCloudForCustomerLinkedServiceTypePropertiesUrl
 */
export interface SapCloudForCustomerLinkedServiceTypePropertiesUrl {
}

/**
 * The username for Basic authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapCloudForCustomerLinkedServiceTypePropertiesUsername
 */
export interface SapCloudForCustomerLinkedServiceTypePropertiesUsername {
}

/**
 * Client ID of the client on the BW system where the open hub destination is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesClientId
 */
export interface SapOpenHubLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SapOpenHubLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Language of the BW system where the open hub destination is located. The default value is EN. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesLanguage
 */
export interface SapOpenHubLinkedServiceTypePropertiesLanguage {
}

/**
 * The Logon Group for the SAP System. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesLogonGroup
 */
export interface SapOpenHubLinkedServiceTypePropertiesLogonGroup {
}

/**
 * The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesMessageServer
 */
export interface SapOpenHubLinkedServiceTypePropertiesMessageServer {
}

/**
 * The service name or port number of the Message Server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesMessageServerService
 */
export interface SapOpenHubLinkedServiceTypePropertiesMessageServerService {
}

/**
 * Host name of the SAP BW instance where the open hub destination is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesServer
 */
export interface SapOpenHubLinkedServiceTypePropertiesServer {
}

/**
 * SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesSystemId
 */
export interface SapOpenHubLinkedServiceTypePropertiesSystemId {
}

/**
 * System number of the BW system where the open hub destination is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesSystemNumber
 */
export interface SapOpenHubLinkedServiceTypePropertiesSystemNumber {
}

/**
 * Username to access the SAP BW server where the open hub destination is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubLinkedServiceTypePropertiesUserName
 */
export interface SapOpenHubLinkedServiceTypePropertiesUserName {
}

/**
 * The resource you are requesting authorization to use.
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesAadResourceId
 */
export interface RestServiceLinkedServiceTypePropertiesAadResourceId {
}

export enum RestServiceLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  BASIC = 'Basic',
  AAD_SERVICE_PRINCIPAL = 'AadServicePrincipal',
  MANAGED_SERVICE_IDENTITY = 'ManagedServiceIdentity',
}

/**
 * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesAuthHeaders
 */
export interface RestServiceLinkedServiceTypePropertiesAuthHeaders {
}

/**
 * Indicates the azure cloud type of the service principle auth. Allowed values are AzurePublic, AzureChina, AzureUsGovernment, AzureGermany. Default value is the data factory regions’ cloud type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesAzureCloudType
 */
export interface RestServiceLinkedServiceTypePropertiesAzureCloudType {
}

/**
 * Whether to validate server side SSL certificate when connecting to the endpoint.The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesEnableServerCertificateValidation
 */
export interface RestServiceLinkedServiceTypePropertiesEnableServerCertificateValidation {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesEncryptedCredential
 */
export interface RestServiceLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The application's client ID used in AadServicePrincipal authentication type.
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesServicePrincipalId
 */
export interface RestServiceLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The tenant information (domain name or tenant ID) used in AadServicePrincipal authentication type under which your application resides.
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesTenant
 */
export interface RestServiceLinkedServiceTypePropertiesTenant {
}

/**
 * The base URL of the REST service.
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesUrl
 */
export interface RestServiceLinkedServiceTypePropertiesUrl {
}

/**
 * The user name used in Basic authentication type.
 *
 * @schema #/definitions/restServiceLinkedServiceTypePropertiesUserName
 */
export interface RestServiceLinkedServiceTypePropertiesUserName {
}

/**
 * The access key identifier of the Amazon S3 Identity and Access Management (IAM) user. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3LinkedServiceTypePropertiesAccessKeyId
 */
export interface AmazonS3LinkedServiceTypePropertiesAccessKeyId {
}

/**
 * The authentication type of S3. Allowed value: AccessKey (default) or TemporarySecurityCredentials. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3LinkedServiceTypePropertiesAuthenticationType
 */
export interface AmazonS3LinkedServiceTypePropertiesAuthenticationType {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3LinkedServiceTypePropertiesEncryptedCredential
 */
export interface AmazonS3LinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * This value specifies the endpoint to access with the S3 Connector. This is an optional property; change it only if you want to try a different service endpoint or want to switch between https and http. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3LinkedServiceTypePropertiesServiceUrl
 */
export interface AmazonS3LinkedServiceTypePropertiesServiceUrl {
}

/**
 * The database name of the Amazon Redshift source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftLinkedServiceTypePropertiesDatabase
 */
export interface AmazonRedshiftLinkedServiceTypePropertiesDatabase {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AmazonRedshiftLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The TCP port number that the Amazon Redshift server uses to listen for client connections. The default value is 5439. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/amazonRedshiftLinkedServiceTypePropertiesPort
 */
export interface AmazonRedshiftLinkedServiceTypePropertiesPort {
}

/**
 * The name of the Amazon Redshift server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftLinkedServiceTypePropertiesServer
 */
export interface AmazonRedshiftLinkedServiceTypePropertiesServer {
}

/**
 * The username of the Amazon Redshift source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftLinkedServiceTypePropertiesUsername
 */
export interface AmazonRedshiftLinkedServiceTypePropertiesUsername {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSearchLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureSearchLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * URL for Azure Search service. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSearchLinkedServiceTypePropertiesUrl
 */
export interface AzureSearchLinkedServiceTypePropertiesUrl {
}

export enum HttpLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  ANONYMOUS = 'Anonymous',
  DIGEST = 'Digest',
  WINDOWS = 'Windows',
  CLIENT_CERTIFICATE = 'ClientCertificate',
}

/**
 * The additional HTTP headers in the request to RESTful API used for authorization. Type: object (or Expression with resultType object).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesAuthHeaders
 */
export interface HttpLinkedServiceTypePropertiesAuthHeaders {
}

/**
 * Thumbprint of certificate for ClientCertificate authentication. Only valid for on-premises copy. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesCertThumbprint
 */
export interface HttpLinkedServiceTypePropertiesCertThumbprint {
}

/**
 * Base64 encoded certificate data for ClientCertificate authentication. For on-premises copy with ClientCertificate authentication, either CertThumbprint or EmbeddedCertData/Password should be specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesEmbeddedCertData
 */
export interface HttpLinkedServiceTypePropertiesEmbeddedCertData {
}

/**
 * If true, validate the HTTPS server SSL certificate. Default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesEnableServerCertificateValidation
 */
export interface HttpLinkedServiceTypePropertiesEnableServerCertificateValidation {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HttpLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The base URL of the HTTP endpoint, e.g. http://www.microsoft.com. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesUrl
 */
export interface HttpLinkedServiceTypePropertiesUrl {
}

/**
 * User name for Basic, Digest, or Windows authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpLinkedServiceTypePropertiesUserName
 */
export interface HttpLinkedServiceTypePropertiesUserName {
}

export enum FtpServerLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  ANONYMOUS = 'Anonymous',
}

/**
 * If true, validate the FTP server SSL certificate when connect over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesEnableServerCertificateValidation
 */
export interface FtpServerLinkedServiceTypePropertiesEnableServerCertificateValidation {
}

/**
 * If true, connect to the FTP server over SSL/TLS channel. Default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesEnableSsl
 */
export interface FtpServerLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesEncryptedCredential
 */
export interface FtpServerLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Host name of the FTP server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesHost
 */
export interface FtpServerLinkedServiceTypePropertiesHost {
}

/**
 * The TCP port number that the FTP server uses to listen for client connections. Default value is 21. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesPort
 */
export interface FtpServerLinkedServiceTypePropertiesPort {
}

/**
 * Username to logon the FTP server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpServerLinkedServiceTypePropertiesUserName
 */
export interface FtpServerLinkedServiceTypePropertiesUserName {
}

export enum SftpServerLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  SSH_PUBLIC_KEY = 'SshPublicKey',
  MULTI_FACTOR = 'MultiFactor',
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SftpServerLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The SFTP server host name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesHost
 */
export interface SftpServerLinkedServiceTypePropertiesHost {
}

/**
 * The host key finger-print of the SFTP server. When SkipHostKeyValidation is false, HostKeyFingerprint should be specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesHostKeyFingerprint
 */
export interface SftpServerLinkedServiceTypePropertiesHostKeyFingerprint {
}

/**
 * The TCP port number that the SFTP server uses to listen for client connections. Default value is 22. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesPort
 */
export interface SftpServerLinkedServiceTypePropertiesPort {
}

/**
 * The SSH private key file path for SshPublicKey authentication. Only valid for on-premises copy. For on-premises copy with SshPublicKey authentication, either PrivateKeyPath or PrivateKeyContent should be specified. SSH private key should be OpenSSH format. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesPrivateKeyPath
 */
export interface SftpServerLinkedServiceTypePropertiesPrivateKeyPath {
}

/**
 * If true, skip the SSH host key validation. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesSkipHostKeyValidation
 */
export interface SftpServerLinkedServiceTypePropertiesSkipHostKeyValidation {
}

/**
 * The username used to log on to the SFTP server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpServerLinkedServiceTypePropertiesUserName
 */
export interface SftpServerLinkedServiceTypePropertiesUserName {
}

/**
 * Client ID of the client on the BW system. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwLinkedServiceTypePropertiesClientId
 */
export interface SapBwLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SapBwLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Host name of the SAP BW instance. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwLinkedServiceTypePropertiesServer
 */
export interface SapBwLinkedServiceTypePropertiesServer {
}

/**
 * System number of the BW system. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwLinkedServiceTypePropertiesSystemNumber
 */
export interface SapBwLinkedServiceTypePropertiesSystemNumber {
}

/**
 * Username to access the SAP BW server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwLinkedServiceTypePropertiesUserName
 */
export interface SapBwLinkedServiceTypePropertiesUserName {
}

export enum SapHanaLinkedServicePropertiesAuthenticationType {
  BASIC = 'Basic',
  WINDOWS = 'Windows',
}

/**
 * SAP HANA ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/sapHanaLinkedServicePropertiesConnectionString
 */
export interface SapHanaLinkedServicePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaLinkedServicePropertiesEncryptedCredential
 */
export interface SapHanaLinkedServicePropertiesEncryptedCredential {
}

/**
 * Host name of the SAP HANA server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaLinkedServicePropertiesServer
 */
export interface SapHanaLinkedServicePropertiesServer {
}

/**
 * Username to access the SAP HANA server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaLinkedServicePropertiesUserName
 */
export interface SapHanaLinkedServicePropertiesUserName {
}

/**
 * The access key id used to access data.
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesAccessKeyId
 */
export interface AmazonMwsLinkedServiceTypePropertiesAccessKeyId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AmazonMwsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesEndpoint
 */
export interface AmazonMwsLinkedServiceTypePropertiesEndpoint {
}

/**
 * The Amazon Marketplace ID you want to retrieve data from. To retrieve data from multiple Marketplace IDs, separate them with a comma (,). (i.e. A2EUQ1WTGCTBG2)
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesMarketplaceId
 */
export interface AmazonMwsLinkedServiceTypePropertiesMarketplaceId {
}

/**
 * The Amazon seller ID.
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesSellerId
 */
export interface AmazonMwsLinkedServiceTypePropertiesSellerId {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface AmazonMwsLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesUseHostVerification
 */
export interface AmazonMwsLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/amazonMwsLinkedServiceTypePropertiesUsePeerVerification
 */
export interface AmazonMwsLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azurePostgreSqlLinkedServiceTypePropertiesConnectionString
 */
export interface AzurePostgreSqlLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzurePostgreSqlLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Application client_id supplied by Concur App Management.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesClientId
 */
export interface ConcurLinkedServiceTypePropertiesClientId {
}

/**
 * Properties used to connect to Concur. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesConnectionProperties
 */
export interface ConcurLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ConcurLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface ConcurLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesUseHostVerification
 */
export interface ConcurLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesUsePeerVerification
 */
export interface ConcurLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The user name that you use to access Concur Service.
 *
 * @schema #/definitions/concurLinkedServiceTypePropertiesUsername
 */
export interface ConcurLinkedServiceTypePropertiesUsername {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/couchbaseLinkedServiceTypePropertiesConnectionString
 */
export interface CouchbaseLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/couchbaseLinkedServiceTypePropertiesEncryptedCredential
 */
export interface CouchbaseLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/drillLinkedServiceTypePropertiesConnectionString
 */
export interface DrillLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/drillLinkedServiceTypePropertiesEncryptedCredential
 */
export interface DrillLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesEncryptedCredential
 */
export interface EloquaLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Eloqua server. (i.e. eloqua.example.com)
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesEndpoint
 */
export interface EloquaLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface EloquaLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesUseHostVerification
 */
export interface EloquaLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesUsePeerVerification
 */
export interface EloquaLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The site name and user name of your Eloqua account in the form: sitename/username. (i.e. Eloqua/Alice)
 *
 * @schema #/definitions/eloquaLinkedServiceTypePropertiesUsername
 */
export interface EloquaLinkedServiceTypePropertiesUsername {
}

/**
 * A comma-separated list of public BigQuery projects to access.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesAdditionalProjects
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesAdditionalProjects {
}

export enum GoogleBigQueryLinkedServiceTypePropertiesAuthenticationType {
  SERVICE_AUTHENTICATION = 'ServiceAuthentication',
  USER_AUTHENTICATION = 'UserAuthentication',
}

/**
 * The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesClientId
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesClientId {
}

/**
 * The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesEmail
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesEmail {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesEncryptedCredential
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesKeyFilePath
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesKeyFilePath {
}

/**
 * The default BigQuery project to query against.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesProject
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesProject {
}

/**
 * Whether to request access to Google Drive. Allowing Google Drive access enables support for federated tables that combine BigQuery data with data from Google Drive. The default value is false.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesRequestGoogleDriveScope
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesRequestGoogleDriveScope {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesTrustedCertPath
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/googleBigQueryLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface GoogleBigQueryLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/greenplumLinkedServiceTypePropertiesConnectionString
 */
export interface GreenplumLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/greenplumLinkedServiceTypePropertiesEncryptedCredential
 */
export interface GreenplumLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface HBaseLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface HBaseLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum HBaseLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  BASIC = 'Basic',
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesEnableSsl
 */
export interface HBaseLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HBaseLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The IP address or host name of the HBase server. (i.e. 192.168.222.160)
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesHost
 */
export interface HBaseLinkedServiceTypePropertiesHost {
}

/**
 * The partial URL corresponding to the HBase server. (i.e. /gateway/sandbox/hbase/version)
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesHttpPath
 */
export interface HBaseLinkedServiceTypePropertiesHttpPath {
}

/**
 * The TCP port that the HBase instance uses to listen for client connections. The default value is 9090.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesPort
 */
export interface HBaseLinkedServiceTypePropertiesPort {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesTrustedCertPath
 */
export interface HBaseLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * The user name used to connect to the HBase instance.
 *
 * @schema #/definitions/hBaseLinkedServiceTypePropertiesUsername
 */
export interface HBaseLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface HiveLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface HiveLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum HiveLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  USERNAME = 'Username',
  USERNAME_AND_PASSWORD = 'UsernameAndPassword',
  WINDOWS_AZURE_HD_INSIGHT_SERVICE = 'WindowsAzureHDInsightService',
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesEnableSsl
 */
export interface HiveLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HiveLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * IP address or host name of the Hive server, separated by ';' for multiple hosts (only when serviceDiscoveryMode is enable).
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesHost
 */
export interface HiveLinkedServiceTypePropertiesHost {
}

/**
 * The partial URL corresponding to the Hive server.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesHttpPath
 */
export interface HiveLinkedServiceTypePropertiesHttpPath {
}

/**
 * The TCP port that the Hive server uses to listen for client connections.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesPort
 */
export interface HiveLinkedServiceTypePropertiesPort {
}

export enum HiveLinkedServiceTypePropertiesServerType {
  "HiveLinkedServiceTypePropertiesServerType_HIVE_SERVER1" = 'HiveServer1',
  "HiveLinkedServiceTypePropertiesServerType_HIVE_SERVER2" = 'HiveServer2',
  HIVE_THRIFT_SERVER = 'HiveThriftServer',
}

/**
 * true to indicate using the ZooKeeper service, false not.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesServiceDiscoveryMode
 */
export interface HiveLinkedServiceTypePropertiesServiceDiscoveryMode {
}

export enum HiveLinkedServiceTypePropertiesThriftTransportProtocol {
  BINARY = 'Binary',
  SASL = 'SASL',
  "HiveLinkedServiceTypePropertiesThriftTransportProtocol_HTTP" = 'HTTP ',
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesTrustedCertPath
 */
export interface HiveLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * Specifies whether the driver uses native HiveQL queries,or converts them into an equivalent form in HiveQL.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesUseNativeQuery
 */
export interface HiveLinkedServiceTypePropertiesUseNativeQuery {
}

/**
 * The user name that you use to access Hive Server.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesUsername
 */
export interface HiveLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface HiveLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * The namespace on ZooKeeper under which Hive Server 2 nodes are added.
 *
 * @schema #/definitions/hiveLinkedServiceTypePropertiesZooKeeperNameSpace
 */
export interface HiveLinkedServiceTypePropertiesZooKeeperNameSpace {
}

/**
 * The client ID associated with your Hubspot application.
 *
 * @schema #/definitions/hubspotLinkedServiceTypePropertiesClientId
 */
export interface HubspotLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hubspotLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HubspotLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/hubspotLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface HubspotLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/hubspotLinkedServiceTypePropertiesUseHostVerification
 */
export interface HubspotLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/hubspotLinkedServiceTypePropertiesUsePeerVerification
 */
export interface HubspotLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface ImpalaLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface ImpalaLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum ImpalaLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  SASL_USERNAME = 'SASLUsername',
  USERNAME_AND_PASSWORD = 'UsernameAndPassword',
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesEnableSsl
 */
export interface ImpalaLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ImpalaLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The IP address or host name of the Impala server. (i.e. 192.168.222.160)
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesHost
 */
export interface ImpalaLinkedServiceTypePropertiesHost {
}

/**
 * The TCP port that the Impala server uses to listen for client connections. The default value is 21050.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesPort
 */
export interface ImpalaLinkedServiceTypePropertiesPort {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesTrustedCertPath
 */
export interface ImpalaLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * The user name used to access the Impala server. The default value is anonymous when using SASLUsername.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesUsername
 */
export interface ImpalaLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/impalaLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface ImpalaLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesEncryptedCredential
 */
export interface JiraLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The IP address or host name of the Jira service. (e.g. jira.example.com)
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesHost
 */
export interface JiraLinkedServiceTypePropertiesHost {
}

/**
 * The TCP port that the Jira server uses to listen for client connections. The default value is 443 if connecting through HTTPS, or 8080 if connecting through HTTP.
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesPort
 */
export interface JiraLinkedServiceTypePropertiesPort {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface JiraLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesUseHostVerification
 */
export interface JiraLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesUsePeerVerification
 */
export interface JiraLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The user name that you use to access Jira Service.
 *
 * @schema #/definitions/jiraLinkedServiceTypePropertiesUsername
 */
export interface JiraLinkedServiceTypePropertiesUsername {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/magentoLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MagentoLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
 *
 * @schema #/definitions/magentoLinkedServiceTypePropertiesHost
 */
export interface MagentoLinkedServiceTypePropertiesHost {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/magentoLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface MagentoLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/magentoLinkedServiceTypePropertiesUseHostVerification
 */
export interface MagentoLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/magentoLinkedServiceTypePropertiesUsePeerVerification
 */
export interface MagentoLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/mariaDbLinkedServiceTypePropertiesConnectionString
 */
export interface MariaDbLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mariaDbLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MariaDbLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/azureMariaDbLinkedServiceTypePropertiesConnectionString
 */
export interface AzureMariaDbLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMariaDbLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureMariaDbLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The client Id of your Marketo service.
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesClientId
 */
export interface MarketoLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesEncryptedCredential
 */
export interface MarketoLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesEndpoint
 */
export interface MarketoLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface MarketoLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesUseHostVerification
 */
export interface MarketoLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/marketoLinkedServiceTypePropertiesUsePeerVerification
 */
export interface MarketoLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The client ID associated with your PayPal application.
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesClientId
 */
export interface PaypalLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesEncryptedCredential
 */
export interface PaypalLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesHost
 */
export interface PaypalLinkedServiceTypePropertiesHost {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface PaypalLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesUseHostVerification
 */
export interface PaypalLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/paypalLinkedServiceTypePropertiesUsePeerVerification
 */
export interface PaypalLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface PhoenixLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface PhoenixLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum PhoenixLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  USERNAME_AND_PASSWORD = 'UsernameAndPassword',
  WINDOWS_AZURE_HD_INSIGHT_SERVICE = 'WindowsAzureHDInsightService',
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesEnableSsl
 */
export interface PhoenixLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesEncryptedCredential
 */
export interface PhoenixLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The IP address or host name of the Phoenix server. (i.e. 192.168.222.160)
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesHost
 */
export interface PhoenixLinkedServiceTypePropertiesHost {
}

/**
 * The partial URL corresponding to the Phoenix server. (i.e. /gateway/sandbox/phoenix/version). The default value is hbasephoenix if using WindowsAzureHDInsightService.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesHttpPath
 */
export interface PhoenixLinkedServiceTypePropertiesHttpPath {
}

/**
 * The TCP port that the Phoenix server uses to listen for client connections. The default value is 8765.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesPort
 */
export interface PhoenixLinkedServiceTypePropertiesPort {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesTrustedCertPath
 */
export interface PhoenixLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * The user name used to connect to the Phoenix server.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesUsername
 */
export interface PhoenixLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/phoenixLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface PhoenixLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface PrestoLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface PrestoLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum PrestoLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  LDAP = 'LDAP',
}

/**
 * The catalog context for all request against the server.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesCatalog
 */
export interface PrestoLinkedServiceTypePropertiesCatalog {
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesEnableSsl
 */
export interface PrestoLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesEncryptedCredential
 */
export interface PrestoLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The IP address or host name of the Presto server. (i.e. 192.168.222.160)
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesHost
 */
export interface PrestoLinkedServiceTypePropertiesHost {
}

/**
 * The TCP port that the Presto server uses to listen for client connections. The default value is 8080.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesPort
 */
export interface PrestoLinkedServiceTypePropertiesPort {
}

/**
 * The version of the Presto server. (i.e. 0.148-t)
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesServerVersion
 */
export interface PrestoLinkedServiceTypePropertiesServerVersion {
}

/**
 * The local time zone used by the connection. Valid values for this option are specified in the IANA Time Zone Database. The default value is the system time zone.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesTimeZoneId
 */
export interface PrestoLinkedServiceTypePropertiesTimeZoneId {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesTrustedCertPath
 */
export interface PrestoLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * The user name used to connect to the Presto server.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesUsername
 */
export interface PrestoLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/prestoLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface PrestoLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * The company ID of the QuickBooks company to authorize.
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesCompanyId
 */
export interface QuickBooksLinkedServiceTypePropertiesCompanyId {
}

/**
 * Properties used to connect to QuickBooks. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesConnectionProperties
 */
export interface QuickBooksLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The consumer key for OAuth 1.0 authentication.
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesConsumerKey
 */
export interface QuickBooksLinkedServiceTypePropertiesConsumerKey {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesEncryptedCredential
 */
export interface QuickBooksLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the QuickBooks server. (i.e. quickbooks.api.intuit.com)
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesEndpoint
 */
export interface QuickBooksLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/quickBooksLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface QuickBooksLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

export enum ServiceNowLinkedServiceTypePropertiesAuthenticationType {
  BASIC = 'Basic',
  "ServiceNowLinkedServiceTypePropertiesAuthenticationType_O_AUTH2" = 'OAuth2',
}

/**
 * The client id for OAuth2 authentication.
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesClientId
 */
export interface ServiceNowLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ServiceNowLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the ServiceNow server. (i.e. <instance>.service-now.com)
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesEndpoint
 */
export interface ServiceNowLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface ServiceNowLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesUseHostVerification
 */
export interface ServiceNowLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesUsePeerVerification
 */
export interface ServiceNowLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The user name used to connect to the ServiceNow server for Basic and OAuth2 authentication.
 *
 * @schema #/definitions/serviceNowLinkedServiceTypePropertiesUsername
 */
export interface ServiceNowLinkedServiceTypePropertiesUsername {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/shopifyLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ShopifyLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
 *
 * @schema #/definitions/shopifyLinkedServiceTypePropertiesHost
 */
export interface ShopifyLinkedServiceTypePropertiesHost {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/shopifyLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface ShopifyLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/shopifyLinkedServiceTypePropertiesUseHostVerification
 */
export interface ShopifyLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/shopifyLinkedServiceTypePropertiesUsePeerVerification
 */
export interface ShopifyLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Specifies whether to require a CA-issued SSL certificate name to match the host name of the server when connecting over SSL. The default value is false.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesAllowHostNameCnMismatch
 */
export interface SparkLinkedServiceTypePropertiesAllowHostNameCnMismatch {
}

/**
 * Specifies whether to allow self-signed certificates from the server. The default value is false.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesAllowSelfSignedServerCert
 */
export interface SparkLinkedServiceTypePropertiesAllowSelfSignedServerCert {
}

export enum SparkLinkedServiceTypePropertiesAuthenticationType {
  ANONYMOUS = 'Anonymous',
  USERNAME = 'Username',
  USERNAME_AND_PASSWORD = 'UsernameAndPassword',
  WINDOWS_AZURE_HD_INSIGHT_SERVICE = 'WindowsAzureHDInsightService',
}

/**
 * Specifies whether the connections to the server are encrypted using SSL. The default value is false.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesEnableSsl
 */
export interface SparkLinkedServiceTypePropertiesEnableSsl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SparkLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * IP address or host name of the Spark server
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesHost
 */
export interface SparkLinkedServiceTypePropertiesHost {
}

/**
 * The partial URL corresponding to the Spark server.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesHttpPath
 */
export interface SparkLinkedServiceTypePropertiesHttpPath {
}

/**
 * The TCP port that the Spark server uses to listen for client connections.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesPort
 */
export interface SparkLinkedServiceTypePropertiesPort {
}

export enum SparkLinkedServiceTypePropertiesServerType {
  SHARK_SERVER = 'SharkServer',
  "SparkLinkedServiceTypePropertiesServerType_SHARK_SERVER2" = 'SharkServer2',
  SPARK_THRIFT_SERVER = 'SparkThriftServer',
}

export enum SparkLinkedServiceTypePropertiesThriftTransportProtocol {
  BINARY = 'Binary',
  SASL = 'SASL',
  "SparkLinkedServiceTypePropertiesThriftTransportProtocol_HTTP" = 'HTTP ',
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesTrustedCertPath
 */
export interface SparkLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * The user name that you use to access Spark Server.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesUsername
 */
export interface SparkLinkedServiceTypePropertiesUsername {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/sparkLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface SparkLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * The client ID associated with your Square application.
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesClientId
 */
export interface SquareLinkedServiceTypePropertiesClientId {
}

/**
 * Properties used to connect to Square. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesConnectionProperties
 */
export interface SquareLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SquareLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of the Square instance. (i.e. mystore.mysquare.com)
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesHost
 */
export interface SquareLinkedServiceTypePropertiesHost {
}

/**
 * The redirect URL assigned in the Square application dashboard. (i.e. http://localhost:2500)
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesRedirectUri
 */
export interface SquareLinkedServiceTypePropertiesRedirectUri {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface SquareLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesUseHostVerification
 */
export interface SquareLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/squareLinkedServiceTypePropertiesUsePeerVerification
 */
export interface SquareLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Properties used to connect to Xero. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesConnectionProperties
 */
export interface XeroLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesEncryptedCredential
 */
export interface XeroLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Xero server. (i.e. api.xero.com)
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesHost
 */
export interface XeroLinkedServiceTypePropertiesHost {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface XeroLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesUseHostVerification
 */
export interface XeroLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/xeroLinkedServiceTypePropertiesUsePeerVerification
 */
export interface XeroLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Properties used to connect to Zoho. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesConnectionProperties
 */
export interface ZohoLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ZohoLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesEndpoint
 */
export interface ZohoLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true.
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface ZohoLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesUseHostVerification
 */
export interface ZohoLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true.
 *
 * @schema #/definitions/zohoLinkedServiceTypePropertiesUsePeerVerification
 */
export interface ZohoLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/verticaLinkedServiceTypePropertiesConnectionString
 */
export interface VerticaLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/verticaLinkedServiceTypePropertiesEncryptedCredential
 */
export interface VerticaLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * An ODBC connection string. Type: string, SecureString or AzureKeyVaultSecretReference.
 *
 * @schema #/definitions/netezzaLinkedServiceTypePropertiesConnectionString
 */
export interface NetezzaLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaLinkedServiceTypePropertiesEncryptedCredential
 */
export interface NetezzaLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The client ID associated with the Salesforce Marketing Cloud application. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesClientId
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesClientId {
}

/**
 * Properties used to connect to Salesforce Marketing Cloud. It is mutually exclusive with any other properties in the linked service. Type: object.
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesConnectionProperties
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesConnectionProperties {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesUseHostVerification
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/salesforceMarketingCloudLinkedServiceTypePropertiesUsePeerVerification
 */
export interface SalesforceMarketingCloudLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The prefix of cluster name, postfix will be distinct with timestamp. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterNamePrefix
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterNamePrefix {
}

/**
 * The resource group where the cluster belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterResourceGroup
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterResourceGroup {
}

/**
 * Number of worker/data nodes in the cluster. Suggestion value: 4. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterSize
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterSize {
}

/**
 * The username to SSH remotely connect to cluster’s node (for Linux). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterSshUserName
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterSshUserName {
}

/**
 * The cluster type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterType
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterType {
}

/**
 * The username to access the cluster. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesClusterUserName
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesClusterUserName {
}

/**
 * Specifies the core configuration parameters (as in core-site.xml) for the HDInsight cluster to be created.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesCoreConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesCoreConfiguration {
}

/**
 * Specifies the size of the data node for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesDataNodeSize
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesDataNodeSize {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesEncryptedCredential
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specifies the HBase configuration parameters (hbase-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesHBaseConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesHBaseConfiguration {
}

/**
 * Specifies the HDFS configuration parameters (hdfs-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesHdfsConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesHdfsConfiguration {
}

/**
 * Specifies the size of the head node for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesHeadNodeSize
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesHeadNodeSize {
}

/**
 * Specifies the hive configuration parameters (hive-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesHiveConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesHiveConfiguration {
}

/**
 * The customer’s subscription to host the cluster. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesHostSubscriptionId
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesHostSubscriptionId {
}

/**
 * Specifies the MapReduce configuration parameters (mapred-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesMapReduceConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesMapReduceConfiguration {
}

/**
 * Specifies the Oozie configuration parameters (oozie-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesOozieConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesOozieConfiguration {
}

/**
 * Custom script action to run on HDI ondemand cluster once it's up.
 *
 * @schema #/definitions/ScriptAction
 */
export interface ScriptAction {
  /**
   * The user provided name of the script action.
   *
   * @schema #/definitions/ScriptAction#name
   */
  readonly name: string;

  /**
   * The parameters for the script action.
   *
   * @schema #/definitions/ScriptAction#parameters
   */
  readonly parameters?: string;

  /**
   * The node types on which the script action should be executed.
   *
   * @schema #/definitions/ScriptAction#roles
   */
  readonly roles: ScriptActionRoles;

  /**
   * The URI for the script action.
   *
   * @schema #/definitions/ScriptAction#uri
   */
  readonly uri: string;

}

/**
 * The service principal id for the hostSubscriptionId. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesServicePrincipalId
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The version of spark if the cluster type is 'spark'. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesSparkVersion
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesSparkVersion {
}

/**
 * Specifies the Storm configuration parameters (storm-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesStormConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesStormConfiguration {
}

/**
 * The ARM resource ID for the subnet in the vNet. If virtualNetworkId was specified, then this property is required. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesSubnetName
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesSubnetName {
}

/**
 * The Tenant id/name to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesTenant
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesTenant {
}

/**
 * The allowed idle time for the on-demand HDInsight cluster. Specifies how long the on-demand HDInsight cluster stays alive after completion of an activity run if there are no other active jobs in the cluster. The minimum value is 5 mins. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesTimeToLive
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesTimeToLive {
}

/**
 * Version of the HDInsight cluster.  Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesVersion
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesVersion {
}

/**
 * The ARM resource ID for the vNet to which the cluster should be joined after creation. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesVirtualNetworkId
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesVirtualNetworkId {
}

/**
 * Specifies the Yarn configuration parameters (yarn-site.xml) for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesYarnConfiguration
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesYarnConfiguration {
}

/**
 * Specifies the size of the Zoo Keeper node for the HDInsight cluster.
 *
 * @schema #/definitions/hdInsightOnDemandLinkedServiceTypePropertiesZookeeperNodeSize
 */
export interface HdInsightOnDemandLinkedServiceTypePropertiesZookeeperNodeSize {
}

/**
 * The Azure Data Lake Analytics account name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesAccountName
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesAccountName {
}

/**
 * Azure Data Lake Analytics URI Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesDataLakeAnalyticsUri
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesDataLakeAnalyticsUri {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Data Lake Analytics account resource group name (if different from Data Factory account). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesResourceGroupName
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesResourceGroupName {
}

/**
 * The ID of the application used to authenticate against the Azure Data Lake Analytics account. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Data Lake Analytics account subscription ID (if different from Data Factory account). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesSubscriptionId
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesSubscriptionId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeAnalyticsLinkedServiceTypePropertiesTenant
 */
export interface AzureDataLakeAnalyticsLinkedServiceTypePropertiesTenant {
}

/**
 * Required to specify MSI, if using Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesAuthentication
 */
export interface AzureDatabricksLinkedServiceTypePropertiesAuthentication {
}

/**
 * <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesDomain
 */
export interface AzureDatabricksLinkedServiceTypePropertiesDomain {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureDatabricksLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The id of an existing interactive cluster that will be used for all runs of this activity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesExistingClusterId
 */
export interface AzureDatabricksLinkedServiceTypePropertiesExistingClusterId {
}

/**
 * The id of an existing instance pool that will be used for all runs of this activity. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesInstancePoolId
 */
export interface AzureDatabricksLinkedServiceTypePropertiesInstancePoolId {
}

/**
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterCustomTags
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterCustomTags {
}

/**
 * The driver node type for the new job cluster. This property is ignored in instance pool configurations. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterDriverNodeType
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterDriverNodeType {
}

/**
 * Enable the elastic disk on the new cluster. This property is now ignored, and takes the default elastic disk behavior in Databricks (elastic disks are always enabled). Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterEnableElasticDisk
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterEnableElasticDisk {
}

/**
 * User-defined initialization scripts for the new cluster. Type: array of strings (or Expression with resultType array of strings).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterInitScripts
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterInitScripts {
}

/**
 * Specify a location to deliver Spark driver, worker, and event logs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterLogDestination
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterLogDestination {
}

/**
 * The node type of the new job cluster. This property is required if newClusterVersion is specified and instancePoolId is not specified. If instancePoolId is specified, this property is ignored. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterNodeType
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterNodeType {
}

/**
 * If not using an existing interactive cluster, this specifies the number of worker nodes to use for the new job cluster or instance pool. For new job clusters, this a string-formatted Int32, like '1' means numOfWorker is 1 or '1:10' means auto-scale from 1 (min) to 10 (max). For instance pools, this is a string-formatted Int32, and can only specify a fixed number of worker nodes, such as '2'. Required if newClusterVersion is specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterNumOfWorker
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterNumOfWorker {
}

/**
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterSparkConf
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterSparkConf {
}

/**
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterSparkEnvVars
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterSparkEnvVars {
}

/**
 * If not using an existing interactive cluster, this specifies the Spark version of a new job cluster or instance pool nodes created for each run of this activity. Required if instancePoolId is specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesNewClusterVersion
 */
export interface AzureDatabricksLinkedServiceTypePropertiesNewClusterVersion {
}

/**
 * The policy id for limiting the ability to configure clusters based on a user defined set of rules. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesPolicyId
 */
export interface AzureDatabricksLinkedServiceTypePropertiesPolicyId {
}

/**
 * Workspace resource id for databricks REST API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksLinkedServiceTypePropertiesWorkspaceResourceId
 */
export interface AzureDatabricksLinkedServiceTypePropertiesWorkspaceResourceId {
}

/**
 * The id of an existing interactive cluster that will be used for all runs of this job. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDetltaLakeLinkedServiceTypePropertiesClusterId
 */
export interface AzureDatabricksDetltaLakeLinkedServiceTypePropertiesClusterId {
}

/**
 * <REGION>.azuredatabricks.net, domain name of your Databricks deployment. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDetltaLakeLinkedServiceTypePropertiesDomain
 */
export interface AzureDatabricksDetltaLakeLinkedServiceTypePropertiesDomain {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDetltaLakeLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureDatabricksDetltaLakeLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The client ID associated with the Responsys application. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesClientId
 */
export interface ResponsysLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesEncryptedCredential
 */
export interface ResponsysLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Responsys server.
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesEndpoint
 */
export interface ResponsysLinkedServiceTypePropertiesEndpoint {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface ResponsysLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesUseHostVerification
 */
export interface ResponsysLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/responsysLinkedServiceTypePropertiesUsePeerVerification
 */
export interface ResponsysLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * Specify the resource you are requesting authorization. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxLinkedServiceTypePropertiesAadResourceId
 */
export interface DynamicsAxLinkedServiceTypePropertiesAadResourceId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxLinkedServiceTypePropertiesEncryptedCredential
 */
export interface DynamicsAxLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Specify the application's client ID. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxLinkedServiceTypePropertiesServicePrincipalId
 */
export interface DynamicsAxLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * Specify the tenant information (domain name or tenant ID) under which your application resides. Retrieve it by hovering the mouse in the top-right corner of the Azure portal. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxLinkedServiceTypePropertiesTenant
 */
export interface DynamicsAxLinkedServiceTypePropertiesTenant {
}

/**
 * The Dynamics AX (or Dynamics 365 Finance and Operations) instance OData endpoint.
 *
 * @schema #/definitions/dynamicsAxLinkedServiceTypePropertiesUrl
 */
export interface DynamicsAxLinkedServiceTypePropertiesUrl {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesEncryptedCredential
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The URL of the Oracle Service Cloud instance.
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesHost
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesHost {
}

/**
 * Specifies whether the data source endpoints are encrypted using HTTPS. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesUseEncryptedEndpoints
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesUseEncryptedEndpoints {
}

/**
 * Specifies whether to require the host name in the server's certificate to match the host name of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesUseHostVerification
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesUseHostVerification {
}

/**
 * Specifies whether to verify the identity of the server when connecting over SSL. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesUsePeerVerification
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesUsePeerVerification {
}

/**
 * The user name that you use to access Oracle Service Cloud server.
 *
 * @schema #/definitions/oracleServiceCloudLinkedServiceTypePropertiesUsername
 */
export interface OracleServiceCloudLinkedServiceTypePropertiesUsername {
}

export enum GoogleAdWordsLinkedServiceTypePropertiesAuthenticationType {
  SERVICE_AUTHENTICATION = 'ServiceAuthentication',
  USER_AUTHENTICATION = 'UserAuthentication',
}

/**
 * The Client customer ID of the AdWords account that you want to fetch report data for.
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesClientCustomerId
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesClientCustomerId {
}

/**
 * The client id of the google application used to acquire the refresh token. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesClientId
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesClientId {
}

/**
 * The service account email ID that is used for ServiceAuthentication and can only be used on self-hosted IR.
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesEmail
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesEmail {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesEncryptedCredential
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The full path to the .p12 key file that is used to authenticate the service account email address and can only be used on self-hosted IR.
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesKeyFilePath
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesKeyFilePath {
}

/**
 * The full path of the .pem file containing trusted CA certificates for verifying the server when connecting over SSL. This property can only be set when using SSL on self-hosted IR. The default value is the cacerts.pem file installed with the IR.
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesTrustedCertPath
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesTrustedCertPath {
}

/**
 * Specifies whether to use a CA certificate from the system trust store or from a specified PEM file. The default value is false.
 *
 * @schema #/definitions/googleAdWordsLinkedServiceTypePropertiesUseSystemTrustStore
 */
export interface GoogleAdWordsLinkedServiceTypePropertiesUseSystemTrustStore {
}

/**
 * Client ID of the client on the SAP system where the table is located. (Usually a three-digit decimal number represented as a string) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesClientId
 */
export interface SapTableLinkedServiceTypePropertiesClientId {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SapTableLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * Language of the SAP system where the table is located. The default value is EN. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesLanguage
 */
export interface SapTableLinkedServiceTypePropertiesLanguage {
}

/**
 * The Logon Group for the SAP System. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesLogonGroup
 */
export interface SapTableLinkedServiceTypePropertiesLogonGroup {
}

/**
 * The hostname of the SAP Message Server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesMessageServer
 */
export interface SapTableLinkedServiceTypePropertiesMessageServer {
}

/**
 * The service name or port number of the Message Server. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesMessageServerService
 */
export interface SapTableLinkedServiceTypePropertiesMessageServerService {
}

/**
 * Host name of the SAP instance where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesServer
 */
export interface SapTableLinkedServiceTypePropertiesServer {
}

/**
 * External security product's library to access the SAP server where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSncLibraryPath
 */
export interface SapTableLinkedServiceTypePropertiesSncLibraryPath {
}

/**
 * SNC activation indicator to access the SAP server where the table is located. Must be either 0 (off) or 1 (on). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSncMode
 */
export interface SapTableLinkedServiceTypePropertiesSncMode {
}

/**
 * Initiator's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSncMyName
 */
export interface SapTableLinkedServiceTypePropertiesSncMyName {
}

/**
 * Communication partner's SNC name to access the SAP server where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSncPartnerName
 */
export interface SapTableLinkedServiceTypePropertiesSncPartnerName {
}

/**
 * SNC Quality of Protection. Allowed value include: 1, 2, 3, 8, 9. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSncQop
 */
export interface SapTableLinkedServiceTypePropertiesSncQop {
}

/**
 * SystemID of the SAP system where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSystemId
 */
export interface SapTableLinkedServiceTypePropertiesSystemId {
}

/**
 * System number of the SAP system where the table is located. (Usually a two-digit decimal number represented as a string.) Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesSystemNumber
 */
export interface SapTableLinkedServiceTypePropertiesSystemNumber {
}

/**
 * Username to access the SAP server where the table is located. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableLinkedServiceTypePropertiesUserName
 */
export interface SapTableLinkedServiceTypePropertiesUserName {
}

/**
 * Database name for connection. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerLinkedServiceTypePropertiesDatabase
 */
export interface AzureDataExplorerLinkedServiceTypePropertiesDatabase {
}

/**
 * The endpoint of Azure Data Explorer (the engine's endpoint). URL will be in the format https://<clusterName>.<regionName>.kusto.windows.net. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/azureDataExplorerLinkedServiceTypePropertiesEndpoint
 */
export interface AzureDataExplorerLinkedServiceTypePropertiesEndpoint {
}

/**
 * The ID of the service principal used to authenticate against Azure Data Explorer. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerLinkedServiceTypePropertiesServicePrincipalId
 */
export interface AzureDataExplorerLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The name or ID of the tenant to which the service principal belongs. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerLinkedServiceTypePropertiesTenant
 */
export interface AzureDataExplorerLinkedServiceTypePropertiesTenant {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFunctionLinkedServiceTypePropertiesEncryptedCredential
 */
export interface AzureFunctionLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The endpoint of the Azure Function App. URL will be in the format https://<accountName>.azurewebsites.net.
 *
 * @schema #/definitions/azureFunctionLinkedServiceTypePropertiesFunctionAppUrl
 */
export interface AzureFunctionLinkedServiceTypePropertiesFunctionAppUrl {
}

/**
 * The connection string of snowflake. Type: string, SecureString.
 *
 * @schema #/definitions/snowflakeLinkedServiceTypePropertiesConnectionString
 */
export interface SnowflakeLinkedServiceTypePropertiesConnectionString {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/snowflakeLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SnowflakeLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The encrypted credential used for authentication. Credentials are encrypted using the integration runtime credential manager. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListLinkedServiceTypePropertiesEncryptedCredential
 */
export interface SharePointOnlineListLinkedServiceTypePropertiesEncryptedCredential {
}

/**
 * The application (client) ID of your application registered in Azure Active Directory. Make sure to grant SharePoint site permission to this application. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListLinkedServiceTypePropertiesServicePrincipalId
 */
export interface SharePointOnlineListLinkedServiceTypePropertiesServicePrincipalId {
}

/**
 * The URL of the SharePoint Online site. For example, https://contoso.sharepoint.com/sites/siteName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListLinkedServiceTypePropertiesSiteUrl
 */
export interface SharePointOnlineListLinkedServiceTypePropertiesSiteUrl {
}

/**
 * The tenant ID under which your application resides. You can find it from Azure portal Active Directory overview page. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListLinkedServiceTypePropertiesTenantId
 */
export interface SharePointOnlineListLinkedServiceTypePropertiesTenantId {
}

/**
 * Execute pipeline activity.
 *
 * @schema #/definitions/ExecutePipelineActivity
 */
export interface ExecutePipelineActivity {
  /**
   * @schema #/definitions/ExecutePipelineActivity#type
   */
  readonly type: ExecutePipelineActivityType;

  /**
   * Execute pipeline activity properties.
   *
   * @schema #/definitions/ExecutePipelineActivity#typeProperties
   */
  readonly typeProperties: ExecutePipelineActivityTypeProperties;

}

/**
 * This activity evaluates a boolean expression and executes either the activities under the ifTrueActivities property or the ifFalseActivities property depending on the result of the expression.
 *
 * @schema #/definitions/IfConditionActivity
 */
export interface IfConditionActivity {
  /**
   * @schema #/definitions/IfConditionActivity#type
   */
  readonly type: IfConditionActivityType;

  /**
   * IfCondition activity properties.
   *
   * @schema #/definitions/IfConditionActivity#typeProperties
   */
  readonly typeProperties: IfConditionActivityTypeProperties;

}

/**
 * This activity evaluates an expression and executes activities under the cases property that correspond to the expression evaluation expected in the equals property.
 *
 * @schema #/definitions/SwitchActivity
 */
export interface SwitchActivity {
  /**
   * @schema #/definitions/SwitchActivity#type
   */
  readonly type: SwitchActivityType;

  /**
   * Switch activity properties.
   *
   * @schema #/definitions/SwitchActivity#typeProperties
   */
  readonly typeProperties: SwitchActivityTypeProperties;

}

/**
 * This activity is used for iterating over a collection and execute given activities.
 *
 * @schema #/definitions/ForEachActivity
 */
export interface ForEachActivity {
  /**
   * @schema #/definitions/ForEachActivity#type
   */
  readonly type: ForEachActivityType;

  /**
   * ForEach activity properties.
   *
   * @schema #/definitions/ForEachActivity#typeProperties
   */
  readonly typeProperties: ForEachActivityTypeProperties;

}

/**
 * This activity suspends pipeline execution for the specified interval.
 *
 * @schema #/definitions/WaitActivity
 */
export interface WaitActivity {
  /**
   * @schema #/definitions/WaitActivity#type
   */
  readonly type: WaitActivityType;

  /**
   * Wait activity properties.
   *
   * @schema #/definitions/WaitActivity#typeProperties
   */
  readonly typeProperties: WaitActivityTypeProperties;

}

/**
 * This activity executes inner activities until the specified boolean expression results to true or timeout is reached, whichever is earlier.
 *
 * @schema #/definitions/UntilActivity
 */
export interface UntilActivity {
  /**
   * @schema #/definitions/UntilActivity#type
   */
  readonly type: UntilActivityType;

  /**
   * Until activity properties.
   *
   * @schema #/definitions/UntilActivity#typeProperties
   */
  readonly typeProperties: UntilActivityTypeProperties;

}

/**
 * This activity verifies that an external resource exists.
 *
 * @schema #/definitions/ValidationActivity
 */
export interface ValidationActivity {
  /**
   * @schema #/definitions/ValidationActivity#type
   */
  readonly type: ValidationActivityType;

  /**
   * Validation activity properties.
   *
   * @schema #/definitions/ValidationActivity#typeProperties
   */
  readonly typeProperties: ValidationActivityTypeProperties;

}

/**
 * Filter and return results from input array based on the conditions.
 *
 * @schema #/definitions/FilterActivity
 */
export interface FilterActivity {
  /**
   * @schema #/definitions/FilterActivity#type
   */
  readonly type: FilterActivityType;

  /**
   * Filter activity properties.
   *
   * @schema #/definitions/FilterActivity#typeProperties
   */
  readonly typeProperties: FilterActivityTypeProperties;

}

/**
 * Set value for a Variable.
 *
 * @schema #/definitions/SetVariableActivity
 */
export interface SetVariableActivity {
  /**
   * @schema #/definitions/SetVariableActivity#type
   */
  readonly type: SetVariableActivityType;

  /**
   * SetVariable activity properties.
   *
   * @schema #/definitions/SetVariableActivity#typeProperties
   */
  readonly typeProperties: SetVariableActivityTypeProperties;

}

/**
 * Append value for a Variable of type Array.
 *
 * @schema #/definitions/AppendVariableActivity
 */
export interface AppendVariableActivity {
  /**
   * @schema #/definitions/AppendVariableActivity#type
   */
  readonly type: AppendVariableActivityType;

  /**
   * AppendVariable activity properties.
   *
   * @schema #/definitions/AppendVariableActivity#typeProperties
   */
  readonly typeProperties: AppendVariableActivityTypeProperties;

}

/**
 * WebHook activity.
 *
 * @schema #/definitions/WebHookActivity
 */
export interface WebHookActivity {
  /**
   * @schema #/definitions/WebHookActivity#type
   */
  readonly type: WebHookActivityType;

  /**
   * WebHook activity type properties.
   *
   * @schema #/definitions/WebHookActivity#typeProperties
   */
  readonly typeProperties: WebHookActivityTypeProperties;

}

/**
 * Copy activity.
 *
 * @schema #/definitions/CopyActivity
 */
export interface CopyActivity {
  /**
   * List of inputs for the activity.
   *
   * @schema #/definitions/CopyActivity#inputs
   */
  readonly inputs?: DatasetReference[];

  /**
   * List of outputs for the activity.
   *
   * @schema #/definitions/CopyActivity#outputs
   */
  readonly outputs?: DatasetReference[];

  /**
   * @schema #/definitions/CopyActivity#type
   */
  readonly type: CopyActivityType;

  /**
   * Copy activity properties.
   *
   * @schema #/definitions/CopyActivity#typeProperties
   */
  readonly typeProperties: CopyActivityTypeProperties;

}

/**
 * HDInsight Hive activity type.
 *
 * @schema #/definitions/HDInsightHiveActivity
 */
export interface HdInsightHiveActivity {
  /**
   * @schema #/definitions/HDInsightHiveActivity#type
   */
  readonly type: HdInsightHiveActivityType;

  /**
   * HDInsight Hive activity properties.
   *
   * @schema #/definitions/HDInsightHiveActivity#typeProperties
   */
  readonly typeProperties: HdInsightHiveActivityTypeProperties;

}

/**
 * HDInsight Pig activity type.
 *
 * @schema #/definitions/HDInsightPigActivity
 */
export interface HdInsightPigActivity {
  /**
   * @schema #/definitions/HDInsightPigActivity#type
   */
  readonly type: HdInsightPigActivityType;

  /**
   * HDInsight Pig activity properties.
   *
   * @schema #/definitions/HDInsightPigActivity#typeProperties
   */
  readonly typeProperties: HdInsightPigActivityTypeProperties;

}

/**
 * HDInsight MapReduce activity type.
 *
 * @schema #/definitions/HDInsightMapReduceActivity
 */
export interface HdInsightMapReduceActivity {
  /**
   * @schema #/definitions/HDInsightMapReduceActivity#type
   */
  readonly type: HdInsightMapReduceActivityType;

  /**
   * HDInsight MapReduce activity properties.
   *
   * @schema #/definitions/HDInsightMapReduceActivity#typeProperties
   */
  readonly typeProperties: HdInsightMapReduceActivityTypeProperties;

}

/**
 * HDInsight streaming activity type.
 *
 * @schema #/definitions/HDInsightStreamingActivity
 */
export interface HdInsightStreamingActivity {
  /**
   * @schema #/definitions/HDInsightStreamingActivity#type
   */
  readonly type: HdInsightStreamingActivityType;

  /**
   * HDInsight streaming activity properties.
   *
   * @schema #/definitions/HDInsightStreamingActivity#typeProperties
   */
  readonly typeProperties: HdInsightStreamingActivityTypeProperties;

}

/**
 * HDInsight Spark activity.
 *
 * @schema #/definitions/HDInsightSparkActivity
 */
export interface HdInsightSparkActivity {
  /**
   * @schema #/definitions/HDInsightSparkActivity#type
   */
  readonly type: HdInsightSparkActivityType;

  /**
   * HDInsight spark activity properties.
   *
   * @schema #/definitions/HDInsightSparkActivity#typeProperties
   */
  readonly typeProperties: HdInsightSparkActivityTypeProperties;

}

/**
 * Execute SSIS package activity.
 *
 * @schema #/definitions/ExecuteSSISPackageActivity
 */
export interface ExecuteSsisPackageActivity {
  /**
   * @schema #/definitions/ExecuteSSISPackageActivity#type
   */
  readonly type: ExecuteSsisPackageActivityType;

  /**
   * Execute SSIS package activity properties.
   *
   * @schema #/definitions/ExecuteSSISPackageActivity#typeProperties
   */
  readonly typeProperties: ExecuteSsisPackageActivityTypeProperties;

}

/**
 * Custom activity type.
 *
 * @schema #/definitions/CustomActivity
 */
export interface CustomActivity {
  /**
   * @schema #/definitions/CustomActivity#type
   */
  readonly type: CustomActivityType;

  /**
   * Custom activity properties.
   *
   * @schema #/definitions/CustomActivity#typeProperties
   */
  readonly typeProperties: CustomActivityTypeProperties;

}

/**
 * SQL stored procedure activity type.
 *
 * @schema #/definitions/SqlServerStoredProcedureActivity
 */
export interface SqlServerStoredProcedureActivity {
  /**
   * @schema #/definitions/SqlServerStoredProcedureActivity#type
   */
  readonly type: SqlServerStoredProcedureActivityType;

  /**
   * SQL stored procedure activity properties.
   *
   * @schema #/definitions/SqlServerStoredProcedureActivity#typeProperties
   */
  readonly typeProperties: SqlServerStoredProcedureActivityTypeProperties;

}

/**
 * Delete activity.
 *
 * @schema #/definitions/DeleteActivity
 */
export interface DeleteActivity {
  /**
   * @schema #/definitions/DeleteActivity#type
   */
  readonly type: DeleteActivityType;

  /**
   * Delete activity properties.
   *
   * @schema #/definitions/DeleteActivity#typeProperties
   */
  readonly typeProperties: DeleteActivityTypeProperties;

}

/**
 * Azure Data Explorer command activity.
 *
 * @schema #/definitions/AzureDataExplorerCommandActivity
 */
export interface AzureDataExplorerCommandActivity {
  /**
   * @schema #/definitions/AzureDataExplorerCommandActivity#type
   */
  readonly type: AzureDataExplorerCommandActivityType;

  /**
   * Azure Data Explorer command activity properties.
   *
   * @schema #/definitions/AzureDataExplorerCommandActivity#typeProperties
   */
  readonly typeProperties: AzureDataExplorerCommandActivityTypeProperties;

}

/**
 * Lookup activity.
 *
 * @schema #/definitions/LookupActivity
 */
export interface LookupActivity {
  /**
   * @schema #/definitions/LookupActivity#type
   */
  readonly type: LookupActivityType;

  /**
   * Lookup activity properties.
   *
   * @schema #/definitions/LookupActivity#typeProperties
   */
  readonly typeProperties: LookupActivityTypeProperties;

}

/**
 * Web activity.
 *
 * @schema #/definitions/WebActivity
 */
export interface WebActivity {
  /**
   * @schema #/definitions/WebActivity#type
   */
  readonly type: WebActivityType;

  /**
   * Web activity type properties.
   *
   * @schema #/definitions/WebActivity#typeProperties
   */
  readonly typeProperties: WebActivityTypeProperties;

}

/**
 * Activity to get metadata of dataset
 *
 * @schema #/definitions/GetMetadataActivity
 */
export interface GetMetadataActivity {
  /**
   * @schema #/definitions/GetMetadataActivity#type
   */
  readonly type: GetMetadataActivityType;

  /**
   * GetMetadata activity properties.
   *
   * @schema #/definitions/GetMetadataActivity#typeProperties
   */
  readonly typeProperties: GetMetadataActivityTypeProperties;

}

/**
 * Azure ML Batch Execution activity.
 *
 * @schema #/definitions/AzureMLBatchExecutionActivity
 */
export interface AzureMlBatchExecutionActivity {
  /**
   * @schema #/definitions/AzureMLBatchExecutionActivity#type
   */
  readonly type: AzureMlBatchExecutionActivityType;

  /**
   * Azure ML Batch Execution activity properties.
   *
   * @schema #/definitions/AzureMLBatchExecutionActivity#typeProperties
   */
  readonly typeProperties: AzureMlBatchExecutionActivityTypeProperties;

}

/**
 * Azure ML Update Resource management activity.
 *
 * @schema #/definitions/AzureMLUpdateResourceActivity
 */
export interface AzureMlUpdateResourceActivity {
  /**
   * @schema #/definitions/AzureMLUpdateResourceActivity#type
   */
  readonly type: AzureMlUpdateResourceActivityType;

  /**
   * Azure ML Update Resource activity properties.
   *
   * @schema #/definitions/AzureMLUpdateResourceActivity#typeProperties
   */
  readonly typeProperties: AzureMlUpdateResourceActivityTypeProperties;

}

/**
 * Azure ML Execute Pipeline activity.
 *
 * @schema #/definitions/AzureMLExecutePipelineActivity
 */
export interface AzureMlExecutePipelineActivity {
  /**
   * @schema #/definitions/AzureMLExecutePipelineActivity#type
   */
  readonly type: AzureMlExecutePipelineActivityType;

  /**
   * Azure ML Execute Pipeline activity properties.
   *
   * @schema #/definitions/AzureMLExecutePipelineActivity#typeProperties
   */
  readonly typeProperties: AzureMlExecutePipelineActivityTypeProperties;

}

/**
 * Data Lake Analytics U-SQL activity.
 *
 * @schema #/definitions/DataLakeAnalyticsUSQLActivity
 */
export interface DataLakeAnalyticsUsqlActivity {
  /**
   * @schema #/definitions/DataLakeAnalyticsUSQLActivity#type
   */
  readonly type: DataLakeAnalyticsUsqlActivityType;

  /**
   * DataLakeAnalyticsU-SQL activity properties.
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivity#typeProperties
   */
  readonly typeProperties: DataLakeAnalyticsUsqlActivityTypeProperties;

}

/**
 * DatabricksNotebook activity.
 *
 * @schema #/definitions/DatabricksNotebookActivity
 */
export interface DatabricksNotebookActivity {
  /**
   * @schema #/definitions/DatabricksNotebookActivity#type
   */
  readonly type: DatabricksNotebookActivityType;

  /**
   * Databricks Notebook activity properties.
   *
   * @schema #/definitions/DatabricksNotebookActivity#typeProperties
   */
  readonly typeProperties: DatabricksNotebookActivityTypeProperties;

}

/**
 * DatabricksSparkJar activity.
 *
 * @schema #/definitions/DatabricksSparkJarActivity
 */
export interface DatabricksSparkJarActivity {
  /**
   * @schema #/definitions/DatabricksSparkJarActivity#type
   */
  readonly type: DatabricksSparkJarActivityType;

  /**
   * Databricks SparkJar activity properties.
   *
   * @schema #/definitions/DatabricksSparkJarActivity#typeProperties
   */
  readonly typeProperties: DatabricksSparkJarActivityTypeProperties;

}

/**
 * DatabricksSparkPython activity.
 *
 * @schema #/definitions/DatabricksSparkPythonActivity
 */
export interface DatabricksSparkPythonActivity {
  /**
   * @schema #/definitions/DatabricksSparkPythonActivity#type
   */
  readonly type: DatabricksSparkPythonActivityType;

  /**
   * Databricks SparkPython activity properties.
   *
   * @schema #/definitions/DatabricksSparkPythonActivity#typeProperties
   */
  readonly typeProperties: DatabricksSparkPythonActivityTypeProperties;

}

/**
 * Azure Function activity.
 *
 * @schema #/definitions/AzureFunctionActivity
 */
export interface AzureFunctionActivity {
  /**
   * @schema #/definitions/AzureFunctionActivity#type
   */
  readonly type: AzureFunctionActivityType;

  /**
   * Azure Function activity type properties.
   *
   * @schema #/definitions/AzureFunctionActivity#typeProperties
   */
  readonly typeProperties: AzureFunctionActivityTypeProperties;

}

/**
 * Execute data flow activity.
 *
 * @schema #/definitions/ExecuteDataFlowActivity
 */
export interface ExecuteDataFlowActivity {
  /**
   * @schema #/definitions/ExecuteDataFlowActivity#type
   */
  readonly type: ExecuteDataFlowActivityType;

  /**
   * Execute data flow activity properties.
   *
   * @schema #/definitions/ExecuteDataFlowActivity#typeProperties
   */
  readonly typeProperties: ExecuteDataFlowActivityTypeProperties;

}

/**
 * TimeSpan value, after which an Azure Monitoring Metric is fired.
 *
 * @schema #/definitions/pipelineElapsedTimeMetricPolicyDuration
 */
export interface PipelineElapsedTimeMetricPolicyDuration {
}

export enum ScheduleTriggerType {
  SCHEDULE_TRIGGER = 'ScheduleTrigger',
}

/**
 * Schedule Trigger properties.
 *
 * @schema #/definitions/ScheduleTriggerTypeProperties
 */
export interface ScheduleTriggerTypeProperties {
  /**
   * The workflow trigger recurrence.
   *
   * @schema #/definitions/ScheduleTriggerTypeProperties#recurrence
   */
  readonly recurrence: ScheduleTriggerRecurrence;

}

export enum BlobTriggerType {
  BLOB_TRIGGER = 'BlobTrigger',
}

/**
 * Blob Trigger properties.
 *
 * @schema #/definitions/BlobTriggerTypeProperties
 */
export interface BlobTriggerTypeProperties {
  /**
   * The path of the container/folder that will trigger the pipeline.
   *
   * @schema #/definitions/BlobTriggerTypeProperties#folderPath
   */
  readonly folderPath: string;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/BlobTriggerTypeProperties#linkedService
   */
  readonly linkedService: LinkedServiceReference;

  /**
   * The max number of parallel files to handle when it is triggered.
   *
   * @schema #/definitions/BlobTriggerTypeProperties#maxConcurrency
   */
  readonly maxConcurrency: number;

}

export enum BlobEventsTriggerType {
  BLOB_EVENTS_TRIGGER = 'BlobEventsTrigger',
}

/**
 * Blob Events Trigger properties.
 *
 * @schema #/definitions/BlobEventsTriggerTypeProperties
 */
export interface BlobEventsTriggerTypeProperties {
  /**
   * The blob path must begin with the pattern provided for trigger to fire. For example, '/records/blobs/december/' will only fire the trigger for blobs in the december folder under the records container. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
   *
   * @schema #/definitions/BlobEventsTriggerTypeProperties#blobPathBeginsWith
   */
  readonly blobPathBeginsWith?: string;

  /**
   * The blob path must end with the pattern provided for trigger to fire. For example, 'december/boxes.csv' will only fire the trigger for blobs named boxes in a december folder. At least one of these must be provided: blobPathBeginsWith, blobPathEndsWith.
   *
   * @schema #/definitions/BlobEventsTriggerTypeProperties#blobPathEndsWith
   */
  readonly blobPathEndsWith?: string;

  /**
   * Blob event types.
   *
   * @schema #/definitions/BlobEventsTriggerTypeProperties#events
   */
  readonly events: BlobEventsTriggerTypePropertiesEvents[];

  /**
   * If set to true, blobs with zero bytes will be ignored.
   *
   * @schema #/definitions/BlobEventsTriggerTypeProperties#ignoreEmptyBlobs
   */
  readonly ignoreEmptyBlobs?: boolean;

  /**
   * The ARM resource ID of the Storage Account.
   *
   * @schema #/definitions/BlobEventsTriggerTypeProperties#scope
   */
  readonly scope: string;

}

export enum CustomEventsTriggerType {
  CUSTOM_EVENTS_TRIGGER = 'CustomEventsTrigger',
}

/**
 * Custom Events Trigger properties.
 *
 * @schema #/definitions/CustomEventsTriggerTypeProperties
 */
export interface CustomEventsTriggerTypeProperties {
  /**
   * The list of event types that cause this trigger to fire.
   *
   * @schema #/definitions/CustomEventsTriggerTypeProperties#events
   */
  readonly events: CustomEventsTriggerTypePropertiesEvents[];

  /**
   * The ARM resource ID of the Azure Event Grid Topic.
   *
   * @schema #/definitions/CustomEventsTriggerTypeProperties#scope
   */
  readonly scope: string;

  /**
   * The event subject must begin with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
   *
   * @schema #/definitions/CustomEventsTriggerTypeProperties#subjectBeginsWith
   */
  readonly subjectBeginsWith?: string;

  /**
   * The event subject must end with the pattern provided for trigger to fire. At least one of these must be provided: subjectBeginsWith, subjectEndsWith.
   *
   * @schema #/definitions/CustomEventsTriggerTypeProperties#subjectEndsWith
   */
  readonly subjectEndsWith?: string;

}

/**
 * @schema #/definitions/triggerPipelineReferenceParameters
 */
export interface TriggerPipelineReferenceParameters {
}

/**
 * Pipeline reference type.
 *
 * @schema #/definitions/PipelineReference
 */
export interface PipelineReference {
  /**
   * Reference name.
   *
   * @schema #/definitions/PipelineReference#name
   */
  readonly name?: string;

  /**
   * Reference pipeline name.
   *
   * @schema #/definitions/PipelineReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Pipeline reference type.
   *
   * @schema #/definitions/PipelineReference#type
   */
  readonly type: PipelineReferenceType;

}

/**
 * Specifies how long the trigger waits past due time before triggering new run. It doesn't alter window start and end time. The default is 0. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/tumblingWindowTriggerTypePropertiesDelay
 */
export interface TumblingWindowTriggerTypePropertiesDelay {
}

/**
 * Referenced dependency.
 *
 * @schema #/definitions/DependencyReference
 */
export class DependencyReference {
  public static fromTumblingWindowTriggerDependencyReference(value: TumblingWindowTriggerDependencyReference): DependencyReference {
    return new DependencyReference(value);
  }
  public static fromSelfDependencyTumblingWindowTriggerReference(value: SelfDependencyTumblingWindowTriggerReference): DependencyReference {
    return new DependencyReference(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum TumblingWindowTriggerTypePropertiesFrequency {
  MINUTE = 'Minute',
  HOUR = 'Hour',
  MONTH = 'Month',
}

/**
 * Execution policy for an activity.
 *
 * @schema #/definitions/RetryPolicy
 */
export interface RetryPolicy {
  /**
   * Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @default 0. Type: integer (or Expression with resultType integer), minimum: 0.
   * @schema #/definitions/RetryPolicy#count
   */
  readonly count?: RetryPolicyCount;

  /**
   * Interval between retries in seconds. Default is 30.
   *
   * @default 30.
   * @schema #/definitions/RetryPolicy#intervalInSeconds
   */
  readonly intervalInSeconds?: number;

}

/**
 * The parent trigger reference.
 *
 * @schema #/definitions/rerunTumblingWindowTriggerTypePropertiesParentTrigger
 */
export interface RerunTumblingWindowTriggerTypePropertiesParentTrigger {
}

/**
 * @schema #/definitions/datasetReferenceParameters
 */
export interface DatasetReferenceParameters {
}

export enum DatasetReferenceType {
  DATASET_REFERENCE = 'DatasetReference',
}

/**
 * @schema #/definitions/linkedServiceReferenceParameters
 */
export interface LinkedServiceReferenceParameters {
}

export enum LinkedServiceReferenceType {
  LINKED_SERVICE_REFERENCE = 'LinkedServiceReference',
}

/**
 * The BZip2 compression method used on a dataset.
 *
 * @schema #/definitions/DatasetBZip2Compression
 */
export interface DatasetBZip2Compression {
  /**
   * @schema #/definitions/DatasetBZip2Compression#type
   */
  readonly type: DatasetBZip2CompressionType;

}

/**
 * The GZip compression method used on a dataset.
 *
 * @schema #/definitions/DatasetGZipCompression
 */
export interface DatasetGZipCompression {
  /**
   * The GZip compression level.
   *
   * @schema #/definitions/DatasetGZipCompression#level
   */
  readonly level?: DatasetGZipCompressionLevel;

  /**
   * @schema #/definitions/DatasetGZipCompression#type
   */
  readonly type: DatasetGZipCompressionType;

}

/**
 * The Deflate compression method used on a dataset.
 *
 * @schema #/definitions/DatasetDeflateCompression
 */
export interface DatasetDeflateCompression {
  /**
   * The Deflate compression level.
   *
   * @schema #/definitions/DatasetDeflateCompression#level
   */
  readonly level?: DatasetDeflateCompressionLevel;

  /**
   * @schema #/definitions/DatasetDeflateCompression#type
   */
  readonly type: DatasetDeflateCompressionType;

}

/**
 * The ZipDeflate compression method used on a dataset.
 *
 * @schema #/definitions/DatasetZipDeflateCompression
 */
export interface DatasetZipDeflateCompression {
  /**
   * The ZipDeflate compression level.
   *
   * @schema #/definitions/DatasetZipDeflateCompression#level
   */
  readonly level?: DatasetZipDeflateCompressionLevel;

  /**
   * @schema #/definitions/DatasetZipDeflateCompression#type
   */
  readonly type: DatasetZipDeflateCompressionType;

}

/**
 * The Tar archive method used on a dataset.
 *
 * @schema #/definitions/DatasetTarCompression
 */
export interface DatasetTarCompression {
  /**
   * @schema #/definitions/DatasetTarCompression#type
   */
  readonly type: DatasetTarCompressionType;

}

/**
 * The TarGZip compression method used on a dataset.
 *
 * @schema #/definitions/DatasetTarGZipCompression
 */
export interface DatasetTarGZipCompression {
  /**
   * The TarGZip compression level.
   *
   * @schema #/definitions/DatasetTarGZipCompression#level
   */
  readonly level?: DatasetTarGZipCompressionLevel;

  /**
   * @schema #/definitions/DatasetTarGZipCompression#type
   */
  readonly type: DatasetTarGZipCompressionType;

}

/**
 * The data stored in text format.
 *
 * @schema #/definitions/TextFormat
 */
export interface TextFormat {
  /**
   * The column delimiter. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#columnDelimiter
   */
  readonly columnDelimiter?: TextFormatColumnDelimiter;

  /**
   * The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#encodingName
   */
  readonly encodingName?: TextFormatEncodingName;

  /**
   * The escape character. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#escapeChar
   */
  readonly escapeChar?: TextFormatEscapeChar;

  /**
   * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/TextFormat#firstRowAsHeader
   */
  readonly firstRowAsHeader?: TextFormatFirstRowAsHeader;

  /**
   * The null value string. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#nullValue
   */
  readonly nullValue?: TextFormatNullValue;

  /**
   * The quote character. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#quoteChar
   */
  readonly quoteChar?: TextFormatQuoteChar;

  /**
   * The row delimiter. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TextFormat#rowDelimiter
   */
  readonly rowDelimiter?: TextFormatRowDelimiter;

  /**
   * The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/TextFormat#skipLineCount
   */
  readonly skipLineCount?: TextFormatSkipLineCount;

  /**
   * Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/TextFormat#treatEmptyAsNull
   */
  readonly treatEmptyAsNull?: TextFormatTreatEmptyAsNull;

  /**
   * @schema #/definitions/TextFormat#type
   */
  readonly type: TextFormatType;

}

/**
 * The data stored in JSON format.
 *
 * @schema #/definitions/JsonFormat
 */
export interface JsonFormat {
  /**
   * The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JsonFormat#encodingName
   */
  readonly encodingName?: JsonFormatEncodingName;

  /**
   * File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
   *
   * @schema #/definitions/JsonFormat#filePattern
   */
  readonly filePattern?: JsonFormatFilePattern;

  /**
   * The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JsonFormat#jsonNodeReference
   */
  readonly jsonNodeReference?: JsonFormatJsonNodeReference;

  /**
   * The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
   *
   * @schema #/definitions/JsonFormat#jsonPathDefinition
   */
  readonly jsonPathDefinition?: JsonFormatJsonPathDefinition;

  /**
   * The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JsonFormat#nestingSeparator
   */
  readonly nestingSeparator?: JsonFormatNestingSeparator;

  /**
   * @schema #/definitions/JsonFormat#type
   */
  readonly type: JsonFormatType;

}

/**
 * The data stored in Avro format.
 *
 * @schema #/definitions/AvroFormat
 */
export interface AvroFormat {
  /**
   * @schema #/definitions/AvroFormat#type
   */
  readonly type: AvroFormatType;

}

/**
 * The data stored in Optimized Row Columnar (ORC) format.
 *
 * @schema #/definitions/OrcFormat
 */
export interface OrcFormat {
  /**
   * @schema #/definitions/OrcFormat#type
   */
  readonly type: OrcFormatType;

}

/**
 * The data stored in Parquet format.
 *
 * @schema #/definitions/ParquetFormat
 */
export interface ParquetFormat {
  /**
   * @schema #/definitions/ParquetFormat#type
   */
  readonly type: ParquetFormatType;

}

/**
 * The location of azure blob dataset.
 *
 * @schema #/definitions/AzureBlobStorageLocation
 */
export interface AzureBlobStorageLocation {
  /**
   * Specify the container of azure blob. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageLocation#container
   */
  readonly container?: AzureBlobStorageLocationContainer;

  /**
   * @schema #/definitions/AzureBlobStorageLocation#type
   */
  readonly type: AzureBlobStorageLocationType;

}

/**
 * The location of azure blobFS dataset.
 *
 * @schema #/definitions/AzureBlobFSLocation
 */
export interface AzureBlobFsLocation {
  /**
   * Specify the fileSystem of azure blobFS. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSLocation#fileSystem
   */
  readonly fileSystem?: AzureBlobFsLocationFileSystem;

  /**
   * @schema #/definitions/AzureBlobFSLocation#type
   */
  readonly type: AzureBlobFsLocationType;

}

/**
 * The location of azure data lake store dataset.
 *
 * @schema #/definitions/AzureDataLakeStoreLocation
 */
export interface AzureDataLakeStoreLocation {
  /**
   * @schema #/definitions/AzureDataLakeStoreLocation#type
   */
  readonly type: AzureDataLakeStoreLocationType;

}

/**
 * The location of amazon S3 dataset.
 *
 * @schema #/definitions/AmazonS3Location
 */
export interface AmazonS3Location {
  /**
   * Specify the bucketName of amazon S3. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/AmazonS3Location#bucketName
   */
  readonly bucketName?: AmazonS3LocationBucketName;

  /**
   * @schema #/definitions/AmazonS3Location#type
   */
  readonly type: AmazonS3LocationType;

  /**
   * Specify the version of amazon S3. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3Location#version
   */
  readonly version?: AmazonS3LocationVersion;

}

/**
 * The location of file server dataset.
 *
 * @schema #/definitions/FileServerLocation
 */
export interface FileServerLocation {
  /**
   * @schema #/definitions/FileServerLocation#type
   */
  readonly type: FileServerLocationType;

}

/**
 * The location of file server dataset.
 *
 * @schema #/definitions/AzureFileStorageLocation
 */
export interface AzureFileStorageLocation {
  /**
   * @schema #/definitions/AzureFileStorageLocation#type
   */
  readonly type: AzureFileStorageLocationType;

}

/**
 * The location of Amazon S3 Compatible dataset.
 *
 * @schema #/definitions/AmazonS3CompatibleLocation
 */
export interface AmazonS3CompatibleLocation {
  /**
   * Specify the bucketName of Amazon S3 Compatible. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/AmazonS3CompatibleLocation#bucketName
   */
  readonly bucketName?: AmazonS3CompatibleLocationBucketName;

  /**
   * @schema #/definitions/AmazonS3CompatibleLocation#type
   */
  readonly type: AmazonS3CompatibleLocationType;

  /**
   * Specify the version of Amazon S3 Compatible. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleLocation#version
   */
  readonly version?: AmazonS3CompatibleLocationVersion;

}

/**
 * The location of Oracle Cloud Storage dataset.
 *
 * @schema #/definitions/OracleCloudStorageLocation
 */
export interface OracleCloudStorageLocation {
  /**
   * Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/OracleCloudStorageLocation#bucketName
   */
  readonly bucketName?: OracleCloudStorageLocationBucketName;

  /**
   * @schema #/definitions/OracleCloudStorageLocation#type
   */
  readonly type: OracleCloudStorageLocationType;

  /**
   * Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageLocation#version
   */
  readonly version?: OracleCloudStorageLocationVersion;

}

/**
 * The location of Google Cloud Storage dataset.
 *
 * @schema #/definitions/GoogleCloudStorageLocation
 */
export interface GoogleCloudStorageLocation {
  /**
   * Specify the bucketName of Google Cloud Storage. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/GoogleCloudStorageLocation#bucketName
   */
  readonly bucketName?: GoogleCloudStorageLocationBucketName;

  /**
   * @schema #/definitions/GoogleCloudStorageLocation#type
   */
  readonly type: GoogleCloudStorageLocationType;

  /**
   * Specify the version of Google Cloud Storage. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageLocation#version
   */
  readonly version?: GoogleCloudStorageLocationVersion;

}

/**
 * The location of ftp server dataset.
 *
 * @schema #/definitions/FtpServerLocation
 */
export interface FtpServerLocation {
  /**
   * @schema #/definitions/FtpServerLocation#type
   */
  readonly type: FtpServerLocationType;

}

/**
 * The location of SFTP dataset.
 *
 * @schema #/definitions/SftpLocation
 */
export interface SftpLocation {
  /**
   * @schema #/definitions/SftpLocation#type
   */
  readonly type: SftpLocationType;

}

/**
 * The location of http server.
 *
 * @schema #/definitions/HttpServerLocation
 */
export interface HttpServerLocation {
  /**
   * Specify the relativeUrl of http server. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/HttpServerLocation#relativeUrl
   */
  readonly relativeUrl?: HttpServerLocationRelativeUrl;

  /**
   * @schema #/definitions/HttpServerLocation#type
   */
  readonly type: HttpServerLocationType;

}

/**
 * The location of HDFS.
 *
 * @schema #/definitions/HdfsLocation
 */
export interface HdfsLocation {
  /**
   * @schema #/definitions/HdfsLocation#type
   */
  readonly type: HdfsLocationType;

}

/**
 * @schema #/definitions/integrationRuntimeComputePropertiesAdditionalProperties
 */
export interface IntegrationRuntimeComputePropertiesAdditionalProperties {
}

/**
 * Data flow properties for managed integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeDataFlowProperties
 */
export interface IntegrationRuntimeDataFlowProperties {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/IntegrationRuntimeDataFlowProperties#additionalProperties
   */
  readonly additionalProperties?: IntegrationRuntimeDataFlowPropertiesAdditionalProperties;

  /**
   * Compute type of the cluster which will execute data flow job.
   *
   * @schema #/definitions/IntegrationRuntimeDataFlowProperties#computeType
   */
  readonly computeType?: IntegrationRuntimeDataFlowPropertiesComputeType;

  /**
   * Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272.
   *
   * @schema #/definitions/IntegrationRuntimeDataFlowProperties#coreCount
   */
  readonly coreCount?: number;

  /**
   * Time to live (in minutes) setting of the cluster which will execute data flow job.
   *
   * @schema #/definitions/IntegrationRuntimeDataFlowProperties#timeToLive
   */
  readonly timeToLive?: number;

}

/**
 * VNet properties for managed integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeVNetProperties
 */
export interface IntegrationRuntimeVNetProperties {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/IntegrationRuntimeVNetProperties#additionalProperties
   */
  readonly additionalProperties?: IntegrationRuntimeVNetPropertiesAdditionalProperties;

  /**
   * Resource IDs of the public IP addresses that this integration runtime will use.
   *
   * @schema #/definitions/IntegrationRuntimeVNetProperties#publicIPs
   */
  readonly publicIPs?: string[];

  /**
   * The name of the subnet this integration runtime will join.
   *
   * @schema #/definitions/IntegrationRuntimeVNetProperties#subnet
   */
  readonly subnet?: string;

  /**
   * The ID of the VNet that this integration runtime will join.
   *
   * @schema #/definitions/IntegrationRuntimeVNetProperties#vNetId
   */
  readonly vNetId?: string;

}

/**
 * @schema #/definitions/integrationRuntimeSsisPropertiesAdditionalProperties
 */
export interface IntegrationRuntimeSsisPropertiesAdditionalProperties {
}

/**
 * Catalog information for managed dedicated integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo
 */
export interface IntegrationRuntimeSsisCatalogInfo {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#additionalProperties
   */
  readonly additionalProperties?: IntegrationRuntimeSsisCatalogInfoAdditionalProperties;

  /**
   * Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#catalogAdminPassword
   */
  readonly catalogAdminPassword?: SecureString;

  /**
   * The administrator user name of catalog database.
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#catalogAdminUserName
   */
  readonly catalogAdminUserName?: string;

  /**
   * The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/.
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#catalogPricingTier
   */
  readonly catalogPricingTier?: IntegrationRuntimeSsisCatalogInfoCatalogPricingTier;

  /**
   * The catalog database server URL.
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#catalogServerEndpoint
   */
  readonly catalogServerEndpoint?: string;

  /**
   * The dual standby pair name of Azure-SSIS Integration Runtimes to support SSISDB failover.
   *
   * @schema #/definitions/IntegrationRuntimeSsisCatalogInfo#dualStandbyPairName
   */
  readonly dualStandbyPairName?: string;

}

/**
 * Custom setup script properties for a managed dedicated integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeCustomSetupScriptProperties
 */
export interface IntegrationRuntimeCustomSetupScriptProperties {
  /**
   * The URI of the Azure blob container that contains the custom setup script.
   *
   * @schema #/definitions/IntegrationRuntimeCustomSetupScriptProperties#blobContainerUri
   */
  readonly blobContainerUri?: string;

  /**
   * Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
   *
   * @schema #/definitions/IntegrationRuntimeCustomSetupScriptProperties#sasToken
   */
  readonly sasToken?: SecureString;

}

/**
 * Data proxy properties for a managed dedicated integration runtime.
 *
 * @schema #/definitions/IntegrationRuntimeDataProxyProperties
 */
export interface IntegrationRuntimeDataProxyProperties {
  /**
   * The entity reference.
   *
   * @schema #/definitions/IntegrationRuntimeDataProxyProperties#connectVia
   */
  readonly connectVia?: EntityReference;

  /**
   * The path to contain the staged data in the Blob storage.
   *
   * @schema #/definitions/IntegrationRuntimeDataProxyProperties#path
   */
  readonly path?: string;

  /**
   * The entity reference.
   *
   * @schema #/definitions/IntegrationRuntimeDataProxyProperties#stagingLinkedService
   */
  readonly stagingLinkedService?: EntityReference;

}

export enum IntegrationRuntimeSsisPropertiesEdition {
  STANDARD = 'Standard',
  ENTERPRISE = 'Enterprise',
}

/**
 * The base definition of the custom setup.
 *
 * @schema #/definitions/CustomSetupBase
 */
export class CustomSetupBase {
  public static fromCmdkeySetup(value: CmdkeySetup): CustomSetupBase {
    return new CustomSetupBase(value);
  }
  public static fromEnvironmentVariableSetup(value: EnvironmentVariableSetup): CustomSetupBase {
    return new CustomSetupBase(value);
  }
  public static fromComponentSetup(value: ComponentSetup): CustomSetupBase {
    return new CustomSetupBase(value);
  }
  public static fromAzPowerShellSetup(value: AzPowerShellSetup): CustomSetupBase {
    return new CustomSetupBase(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum IntegrationRuntimeSsisPropertiesLicenseType {
  BASE_PRICE = 'BasePrice',
  LICENSE_INCLUDED = 'LicenseIncluded',
}

/**
 * The entity reference.
 *
 * @schema #/definitions/EntityReference
 */
export interface EntityReference {
  /**
   * The name of this referenced entity.
   *
   * @schema #/definitions/EntityReference#referenceName
   */
  readonly referenceName?: string;

  /**
   * The type of this referenced entity.
   *
   * @schema #/definitions/EntityReference#type
   */
  readonly type?: EntityReferenceType;

}

/**
 * Package store for the SSIS integration runtime.
 *
 * @schema #/definitions/PackageStore
 */
export interface PackageStore {
  /**
   * The name of the package store
   *
   * @schema #/definitions/PackageStore#name
   */
  readonly name: string;

  /**
   * The entity reference.
   *
   * @schema #/definitions/PackageStore#packageStoreLinkedService
   */
  readonly packageStoreLinkedService: EntityReference;

}

/**
 * The key authorization type integration runtime.
 *
 * @schema #/definitions/LinkedIntegrationRuntimeKeyAuthorization
 */
export interface LinkedIntegrationRuntimeKeyAuthorization {
  /**
   * @schema #/definitions/LinkedIntegrationRuntimeKeyAuthorization#authorizationType
   */
  readonly authorizationType: LinkedIntegrationRuntimeKeyAuthorizationAuthorizationType;

  /**
   * Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
   *
   * @schema #/definitions/LinkedIntegrationRuntimeKeyAuthorization#key
   */
  readonly key: SecureString;

}

/**
 * The role based access control (RBAC) authorization type integration runtime.
 *
 * @schema #/definitions/LinkedIntegrationRuntimeRbacAuthorization
 */
export interface LinkedIntegrationRuntimeRbacAuthorization {
  /**
   * @schema #/definitions/LinkedIntegrationRuntimeRbacAuthorization#authorizationType
   */
  readonly authorizationType: LinkedIntegrationRuntimeRbacAuthorizationAuthorizationType;

  /**
   * The resource identifier of the integration runtime to be shared.
   *
   * @schema #/definitions/LinkedIntegrationRuntimeRbacAuthorization#resourceId
   */
  readonly resourceId: string;

}

/**
 * The name of the secret in Azure Key Vault. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureKeyVaultSecretReferenceSecretName
 */
export interface AzureKeyVaultSecretReferenceSecretName {
}

/**
 * The version of the secret in Azure Key Vault. The default value is the latest version of the secret. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureKeyVaultSecretReferenceSecretVersion
 */
export interface AzureKeyVaultSecretReferenceSecretVersion {
}

export enum AzureKeyVaultSecretReferenceType {
  AZURE_KEY_VAULT_SECRET = 'AzureKeyVaultSecret',
}

/**
 * Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
 *
 * @schema #/definitions/SecureString
 */
export interface SecureString {
  /**
   * @schema #/definitions/SecureString#type
   */
  readonly type: SecureStringType;

  /**
   * Value of secure string.
   *
   * @schema #/definitions/SecureString#value
   */
  readonly value: string;

}

export enum SqlAlwaysEncryptedPropertiesAlwaysEncryptedAkvAuthType {
  SERVICE_PRINCIPAL = 'ServicePrincipal',
  MANAGED_IDENTITY = 'ManagedIdentity',
}

/**
 * The client ID of the application in Azure Active Directory used for Azure Key Vault authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlAlwaysEncryptedPropertiesServicePrincipalId
 */
export interface SqlAlwaysEncryptedPropertiesServicePrincipalId {
}

export enum WebAnonymousAuthenticationAuthenticationType {
  ANONYMOUS = 'Anonymous',
}

export enum WebBasicAuthenticationAuthenticationType {
  BASIC = 'Basic',
}

/**
 * User name for Basic authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webBasicAuthenticationUsername
 */
export interface WebBasicAuthenticationUsername {
}

export enum WebClientCertificateAuthenticationAuthenticationType {
  CLIENT_CERTIFICATE = 'ClientCertificate',
}

/**
 * The node types on which the script action should be executed.
 *
 * @schema #/definitions/scriptActionRoles
 */
export interface ScriptActionRoles {
}

export enum ExecutePipelineActivityType {
  EXECUTE_PIPELINE = 'ExecutePipeline',
}

/**
 * Execute pipeline activity properties.
 *
 * @schema #/definitions/ExecutePipelineActivityTypeProperties
 */
export interface ExecutePipelineActivityTypeProperties {
  /**
   * An object mapping parameter names to argument values.
   *
   * @schema #/definitions/ExecutePipelineActivityTypeProperties#parameters
   */
  readonly parameters?: ExecutePipelineActivityTypePropertiesParameters;

  /**
   * Pipeline reference type.
   *
   * @schema #/definitions/ExecutePipelineActivityTypeProperties#pipeline
   */
  readonly pipeline: PipelineReference;

  /**
   * Defines whether activity execution will wait for the dependent pipeline execution to finish. Default is false.
   *
   * @default false.
   * @schema #/definitions/ExecutePipelineActivityTypeProperties#waitOnCompletion
   */
  readonly waitOnCompletion?: boolean;

}

export enum IfConditionActivityType {
  IF_CONDITION = 'IfCondition',
}

/**
 * IfCondition activity properties.
 *
 * @schema #/definitions/IfConditionActivityTypeProperties
 */
export interface IfConditionActivityTypeProperties {
  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/IfConditionActivityTypeProperties#expression
   */
  readonly expression: Expression;

  /**
   * List of activities to execute if expression is evaluated to false. This is an optional property and if not provided, the activity will exit without any action.
   *
   * @schema #/definitions/IfConditionActivityTypeProperties#ifFalseActivities
   */
  readonly ifFalseActivities?: Activity[];

  /**
   * List of activities to execute if expression is evaluated to true. This is an optional property and if not provided, the activity will exit without any action.
   *
   * @schema #/definitions/IfConditionActivityTypeProperties#ifTrueActivities
   */
  readonly ifTrueActivities?: Activity[];

}

export enum SwitchActivityType {
  SWITCH = 'Switch',
}

/**
 * Switch activity properties.
 *
 * @schema #/definitions/SwitchActivityTypeProperties
 */
export interface SwitchActivityTypeProperties {
  /**
   * List of cases that correspond to expected values of the 'on' property. This is an optional property and if not provided, the activity will execute activities provided in defaultActivities.
   *
   * @schema #/definitions/SwitchActivityTypeProperties#cases
   */
  readonly cases?: SwitchCase[];

  /**
   * List of activities to execute if no case condition is satisfied. This is an optional property and if not provided, the activity will exit without any action.
   *
   * @schema #/definitions/SwitchActivityTypeProperties#defaultActivities
   */
  readonly defaultActivities?: Activity[];

  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/SwitchActivityTypeProperties#on
   */
  readonly on: Expression;

}

export enum ForEachActivityType {
  FOR_EACH = 'ForEach',
}

/**
 * ForEach activity properties.
 *
 * @schema #/definitions/ForEachActivityTypeProperties
 */
export interface ForEachActivityTypeProperties {
  /**
   * List of activities to execute .
   *
   * @schema #/definitions/ForEachActivityTypeProperties#activities
   */
  readonly activities: Activity[];

  /**
   * Batch count to be used for controlling the number of parallel execution (when isSequential is set to false).
   *
   * @schema #/definitions/ForEachActivityTypeProperties#batchCount
   */
  readonly batchCount?: number;

  /**
   * Should the loop be executed in sequence or in parallel (max 50)
   *
   * @schema #/definitions/ForEachActivityTypeProperties#isSequential
   */
  readonly isSequential?: boolean;

  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/ForEachActivityTypeProperties#items
   */
  readonly items: Expression;

}

export enum WaitActivityType {
  WAIT = 'Wait',
}

/**
 * Wait activity properties.
 *
 * @schema #/definitions/WaitActivityTypeProperties
 */
export interface WaitActivityTypeProperties {
  /**
   * Duration in seconds.
   *
   * @schema #/definitions/WaitActivityTypeProperties#waitTimeInSeconds
   */
  readonly waitTimeInSeconds: WaitActivityTypePropertiesWaitTimeInSeconds;

}

export enum UntilActivityType {
  UNTIL = 'Until',
}

/**
 * Until activity properties.
 *
 * @schema #/definitions/UntilActivityTypeProperties
 */
export interface UntilActivityTypeProperties {
  /**
   * List of activities to execute.
   *
   * @schema #/definitions/UntilActivityTypeProperties#activities
   */
  readonly activities: Activity[];

  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/UntilActivityTypeProperties#expression
   */
  readonly expression: Expression;

  /**
   * Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/UntilActivityTypeProperties#timeout
   */
  readonly timeout?: UntilActivityTypePropertiesTimeout;

}

export enum ValidationActivityType {
  VALIDATION = 'Validation',
}

/**
 * Validation activity properties.
 *
 * @schema #/definitions/ValidationActivityTypeProperties
 */
export interface ValidationActivityTypeProperties {
  /**
   * Can be used if dataset points to a folder. If set to true, the folder must have at least one file. If set to false, the folder must be empty. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ValidationActivityTypeProperties#childItems
   */
  readonly childItems?: ValidationActivityTypePropertiesChildItems;

  /**
   * Dataset reference type.
   *
   * @schema #/definitions/ValidationActivityTypeProperties#dataset
   */
  readonly dataset: DatasetReference;

  /**
   * Can be used if dataset points to a file. The file must be greater than or equal in size to the value specified. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/ValidationActivityTypeProperties#minimumSize
   */
  readonly minimumSize?: ValidationActivityTypePropertiesMinimumSize;

  /**
   * A delay in seconds between validation attempts. If no value is specified, 10 seconds will be used as the default. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/ValidationActivityTypeProperties#sleep
   */
  readonly sleep?: ValidationActivityTypePropertiesSleep;

  /**
   * Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/ValidationActivityTypeProperties#timeout
   */
  readonly timeout?: ValidationActivityTypePropertiesTimeout;

}

export enum FilterActivityType {
  FILTER = 'Filter',
}

/**
 * Filter activity properties.
 *
 * @schema #/definitions/FilterActivityTypeProperties
 */
export interface FilterActivityTypeProperties {
  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/FilterActivityTypeProperties#condition
   */
  readonly condition: Expression;

  /**
   * Azure Data Factory expression definition.
   *
   * @schema #/definitions/FilterActivityTypeProperties#items
   */
  readonly items: Expression;

}

export enum SetVariableActivityType {
  SET_VARIABLE = 'SetVariable',
}

/**
 * SetVariable activity properties.
 *
 * @schema #/definitions/SetVariableActivityTypeProperties
 */
export interface SetVariableActivityTypeProperties {
  /**
   * Value to be set. Could be a static value or Expression
   *
   * @schema #/definitions/SetVariableActivityTypeProperties#value
   */
  readonly value?: SetVariableActivityTypePropertiesValue;

  /**
   * Name of the variable whose value needs to be set.
   *
   * @schema #/definitions/SetVariableActivityTypeProperties#variableName
   */
  readonly variableName?: string;

}

export enum AppendVariableActivityType {
  APPEND_VARIABLE = 'AppendVariable',
}

/**
 * AppendVariable activity properties.
 *
 * @schema #/definitions/AppendVariableActivityTypeProperties
 */
export interface AppendVariableActivityTypeProperties {
  /**
   * Value to be appended. Could be a static value or Expression
   *
   * @schema #/definitions/AppendVariableActivityTypeProperties#value
   */
  readonly value?: AppendVariableActivityTypePropertiesValue;

  /**
   * Name of the variable whose value needs to be appended to.
   *
   * @schema #/definitions/AppendVariableActivityTypeProperties#variableName
   */
  readonly variableName?: string;

}

export enum WebHookActivityType {
  WEB_HOOK = 'WebHook',
}

/**
 * WebHook activity type properties.
 *
 * @schema #/definitions/WebHookActivityTypeProperties
 */
export interface WebHookActivityTypeProperties {
  /**
   * Web activity authentication properties.
   *
   * @schema #/definitions/WebHookActivityTypeProperties#authentication
   */
  readonly authentication?: WebActivityAuthentication;

  /**
   * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebHookActivityTypeProperties#body
   */
  readonly body?: WebHookActivityTypePropertiesBody;

  /**
   * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebHookActivityTypeProperties#headers
   */
  readonly headers?: WebHookActivityTypePropertiesHeaders;

  /**
   * Rest API method for target endpoint.
   *
   * @schema #/definitions/WebHookActivityTypeProperties#method
   */
  readonly method: WebHookActivityTypePropertiesMethod;

  /**
   * When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode >= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/WebHookActivityTypeProperties#reportStatusOnCallBack
   */
  readonly reportStatusOnCallBack?: WebHookActivityTypePropertiesReportStatusOnCallBack;

  /**
   * The timeout within which the webhook should be called back. If there is no value specified, it defaults to 10 minutes. Type: string. Pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/WebHookActivityTypeProperties#timeout
   */
  readonly timeout?: string;

  /**
   * WebHook activity target endpoint and path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebHookActivityTypeProperties#url
   */
  readonly url: WebHookActivityTypePropertiesUrl;

}

export enum CopyActivityType {
  COPY = 'Copy',
}

/**
 * Copy activity properties.
 *
 * @schema #/definitions/CopyActivityTypeProperties
 */
export interface CopyActivityTypeProperties {
  /**
   * Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/CopyActivityTypeProperties#dataIntegrationUnits
   */
  readonly dataIntegrationUnits?: CopyActivityTypePropertiesDataIntegrationUnits;

  /**
   * Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/CopyActivityTypeProperties#enableSkipIncompatibleRow
   */
  readonly enableSkipIncompatibleRow?: CopyActivityTypePropertiesEnableSkipIncompatibleRow;

  /**
   * Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/CopyActivityTypeProperties#enableStaging
   */
  readonly enableStaging?: CopyActivityTypePropertiesEnableStaging;

  /**
   * Log settings.
   *
   * @schema #/definitions/CopyActivityTypeProperties#logSettings
   */
  readonly logSettings?: LogSettings;

  /**
   * (Deprecated. Please use LogSettings) Log storage settings.
   *
   * @schema #/definitions/CopyActivityTypeProperties#logStorageSettings
   */
  readonly logStorageSettings?: LogStorageSettings;

  /**
   * Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/CopyActivityTypeProperties#parallelCopies
   */
  readonly parallelCopies?: CopyActivityTypePropertiesParallelCopies;

  /**
   * Preserve rules.
   *
   * @schema #/definitions/CopyActivityTypeProperties#preserve
   */
  readonly preserve?: CopyActivityTypePropertiesPreserve[];

  /**
   * Preserve Rules.
   *
   * @schema #/definitions/CopyActivityTypeProperties#preserveRules
   */
  readonly preserveRules?: CopyActivityTypePropertiesPreserveRules[];

  /**
   * Redirect incompatible row settings
   *
   * @schema #/definitions/CopyActivityTypeProperties#redirectIncompatibleRowSettings
   */
  readonly redirectIncompatibleRowSettings?: RedirectIncompatibleRowSettings;

  /**
   * A copy activity sink.
   *
   * @schema #/definitions/CopyActivityTypeProperties#sink
   */
  readonly sink: CopySink;

  /**
   * Skip error file.
   *
   * @schema #/definitions/CopyActivityTypeProperties#skipErrorFile
   */
  readonly skipErrorFile?: SkipErrorFile;

  /**
   * A copy activity source.
   *
   * @schema #/definitions/CopyActivityTypeProperties#source
   */
  readonly source: CopySource;

  /**
   * Staging settings.
   *
   * @schema #/definitions/CopyActivityTypeProperties#stagingSettings
   */
  readonly stagingSettings?: StagingSettings;

  /**
   * Copy activity translator. If not specified, tabular translator is used.
   *
   * @schema #/definitions/CopyActivityTypeProperties#translator
   */
  readonly translator?: CopyActivityTypePropertiesTranslator;

  /**
   * Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/CopyActivityTypeProperties#validateDataConsistency
   */
  readonly validateDataConsistency?: CopyActivityTypePropertiesValidateDataConsistency;

}

export enum HdInsightHiveActivityType {
  HD_INSIGHT_HIVE = 'HDInsightHive',
}

/**
 * HDInsight Hive activity properties.
 *
 * @schema #/definitions/HDInsightHiveActivityTypeProperties
 */
export interface HdInsightHiveActivityTypeProperties {
  /**
   * User specified arguments to HDInsightActivity.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#arguments
   */
  readonly arguments?: HdInsightHiveActivityTypePropertiesArguments[];

  /**
   * Allows user to specify defines for Hive job request.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#defines
   */
  readonly defines?: HdInsightHiveActivityTypePropertiesDefines;

  /**
   * Debug info option.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#getDebugInfo
   */
  readonly getDebugInfo?: HdInsightHiveActivityTypePropertiesGetDebugInfo;

  /**
   * Query timeout value (in minutes).  Effective when the HDInsight cluster is with ESP (Enterprise Security Package)
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#queryTimeout
   */
  readonly queryTimeout?: number;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#scriptLinkedService
   */
  readonly scriptLinkedService?: LinkedServiceReference;

  /**
   * Script path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#scriptPath
   */
  readonly scriptPath?: HdInsightHiveActivityTypePropertiesScriptPath;

  /**
   * Storage linked service references.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#storageLinkedServices
   */
  readonly storageLinkedServices?: LinkedServiceReference[];

  /**
   * User specified arguments under hivevar namespace.
   *
   * @schema #/definitions/HDInsightHiveActivityTypeProperties#variables
   */
  readonly variables?: HdInsightHiveActivityTypePropertiesVariables[];

}

export enum HdInsightPigActivityType {
  HD_INSIGHT_PIG = 'HDInsightPig',
}

/**
 * HDInsight Pig activity properties.
 *
 * @schema #/definitions/HDInsightPigActivityTypeProperties
 */
export interface HdInsightPigActivityTypeProperties {
  /**
   * User specified arguments to HDInsightActivity. Type: array (or Expression with resultType array).
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#arguments
   */
  readonly arguments?: HdInsightPigActivityTypePropertiesArguments;

  /**
   * Allows user to specify defines for Pig job request.
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#defines
   */
  readonly defines?: HdInsightPigActivityTypePropertiesDefines;

  /**
   * Debug info option.
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#getDebugInfo
   */
  readonly getDebugInfo?: HdInsightPigActivityTypePropertiesGetDebugInfo;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#scriptLinkedService
   */
  readonly scriptLinkedService?: LinkedServiceReference;

  /**
   * Script path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#scriptPath
   */
  readonly scriptPath?: HdInsightPigActivityTypePropertiesScriptPath;

  /**
   * Storage linked service references.
   *
   * @schema #/definitions/HDInsightPigActivityTypeProperties#storageLinkedServices
   */
  readonly storageLinkedServices?: LinkedServiceReference[];

}

export enum HdInsightMapReduceActivityType {
  HD_INSIGHT_MAP_REDUCE = 'HDInsightMapReduce',
}

/**
 * HDInsight MapReduce activity properties.
 *
 * @schema #/definitions/HDInsightMapReduceActivityTypeProperties
 */
export interface HdInsightMapReduceActivityTypeProperties {
  /**
   * User specified arguments to HDInsightActivity.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#arguments
   */
  readonly arguments?: HdInsightMapReduceActivityTypePropertiesArguments[];

  /**
   * Class name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#className
   */
  readonly className: HdInsightMapReduceActivityTypePropertiesClassName;

  /**
   * Allows user to specify defines for the MapReduce job request.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#defines
   */
  readonly defines?: HdInsightMapReduceActivityTypePropertiesDefines;

  /**
   * Debug info option.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#getDebugInfo
   */
  readonly getDebugInfo?: HdInsightMapReduceActivityTypePropertiesGetDebugInfo;

  /**
   * Jar path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#jarFilePath
   */
  readonly jarFilePath: HdInsightMapReduceActivityTypePropertiesJarFilePath;

  /**
   * Jar libs.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#jarLibs
   */
  readonly jarLibs?: HdInsightMapReduceActivityTypePropertiesJarLibs[];

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#jarLinkedService
   */
  readonly jarLinkedService?: LinkedServiceReference;

  /**
   * Storage linked service references.
   *
   * @schema #/definitions/HDInsightMapReduceActivityTypeProperties#storageLinkedServices
   */
  readonly storageLinkedServices?: LinkedServiceReference[];

}

export enum HdInsightStreamingActivityType {
  HD_INSIGHT_STREAMING = 'HDInsightStreaming',
}

/**
 * HDInsight streaming activity properties.
 *
 * @schema #/definitions/HDInsightStreamingActivityTypeProperties
 */
export interface HdInsightStreamingActivityTypeProperties {
  /**
   * User specified arguments to HDInsightActivity.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#arguments
   */
  readonly arguments?: HdInsightStreamingActivityTypePropertiesArguments[];

  /**
   * Combiner executable name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#combiner
   */
  readonly combiner?: HdInsightStreamingActivityTypePropertiesCombiner;

  /**
   * Command line environment values.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#commandEnvironment
   */
  readonly commandEnvironment?: HdInsightStreamingActivityTypePropertiesCommandEnvironment[];

  /**
   * Allows user to specify defines for streaming job request.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#defines
   */
  readonly defines?: HdInsightStreamingActivityTypePropertiesDefines;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#fileLinkedService
   */
  readonly fileLinkedService?: LinkedServiceReference;

  /**
   * Paths to streaming job files. Can be directories.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#filePaths
   */
  readonly filePaths: HdInsightStreamingActivityTypePropertiesFilePaths[];

  /**
   * Debug info option.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#getDebugInfo
   */
  readonly getDebugInfo?: HdInsightStreamingActivityTypePropertiesGetDebugInfo;

  /**
   * Input blob path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#input
   */
  readonly input: HdInsightStreamingActivityTypePropertiesInput;

  /**
   * Mapper executable name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#mapper
   */
  readonly mapper: HdInsightStreamingActivityTypePropertiesMapper;

  /**
   * Output blob path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#output
   */
  readonly output: HdInsightStreamingActivityTypePropertiesOutput;

  /**
   * Reducer executable name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#reducer
   */
  readonly reducer: HdInsightStreamingActivityTypePropertiesReducer;

  /**
   * Storage linked service references.
   *
   * @schema #/definitions/HDInsightStreamingActivityTypeProperties#storageLinkedServices
   */
  readonly storageLinkedServices?: LinkedServiceReference[];

}

export enum HdInsightSparkActivityType {
  HD_INSIGHT_SPARK = 'HDInsightSpark',
}

/**
 * HDInsight spark activity properties.
 *
 * @schema #/definitions/HDInsightSparkActivityTypeProperties
 */
export interface HdInsightSparkActivityTypeProperties {
  /**
   * The user-specified arguments to HDInsightSparkActivity.
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#arguments
   */
  readonly arguments?: HdInsightSparkActivityTypePropertiesArguments[];

  /**
   * The application's Java/Spark main class.
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#className
   */
  readonly className?: string;

  /**
   * The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#entryFilePath
   */
  readonly entryFilePath: HdInsightSparkActivityTypePropertiesEntryFilePath;

  /**
   * Debug info option.
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#getDebugInfo
   */
  readonly getDebugInfo?: HdInsightSparkActivityTypePropertiesGetDebugInfo;

  /**
   * The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#proxyUser
   */
  readonly proxyUser?: HdInsightSparkActivityTypePropertiesProxyUser;

  /**
   * The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#rootPath
   */
  readonly rootPath: HdInsightSparkActivityTypePropertiesRootPath;

  /**
   * Spark configuration property.
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#sparkConfig
   */
  readonly sparkConfig?: HdInsightSparkActivityTypePropertiesSparkConfig;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/HDInsightSparkActivityTypeProperties#sparkJobLinkedService
   */
  readonly sparkJobLinkedService?: LinkedServiceReference;

}

export enum ExecuteSsisPackageActivityType {
  EXECUTE_SSIS_PACKAGE = 'ExecuteSSISPackage',
}

/**
 * Execute SSIS package activity properties.
 *
 * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties
 */
export interface ExecuteSsisPackageActivityTypeProperties {
  /**
   * Integration runtime reference type.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#connectVia
   */
  readonly connectVia: IntegrationRuntimeReference;

  /**
   * The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#environmentPath
   */
  readonly environmentPath?: ExecuteSsisPackageActivityTypePropertiesEnvironmentPath;

  /**
   * SSIS package execution credential.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#executionCredential
   */
  readonly executionCredential?: SsisExecutionCredential;

  /**
   * The logging level of SSIS package execution. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#loggingLevel
   */
  readonly loggingLevel?: ExecuteSsisPackageActivityTypePropertiesLoggingLevel;

  /**
   * SSIS package execution log location
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#logLocation
   */
  readonly logLocation?: SsisLogLocation;

  /**
   * The package level connection managers to execute the SSIS package.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#packageConnectionManagers
   */
  readonly packageConnectionManagers?: ExecuteSsisPackageActivityTypePropertiesPackageConnectionManagers;

  /**
   * SSIS package location.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#packageLocation
   */
  readonly packageLocation: SsisPackageLocation;

  /**
   * The package level parameters to execute the SSIS package.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#packageParameters
   */
  readonly packageParameters?: ExecuteSsisPackageActivityTypePropertiesPackageParameters;

  /**
   * The project level connection managers to execute the SSIS package.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#projectConnectionManagers
   */
  readonly projectConnectionManagers?: ExecuteSsisPackageActivityTypePropertiesProjectConnectionManagers;

  /**
   * The project level parameters to execute the SSIS package.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#projectParameters
   */
  readonly projectParameters?: ExecuteSsisPackageActivityTypePropertiesProjectParameters;

  /**
   * The property overrides to execute the SSIS package.
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#propertyOverrides
   */
  readonly propertyOverrides?: ExecuteSsisPackageActivityTypePropertiesPropertyOverrides;

  /**
   * Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ExecuteSSISPackageActivityTypeProperties#runtime
   */
  readonly runtime?: ExecuteSsisPackageActivityTypePropertiesRuntime;

}

export enum CustomActivityType {
  CUSTOM = 'Custom',
}

/**
 * Custom activity properties.
 *
 * @schema #/definitions/CustomActivityTypeProperties
 */
export interface CustomActivityTypeProperties {
  /**
   * Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double).
   *
   * @schema #/definitions/CustomActivityTypeProperties#autoUserSpecification
   */
  readonly autoUserSpecification?: CustomActivityTypePropertiesAutoUserSpecification;

  /**
   * Command for custom activity Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CustomActivityTypeProperties#command
   */
  readonly command: CustomActivityTypePropertiesCommand;

  /**
   * User defined property bag. There is no restriction on the keys or values that can be used. The user specified custom activity has the full responsibility to consume and interpret the content defined.
   *
   * @schema #/definitions/CustomActivityTypeProperties#extendedProperties
   */
  readonly extendedProperties?: CustomActivityTypePropertiesExtendedProperties;

  /**
   * Folder path for resource files Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CustomActivityTypeProperties#folderPath
   */
  readonly folderPath?: CustomActivityTypePropertiesFolderPath;

  /**
   * Reference objects for custom activity
   *
   * @schema #/definitions/CustomActivityTypeProperties#referenceObjects
   */
  readonly referenceObjects?: CustomActivityReferenceObject;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/CustomActivityTypeProperties#resourceLinkedService
   */
  readonly resourceLinkedService?: LinkedServiceReference;

  /**
   * The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double).
   *
   * @schema #/definitions/CustomActivityTypeProperties#retentionTimeInDays
   */
  readonly retentionTimeInDays?: CustomActivityTypePropertiesRetentionTimeInDays;

}

export enum SqlServerStoredProcedureActivityType {
  SQL_SERVER_STORED_PROCEDURE = 'SqlServerStoredProcedure',
}

/**
 * SQL stored procedure activity properties.
 *
 * @schema #/definitions/SqlServerStoredProcedureActivityTypeProperties
 */
export interface SqlServerStoredProcedureActivityTypeProperties {
  /**
   * Stored procedure name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerStoredProcedureActivityTypeProperties#storedProcedureName
   */
  readonly storedProcedureName: SqlServerStoredProcedureActivityTypePropertiesStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
   *
   * @schema #/definitions/SqlServerStoredProcedureActivityTypeProperties#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlServerStoredProcedureActivityTypePropertiesStoredProcedureParameters;

}

export enum DeleteActivityType {
  DELETE = 'Delete',
}

/**
 * Delete activity properties.
 *
 * @schema #/definitions/DeleteActivityTypeProperties
 */
export interface DeleteActivityTypeProperties {
  /**
   * Dataset reference type.
   *
   * @schema #/definitions/DeleteActivityTypeProperties#dataset
   */
  readonly dataset: DatasetReference;

  /**
   * Whether to record detailed logs of delete-activity execution. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/DeleteActivityTypeProperties#enableLogging
   */
  readonly enableLogging?: DeleteActivityTypePropertiesEnableLogging;

  /**
   * (Deprecated. Please use LogSettings) Log storage settings.
   *
   * @schema #/definitions/DeleteActivityTypeProperties#logStorageSettings
   */
  readonly logStorageSettings?: LogStorageSettings;

  /**
   * The max concurrent connections to connect data source at the same time.
   *
   * @schema #/definitions/DeleteActivityTypeProperties#maxConcurrentConnections
   */
  readonly maxConcurrentConnections?: number;

  /**
   * If true, files or sub-folders under current folder path will be deleted recursively. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/DeleteActivityTypeProperties#recursive
   */
  readonly recursive?: DeleteActivityTypePropertiesRecursive;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/DeleteActivityTypeProperties#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

}

export enum AzureDataExplorerCommandActivityType {
  AZURE_DATA_EXPLORER_COMMAND = 'AzureDataExplorerCommand',
}

/**
 * Azure Data Explorer command activity properties.
 *
 * @schema #/definitions/AzureDataExplorerCommandActivityTypeProperties
 */
export interface AzureDataExplorerCommandActivityTypeProperties {
  /**
   * A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerCommandActivityTypeProperties#command
   */
  readonly command: AzureDataExplorerCommandActivityTypePropertiesCommand;

  /**
   * Control command timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)
   *
   * @schema #/definitions/AzureDataExplorerCommandActivityTypeProperties#commandTimeout
   */
  readonly commandTimeout?: AzureDataExplorerCommandActivityTypePropertiesCommandTimeout;

}

export enum LookupActivityType {
  LOOKUP = 'Lookup',
}

/**
 * Lookup activity properties.
 *
 * @schema #/definitions/LookupActivityTypeProperties
 */
export interface LookupActivityTypeProperties {
  /**
   * Dataset reference type.
   *
   * @schema #/definitions/LookupActivityTypeProperties#dataset
   */
  readonly dataset: DatasetReference;

  /**
   * Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/LookupActivityTypeProperties#firstRowOnly
   */
  readonly firstRowOnly?: LookupActivityTypePropertiesFirstRowOnly;

  /**
   * A copy activity source.
   *
   * @schema #/definitions/LookupActivityTypeProperties#source
   */
  readonly source: CopySource;

}

export enum WebActivityType {
  WEB_ACTIVITY = 'WebActivity',
}

/**
 * Web activity type properties.
 *
 * @schema #/definitions/WebActivityTypeProperties
 */
export interface WebActivityTypeProperties {
  /**
   * Web activity authentication properties.
   *
   * @schema #/definitions/WebActivityTypeProperties#authentication
   */
  readonly authentication?: WebActivityAuthentication;

  /**
   * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityTypeProperties#body
   */
  readonly body?: WebActivityTypePropertiesBody;

  /**
   * Integration runtime reference type.
   *
   * @schema #/definitions/WebActivityTypeProperties#connectVia
   */
  readonly connectVia?: IntegrationRuntimeReference;

  /**
   * List of datasets passed to web endpoint.
   *
   * @schema #/definitions/WebActivityTypeProperties#datasets
   */
  readonly datasets?: DatasetReference[];

  /**
   * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityTypeProperties#headers
   */
  readonly headers?: WebActivityTypePropertiesHeaders;

  /**
   * List of linked services passed to web endpoint.
   *
   * @schema #/definitions/WebActivityTypeProperties#linkedServices
   */
  readonly linkedServices?: LinkedServiceReference[];

  /**
   * Rest API method for target endpoint.
   *
   * @schema #/definitions/WebActivityTypeProperties#method
   */
  readonly method: WebActivityTypePropertiesMethod;

  /**
   * Web activity target endpoint and path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityTypeProperties#url
   */
  readonly url: WebActivityTypePropertiesUrl;

}

export enum GetMetadataActivityType {
  GET_METADATA = 'GetMetadata',
}

/**
 * GetMetadata activity properties.
 *
 * @schema #/definitions/GetMetadataActivityTypeProperties
 */
export interface GetMetadataActivityTypeProperties {
  /**
   * Dataset reference type.
   *
   * @schema #/definitions/GetMetadataActivityTypeProperties#dataset
   */
  readonly dataset: DatasetReference;

  /**
   * Fields of metadata to get from dataset.
   *
   * @schema #/definitions/GetMetadataActivityTypeProperties#fieldList
   */
  readonly fieldList?: GetMetadataActivityTypePropertiesFieldList[];

  /**
   * Format read settings.
   *
   * @schema #/definitions/GetMetadataActivityTypeProperties#formatSettings
   */
  readonly formatSettings?: FormatReadSettings;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/GetMetadataActivityTypeProperties#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

}

export enum AzureMlBatchExecutionActivityType {
  AZURE_ML_BATCH_EXECUTION = 'AzureMLBatchExecution',
}

/**
 * Azure ML Batch Execution activity properties.
 *
 * @schema #/definitions/AzureMLBatchExecutionActivityTypeProperties
 */
export interface AzureMlBatchExecutionActivityTypeProperties {
  /**
   * Key,Value pairs to be passed to the Azure ML Batch Execution Service endpoint. Keys must match the names of web service parameters defined in the published Azure ML web service. Values will be passed in the GlobalParameters property of the Azure ML batch execution request.
   *
   * @schema #/definitions/AzureMLBatchExecutionActivityTypeProperties#globalParameters
   */
  readonly globalParameters?: AzureMlBatchExecutionActivityTypePropertiesGlobalParameters;

  /**
   * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Inputs to AzureMLWebServiceFile objects specifying the input Blob locations.. This information will be passed in the WebServiceInputs property of the Azure ML batch execution request.
   *
   * @schema #/definitions/AzureMLBatchExecutionActivityTypeProperties#webServiceInputs
   */
  readonly webServiceInputs?: AzureMlBatchExecutionActivityTypePropertiesWebServiceInputs;

  /**
   * Key,Value pairs, mapping the names of Azure ML endpoint's Web Service Outputs to AzureMLWebServiceFile objects specifying the output Blob locations. This information will be passed in the WebServiceOutputs property of the Azure ML batch execution request.
   *
   * @schema #/definitions/AzureMLBatchExecutionActivityTypeProperties#webServiceOutputs
   */
  readonly webServiceOutputs?: AzureMlBatchExecutionActivityTypePropertiesWebServiceOutputs;

}

export enum AzureMlUpdateResourceActivityType {
  AZURE_ML_UPDATE_RESOURCE = 'AzureMLUpdateResource',
}

/**
 * Azure ML Update Resource activity properties.
 *
 * @schema #/definitions/AzureMLUpdateResourceActivityTypeProperties
 */
export interface AzureMlUpdateResourceActivityTypeProperties {
  /**
   * The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLUpdateResourceActivityTypeProperties#trainedModelFilePath
   */
  readonly trainedModelFilePath: AzureMlUpdateResourceActivityTypePropertiesTrainedModelFilePath;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/AzureMLUpdateResourceActivityTypeProperties#trainedModelLinkedServiceName
   */
  readonly trainedModelLinkedServiceName: LinkedServiceReference;

  /**
   * Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLUpdateResourceActivityTypeProperties#trainedModelName
   */
  readonly trainedModelName: AzureMlUpdateResourceActivityTypePropertiesTrainedModelName;

}

export enum AzureMlExecutePipelineActivityType {
  AZURE_ML_EXECUTE_PIPELINE = 'AzureMLExecutePipeline',
}

/**
 * Azure ML Execute Pipeline activity properties.
 *
 * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties
 */
export interface AzureMlExecutePipelineActivityTypeProperties {
  /**
   * Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#continueOnStepFailure
   */
  readonly continueOnStepFailure?: AzureMlExecutePipelineActivityTypePropertiesContinueOnStepFailure;

  /**
   * Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#dataPathAssignments
   */
  readonly dataPathAssignments?: AzureMlExecutePipelineActivityTypePropertiesDataPathAssignments;

  /**
   * Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#experimentName
   */
  readonly experimentName?: AzureMlExecutePipelineActivityTypePropertiesExperimentName;

  /**
   * The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#mlParentRunId
   */
  readonly mlParentRunId?: AzureMlExecutePipelineActivityTypePropertiesMlParentRunId;

  /**
   * ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#mlPipelineEndpointId
   */
  readonly mlPipelineEndpointId?: AzureMlExecutePipelineActivityTypePropertiesMlPipelineEndpointId;

  /**
   * ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#mlPipelineId
   */
  readonly mlPipelineId?: AzureMlExecutePipelineActivityTypePropertiesMlPipelineId;

  /**
   * Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#mlPipelineParameters
   */
  readonly mlPipelineParameters?: AzureMlExecutePipelineActivityTypePropertiesMlPipelineParameters;

  /**
   * Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMLExecutePipelineActivityTypeProperties#version
   */
  readonly version?: AzureMlExecutePipelineActivityTypePropertiesVersion;

}

export enum DataLakeAnalyticsUsqlActivityType {
  "DataLakeAnalyticsUsqlActivityType_DATA_LAKE_ANALYTICS_U_SQL" = 'DataLakeAnalyticsU-SQL',
}

/**
 * DataLakeAnalyticsU-SQL activity properties.
 *
 * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties
 */
export interface DataLakeAnalyticsUsqlActivityTypeProperties {
  /**
   * Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#compilationMode
   */
  readonly compilationMode?: DataLakeAnalyticsUsqlActivityTypePropertiesCompilationMode;

  /**
   * The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#degreeOfParallelism
   */
  readonly degreeOfParallelism?: DataLakeAnalyticsUsqlActivityTypePropertiesDegreeOfParallelism;

  /**
   * Parameters for U-SQL job request.
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#parameters
   */
  readonly parameters?: DataLakeAnalyticsUsqlActivityTypePropertiesParameters;

  /**
   * Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#priority
   */
  readonly priority?: DataLakeAnalyticsUsqlActivityTypePropertiesPriority;

  /**
   * Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#runtimeVersion
   */
  readonly runtimeVersion?: DataLakeAnalyticsUsqlActivityTypePropertiesRuntimeVersion;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#scriptLinkedService
   */
  readonly scriptLinkedService: LinkedServiceReference;

  /**
   * Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DataLakeAnalyticsUSQLActivityTypeProperties#scriptPath
   */
  readonly scriptPath: DataLakeAnalyticsUsqlActivityTypePropertiesScriptPath;

}

export enum DatabricksNotebookActivityType {
  DATABRICKS_NOTEBOOK = 'DatabricksNotebook',
}

/**
 * Databricks Notebook activity properties.
 *
 * @schema #/definitions/DatabricksNotebookActivityTypeProperties
 */
export interface DatabricksNotebookActivityTypeProperties {
  /**
   * Base parameters to be used for each run of this job.If the notebook takes a parameter that is not specified, the default value from the notebook will be used.
   *
   * @schema #/definitions/DatabricksNotebookActivityTypeProperties#baseParameters
   */
  readonly baseParameters?: DatabricksNotebookActivityTypePropertiesBaseParameters;

  /**
   * A list of libraries to be installed on the cluster that will execute the job.
   *
   * @schema #/definitions/DatabricksNotebookActivityTypeProperties#libraries
   */
  readonly libraries?: DatabricksNotebookActivityTypePropertiesLibraries[];

  /**
   * The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DatabricksNotebookActivityTypeProperties#notebookPath
   */
  readonly notebookPath: DatabricksNotebookActivityTypePropertiesNotebookPath;

}

export enum DatabricksSparkJarActivityType {
  DATABRICKS_SPARK_JAR = 'DatabricksSparkJar',
}

/**
 * Databricks SparkJar activity properties.
 *
 * @schema #/definitions/DatabricksSparkJarActivityTypeProperties
 */
export interface DatabricksSparkJarActivityTypeProperties {
  /**
   * A list of libraries to be installed on the cluster that will execute the job.
   *
   * @schema #/definitions/DatabricksSparkJarActivityTypeProperties#libraries
   */
  readonly libraries?: DatabricksSparkJarActivityTypePropertiesLibraries[];

  /**
   * The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DatabricksSparkJarActivityTypeProperties#mainClassName
   */
  readonly mainClassName: DatabricksSparkJarActivityTypePropertiesMainClassName;

  /**
   * Parameters that will be passed to the main method.
   *
   * @schema #/definitions/DatabricksSparkJarActivityTypeProperties#parameters
   */
  readonly parameters?: DatabricksSparkJarActivityTypePropertiesParameters[];

}

export enum DatabricksSparkPythonActivityType {
  DATABRICKS_SPARK_PYTHON = 'DatabricksSparkPython',
}

/**
 * Databricks SparkPython activity properties.
 *
 * @schema #/definitions/DatabricksSparkPythonActivityTypeProperties
 */
export interface DatabricksSparkPythonActivityTypeProperties {
  /**
   * A list of libraries to be installed on the cluster that will execute the job.
   *
   * @schema #/definitions/DatabricksSparkPythonActivityTypeProperties#libraries
   */
  readonly libraries?: DatabricksSparkPythonActivityTypePropertiesLibraries[];

  /**
   * Command line parameters that will be passed to the Python file.
   *
   * @schema #/definitions/DatabricksSparkPythonActivityTypeProperties#parameters
   */
  readonly parameters?: DatabricksSparkPythonActivityTypePropertiesParameters[];

  /**
   * The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DatabricksSparkPythonActivityTypeProperties#pythonFile
   */
  readonly pythonFile: DatabricksSparkPythonActivityTypePropertiesPythonFile;

}

export enum AzureFunctionActivityType {
  AZURE_FUNCTION_ACTIVITY = 'AzureFunctionActivity',
}

/**
 * Azure Function activity type properties.
 *
 * @schema #/definitions/AzureFunctionActivityTypeProperties
 */
export interface AzureFunctionActivityTypeProperties {
  /**
   * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFunctionActivityTypeProperties#body
   */
  readonly body?: AzureFunctionActivityTypePropertiesBody;

  /**
   * Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/AzureFunctionActivityTypeProperties#functionName
   */
  readonly functionName: AzureFunctionActivityTypePropertiesFunctionName;

  /**
   * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFunctionActivityTypeProperties#headers
   */
  readonly headers?: AzureFunctionActivityTypePropertiesHeaders;

  /**
   * Rest API method for target endpoint.
   *
   * @schema #/definitions/AzureFunctionActivityTypeProperties#method
   */
  readonly method: AzureFunctionActivityTypePropertiesMethod;

}

export enum ExecuteDataFlowActivityType {
  EXECUTE_DATA_FLOW = 'ExecuteDataFlow',
}

/**
 * Execute data flow activity properties.
 *
 * @schema #/definitions/ExecuteDataFlowActivityTypeProperties
 */
export interface ExecuteDataFlowActivityTypeProperties {
  /**
   * Compute properties for data flow activity.
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#compute
   */
  readonly compute?: ExecuteDataFlowActivityTypePropertiesCompute;

  /**
   * Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#continueOnError
   */
  readonly continueOnError?: ExecuteDataFlowActivityTypePropertiesContinueOnError;

  /**
   * Data flow reference type.
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#dataFlow
   */
  readonly dataFlow: DataFlowReference;

  /**
   * Integration runtime reference type.
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#integrationRuntime
   */
  readonly integrationRuntime?: IntegrationRuntimeReference;

  /**
   * Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#runConcurrently
   */
  readonly runConcurrently?: ExecuteDataFlowActivityTypePropertiesRunConcurrently;

  /**
   * Staging info for execute data flow activity.
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#staging
   */
  readonly staging?: DataFlowStagingInfo;

  /**
   * Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypeProperties#traceLevel
   */
  readonly traceLevel?: ExecuteDataFlowActivityTypePropertiesTraceLevel;

}

/**
 * The workflow trigger recurrence.
 *
 * @schema #/definitions/ScheduleTriggerRecurrence
 */
export interface ScheduleTriggerRecurrence {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#additionalProperties
   */
  readonly additionalProperties?: ScheduleTriggerRecurrenceAdditionalProperties;

  /**
   * The end time.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#endTime
   */
  readonly endTime?: Date;

  /**
   * The frequency.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#frequency
   */
  readonly frequency?: ScheduleTriggerRecurrenceFrequency;

  /**
   * The interval.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#interval
   */
  readonly interval?: number;

  /**
   * The recurrence schedule.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#schedule
   */
  readonly schedule?: RecurrenceSchedule;

  /**
   * The start time.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#startTime
   */
  readonly startTime?: Date;

  /**
   * The time zone.
   *
   * @schema #/definitions/ScheduleTriggerRecurrence#timeZone
   */
  readonly timeZone?: string;

}

export enum BlobEventsTriggerTypePropertiesEvents {
  "BlobEventsTriggerTypePropertiesEvents_MICROSOFT_STORAGE_BLOB_CREATED" = 'Microsoft.Storage.BlobCreated',
  "BlobEventsTriggerTypePropertiesEvents_MICROSOFT_STORAGE_BLOB_DELETED" = 'Microsoft.Storage.BlobDeleted',
}

/**
 * @schema #/definitions/customEventsTriggerTypePropertiesEvents
 */
export interface CustomEventsTriggerTypePropertiesEvents {
}

export enum PipelineReferenceType {
  PIPELINE_REFERENCE = 'PipelineReference',
}

/**
 * Referenced tumbling window trigger dependency.
 *
 * @schema #/definitions/TumblingWindowTriggerDependencyReference
 */
export interface TumblingWindowTriggerDependencyReference {
  /**
   * Timespan applied to the start time of a tumbling window when evaluating dependency.
   *
   * @schema #/definitions/TumblingWindowTriggerDependencyReference#offset
   */
  readonly offset?: TumblingWindowTriggerDependencyReferenceOffsetPattern;

  /**
   * The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
   *
   * @schema #/definitions/TumblingWindowTriggerDependencyReference#size
   */
  readonly size?: TumblingWindowTriggerDependencyReferenceSizePattern;

  /**
   * @schema #/definitions/TumblingWindowTriggerDependencyReference#type
   */
  readonly type: TumblingWindowTriggerDependencyReferenceType;

}

/**
 * Self referenced tumbling window trigger dependency.
 *
 * @schema #/definitions/SelfDependencyTumblingWindowTriggerReference
 */
export interface SelfDependencyTumblingWindowTriggerReference {
  /**
   * Timespan applied to the start time of a tumbling window when evaluating dependency.
   *
   * @schema #/definitions/SelfDependencyTumblingWindowTriggerReference#offset
   */
  readonly offset: SelfDependencyTumblingWindowTriggerReferenceOffsetPattern;

  /**
   * The size of the window when evaluating the dependency. If undefined the frequency of the tumbling window will be used.
   *
   * @schema #/definitions/SelfDependencyTumblingWindowTriggerReference#size
   */
  readonly size?: SelfDependencyTumblingWindowTriggerReferenceSizePattern;

  /**
   * @schema #/definitions/SelfDependencyTumblingWindowTriggerReference#type
   */
  readonly type: SelfDependencyTumblingWindowTriggerReferenceType;

}

/**
 * Maximum ordinary retry attempts. Default is 0. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @default 0. Type: integer (or Expression with resultType integer), minimum: 0.
 * @schema #/definitions/retryPolicyCount
 */
export interface RetryPolicyCount {
}

export enum DatasetBZip2CompressionType {
  "DatasetBZip2CompressionType_B_ZIP2" = 'BZip2',
}

/**
 * The GZip compression level.
 *
 * @schema #/definitions/datasetGZipCompressionLevel
 */
export interface DatasetGZipCompressionLevel {
}

export enum DatasetGZipCompressionType {
  G_ZIP = 'GZip',
}

/**
 * The Deflate compression level.
 *
 * @schema #/definitions/datasetDeflateCompressionLevel
 */
export interface DatasetDeflateCompressionLevel {
}

export enum DatasetDeflateCompressionType {
  DEFLATE = 'Deflate',
}

/**
 * The ZipDeflate compression level.
 *
 * @schema #/definitions/datasetZipDeflateCompressionLevel
 */
export interface DatasetZipDeflateCompressionLevel {
}

export enum DatasetZipDeflateCompressionType {
  ZIP_DEFLATE = 'ZipDeflate',
}

export enum DatasetTarCompressionType {
  TAR = 'Tar',
}

/**
 * The TarGZip compression level.
 *
 * @schema #/definitions/datasetTarGZipCompressionLevel
 */
export interface DatasetTarGZipCompressionLevel {
}

export enum DatasetTarGZipCompressionType {
  TAR_G_ZIP = 'TarGZip',
}

/**
 * The column delimiter. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatColumnDelimiter
 */
export interface TextFormatColumnDelimiter {
}

/**
 * The code page name of the preferred encoding. If miss, the default value is ΓÇ£utf-8ΓÇ¥, unless BOM denotes another Unicode encoding. Refer to the ΓÇ£NameΓÇ¥ column of the table in the following link to set supported values: https://msdn.microsoft.com/library/system.text.encoding.aspx. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatEncodingName
 */
export interface TextFormatEncodingName {
}

/**
 * The escape character. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatEscapeChar
 */
export interface TextFormatEscapeChar {
}

/**
 * When used as input, treat the first row of data as headers. When used as output,write the headers into the output as the first row of data. The default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/textFormatFirstRowAsHeader
 */
export interface TextFormatFirstRowAsHeader {
}

/**
 * The null value string. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatNullValue
 */
export interface TextFormatNullValue {
}

/**
 * The quote character. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatQuoteChar
 */
export interface TextFormatQuoteChar {
}

/**
 * The row delimiter. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/textFormatRowDelimiter
 */
export interface TextFormatRowDelimiter {
}

/**
 * The number of lines/rows to be skipped when parsing text files. The default value is 0. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/textFormatSkipLineCount
 */
export interface TextFormatSkipLineCount {
}

/**
 * Treat empty column values in the text file as null. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/textFormatTreatEmptyAsNull
 */
export interface TextFormatTreatEmptyAsNull {
}

export enum TextFormatType {
  TEXT_FORMAT = 'TextFormat',
}

/**
 * The code page name of the preferred encoding. If not provided, the default value is 'utf-8', unless the byte order mark (BOM) denotes another Unicode encoding. The full list of supported values can be found in the 'Name' column of the table of encodings in the following reference: https://go.microsoft.com/fwlink/?linkid=861078. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jsonFormatEncodingName
 */
export interface JsonFormatEncodingName {
}

/**
 * File pattern of JSON. To be more specific, the way of separating a collection of JSON objects. The default value is 'setOfObjects'. It is case-sensitive.
 *
 * @schema #/definitions/jsonFormatFilePattern
 */
export interface JsonFormatFilePattern {
}

/**
 * The JSONPath of the JSON array element to be flattened. Example: "$.ArrayPath". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jsonFormatJsonNodeReference
 */
export interface JsonFormatJsonNodeReference {
}

/**
 * The JSONPath definition for each column mapping with a customized column name to extract data from JSON file. For fields under root object, start with "$"; for fields inside the array chosen by jsonNodeReference property, start from the array element. Example: {"Column1": "$.Column1Path", "Column2": "Column2PathInArray"}. Type: object (or Expression with resultType object).
 *
 * @schema #/definitions/jsonFormatJsonPathDefinition
 */
export interface JsonFormatJsonPathDefinition {
}

/**
 * The character used to separate nesting levels. Default value is '.' (dot). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jsonFormatNestingSeparator
 */
export interface JsonFormatNestingSeparator {
}

export enum JsonFormatType {
  JSON_FORMAT = 'JsonFormat',
}

export enum AvroFormatType {
  AVRO_FORMAT = 'AvroFormat',
}

export enum OrcFormatType {
  ORC_FORMAT = 'OrcFormat',
}

export enum ParquetFormatType {
  PARQUET_FORMAT = 'ParquetFormat',
}

/**
 * Specify the container of azure blob. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageLocationContainer
 */
export interface AzureBlobStorageLocationContainer {
}

export enum AzureBlobStorageLocationType {
  AZURE_BLOB_STORAGE_LOCATION = 'AzureBlobStorageLocation',
}

/**
 * Specify the fileSystem of azure blobFS. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsLocationFileSystem
 */
export interface AzureBlobFsLocationFileSystem {
}

export enum AzureBlobFsLocationType {
  AZURE_BLOB_FS_LOCATION = 'AzureBlobFSLocation',
}

export enum AzureDataLakeStoreLocationType {
  AZURE_DATA_LAKE_STORE_LOCATION = 'AzureDataLakeStoreLocation',
}

/**
 * Specify the bucketName of amazon S3. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/amazonS3LocationBucketName
 */
export interface AmazonS3LocationBucketName {
}

export enum AmazonS3LocationType {
  "AmazonS3LocationType_AMAZON_S3_LOCATION" = 'AmazonS3Location',
}

/**
 * Specify the version of amazon S3. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3LocationVersion
 */
export interface AmazonS3LocationVersion {
}

export enum FileServerLocationType {
  FILE_SERVER_LOCATION = 'FileServerLocation',
}

export enum AzureFileStorageLocationType {
  AZURE_FILE_STORAGE_LOCATION = 'AzureFileStorageLocation',
}

/**
 * Specify the bucketName of Amazon S3 Compatible. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/amazonS3CompatibleLocationBucketName
 */
export interface AmazonS3CompatibleLocationBucketName {
}

export enum AmazonS3CompatibleLocationType {
  "AmazonS3CompatibleLocationType_AMAZON_S3_COMPATIBLE_LOCATION" = 'AmazonS3CompatibleLocation',
}

/**
 * Specify the version of Amazon S3 Compatible. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleLocationVersion
 */
export interface AmazonS3CompatibleLocationVersion {
}

/**
 * Specify the bucketName of Oracle Cloud Storage. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/oracleCloudStorageLocationBucketName
 */
export interface OracleCloudStorageLocationBucketName {
}

export enum OracleCloudStorageLocationType {
  ORACLE_CLOUD_STORAGE_LOCATION = 'OracleCloudStorageLocation',
}

/**
 * Specify the version of Oracle Cloud Storage. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageLocationVersion
 */
export interface OracleCloudStorageLocationVersion {
}

/**
 * Specify the bucketName of Google Cloud Storage. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/googleCloudStorageLocationBucketName
 */
export interface GoogleCloudStorageLocationBucketName {
}

export enum GoogleCloudStorageLocationType {
  GOOGLE_CLOUD_STORAGE_LOCATION = 'GoogleCloudStorageLocation',
}

/**
 * Specify the version of Google Cloud Storage. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageLocationVersion
 */
export interface GoogleCloudStorageLocationVersion {
}

export enum FtpServerLocationType {
  FTP_SERVER_LOCATION = 'FtpServerLocation',
}

export enum SftpLocationType {
  SFTP_LOCATION = 'SftpLocation',
}

/**
 * Specify the relativeUrl of http server. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/httpServerLocationRelativeUrl
 */
export interface HttpServerLocationRelativeUrl {
}

export enum HttpServerLocationType {
  HTTP_SERVER_LOCATION = 'HttpServerLocation',
}

export enum HdfsLocationType {
  HDFS_LOCATION = 'HdfsLocation',
}

/**
 * @schema #/definitions/integrationRuntimeDataFlowPropertiesAdditionalProperties
 */
export interface IntegrationRuntimeDataFlowPropertiesAdditionalProperties {
}

export enum IntegrationRuntimeDataFlowPropertiesComputeType {
  GENERAL = 'General',
  MEMORY_OPTIMIZED = 'MemoryOptimized',
  COMPUTE_OPTIMIZED = 'ComputeOptimized',
}

/**
 * @schema #/definitions/integrationRuntimeVNetPropertiesAdditionalProperties
 */
export interface IntegrationRuntimeVNetPropertiesAdditionalProperties {
}

/**
 * @schema #/definitions/integrationRuntimeSsisCatalogInfoAdditionalProperties
 */
export interface IntegrationRuntimeSsisCatalogInfoAdditionalProperties {
}

export enum IntegrationRuntimeSsisCatalogInfoCatalogPricingTier {
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
  PREMIUM_RS = 'PremiumRS',
}

/**
 * The custom setup of running cmdkey commands.
 *
 * @schema #/definitions/CmdkeySetup
 */
export interface CmdkeySetup {
  /**
   * @schema #/definitions/CmdkeySetup#type
   */
  readonly type: CmdkeySetupType;

  /**
   * Cmdkey command custom setup type properties.
   *
   * @schema #/definitions/CmdkeySetup#typeProperties
   */
  readonly typeProperties: CmdkeySetupTypeProperties;

}

/**
 * The custom setup of setting environment variable.
 *
 * @schema #/definitions/EnvironmentVariableSetup
 */
export interface EnvironmentVariableSetup {
  /**
   * @schema #/definitions/EnvironmentVariableSetup#type
   */
  readonly type: EnvironmentVariableSetupType;

  /**
   * Environment variable custom setup type properties.
   *
   * @schema #/definitions/EnvironmentVariableSetup#typeProperties
   */
  readonly typeProperties: EnvironmentVariableSetupTypeProperties;

}

/**
 * The custom setup of installing 3rd party components.
 *
 * @schema #/definitions/ComponentSetup
 */
export interface ComponentSetup {
  /**
   * @schema #/definitions/ComponentSetup#type
   */
  readonly type: ComponentSetupType;

  /**
   * Installation of licensed component setup type properties.
   *
   * @schema #/definitions/ComponentSetup#typeProperties
   */
  readonly typeProperties: LicensedComponentSetupTypeProperties;

}

/**
 * The express custom setup of installing Azure PowerShell.
 *
 * @schema #/definitions/AzPowerShellSetup
 */
export interface AzPowerShellSetup {
  /**
   * @schema #/definitions/AzPowerShellSetup#type
   */
  readonly type: AzPowerShellSetupType;

  /**
   * Installation of Azure PowerShell type properties.
   *
   * @schema #/definitions/AzPowerShellSetup#typeProperties
   */
  readonly typeProperties: AzPowerShellSetupTypeProperties;

}

export enum EntityReferenceType {
  INTEGRATION_RUNTIME_REFERENCE = 'IntegrationRuntimeReference',
  LINKED_SERVICE_REFERENCE = 'LinkedServiceReference',
  CREDENTIAL_REFERENCE = 'CredentialReference',
}

export enum LinkedIntegrationRuntimeKeyAuthorizationAuthorizationType {
  KEY = 'Key',
}

export enum LinkedIntegrationRuntimeRbacAuthorizationAuthorizationType {
  RBAC = 'RBAC',
}

export enum SecureStringType {
  SECURE_STRING = 'SecureString',
}

/**
 * @schema #/definitions/executePipelineActivityTypePropertiesParameters
 */
export interface ExecutePipelineActivityTypePropertiesParameters {
}

/**
 * Azure Data Factory expression definition.
 *
 * @schema #/definitions/Expression
 */
export interface Expression {
  /**
   * Expression type.
   *
   * @schema #/definitions/Expression#type
   */
  readonly type: ExpressionType;

  /**
   * Expression value.
   *
   * @schema #/definitions/Expression#value
   */
  readonly value: string;

}

/**
 * Switch cases with have a value and corresponding activities.
 *
 * @schema #/definitions/SwitchCase
 */
export interface SwitchCase {
  /**
   * List of activities to execute for satisfied case condition.
   *
   * @schema #/definitions/SwitchCase#activities
   */
  readonly activities?: Activity[];

  /**
   * Expected value that satisfies the expression result of the 'on' property.
   *
   * @schema #/definitions/SwitchCase#value
   */
  readonly value?: string;

}

/**
 * Duration in seconds.
 *
 * @schema #/definitions/waitActivityTypePropertiesWaitTimeInSeconds
 */
export interface WaitActivityTypePropertiesWaitTimeInSeconds {
}

/**
 * Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/untilActivityTypePropertiesTimeout
 */
export interface UntilActivityTypePropertiesTimeout {
}

/**
 * Can be used if dataset points to a folder. If set to true, the folder must have at least one file. If set to false, the folder must be empty. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/validationActivityTypePropertiesChildItems
 */
export interface ValidationActivityTypePropertiesChildItems {
}

/**
 * Can be used if dataset points to a file. The file must be greater than or equal in size to the value specified. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/validationActivityTypePropertiesMinimumSize
 */
export interface ValidationActivityTypePropertiesMinimumSize {
}

/**
 * A delay in seconds between validation attempts. If no value is specified, 10 seconds will be used as the default. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/validationActivityTypePropertiesSleep
 */
export interface ValidationActivityTypePropertiesSleep {
}

/**
 * Specifies the timeout for the activity to run. If there is no value specified, it takes the value of TimeSpan.FromDays(7) which is 1 week as default. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/validationActivityTypePropertiesTimeout
 */
export interface ValidationActivityTypePropertiesTimeout {
}

/**
 * Value to be set. Could be a static value or Expression
 *
 * @schema #/definitions/setVariableActivityTypePropertiesValue
 */
export interface SetVariableActivityTypePropertiesValue {
}

/**
 * Value to be appended. Could be a static value or Expression
 *
 * @schema #/definitions/appendVariableActivityTypePropertiesValue
 */
export interface AppendVariableActivityTypePropertiesValue {
}

/**
 * Web activity authentication properties.
 *
 * @schema #/definitions/WebActivityAuthentication
 */
export interface WebActivityAuthentication {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/WebActivityAuthentication#password
   */
  readonly password?: SecretBase;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/WebActivityAuthentication#pfx
   */
  readonly pfx?: SecretBase;

  /**
   * Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityAuthentication#resource
   */
  readonly resource?: WebActivityAuthenticationResource;

  /**
   * Web activity authentication (Basic/ClientCertificate/MSI/ServicePrincipal)
   *
   * @schema #/definitions/WebActivityAuthentication#type
   */
  readonly type: string;

  /**
   * Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityAuthentication#username
   */
  readonly username?: WebActivityAuthenticationUsername;

  /**
   * TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/WebActivityAuthentication#userTenant
   */
  readonly userTenant?: WebActivityAuthenticationUserTenant;

}

/**
 * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webHookActivityTypePropertiesBody
 */
export interface WebHookActivityTypePropertiesBody {
}

/**
 * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webHookActivityTypePropertiesHeaders
 */
export interface WebHookActivityTypePropertiesHeaders {
}

export enum WebHookActivityTypePropertiesMethod {
  POST = 'POST',
}

/**
 * When set to true, statusCode, output and error in callback request body will be consumed by activity. The activity can be marked as failed by setting statusCode >= 400 in callback request. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/webHookActivityTypePropertiesReportStatusOnCallBack
 */
export interface WebHookActivityTypePropertiesReportStatusOnCallBack {
}

/**
 * WebHook activity target endpoint and path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webHookActivityTypePropertiesUrl
 */
export interface WebHookActivityTypePropertiesUrl {
}

/**
 * Maximum number of data integration units that can be used to perform this data movement. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/copyActivityTypePropertiesDataIntegrationUnits
 */
export interface CopyActivityTypePropertiesDataIntegrationUnits {
}

/**
 * Whether to skip incompatible row. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/copyActivityTypePropertiesEnableSkipIncompatibleRow
 */
export interface CopyActivityTypePropertiesEnableSkipIncompatibleRow {
}

/**
 * Specifies whether to copy data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/copyActivityTypePropertiesEnableStaging
 */
export interface CopyActivityTypePropertiesEnableStaging {
}

/**
 * Log settings.
 *
 * @schema #/definitions/LogSettings
 */
export interface LogSettings {
  /**
   * Settings for copy activity log.
   *
   * @schema #/definitions/LogSettings#copyActivityLogSettings
   */
  readonly copyActivityLogSettings?: CopyActivityLogSettings;

  /**
   * Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/LogSettings#enableCopyActivityLog
   */
  readonly enableCopyActivityLog?: LogSettingsEnableCopyActivityLog;

  /**
   * Log location settings.
   *
   * @schema #/definitions/LogSettings#logLocationSettings
   */
  readonly logLocationSettings: LogLocationSettings;

}

/**
 * (Deprecated. Please use LogSettings) Log storage settings.
 *
 * @schema #/definitions/LogStorageSettings
 */
export interface LogStorageSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/LogStorageSettings#additionalProperties
   */
  readonly additionalProperties?: LogStorageSettingsAdditionalProperties;

  /**
   * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/LogStorageSettings#enableReliableLogging
   */
  readonly enableReliableLogging?: LogStorageSettingsEnableReliableLogging;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/LogStorageSettings#linkedServiceName
   */
  readonly linkedServiceName: LinkedServiceReference;

  /**
   * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/LogStorageSettings#logLevel
   */
  readonly logLevel?: LogStorageSettingsLogLevel;

  /**
   * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/LogStorageSettings#path
   */
  readonly path?: LogStorageSettingsPath;

}

/**
 * Maximum number of concurrent sessions opened on the source or sink to avoid overloading the data store. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/copyActivityTypePropertiesParallelCopies
 */
export interface CopyActivityTypePropertiesParallelCopies {
}

/**
 * @schema #/definitions/copyActivityTypePropertiesPreserve
 */
export interface CopyActivityTypePropertiesPreserve {
}

/**
 * @schema #/definitions/copyActivityTypePropertiesPreserveRules
 */
export interface CopyActivityTypePropertiesPreserveRules {
}

/**
 * Redirect incompatible row settings
 *
 * @schema #/definitions/RedirectIncompatibleRowSettings
 */
export interface RedirectIncompatibleRowSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/RedirectIncompatibleRowSettings#additionalProperties
   */
  readonly additionalProperties?: RedirectIncompatibleRowSettingsAdditionalProperties;

  /**
   * Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RedirectIncompatibleRowSettings#linkedServiceName
   */
  readonly linkedServiceName: RedirectIncompatibleRowSettingsLinkedServiceName;

  /**
   * The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RedirectIncompatibleRowSettings#path
   */
  readonly path?: RedirectIncompatibleRowSettingsPath;

}

/**
 * A copy activity sink.
 *
 * @schema #/definitions/CopySink
 */
export class CopySink {
  public static fromDelimitedTextSink(value: DelimitedTextSink): CopySink {
    return new CopySink(value);
  }
  public static fromJsonSink(value: JsonSink): CopySink {
    return new CopySink(value);
  }
  public static fromOrcSink(value: OrcSink): CopySink {
    return new CopySink(value);
  }
  public static fromRestSink(value: RestSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzurePostgreSqlSink(value: AzurePostgreSqlSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureMySqlSink(value: AzureMySqlSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureDatabricksDeltaLakeSink(value: AzureDatabricksDeltaLakeSink): CopySink {
    return new CopySink(value);
  }
  public static fromSapCloudForCustomerSink(value: SapCloudForCustomerSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureQueueSink(value: AzureQueueSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureTableSink(value: AzureTableSink): CopySink {
    return new CopySink(value);
  }
  public static fromAvroSink(value: AvroSink): CopySink {
    return new CopySink(value);
  }
  public static fromParquetSink(value: ParquetSink): CopySink {
    return new CopySink(value);
  }
  public static fromBinarySink(value: BinarySink): CopySink {
    return new CopySink(value);
  }
  public static fromBlobSink(value: BlobSink): CopySink {
    return new CopySink(value);
  }
  public static fromFileSystemSink(value: FileSystemSink): CopySink {
    return new CopySink(value);
  }
  public static fromDocumentDbCollectionSink(value: DocumentDbCollectionSink): CopySink {
    return new CopySink(value);
  }
  public static fromCosmosDbSqlApiSink(value: CosmosDbSqlApiSink): CopySink {
    return new CopySink(value);
  }
  public static fromSqlSink(value: SqlSink): CopySink {
    return new CopySink(value);
  }
  public static fromSqlServerSink(value: SqlServerSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureSqlSink(value: AzureSqlSink): CopySink {
    return new CopySink(value);
  }
  public static fromSqlMiSink(value: SqlMiSink): CopySink {
    return new CopySink(value);
  }
  public static fromSqlDwSink(value: SqlDwSink): CopySink {
    return new CopySink(value);
  }
  public static fromSnowflakeSink(value: SnowflakeSink): CopySink {
    return new CopySink(value);
  }
  public static fromOracleSink(value: OracleSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureDataLakeStoreSink(value: AzureDataLakeStoreSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureBlobFsSink(value: AzureBlobFsSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureSearchIndexSink(value: AzureSearchIndexSink): CopySink {
    return new CopySink(value);
  }
  public static fromOdbcSink(value: OdbcSink): CopySink {
    return new CopySink(value);
  }
  public static fromInformixSink(value: InformixSink): CopySink {
    return new CopySink(value);
  }
  public static fromMicrosoftAccessSink(value: MicrosoftAccessSink): CopySink {
    return new CopySink(value);
  }
  public static fromDynamicsSink(value: DynamicsSink): CopySink {
    return new CopySink(value);
  }
  public static fromDynamicsCrmSink(value: DynamicsCrmSink): CopySink {
    return new CopySink(value);
  }
  public static fromCommonDataServiceForAppsSink(value: CommonDataServiceForAppsSink): CopySink {
    return new CopySink(value);
  }
  public static fromAzureDataExplorerSink(value: AzureDataExplorerSink): CopySink {
    return new CopySink(value);
  }
  public static fromSalesforceSink(value: SalesforceSink): CopySink {
    return new CopySink(value);
  }
  public static fromSalesforceServiceCloudSink(value: SalesforceServiceCloudSink): CopySink {
    return new CopySink(value);
  }
  public static fromMongoDbAtlasSink(value: MongoDbAtlasSink): CopySink {
    return new CopySink(value);
  }
  public static fromMongoDbV2Sink(value: MongoDbV2Sink): CopySink {
    return new CopySink(value);
  }
  public static fromCosmosDbMongoDbApiSink(value: CosmosDbMongoDbApiSink): CopySink {
    return new CopySink(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Skip error file.
 *
 * @schema #/definitions/SkipErrorFile
 */
export interface SkipErrorFile {
  /**
   * Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/SkipErrorFile#dataInconsistency
   */
  readonly dataInconsistency?: SkipErrorFileDataInconsistency;

  /**
   * Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/SkipErrorFile#fileMissing
   */
  readonly fileMissing?: SkipErrorFileFileMissing;

}

/**
 * A copy activity source.
 *
 * @schema #/definitions/CopySource
 */
export class CopySource {
  public static fromAvroSource(value: AvroSource): CopySource {
    return new CopySource(value);
  }
  public static fromExcelSource(value: ExcelSource): CopySource {
    return new CopySource(value);
  }
  public static fromParquetSource(value: ParquetSource): CopySource {
    return new CopySource(value);
  }
  public static fromDelimitedTextSource(value: DelimitedTextSource): CopySource {
    return new CopySource(value);
  }
  public static fromJsonSource(value: JsonSource): CopySource {
    return new CopySource(value);
  }
  public static fromXmlSource(value: XmlSource): CopySource {
    return new CopySource(value);
  }
  public static fromOrcSource(value: OrcSource): CopySource {
    return new CopySource(value);
  }
  public static fromBinarySource(value: BinarySource): CopySource {
    return new CopySource(value);
  }
  public static fromTabularSource(value: TabularSource): CopySource {
    return new CopySource(value);
  }
  public static fromBlobSource(value: BlobSource): CopySource {
    return new CopySource(value);
  }
  public static fromDocumentDbCollectionSource(value: DocumentDbCollectionSource): CopySource {
    return new CopySource(value);
  }
  public static fromCosmosDbSqlApiSource(value: CosmosDbSqlApiSource): CopySource {
    return new CopySource(value);
  }
  public static fromDynamicsSource(value: DynamicsSource): CopySource {
    return new CopySource(value);
  }
  public static fromDynamicsCrmSource(value: DynamicsCrmSource): CopySource {
    return new CopySource(value);
  }
  public static fromCommonDataServiceForAppsSource(value: CommonDataServiceForAppsSource): CopySource {
    return new CopySource(value);
  }
  public static fromRelationalSource(value: RelationalSource): CopySource {
    return new CopySource(value);
  }
  public static fromMicrosoftAccessSource(value: MicrosoftAccessSource): CopySource {
    return new CopySource(value);
  }
  public static fromODataSource(value: ODataSource): CopySource {
    return new CopySource(value);
  }
  public static fromSalesforceServiceCloudSource(value: SalesforceServiceCloudSource): CopySource {
    return new CopySource(value);
  }
  public static fromRestSource(value: RestSource): CopySource {
    return new CopySource(value);
  }
  public static fromFileSystemSource(value: FileSystemSource): CopySource {
    return new CopySource(value);
  }
  public static fromHdfsSource(value: HdfsSource): CopySource {
    return new CopySource(value);
  }
  public static fromAzureDataExplorerSource(value: AzureDataExplorerSource): CopySource {
    return new CopySource(value);
  }
  public static fromOracleSource(value: OracleSource): CopySource {
    return new CopySource(value);
  }
  public static fromWebSource(value: WebSource): CopySource {
    return new CopySource(value);
  }
  public static fromMongoDbSource(value: MongoDbSource): CopySource {
    return new CopySource(value);
  }
  public static fromMongoDbAtlasSource(value: MongoDbAtlasSource): CopySource {
    return new CopySource(value);
  }
  public static fromMongoDbV2Source(value: MongoDbV2Source): CopySource {
    return new CopySource(value);
  }
  public static fromCosmosDbMongoDbApiSource(value: CosmosDbMongoDbApiSource): CopySource {
    return new CopySource(value);
  }
  public static fromOffice365Source(value: Office365Source): CopySource {
    return new CopySource(value);
  }
  public static fromAzureDataLakeStoreSource(value: AzureDataLakeStoreSource): CopySource {
    return new CopySource(value);
  }
  public static fromAzureBlobFsSource(value: AzureBlobFsSource): CopySource {
    return new CopySource(value);
  }
  public static fromHttpSource(value: HttpSource): CopySource {
    return new CopySource(value);
  }
  public static fromSnowflakeSource(value: SnowflakeSource): CopySource {
    return new CopySource(value);
  }
  public static fromAzureDatabricksDeltaLakeSource(value: AzureDatabricksDeltaLakeSource): CopySource {
    return new CopySource(value);
  }
  public static fromSharePointOnlineListSource(value: SharePointOnlineListSource): CopySource {
    return new CopySource(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Staging settings.
 *
 * @schema #/definitions/StagingSettings
 */
export interface StagingSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/StagingSettings#additionalProperties
   */
  readonly additionalProperties?: StagingSettingsAdditionalProperties;

  /**
   * Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/StagingSettings#enableCompression
   */
  readonly enableCompression?: StagingSettingsEnableCompression;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/StagingSettings#linkedServiceName
   */
  readonly linkedServiceName: LinkedServiceReference;

  /**
   * The path to storage for storing the interim data. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/StagingSettings#path
   */
  readonly path?: StagingSettingsPath;

}

/**
 * Copy activity translator. If not specified, tabular translator is used.
 *
 * @schema #/definitions/copyActivityTypePropertiesTranslator
 */
export interface CopyActivityTypePropertiesTranslator {
}

/**
 * Whether to enable Data Consistency validation. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/copyActivityTypePropertiesValidateDataConsistency
 */
export interface CopyActivityTypePropertiesValidateDataConsistency {
}

/**
 * @schema #/definitions/hdInsightHiveActivityTypePropertiesArguments
 */
export interface HdInsightHiveActivityTypePropertiesArguments {
}

/**
 * @schema #/definitions/hdInsightHiveActivityTypePropertiesDefines
 */
export interface HdInsightHiveActivityTypePropertiesDefines {
}

export enum HdInsightHiveActivityTypePropertiesGetDebugInfo {
  NONE = 'None',
  ALWAYS = 'Always',
  FAILURE = 'Failure',
}

/**
 * Script path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightHiveActivityTypePropertiesScriptPath
 */
export interface HdInsightHiveActivityTypePropertiesScriptPath {
}

/**
 * @schema #/definitions/hdInsightHiveActivityTypePropertiesVariables
 */
export interface HdInsightHiveActivityTypePropertiesVariables {
}

/**
 * User specified arguments to HDInsightActivity. Type: array (or Expression with resultType array).
 *
 * @schema #/definitions/hdInsightPigActivityTypePropertiesArguments
 */
export interface HdInsightPigActivityTypePropertiesArguments {
}

/**
 * @schema #/definitions/hdInsightPigActivityTypePropertiesDefines
 */
export interface HdInsightPigActivityTypePropertiesDefines {
}

export enum HdInsightPigActivityTypePropertiesGetDebugInfo {
  NONE = 'None',
  ALWAYS = 'Always',
  FAILURE = 'Failure',
}

/**
 * Script path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightPigActivityTypePropertiesScriptPath
 */
export interface HdInsightPigActivityTypePropertiesScriptPath {
}

/**
 * @schema #/definitions/hdInsightMapReduceActivityTypePropertiesArguments
 */
export interface HdInsightMapReduceActivityTypePropertiesArguments {
}

/**
 * Class name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightMapReduceActivityTypePropertiesClassName
 */
export interface HdInsightMapReduceActivityTypePropertiesClassName {
}

/**
 * @schema #/definitions/hdInsightMapReduceActivityTypePropertiesDefines
 */
export interface HdInsightMapReduceActivityTypePropertiesDefines {
}

export enum HdInsightMapReduceActivityTypePropertiesGetDebugInfo {
  NONE = 'None',
  ALWAYS = 'Always',
  FAILURE = 'Failure',
}

/**
 * Jar path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightMapReduceActivityTypePropertiesJarFilePath
 */
export interface HdInsightMapReduceActivityTypePropertiesJarFilePath {
}

/**
 * @schema #/definitions/hdInsightMapReduceActivityTypePropertiesJarLibs
 */
export interface HdInsightMapReduceActivityTypePropertiesJarLibs {
}

/**
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesArguments
 */
export interface HdInsightStreamingActivityTypePropertiesArguments {
}

/**
 * Combiner executable name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesCombiner
 */
export interface HdInsightStreamingActivityTypePropertiesCombiner {
}

/**
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesCommandEnvironment
 */
export interface HdInsightStreamingActivityTypePropertiesCommandEnvironment {
}

/**
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesDefines
 */
export interface HdInsightStreamingActivityTypePropertiesDefines {
}

/**
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesFilePaths
 */
export interface HdInsightStreamingActivityTypePropertiesFilePaths {
}

export enum HdInsightStreamingActivityTypePropertiesGetDebugInfo {
  NONE = 'None',
  ALWAYS = 'Always',
  FAILURE = 'Failure',
}

/**
 * Input blob path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesInput
 */
export interface HdInsightStreamingActivityTypePropertiesInput {
}

/**
 * Mapper executable name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesMapper
 */
export interface HdInsightStreamingActivityTypePropertiesMapper {
}

/**
 * Output blob path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesOutput
 */
export interface HdInsightStreamingActivityTypePropertiesOutput {
}

/**
 * Reducer executable name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightStreamingActivityTypePropertiesReducer
 */
export interface HdInsightStreamingActivityTypePropertiesReducer {
}

/**
 * @schema #/definitions/hdInsightSparkActivityTypePropertiesArguments
 */
export interface HdInsightSparkActivityTypePropertiesArguments {
}

/**
 * The relative path to the root folder of the code/package to be executed. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightSparkActivityTypePropertiesEntryFilePath
 */
export interface HdInsightSparkActivityTypePropertiesEntryFilePath {
}

export enum HdInsightSparkActivityTypePropertiesGetDebugInfo {
  NONE = 'None',
  ALWAYS = 'Always',
  FAILURE = 'Failure',
}

/**
 * The user to impersonate that will execute the job. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightSparkActivityTypePropertiesProxyUser
 */
export interface HdInsightSparkActivityTypePropertiesProxyUser {
}

/**
 * The root path in 'sparkJobLinkedService' for all the job’s files. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdInsightSparkActivityTypePropertiesRootPath
 */
export interface HdInsightSparkActivityTypePropertiesRootPath {
}

/**
 * @schema #/definitions/hdInsightSparkActivityTypePropertiesSparkConfig
 */
export interface HdInsightSparkActivityTypePropertiesSparkConfig {
}

/**
 * Integration runtime reference type.
 *
 * @schema #/definitions/IntegrationRuntimeReference
 */
export interface IntegrationRuntimeReference {
  /**
   * An object mapping parameter names to argument values.
   *
   * @schema #/definitions/IntegrationRuntimeReference#parameters
   */
  readonly parameters?: IntegrationRuntimeReferenceParameters;

  /**
   * Reference integration runtime name.
   *
   * @schema #/definitions/IntegrationRuntimeReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Type of integration runtime.
   *
   * @schema #/definitions/IntegrationRuntimeReference#type
   */
  readonly type: IntegrationRuntimeReferenceType;

}

/**
 * The environment path to execute the SSIS package. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesEnvironmentPath
 */
export interface ExecuteSsisPackageActivityTypePropertiesEnvironmentPath {
}

/**
 * SSIS package execution credential.
 *
 * @schema #/definitions/SSISExecutionCredential
 */
export interface SsisExecutionCredential {
  /**
   * Domain for windows authentication.
   *
   * @schema #/definitions/SSISExecutionCredential#domain
   */
  readonly domain: SsisExecutionCredentialDomain;

  /**
   * Azure Data Factory secure string definition. The string value will be masked with asterisks '*' during Get or List API calls.
   *
   * @schema #/definitions/SSISExecutionCredential#password
   */
  readonly password: SecureString;

  /**
   * UseName for windows authentication.
   *
   * @schema #/definitions/SSISExecutionCredential#userName
   */
  readonly userName: SsisExecutionCredentialUserName;

}

/**
 * The logging level of SSIS package execution. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesLoggingLevel
 */
export interface ExecuteSsisPackageActivityTypePropertiesLoggingLevel {
}

/**
 * SSIS package execution log location
 *
 * @schema #/definitions/SSISLogLocation
 */
export interface SsisLogLocation {
  /**
   * The SSIS package execution log path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISLogLocation#logPath
   */
  readonly logPath: SsisLogLocationLogPath;

  /**
   * The type of SSIS log location.
   *
   * @schema #/definitions/SSISLogLocation#type
   */
  readonly type: SsisLogLocationType;

  /**
   * SSIS package execution log location properties.
   *
   * @schema #/definitions/SSISLogLocation#typeProperties
   */
  readonly typeProperties: SsisLogLocationTypeProperties;

}

/**
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesPackageConnectionManagers
 */
export interface ExecuteSsisPackageActivityTypePropertiesPackageConnectionManagers {
}

/**
 * SSIS package location.
 *
 * @schema #/definitions/SSISPackageLocation
 */
export interface SsisPackageLocation {
  /**
   * The SSIS package path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISPackageLocation#packagePath
   */
  readonly packagePath?: SsisPackageLocationPackagePath;

  /**
   * The type of SSIS package location.
   *
   * @schema #/definitions/SSISPackageLocation#type
   */
  readonly type?: SsisPackageLocationType;

  /**
   * SSIS package location properties.
   *
   * @schema #/definitions/SSISPackageLocation#typeProperties
   */
  readonly typeProperties?: SsisPackageLocationTypeProperties;

}

/**
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesPackageParameters
 */
export interface ExecuteSsisPackageActivityTypePropertiesPackageParameters {
}

/**
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesProjectConnectionManagers
 */
export interface ExecuteSsisPackageActivityTypePropertiesProjectConnectionManagers {
}

/**
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesProjectParameters
 */
export interface ExecuteSsisPackageActivityTypePropertiesProjectParameters {
}

/**
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesPropertyOverrides
 */
export interface ExecuteSsisPackageActivityTypePropertiesPropertyOverrides {
}

/**
 * Specifies the runtime to execute SSIS package. The value should be "x86" or "x64". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/executeSsisPackageActivityTypePropertiesRuntime
 */
export interface ExecuteSsisPackageActivityTypePropertiesRuntime {
}

/**
 * Elevation level and scope for the user, default is nonadmin task. Type: string (or Expression with resultType double).
 *
 * @schema #/definitions/customActivityTypePropertiesAutoUserSpecification
 */
export interface CustomActivityTypePropertiesAutoUserSpecification {
}

/**
 * Command for custom activity Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/customActivityTypePropertiesCommand
 */
export interface CustomActivityTypePropertiesCommand {
}

/**
 * @schema #/definitions/customActivityTypePropertiesExtendedProperties
 */
export interface CustomActivityTypePropertiesExtendedProperties {
}

/**
 * Folder path for resource files Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/customActivityTypePropertiesFolderPath
 */
export interface CustomActivityTypePropertiesFolderPath {
}

/**
 * Reference objects for custom activity
 *
 * @schema #/definitions/CustomActivityReferenceObject
 */
export interface CustomActivityReferenceObject {
  /**
   * Dataset references.
   *
   * @schema #/definitions/CustomActivityReferenceObject#datasets
   */
  readonly datasets?: DatasetReference[];

  /**
   * Linked service references.
   *
   * @schema #/definitions/CustomActivityReferenceObject#linkedServices
   */
  readonly linkedServices?: LinkedServiceReference[];

}

/**
 * The retention time for the files submitted for custom activity. Type: double (or Expression with resultType double).
 *
 * @schema #/definitions/customActivityTypePropertiesRetentionTimeInDays
 */
export interface CustomActivityTypePropertiesRetentionTimeInDays {
}

/**
 * Stored procedure name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerStoredProcedureActivityTypePropertiesStoredProcedureName
 */
export interface SqlServerStoredProcedureActivityTypePropertiesStoredProcedureName {
}

/**
 * @schema #/definitions/sqlServerStoredProcedureActivityTypePropertiesStoredProcedureParameters
 */
export interface SqlServerStoredProcedureActivityTypePropertiesStoredProcedureParameters {
}

/**
 * Whether to record detailed logs of delete-activity execution. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/deleteActivityTypePropertiesEnableLogging
 */
export interface DeleteActivityTypePropertiesEnableLogging {
}

/**
 * If true, files or sub-folders under current folder path will be deleted recursively. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/deleteActivityTypePropertiesRecursive
 */
export interface DeleteActivityTypePropertiesRecursive {
}

/**
 * Connector read setting.
 *
 * @schema #/definitions/StoreReadSettings
 */
export class StoreReadSettings {
  public static fromAzureBlobStorageReadSettings(value: AzureBlobStorageReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromAzureBlobFsReadSettings(value: AzureBlobFsReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromAzureDataLakeStoreReadSettings(value: AzureDataLakeStoreReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromAmazonS3ReadSettings(value: AmazonS3ReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromFileServerReadSettings(value: FileServerReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromAzureFileStorageReadSettings(value: AzureFileStorageReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromAmazonS3CompatibleReadSettings(value: AmazonS3CompatibleReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromOracleCloudStorageReadSettings(value: OracleCloudStorageReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromGoogleCloudStorageReadSettings(value: GoogleCloudStorageReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromFtpReadSettings(value: FtpReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromSftpReadSettings(value: SftpReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromHttpReadSettings(value: HttpReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  public static fromHdfsReadSettings(value: HdfsReadSettings): StoreReadSettings {
    return new StoreReadSettings(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * A control command, according to the Azure Data Explorer command syntax. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerCommandActivityTypePropertiesCommand
 */
export interface AzureDataExplorerCommandActivityTypePropertiesCommand {
}

/**
 * Control command timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)
 *
 * @schema #/definitions/azureDataExplorerCommandActivityTypePropertiesCommandTimeout
 */
export interface AzureDataExplorerCommandActivityTypePropertiesCommandTimeout {
}

/**
 * Whether to return first row or all rows. Default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/lookupActivityTypePropertiesFirstRowOnly
 */
export interface LookupActivityTypePropertiesFirstRowOnly {
}

/**
 * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityTypePropertiesBody
 */
export interface WebActivityTypePropertiesBody {
}

/**
 * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityTypePropertiesHeaders
 */
export interface WebActivityTypePropertiesHeaders {
}

export enum WebActivityTypePropertiesMethod {
  GET = 'GET',
  POST = 'POST',
  PUT = 'PUT',
  DELETE = 'DELETE',
}

/**
 * Web activity target endpoint and path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityTypePropertiesUrl
 */
export interface WebActivityTypePropertiesUrl {
}

/**
 * @schema #/definitions/getMetadataActivityTypePropertiesFieldList
 */
export interface GetMetadataActivityTypePropertiesFieldList {
}

/**
 * Format read settings.
 *
 * @schema #/definitions/FormatReadSettings
 */
export class FormatReadSettings {
  public static fromDelimitedTextReadSettings(value: DelimitedTextReadSettings): FormatReadSettings {
    return new FormatReadSettings(value);
  }
  public static fromJsonReadSettings(value: JsonReadSettings): FormatReadSettings {
    return new FormatReadSettings(value);
  }
  public static fromXmlReadSettings(value: XmlReadSettings): FormatReadSettings {
    return new FormatReadSettings(value);
  }
  public static fromBinaryReadSettings(value: BinaryReadSettings): FormatReadSettings {
    return new FormatReadSettings(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * @schema #/definitions/azureMlBatchExecutionActivityTypePropertiesGlobalParameters
 */
export interface AzureMlBatchExecutionActivityTypePropertiesGlobalParameters {
}

/**
 * @schema #/definitions/azureMlBatchExecutionActivityTypePropertiesWebServiceInputs
 */
export interface AzureMlBatchExecutionActivityTypePropertiesWebServiceInputs {
}

/**
 * @schema #/definitions/azureMlBatchExecutionActivityTypePropertiesWebServiceOutputs
 */
export interface AzureMlBatchExecutionActivityTypePropertiesWebServiceOutputs {
}

/**
 * The relative file path in trainedModelLinkedService to represent the .ilearner file that will be uploaded by the update operation.  Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlUpdateResourceActivityTypePropertiesTrainedModelFilePath
 */
export interface AzureMlUpdateResourceActivityTypePropertiesTrainedModelFilePath {
}

/**
 * Name of the Trained Model module in the Web Service experiment to be updated. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlUpdateResourceActivityTypePropertiesTrainedModelName
 */
export interface AzureMlUpdateResourceActivityTypePropertiesTrainedModelName {
}

/**
 * Whether to continue execution of other steps in the PipelineRun if a step fails. This information will be passed in the continueOnStepFailure property of the published pipeline execution request. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesContinueOnStepFailure
 */
export interface AzureMlExecutePipelineActivityTypePropertiesContinueOnStepFailure {
}

/**
 * Dictionary used for changing data path assignments without retraining. Values will be passed in the dataPathAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesDataPathAssignments
 */
export interface AzureMlExecutePipelineActivityTypePropertiesDataPathAssignments {
}

/**
 * Run history experiment name of the pipeline run. This information will be passed in the ExperimentName property of the published pipeline execution request. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesExperimentName
 */
export interface AzureMlExecutePipelineActivityTypePropertiesExperimentName {
}

/**
 * The parent Azure ML Service pipeline run id. This information will be passed in the ParentRunId property of the published pipeline execution request. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesMlParentRunId
 */
export interface AzureMlExecutePipelineActivityTypePropertiesMlParentRunId {
}

/**
 * ID of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesMlPipelineEndpointId
 */
export interface AzureMlExecutePipelineActivityTypePropertiesMlPipelineEndpointId {
}

/**
 * ID of the published Azure ML pipeline. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesMlPipelineId
 */
export interface AzureMlExecutePipelineActivityTypePropertiesMlPipelineId {
}

/**
 * Key,Value pairs to be passed to the published Azure ML pipeline endpoint. Keys must match the names of pipeline parameters defined in the published pipeline. Values will be passed in the ParameterAssignments property of the published pipeline execution request. Type: object with key value pairs (or Expression with resultType object).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesMlPipelineParameters
 */
export interface AzureMlExecutePipelineActivityTypePropertiesMlPipelineParameters {
}

/**
 * Version of the published Azure ML pipeline endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMlExecutePipelineActivityTypePropertiesVersion
 */
export interface AzureMlExecutePipelineActivityTypePropertiesVersion {
}

/**
 * Compilation mode of U-SQL. Must be one of these values : Semantic, Full and SingleBox. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesCompilationMode
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesCompilationMode {
}

/**
 * The maximum number of nodes simultaneously used to run the job. Default value is 1. Type: integer (or Expression with resultType integer), minimum: 1.
 *
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesDegreeOfParallelism
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesDegreeOfParallelism {
}

/**
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesParameters
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesParameters {
}

/**
 * Determines which jobs out of all that are queued should be selected to run first. The lower the number, the higher the priority. Default value is 1000. Type: integer (or Expression with resultType integer), minimum: 1.
 *
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesPriority
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesPriority {
}

/**
 * Runtime version of the U-SQL engine to use. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesRuntimeVersion
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesRuntimeVersion {
}

/**
 * Case-sensitive path to folder that contains the U-SQL script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dataLakeAnalyticsUsqlActivityTypePropertiesScriptPath
 */
export interface DataLakeAnalyticsUsqlActivityTypePropertiesScriptPath {
}

/**
 * @schema #/definitions/databricksNotebookActivityTypePropertiesBaseParameters
 */
export interface DatabricksNotebookActivityTypePropertiesBaseParameters {
}

/**
 * @schema #/definitions/databricksNotebookActivityTypePropertiesLibraries
 */
export interface DatabricksNotebookActivityTypePropertiesLibraries {
}

/**
 * The absolute path of the notebook to be run in the Databricks Workspace. This path must begin with a slash. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/databricksNotebookActivityTypePropertiesNotebookPath
 */
export interface DatabricksNotebookActivityTypePropertiesNotebookPath {
}

/**
 * @schema #/definitions/databricksSparkJarActivityTypePropertiesLibraries
 */
export interface DatabricksSparkJarActivityTypePropertiesLibraries {
}

/**
 * The full name of the class containing the main method to be executed. This class must be contained in a JAR provided as a library. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/databricksSparkJarActivityTypePropertiesMainClassName
 */
export interface DatabricksSparkJarActivityTypePropertiesMainClassName {
}

/**
 * @schema #/definitions/databricksSparkJarActivityTypePropertiesParameters
 */
export interface DatabricksSparkJarActivityTypePropertiesParameters {
}

/**
 * @schema #/definitions/databricksSparkPythonActivityTypePropertiesLibraries
 */
export interface DatabricksSparkPythonActivityTypePropertiesLibraries {
}

/**
 * @schema #/definitions/databricksSparkPythonActivityTypePropertiesParameters
 */
export interface DatabricksSparkPythonActivityTypePropertiesParameters {
}

/**
 * The URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/databricksSparkPythonActivityTypePropertiesPythonFile
 */
export interface DatabricksSparkPythonActivityTypePropertiesPythonFile {
}

/**
 * Represents the payload that will be sent to the endpoint. Required for POST/PUT method, not allowed for GET method Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFunctionActivityTypePropertiesBody
 */
export interface AzureFunctionActivityTypePropertiesBody {
}

/**
 * Name of the Function that the Azure Function Activity will call. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/azureFunctionActivityTypePropertiesFunctionName
 */
export interface AzureFunctionActivityTypePropertiesFunctionName {
}

/**
 * Represents the headers that will be sent to the request. For example, to set the language and type on a request: "headers" : { "Accept-Language": "en-us", "Content-Type": "application/json" }. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFunctionActivityTypePropertiesHeaders
 */
export interface AzureFunctionActivityTypePropertiesHeaders {
}

export enum AzureFunctionActivityTypePropertiesMethod {
  GET = 'GET',
  POST = 'POST',
  PUT = 'PUT',
  DELETE = 'DELETE',
  OPTIONS = 'OPTIONS',
  HEAD = 'HEAD',
  TRACE = 'TRACE',
}

/**
 * Compute properties for data flow activity.
 *
 * @schema #/definitions/ExecuteDataFlowActivityTypePropertiesCompute
 */
export interface ExecuteDataFlowActivityTypePropertiesCompute {
  /**
   * Compute type of the cluster which will execute data flow job. Possible values include: 'General', 'MemoryOptimized', 'ComputeOptimized'. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypePropertiesCompute#computeType
   */
  readonly computeType?: ExecuteDataFlowActivityTypePropertiesComputeComputeType;

  /**
   * Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. Type: integer (or Expression with resultType integer)
   *
   * @schema #/definitions/ExecuteDataFlowActivityTypePropertiesCompute#coreCount
   */
  readonly coreCount?: ExecuteDataFlowActivityTypePropertiesComputeCoreCount;

}

/**
 * Continue on error setting used for data flow execution. Enables processing to continue if a sink fails. Type: boolean (or Expression with resultType boolean)
 *
 * @schema #/definitions/executeDataFlowActivityTypePropertiesContinueOnError
 */
export interface ExecuteDataFlowActivityTypePropertiesContinueOnError {
}

/**
 * Data flow reference type.
 *
 * @schema #/definitions/DataFlowReference
 */
export interface DataFlowReference {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/DataFlowReference#additionalProperties
   */
  readonly additionalProperties?: DataFlowReferenceAdditionalProperties;

  /**
   * Reference data flow parameters from dataset.
   *
   * @schema #/definitions/DataFlowReference#datasetParameters
   */
  readonly datasetParameters?: DataFlowReferenceDatasetParameters;

  /**
   * Reference data flow name.
   *
   * @schema #/definitions/DataFlowReference#referenceName
   */
  readonly referenceName: string;

  /**
   * Data flow reference type.
   *
   * @schema #/definitions/DataFlowReference#type
   */
  readonly type: DataFlowReferenceType;

}

/**
 * Concurrent run setting used for data flow execution. Allows sinks with the same save order to be processed concurrently. Type: boolean (or Expression with resultType boolean)
 *
 * @schema #/definitions/executeDataFlowActivityTypePropertiesRunConcurrently
 */
export interface ExecuteDataFlowActivityTypePropertiesRunConcurrently {
}

/**
 * Staging info for execute data flow activity.
 *
 * @schema #/definitions/DataFlowStagingInfo
 */
export interface DataFlowStagingInfo {
  /**
   * Folder path for staging blob. Type: string (or Expression with resultType string)
   *
   * @schema #/definitions/DataFlowStagingInfo#folderPath
   */
  readonly folderPath?: DataFlowStagingInfoFolderPath;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/DataFlowStagingInfo#linkedService
   */
  readonly linkedService?: LinkedServiceReference;

}

/**
 * Trace level setting used for data flow monitoring output. Supported values are: 'coarse', 'fine', and 'none'. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/executeDataFlowActivityTypePropertiesTraceLevel
 */
export interface ExecuteDataFlowActivityTypePropertiesTraceLevel {
}

/**
 * @schema #/definitions/scheduleTriggerRecurrenceAdditionalProperties
 */
export interface ScheduleTriggerRecurrenceAdditionalProperties {
}

export enum ScheduleTriggerRecurrenceFrequency {
  NOT_SPECIFIED = 'NotSpecified',
  MINUTE = 'Minute',
  HOUR = 'Hour',
  DAY = 'Day',
  WEEK = 'Week',
  MONTH = 'Month',
  YEAR = 'Year',
}

/**
 * The recurrence schedule.
 *
 * @schema #/definitions/RecurrenceSchedule
 */
export interface RecurrenceSchedule {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/RecurrenceSchedule#additionalProperties
   */
  readonly additionalProperties?: RecurrenceScheduleAdditionalProperties;

  /**
   * The hours.
   *
   * @schema #/definitions/RecurrenceSchedule#hours
   */
  readonly hours?: number[];

  /**
   * The minutes.
   *
   * @schema #/definitions/RecurrenceSchedule#minutes
   */
  readonly minutes?: number[];

  /**
   * The month days.
   *
   * @schema #/definitions/RecurrenceSchedule#monthDays
   */
  readonly monthDays?: number[];

  /**
   * The monthly occurrences.
   *
   * @schema #/definitions/RecurrenceSchedule#monthlyOccurrences
   */
  readonly monthlyOccurrences?: RecurrenceScheduleOccurrence[];

  /**
   * The days of the week.
   *
   * @schema #/definitions/RecurrenceSchedule#weekDays
   */
  readonly weekDays?: RecurrenceScheduleWeekDays[];

}

/**
 * @schema #/definitions/tumblingWindowTriggerDependencyReferenceOffset
 */
export class TumblingWindowTriggerDependencyReferenceOffsetPattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * @schema #/definitions/tumblingWindowTriggerDependencyReferenceSize
 */
export class TumblingWindowTriggerDependencyReferenceSizePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum TumblingWindowTriggerDependencyReferenceType {
  TUMBLING_WINDOW_TRIGGER_DEPENDENCY_REFERENCE = 'TumblingWindowTriggerDependencyReference',
}

/**
 * @schema #/definitions/selfDependencyTumblingWindowTriggerReferenceOffset
 */
export class SelfDependencyTumblingWindowTriggerReferenceOffsetPattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * @schema #/definitions/selfDependencyTumblingWindowTriggerReferenceSize
 */
export class SelfDependencyTumblingWindowTriggerReferenceSizePattern {
  public static pattern(value: string): string {
    return value;
  }
}

export enum SelfDependencyTumblingWindowTriggerReferenceType {
  SELF_DEPENDENCY_TUMBLING_WINDOW_TRIGGER_REFERENCE = 'SelfDependencyTumblingWindowTriggerReference',
}

export enum CmdkeySetupType {
  CMDKEY_SETUP = 'CmdkeySetup',
}

/**
 * Cmdkey command custom setup type properties.
 *
 * @schema #/definitions/CmdkeySetupTypeProperties
 */
export interface CmdkeySetupTypeProperties {
  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/CmdkeySetupTypeProperties#password
   */
  readonly password: SecretBase;

  /**
   * The server name of data source access.
   *
   * @schema #/definitions/CmdkeySetupTypeProperties#targetName
   */
  readonly targetName: CmdkeySetupTypePropertiesTargetName;

  /**
   * The user name of data source access.
   *
   * @schema #/definitions/CmdkeySetupTypeProperties#userName
   */
  readonly userName: CmdkeySetupTypePropertiesUserName;

}

export enum EnvironmentVariableSetupType {
  ENVIRONMENT_VARIABLE_SETUP = 'EnvironmentVariableSetup',
}

/**
 * Environment variable custom setup type properties.
 *
 * @schema #/definitions/EnvironmentVariableSetupTypeProperties
 */
export interface EnvironmentVariableSetupTypeProperties {
  /**
   * The name of the environment variable.
   *
   * @schema #/definitions/EnvironmentVariableSetupTypeProperties#variableName
   */
  readonly variableName: string;

  /**
   * The value of the environment variable.
   *
   * @schema #/definitions/EnvironmentVariableSetupTypeProperties#variableValue
   */
  readonly variableValue: string;

}

export enum ComponentSetupType {
  COMPONENT_SETUP = 'ComponentSetup',
}

/**
 * Installation of licensed component setup type properties.
 *
 * @schema #/definitions/LicensedComponentSetupTypeProperties
 */
export interface LicensedComponentSetupTypeProperties {
  /**
   * The name of the 3rd party component.
   *
   * @schema #/definitions/LicensedComponentSetupTypeProperties#componentName
   */
  readonly componentName: string;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/LicensedComponentSetupTypeProperties#licenseKey
   */
  readonly licenseKey?: SecretBase;

}

export enum AzPowerShellSetupType {
  AZ_POWER_SHELL_SETUP = 'AzPowerShellSetup',
}

/**
 * Installation of Azure PowerShell type properties.
 *
 * @schema #/definitions/AzPowerShellSetupTypeProperties
 */
export interface AzPowerShellSetupTypeProperties {
  /**
   * The required version of Azure PowerShell to install.
   *
   * @schema #/definitions/AzPowerShellSetupTypeProperties#version
   */
  readonly version: string;

}

export enum ExpressionType {
  EXPRESSION = 'Expression',
}

/**
 * Resource for which Azure Auth token will be requested when using MSI Authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityAuthenticationResource
 */
export interface WebActivityAuthenticationResource {
}

/**
 * Web activity authentication user name for basic authentication or ClientID when used for ServicePrincipal. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityAuthenticationUsername
 */
export interface WebActivityAuthenticationUsername {
}

/**
 * TenantId for which Azure Auth token will be requested when using ServicePrincipal Authentication. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/webActivityAuthenticationUserTenant
 */
export interface WebActivityAuthenticationUserTenant {
}

/**
 * Settings for copy activity log.
 *
 * @schema #/definitions/CopyActivityLogSettings
 */
export interface CopyActivityLogSettings {
  /**
   * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/CopyActivityLogSettings#enableReliableLogging
   */
  readonly enableReliableLogging?: CopyActivityLogSettingsEnableReliableLogging;

  /**
   * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CopyActivityLogSettings#logLevel
   */
  readonly logLevel?: CopyActivityLogSettingsLogLevel;

}

/**
 * Specifies whether to enable copy activity log. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/logSettingsEnableCopyActivityLog
 */
export interface LogSettingsEnableCopyActivityLog {
}

/**
 * Log location settings.
 *
 * @schema #/definitions/LogLocationSettings
 */
export interface LogLocationSettings {
  /**
   * Linked service reference type.
   *
   * @schema #/definitions/LogLocationSettings#linkedServiceName
   */
  readonly linkedServiceName: LinkedServiceReference;

  /**
   * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/LogLocationSettings#path
   */
  readonly path?: LogLocationSettingsPath;

}

/**
 * @schema #/definitions/logStorageSettingsAdditionalProperties
 */
export interface LogStorageSettingsAdditionalProperties {
}

/**
 * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/logStorageSettingsEnableReliableLogging
 */
export interface LogStorageSettingsEnableReliableLogging {
}

/**
 * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/logStorageSettingsLogLevel
 */
export interface LogStorageSettingsLogLevel {
}

/**
 * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/logStorageSettingsPath
 */
export interface LogStorageSettingsPath {
}

/**
 * @schema #/definitions/redirectIncompatibleRowSettingsAdditionalProperties
 */
export interface RedirectIncompatibleRowSettingsAdditionalProperties {
}

/**
 * Name of the Azure Storage, Storage SAS, or Azure Data Lake Store linked service used for redirecting incompatible row. Must be specified if redirectIncompatibleRowSettings is specified. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/redirectIncompatibleRowSettingsLinkedServiceName
 */
export interface RedirectIncompatibleRowSettingsLinkedServiceName {
}

/**
 * The path for storing the redirect incompatible row data. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/redirectIncompatibleRowSettingsPath
 */
export interface RedirectIncompatibleRowSettingsPath {
}

/**
 * A copy activity DelimitedText sink.
 *
 * @schema #/definitions/DelimitedTextSink
 */
export interface DelimitedTextSink {
  /**
   * Delimited text write settings.
   *
   * @schema #/definitions/DelimitedTextSink#formatSettings
   */
  readonly formatSettings?: DelimitedTextWriteSettings;

  /**
   * Connector write settings.
   *
   * @schema #/definitions/DelimitedTextSink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/DelimitedTextSink#type
   */
  readonly type: DelimitedTextSinkType;

}

/**
 * A copy activity Json sink.
 *
 * @schema #/definitions/JsonSink
 */
export interface JsonSink {
  /**
   * Json write settings.
   *
   * @schema #/definitions/JsonSink#formatSettings
   */
  readonly formatSettings?: JsonWriteSettings;

  /**
   * Connector write settings.
   *
   * @schema #/definitions/JsonSink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/JsonSink#type
   */
  readonly type: JsonSinkType;

}

/**
 * A copy activity ORC sink.
 *
 * @schema #/definitions/OrcSink
 */
export interface OrcSink {
  /**
   * Orc write settings.
   *
   * @schema #/definitions/OrcSink#formatSettings
   */
  readonly formatSettings?: OrcWriteSettings;

  /**
   * Connector write settings.
   *
   * @schema #/definitions/OrcSink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/OrcSink#type
   */
  readonly type: OrcSinkType;

}

/**
 * A copy activity Rest service Sink.
 *
 * @schema #/definitions/RestSink
 */
export interface RestSink {
  /**
   * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSink#additionalHeaders
   */
  readonly additionalHeaders?: RestSinkAdditionalHeaders;

  /**
   * Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip. 
   *
   * @default None. And The Only Supported option is Gzip. 
   * @schema #/definitions/RestSink#httpCompressionType
   */
  readonly httpCompressionType?: RestSinkHttpCompressionType;

  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/RestSink#httpRequestTimeout
   */
  readonly httpRequestTimeout?: RestSinkHttpRequestTimeout;

  /**
   * The time to await before sending next request, in milliseconds 
   *
   * @schema #/definitions/RestSink#requestInterval
   */
  readonly requestInterval?: RestSinkRequestInterval;

  /**
   * The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSink#requestMethod
   */
  readonly requestMethod?: RestSinkRequestMethod;

  /**
   * @schema #/definitions/RestSink#type
   */
  readonly type: RestSinkType;

}

/**
 * A copy activity Azure PostgreSQL sink.
 *
 * @schema #/definitions/AzurePostgreSqlSink
 */
export interface AzurePostgreSqlSink {
  /**
   * A query to execute before starting the copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlSink#preCopyScript
   */
  readonly preCopyScript?: AzurePostgreSqlSinkPreCopyScript;

  /**
   * @schema #/definitions/AzurePostgreSqlSink#type
   */
  readonly type: AzurePostgreSqlSinkType;

}

/**
 * A copy activity Azure MySql sink.
 *
 * @schema #/definitions/AzureMySqlSink
 */
export interface AzureMySqlSink {
  /**
   * A query to execute before starting the copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMySqlSink#preCopyScript
   */
  readonly preCopyScript?: AzureMySqlSinkPreCopyScript;

  /**
   * @schema #/definitions/AzureMySqlSink#type
   */
  readonly type: AzureMySqlSinkType;

}

/**
 * A copy activity Azure Databricks Delta Lake sink.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeSink
 */
export interface AzureDatabricksDeltaLakeSink {
  /**
   * Azure Databricks Delta Lake import command settings.
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeSink#importSettings
   */
  readonly importSettings?: AzureDatabricksDeltaLakeImportCommand;

  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeSink#preCopyScript
   */
  readonly preCopyScript?: AzureDatabricksDeltaLakeSinkPreCopyScript;

  /**
   * @schema #/definitions/AzureDatabricksDeltaLakeSink#type
   */
  readonly type: AzureDatabricksDeltaLakeSinkType;

}

/**
 * A copy activity SAP Cloud for Customer sink.
 *
 * @schema #/definitions/SapCloudForCustomerSink
 */
export interface SapCloudForCustomerSink {
  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/SapCloudForCustomerSink#httpRequestTimeout
   */
  readonly httpRequestTimeout?: SapCloudForCustomerSinkHttpRequestTimeout;

  /**
   * @schema #/definitions/SapCloudForCustomerSink#type
   */
  readonly type: SapCloudForCustomerSinkType;

  /**
   * The write behavior for the operation. Default is 'Insert'.
   *
   * @default Insert'.
   * @schema #/definitions/SapCloudForCustomerSink#writeBehavior
   */
  readonly writeBehavior?: SapCloudForCustomerSinkWriteBehavior;

}

/**
 * A copy activity Azure Queue sink.
 *
 * @schema #/definitions/AzureQueueSink
 */
export interface AzureQueueSink {
  /**
   * @schema #/definitions/AzureQueueSink#type
   */
  readonly type: AzureQueueSinkType;

}

/**
 * A copy activity Azure Table sink.
 *
 * @schema #/definitions/AzureTableSink
 */
export interface AzureTableSink {
  /**
   * Azure Table default partition key value. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableSink#azureTableDefaultPartitionKeyValue
   */
  readonly azureTableDefaultPartitionKeyValue?: AzureTableSinkAzureTableDefaultPartitionKeyValue;

  /**
   * Azure Table insert type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableSink#azureTableInsertType
   */
  readonly azureTableInsertType?: AzureTableSinkAzureTableInsertType;

  /**
   * Azure Table partition key name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableSink#azureTablePartitionKeyName
   */
  readonly azureTablePartitionKeyName?: AzureTableSinkAzureTablePartitionKeyName;

  /**
   * Azure Table row key name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableSink#azureTableRowKeyName
   */
  readonly azureTableRowKeyName?: AzureTableSinkAzureTableRowKeyName;

  /**
   * @schema #/definitions/AzureTableSink#type
   */
  readonly type: AzureTableSinkType;

}

/**
 * A copy activity Avro sink.
 *
 * @schema #/definitions/AvroSink
 */
export interface AvroSink {
  /**
   * Avro write settings.
   *
   * @schema #/definitions/AvroSink#formatSettings
   */
  readonly formatSettings?: AvroWriteSettings;

  /**
   * Connector write settings.
   *
   * @schema #/definitions/AvroSink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/AvroSink#type
   */
  readonly type: AvroSinkType;

}

/**
 * A copy activity Parquet sink.
 *
 * @schema #/definitions/ParquetSink
 */
export interface ParquetSink {
  /**
   * Parquet write settings.
   *
   * @schema #/definitions/ParquetSink#formatSettings
   */
  readonly formatSettings?: ParquetWriteSettings;

  /**
   * Connector write settings.
   *
   * @schema #/definitions/ParquetSink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/ParquetSink#type
   */
  readonly type: ParquetSinkType;

}

/**
 * A copy activity Binary sink.
 *
 * @schema #/definitions/BinarySink
 */
export interface BinarySink {
  /**
   * Connector write settings.
   *
   * @schema #/definitions/BinarySink#storeSettings
   */
  readonly storeSettings?: StoreWriteSettings;

  /**
   * @schema #/definitions/BinarySink#type
   */
  readonly type: BinarySinkType;

}

/**
 * A copy activity Azure Blob sink.
 *
 * @schema #/definitions/BlobSink
 */
export interface BlobSink {
  /**
   * Blob writer add header. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/BlobSink#blobWriterAddHeader
   */
  readonly blobWriterAddHeader?: BlobSinkBlobWriterAddHeader;

  /**
   * Blob writer date time format. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/BlobSink#blobWriterDateTimeFormat
   */
  readonly blobWriterDateTimeFormat?: BlobSinkBlobWriterDateTimeFormat;

  /**
   * Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/BlobSink#blobWriterOverwriteFiles
   */
  readonly blobWriterOverwriteFiles?: BlobSinkBlobWriterOverwriteFiles;

  /**
   * The type of copy behavior for copy sink.
   *
   * @schema #/definitions/BlobSink#copyBehavior
   */
  readonly copyBehavior?: BlobSinkCopyBehavior;

  /**
   * @schema #/definitions/BlobSink#type
   */
  readonly type: BlobSinkType;

}

/**
 * A copy activity file system sink.
 *
 * @schema #/definitions/FileSystemSink
 */
export interface FileSystemSink {
  /**
   * The type of copy behavior for copy sink.
   *
   * @schema #/definitions/FileSystemSink#copyBehavior
   */
  readonly copyBehavior?: FileSystemSinkCopyBehavior;

  /**
   * @schema #/definitions/FileSystemSink#type
   */
  readonly type: FileSystemSinkType;

}

/**
 * A copy activity Document Database Collection sink.
 *
 * @schema #/definitions/DocumentDbCollectionSink
 */
export interface DocumentDbCollectionSink {
  /**
   * Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
   *
   * @default dot). Type: string (or Expression with resultType string).
   * @schema #/definitions/DocumentDbCollectionSink#nestingSeparator
   */
  readonly nestingSeparator?: DocumentDbCollectionSinkNestingSeparator;

  /**
   * @schema #/definitions/DocumentDbCollectionSink#type
   */
  readonly type: DocumentDbCollectionSinkType;

  /**
   * Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.
   *
   * @schema #/definitions/DocumentDbCollectionSink#writeBehavior
   */
  readonly writeBehavior?: DocumentDbCollectionSinkWriteBehavior;

}

/**
 * A copy activity Azure CosmosDB (SQL API) Collection sink.
 *
 * @schema #/definitions/CosmosDbSqlApiSink
 */
export interface CosmosDbSqlApiSink {
  /**
   * @schema #/definitions/CosmosDbSqlApiSink#type
   */
  readonly type: CosmosDbSqlApiSinkType;

  /**
   * Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.
   *
   * @schema #/definitions/CosmosDbSqlApiSink#writeBehavior
   */
  readonly writeBehavior?: CosmosDbSqlApiSinkWriteBehavior;

}

/**
 * A copy activity SQL sink.
 *
 * @schema #/definitions/SqlSink
 */
export interface SqlSink {
  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSink#preCopyScript
   */
  readonly preCopyScript?: SqlSinkPreCopyScript;

  /**
   * SQL writer stored procedure name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSink#sqlWriterStoredProcedureName
   */
  readonly sqlWriterStoredProcedureName?: SqlSinkSqlWriterStoredProcedureName;

  /**
   * SQL writer table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSink#sqlWriterTableType
   */
  readonly sqlWriterTableType?: SqlSinkSqlWriterTableType;

  /**
   * SQL stored procedure parameters.
   *
   * @schema #/definitions/SqlSink#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlSinkStoredProcedureParameters;

  /**
   * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSink#storedProcedureTableTypeParameterName
   */
  readonly storedProcedureTableTypeParameterName?: SqlSinkStoredProcedureTableTypeParameterName;

  /**
   * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSink#tableOption
   */
  readonly tableOption?: SqlSinkTableOption;

  /**
   * @schema #/definitions/SqlSink#type
   */
  readonly type: SqlSinkType;

}

/**
 * A copy activity SQL server sink.
 *
 * @schema #/definitions/SqlServerSink
 */
export interface SqlServerSink {
  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSink#preCopyScript
   */
  readonly preCopyScript?: SqlServerSinkPreCopyScript;

  /**
   * SQL writer stored procedure name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSink#sqlWriterStoredProcedureName
   */
  readonly sqlWriterStoredProcedureName?: SqlServerSinkSqlWriterStoredProcedureName;

  /**
   * SQL writer table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSink#sqlWriterTableType
   */
  readonly sqlWriterTableType?: SqlServerSinkSqlWriterTableType;

  /**
   * SQL stored procedure parameters.
   *
   * @schema #/definitions/SqlServerSink#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlServerSinkStoredProcedureParameters;

  /**
   * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSink#storedProcedureTableTypeParameterName
   */
  readonly storedProcedureTableTypeParameterName?: SqlServerSinkStoredProcedureTableTypeParameterName;

  /**
   * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSink#tableOption
   */
  readonly tableOption?: SqlServerSinkTableOption;

  /**
   * @schema #/definitions/SqlServerSink#type
   */
  readonly type: SqlServerSinkType;

}

/**
 * A copy activity Azure SQL sink.
 *
 * @schema #/definitions/AzureSqlSink
 */
export interface AzureSqlSink {
  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSink#preCopyScript
   */
  readonly preCopyScript?: AzureSqlSinkPreCopyScript;

  /**
   * SQL writer stored procedure name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSink#sqlWriterStoredProcedureName
   */
  readonly sqlWriterStoredProcedureName?: AzureSqlSinkSqlWriterStoredProcedureName;

  /**
   * SQL writer table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSink#sqlWriterTableType
   */
  readonly sqlWriterTableType?: AzureSqlSinkSqlWriterTableType;

  /**
   * SQL stored procedure parameters.
   *
   * @schema #/definitions/AzureSqlSink#storedProcedureParameters
   */
  readonly storedProcedureParameters?: AzureSqlSinkStoredProcedureParameters;

  /**
   * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSink#storedProcedureTableTypeParameterName
   */
  readonly storedProcedureTableTypeParameterName?: AzureSqlSinkStoredProcedureTableTypeParameterName;

  /**
   * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSink#tableOption
   */
  readonly tableOption?: AzureSqlSinkTableOption;

  /**
   * @schema #/definitions/AzureSqlSink#type
   */
  readonly type: AzureSqlSinkType;

}

/**
 * A copy activity Azure SQL Managed Instance sink.
 *
 * @schema #/definitions/SqlMISink
 */
export interface SqlMiSink {
  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISink#preCopyScript
   */
  readonly preCopyScript?: SqlMiSinkPreCopyScript;

  /**
   * SQL writer stored procedure name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISink#sqlWriterStoredProcedureName
   */
  readonly sqlWriterStoredProcedureName?: SqlMiSinkSqlWriterStoredProcedureName;

  /**
   * SQL writer table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISink#sqlWriterTableType
   */
  readonly sqlWriterTableType?: SqlMiSinkSqlWriterTableType;

  /**
   * SQL stored procedure parameters.
   *
   * @schema #/definitions/SqlMISink#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlMiSinkStoredProcedureParameters;

  /**
   * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISink#storedProcedureTableTypeParameterName
   */
  readonly storedProcedureTableTypeParameterName?: SqlMiSinkStoredProcedureTableTypeParameterName;

  /**
   * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISink#tableOption
   */
  readonly tableOption?: SqlMiSinkTableOption;

  /**
   * @schema #/definitions/SqlMISink#type
   */
  readonly type: SqlMiSinkType;

}

/**
 * A copy activity SQL Data Warehouse sink.
 *
 * @schema #/definitions/SqlDWSink
 */
export interface SqlDwSink {
  /**
   * Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SqlDWSink#allowCopyCommand
   */
  readonly allowCopyCommand?: SqlDwSinkAllowCopyCommand;

  /**
   * Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SqlDWSink#allowPolyBase
   */
  readonly allowPolyBase?: SqlDwSinkAllowPolyBase;

  /**
   * DW Copy Command settings.
   *
   * @schema #/definitions/SqlDWSink#copyCommandSettings
   */
  readonly copyCommandSettings?: DwCopyCommandSettings;

  /**
   * PolyBase settings.
   *
   * @schema #/definitions/SqlDWSink#polyBaseSettings
   */
  readonly polyBaseSettings?: PolybaseSettings;

  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlDWSink#preCopyScript
   */
  readonly preCopyScript?: SqlDwSinkPreCopyScript;

  /**
   * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlDWSink#tableOption
   */
  readonly tableOption?: SqlDwSinkTableOption;

  /**
   * @schema #/definitions/SqlDWSink#type
   */
  readonly type: SqlDwSinkType;

}

/**
 * A copy activity snowflake sink.
 *
 * @schema #/definitions/SnowflakeSink
 */
export interface SnowflakeSink {
  /**
   * Snowflake import command settings.
   *
   * @schema #/definitions/SnowflakeSink#importSettings
   */
  readonly importSettings?: SnowflakeImportCopyCommand;

  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SnowflakeSink#preCopyScript
   */
  readonly preCopyScript?: SnowflakeSinkPreCopyScript;

  /**
   * @schema #/definitions/SnowflakeSink#type
   */
  readonly type: SnowflakeSinkType;

}

/**
 * A copy activity Oracle sink.
 *
 * @schema #/definitions/OracleSink
 */
export interface OracleSink {
  /**
   * SQL pre-copy script. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleSink#preCopyScript
   */
  readonly preCopyScript?: OracleSinkPreCopyScript;

  /**
   * @schema #/definitions/OracleSink#type
   */
  readonly type: OracleSinkType;

}

/**
 * A copy activity Azure Data Lake Store sink.
 *
 * @schema #/definitions/AzureDataLakeStoreSink
 */
export interface AzureDataLakeStoreSink {
  /**
   * The type of copy behavior for copy sink.
   *
   * @schema #/definitions/AzureDataLakeStoreSink#copyBehavior
   */
  readonly copyBehavior?: AzureDataLakeStoreSinkCopyBehavior;

  /**
   * Single File Parallel.
   *
   * @schema #/definitions/AzureDataLakeStoreSink#enableAdlsSingleFileParallel
   */
  readonly enableAdlsSingleFileParallel?: AzureDataLakeStoreSinkEnableAdlsSingleFileParallel;

  /**
   * @schema #/definitions/AzureDataLakeStoreSink#type
   */
  readonly type: AzureDataLakeStoreSinkType;

}

/**
 * A copy activity Azure Data Lake Storage Gen2 sink.
 *
 * @schema #/definitions/AzureBlobFSSink
 */
export interface AzureBlobFsSink {
  /**
   * The type of copy behavior for copy sink.
   *
   * @schema #/definitions/AzureBlobFSSink#copyBehavior
   */
  readonly copyBehavior?: AzureBlobFsSinkCopyBehavior;

  /**
   * @schema #/definitions/AzureBlobFSSink#type
   */
  readonly type: AzureBlobFsSinkType;

}

/**
 * A copy activity Azure Search Index sink.
 *
 * @schema #/definitions/AzureSearchIndexSink
 */
export interface AzureSearchIndexSink {
  /**
   * @schema #/definitions/AzureSearchIndexSink#type
   */
  readonly type: AzureSearchIndexSinkType;

  /**
   * Specify the write behavior when upserting documents into Azure Search Index.
   *
   * @schema #/definitions/AzureSearchIndexSink#writeBehavior
   */
  readonly writeBehavior?: AzureSearchIndexSinkWriteBehavior;

}

/**
 * A copy activity ODBC sink.
 *
 * @schema #/definitions/OdbcSink
 */
export interface OdbcSink {
  /**
   * A query to execute before starting the copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcSink#preCopyScript
   */
  readonly preCopyScript?: OdbcSinkPreCopyScript;

  /**
   * @schema #/definitions/OdbcSink#type
   */
  readonly type: OdbcSinkType;

}

/**
 * A copy activity Informix sink.
 *
 * @schema #/definitions/InformixSink
 */
export interface InformixSink {
  /**
   * A query to execute before starting the copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixSink#preCopyScript
   */
  readonly preCopyScript?: InformixSinkPreCopyScript;

  /**
   * @schema #/definitions/InformixSink#type
   */
  readonly type: InformixSinkType;

}

/**
 * A copy activity Microsoft Access sink.
 *
 * @schema #/definitions/MicrosoftAccessSink
 */
export interface MicrosoftAccessSink {
  /**
   * A query to execute before starting the copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessSink#preCopyScript
   */
  readonly preCopyScript?: MicrosoftAccessSinkPreCopyScript;

  /**
   * @schema #/definitions/MicrosoftAccessSink#type
   */
  readonly type: MicrosoftAccessSinkType;

}

/**
 * A copy activity Dynamics sink.
 *
 * @schema #/definitions/DynamicsSink
 */
export interface DynamicsSink {
  /**
   * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsSink#alternateKeyName
   */
  readonly alternateKeyName?: DynamicsSinkAlternateKeyName;

  /**
   * The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/DynamicsSink#ignoreNullValues
   */
  readonly ignoreNullValues?: DynamicsSinkIgnoreNullValues;

  /**
   * @schema #/definitions/DynamicsSink#type
   */
  readonly type: DynamicsSinkType;

  /**
   * The write behavior for the operation.
   *
   * @schema #/definitions/DynamicsSink#writeBehavior
   */
  readonly writeBehavior: DynamicsSinkWriteBehavior;

}

/**
 * A copy activity Dynamics CRM sink.
 *
 * @schema #/definitions/DynamicsCrmSink
 */
export interface DynamicsCrmSink {
  /**
   * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmSink#alternateKeyName
   */
  readonly alternateKeyName?: DynamicsCrmSinkAlternateKeyName;

  /**
   * The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/DynamicsCrmSink#ignoreNullValues
   */
  readonly ignoreNullValues?: DynamicsCrmSinkIgnoreNullValues;

  /**
   * @schema #/definitions/DynamicsCrmSink#type
   */
  readonly type: DynamicsCrmSinkType;

  /**
   * The write behavior for the operation.
   *
   * @schema #/definitions/DynamicsCrmSink#writeBehavior
   */
  readonly writeBehavior: DynamicsCrmSinkWriteBehavior;

}

/**
 * A copy activity Common Data Service for Apps sink.
 *
 * @schema #/definitions/CommonDataServiceForAppsSink
 */
export interface CommonDataServiceForAppsSink {
  /**
   * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsSink#alternateKeyName
   */
  readonly alternateKeyName?: CommonDataServiceForAppsSinkAlternateKeyName;

  /**
   * The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/CommonDataServiceForAppsSink#ignoreNullValues
   */
  readonly ignoreNullValues?: CommonDataServiceForAppsSinkIgnoreNullValues;

  /**
   * @schema #/definitions/CommonDataServiceForAppsSink#type
   */
  readonly type: CommonDataServiceForAppsSinkType;

  /**
   * The write behavior for the operation.
   *
   * @schema #/definitions/CommonDataServiceForAppsSink#writeBehavior
   */
  readonly writeBehavior: CommonDataServiceForAppsSinkWriteBehavior;

}

/**
 * A copy activity Azure Data Explorer sink.
 *
 * @schema #/definitions/AzureDataExplorerSink
 */
export interface AzureDataExplorerSink {
  /**
   * If set to true, any aggregation will be skipped. Default is false. Type: boolean.
   *
   * @default false. Type: boolean.
   * @schema #/definitions/AzureDataExplorerSink#flushImmediately
   */
  readonly flushImmediately?: AzureDataExplorerSinkFlushImmediately;

  /**
   * An explicit column mapping description provided in a json format. Type: string.
   *
   * @schema #/definitions/AzureDataExplorerSink#ingestionMappingAsJson
   */
  readonly ingestionMappingAsJson?: AzureDataExplorerSinkIngestionMappingAsJson;

  /**
   * A name of a pre-created csv mapping that was defined on the target Kusto table. Type: string.
   *
   * @schema #/definitions/AzureDataExplorerSink#ingestionMappingName
   */
  readonly ingestionMappingName?: AzureDataExplorerSinkIngestionMappingName;

  /**
   * @schema #/definitions/AzureDataExplorerSink#type
   */
  readonly type: AzureDataExplorerSinkType;

}

/**
 * A copy activity Salesforce sink.
 *
 * @schema #/definitions/SalesforceSink
 */
export interface SalesforceSink {
  /**
   * The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceSink#externalIdFieldName
   */
  readonly externalIdFieldName?: SalesforceSinkExternalIdFieldName;

  /**
   * The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SalesforceSink#ignoreNullValues
   */
  readonly ignoreNullValues?: SalesforceSinkIgnoreNullValues;

  /**
   * @schema #/definitions/SalesforceSink#type
   */
  readonly type: SalesforceSinkType;

  /**
   * The write behavior for the operation. Default is Insert.
   *
   * @default Insert.
   * @schema #/definitions/SalesforceSink#writeBehavior
   */
  readonly writeBehavior?: SalesforceSinkWriteBehavior;

}

/**
 * A copy activity Salesforce Service Cloud sink.
 *
 * @schema #/definitions/SalesforceServiceCloudSink
 */
export interface SalesforceServiceCloudSink {
  /**
   * The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudSink#externalIdFieldName
   */
  readonly externalIdFieldName?: SalesforceServiceCloudSinkExternalIdFieldName;

  /**
   * The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SalesforceServiceCloudSink#ignoreNullValues
   */
  readonly ignoreNullValues?: SalesforceServiceCloudSinkIgnoreNullValues;

  /**
   * @schema #/definitions/SalesforceServiceCloudSink#type
   */
  readonly type: SalesforceServiceCloudSinkType;

  /**
   * The write behavior for the operation. Default is Insert.
   *
   * @default Insert.
   * @schema #/definitions/SalesforceServiceCloudSink#writeBehavior
   */
  readonly writeBehavior?: SalesforceServiceCloudSinkWriteBehavior;

}

/**
 * A copy activity MongoDB Atlas sink.
 *
 * @schema #/definitions/MongoDbAtlasSink
 */
export interface MongoDbAtlasSink {
  /**
   * @schema #/definitions/MongoDbAtlasSink#type
   */
  readonly type: MongoDbAtlasSinkType;

  /**
   * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbAtlasSink#writeBehavior
   */
  readonly writeBehavior?: MongoDbAtlasSinkWriteBehavior;

}

/**
 * A copy activity MongoDB sink.
 *
 * @schema #/definitions/MongoDbV2Sink
 */
export interface MongoDbV2Sink {
  /**
   * @schema #/definitions/MongoDbV2Sink#type
   */
  readonly type: MongoDbV2SinkType;

  /**
   * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbV2Sink#writeBehavior
   */
  readonly writeBehavior?: MongoDbV2SinkWriteBehavior;

}

/**
 * A copy activity sink for a CosmosDB (MongoDB API) database.
 *
 * @schema #/definitions/CosmosDbMongoDbApiSink
 */
export interface CosmosDbMongoDbApiSink {
  /**
   * @schema #/definitions/CosmosDbMongoDbApiSink#type
   */
  readonly type: CosmosDbMongoDbApiSinkType;

  /**
   * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbMongoDbApiSink#writeBehavior
   */
  readonly writeBehavior?: CosmosDbMongoDbApiSinkWriteBehavior;

}

/**
 * Skip if source/sink file changed by other concurrent write. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/skipErrorFileDataInconsistency
 */
export interface SkipErrorFileDataInconsistency {
}

/**
 * Skip if file is deleted by other client during copy. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/skipErrorFileFileMissing
 */
export interface SkipErrorFileFileMissing {
}

/**
 * A copy activity Avro source.
 *
 * @schema #/definitions/AvroSource
 */
export interface AvroSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/AvroSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Connector read setting.
   *
   * @schema #/definitions/AvroSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/AvroSource#type
   */
  readonly type: AvroSourceType;

}

/**
 * A copy activity excel source.
 *
 * @schema #/definitions/ExcelSource
 */
export interface ExcelSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/ExcelSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Connector read setting.
   *
   * @schema #/definitions/ExcelSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/ExcelSource#type
   */
  readonly type: ExcelSourceType;

}

/**
 * A copy activity Parquet source.
 *
 * @schema #/definitions/ParquetSource
 */
export interface ParquetSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/ParquetSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Connector read setting.
   *
   * @schema #/definitions/ParquetSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/ParquetSource#type
   */
  readonly type: ParquetSourceType;

}

/**
 * A copy activity DelimitedText source.
 *
 * @schema #/definitions/DelimitedTextSource
 */
export interface DelimitedTextSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/DelimitedTextSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Delimited text read settings.
   *
   * @schema #/definitions/DelimitedTextSource#formatSettings
   */
  readonly formatSettings?: DelimitedTextReadSettings;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/DelimitedTextSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/DelimitedTextSource#type
   */
  readonly type: DelimitedTextSourceType;

}

/**
 * A copy activity Json source.
 *
 * @schema #/definitions/JsonSource
 */
export interface JsonSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/JsonSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Json read settings.
   *
   * @schema #/definitions/JsonSource#formatSettings
   */
  readonly formatSettings?: JsonReadSettings;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/JsonSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/JsonSource#type
   */
  readonly type: JsonSourceType;

}

/**
 * A copy activity Xml source.
 *
 * @schema #/definitions/XmlSource
 */
export interface XmlSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/XmlSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Xml read settings.
   *
   * @schema #/definitions/XmlSource#formatSettings
   */
  readonly formatSettings?: XmlReadSettings;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/XmlSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/XmlSource#type
   */
  readonly type: XmlSourceType;

}

/**
 * A copy activity ORC source.
 *
 * @schema #/definitions/OrcSource
 */
export interface OrcSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/OrcSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Connector read setting.
   *
   * @schema #/definitions/OrcSource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/OrcSource#type
   */
  readonly type: OrcSourceType;

}

/**
 * A copy activity Binary source.
 *
 * @schema #/definitions/BinarySource
 */
export interface BinarySource {
  /**
   * Binary read settings.
   *
   * @schema #/definitions/BinarySource#formatSettings
   */
  readonly formatSettings?: BinaryReadSettings;

  /**
   * Connector read setting.
   *
   * @schema #/definitions/BinarySource#storeSettings
   */
  readonly storeSettings?: StoreReadSettings;

  /**
   * @schema #/definitions/BinarySource#type
   */
  readonly type: BinarySourceType;

}

/**
 * Copy activity sources of tabular type.
 *
 * @schema #/definitions/TabularSource
 */
export class TabularSource {
  public static fromAzureTableSource(value: AzureTableSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromInformixSource(value: InformixSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromDb2Source(value: Db2Source): TabularSource {
    return new TabularSource(value);
  }
  public static fromOdbcSource(value: OdbcSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromMySqlSource(value: MySqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromPostgreSqlSource(value: PostgreSqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSybaseSource(value: SybaseSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapBwSource(value: SapBwSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSalesforceSource(value: SalesforceSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapCloudForCustomerSource(value: SapCloudForCustomerSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapEccSource(value: SapEccSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapHanaSource(value: SapHanaSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapOpenHubSource(value: SapOpenHubSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSapTableSource(value: SapTableSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSqlSource(value: SqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSqlServerSource(value: SqlServerSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAzureSqlSource(value: AzureSqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSqlMiSource(value: SqlMiSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSqlDwSource(value: SqlDwSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAzureMySqlSource(value: AzureMySqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromTeradataSource(value: TeradataSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromCassandraSource(value: CassandraSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAmazonMwsSource(value: AmazonMwsSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAzurePostgreSqlSource(value: AzurePostgreSqlSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromConcurSource(value: ConcurSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromCouchbaseSource(value: CouchbaseSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromDrillSource(value: DrillSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromEloquaSource(value: EloquaSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromGoogleBigQuerySource(value: GoogleBigQuerySource): TabularSource {
    return new TabularSource(value);
  }
  public static fromGreenplumSource(value: GreenplumSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromHBaseSource(value: HBaseSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromHiveSource(value: HiveSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromHubspotSource(value: HubspotSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromImpalaSource(value: ImpalaSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromJiraSource(value: JiraSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromMagentoSource(value: MagentoSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromMariaDbSource(value: MariaDbSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAzureMariaDbSource(value: AzureMariaDbSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromMarketoSource(value: MarketoSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromPaypalSource(value: PaypalSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromPhoenixSource(value: PhoenixSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromPrestoSource(value: PrestoSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromQuickBooksSource(value: QuickBooksSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromServiceNowSource(value: ServiceNowSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromShopifySource(value: ShopifySource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSparkSource(value: SparkSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSquareSource(value: SquareSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromXeroSource(value: XeroSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromZohoSource(value: ZohoSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromNetezzaSource(value: NetezzaSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromVerticaSource(value: VerticaSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromSalesforceMarketingCloudSource(value: SalesforceMarketingCloudSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromResponsysSource(value: ResponsysSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromDynamicsAxSource(value: DynamicsAxSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromOracleServiceCloudSource(value: OracleServiceCloudSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromGoogleAdWordsSource(value: GoogleAdWordsSource): TabularSource {
    return new TabularSource(value);
  }
  public static fromAmazonRedshiftSource(value: AmazonRedshiftSource): TabularSource {
    return new TabularSource(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * A copy activity Azure Blob source.
 *
 * @schema #/definitions/BlobSource
 */
export interface BlobSource {
  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/BlobSource#recursive
   */
  readonly recursive?: BlobSourceRecursive;

  /**
   * Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/BlobSource#skipHeaderLineCount
   */
  readonly skipHeaderLineCount?: BlobSourceSkipHeaderLineCount;

  /**
   * Treat empty as null. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/BlobSource#treatEmptyAsNull
   */
  readonly treatEmptyAsNull?: BlobSourceTreatEmptyAsNull;

  /**
   * @schema #/definitions/BlobSource#type
   */
  readonly type: BlobSourceType;

}

/**
 * A copy activity Document Database Collection source.
 *
 * @schema #/definitions/DocumentDbCollectionSource
 */
export interface DocumentDbCollectionSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/DocumentDbCollectionSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Nested properties separator. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DocumentDbCollectionSource#nestingSeparator
   */
  readonly nestingSeparator?: DocumentDbCollectionSourceNestingSeparator;

  /**
   * Documents query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DocumentDbCollectionSource#query
   */
  readonly query?: DocumentDbCollectionSourceQuery;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/DocumentDbCollectionSource#queryTimeout
   */
  readonly queryTimeout?: DocumentDbCollectionSourceQueryTimeout;

  /**
   * @schema #/definitions/DocumentDbCollectionSource#type
   */
  readonly type: DocumentDbCollectionSourceType;

}

/**
 * A copy activity Azure CosmosDB (SQL API) Collection source.
 *
 * @schema #/definitions/CosmosDbSqlApiSource
 */
export interface CosmosDbSqlApiSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/CosmosDbSqlApiSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Whether detect primitive values as datetime values. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/CosmosDbSqlApiSource#detectDatetime
   */
  readonly detectDatetime?: CosmosDbSqlApiSourceDetectDatetime;

  /**
   * Page size of the result. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/CosmosDbSqlApiSource#pageSize
   */
  readonly pageSize?: CosmosDbSqlApiSourcePageSize;

  /**
   * Preferred regions. Type: array of strings (or Expression with resultType array of strings).
   *
   * @schema #/definitions/CosmosDbSqlApiSource#preferredRegions
   */
  readonly preferredRegions?: CosmosDbSqlApiSourcePreferredRegions;

  /**
   * SQL API query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbSqlApiSource#query
   */
  readonly query?: CosmosDbSqlApiSourceQuery;

  /**
   * @schema #/definitions/CosmosDbSqlApiSource#type
   */
  readonly type: CosmosDbSqlApiSourceType;

}

/**
 * A copy activity Dynamics source.
 *
 * @schema #/definitions/DynamicsSource
 */
export interface DynamicsSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/DynamicsSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsSource#query
   */
  readonly query?: DynamicsSourceQuery;

  /**
   * @schema #/definitions/DynamicsSource#type
   */
  readonly type: DynamicsSourceType;

}

/**
 * A copy activity Dynamics CRM source.
 *
 * @schema #/definitions/DynamicsCrmSource
 */
export interface DynamicsCrmSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/DynamicsCrmSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * FetchXML is a proprietary query language that is used in Microsoft Dynamics CRM (online & on-premises). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsCrmSource#query
   */
  readonly query?: DynamicsCrmSourceQuery;

  /**
   * @schema #/definitions/DynamicsCrmSource#type
   */
  readonly type: DynamicsCrmSourceType;

}

/**
 * A copy activity Common Data Service for Apps source.
 *
 * @schema #/definitions/CommonDataServiceForAppsSource
 */
export interface CommonDataServiceForAppsSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/CommonDataServiceForAppsSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * FetchXML is a proprietary query language that is used in Microsoft Common Data Service for Apps (online & on-premises). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CommonDataServiceForAppsSource#query
   */
  readonly query?: CommonDataServiceForAppsSourceQuery;

  /**
   * @schema #/definitions/CommonDataServiceForAppsSource#type
   */
  readonly type: CommonDataServiceForAppsSourceType;

}

/**
 * A copy activity source for various relational databases.
 *
 * @schema #/definitions/RelationalSource
 */
export interface RelationalSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/RelationalSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RelationalSource#query
   */
  readonly query?: RelationalSourceQuery;

  /**
   * @schema #/definitions/RelationalSource#type
   */
  readonly type: RelationalSourceType;

}

/**
 * A copy activity source for Microsoft Access.
 *
 * @schema #/definitions/MicrosoftAccessSource
 */
export interface MicrosoftAccessSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/MicrosoftAccessSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MicrosoftAccessSource#query
   */
  readonly query?: MicrosoftAccessSourceQuery;

  /**
   * @schema #/definitions/MicrosoftAccessSource#type
   */
  readonly type: MicrosoftAccessSourceType;

}

/**
 * A copy activity source for OData source.
 *
 * @schema #/definitions/ODataSource
 */
export interface ODataSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/ODataSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/ODataSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: ODataSourceHttpRequestTimeout;

  /**
   * OData query. For example, "$top=1". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ODataSource#query
   */
  readonly query?: ODataSourceQuery;

  /**
   * @schema #/definitions/ODataSource#type
   */
  readonly type: ODataSourceType;

}

/**
 * A copy activity Salesforce Service Cloud source.
 *
 * @schema #/definitions/SalesforceServiceCloudSource
 */
export interface SalesforceServiceCloudSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/SalesforceServiceCloudSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceServiceCloudSource#query
   */
  readonly query?: SalesforceServiceCloudSourceQuery;

  /**
   * The read behavior for the operation. Default is Query.
   *
   * @default Query.
   * @schema #/definitions/SalesforceServiceCloudSource#readBehavior
   */
  readonly readBehavior?: SalesforceServiceCloudSourceReadBehavior;

  /**
   * @schema #/definitions/SalesforceServiceCloudSource#type
   */
  readonly type: SalesforceServiceCloudSourceType;

}

/**
 * A copy activity Rest service source.
 *
 * @schema #/definitions/RestSource
 */
export interface RestSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/RestSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSource#additionalHeaders
   */
  readonly additionalHeaders?: RestSourceAdditionalHeaders;

  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/RestSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: RestSourceHttpRequestTimeout;

  /**
   * The pagination rules to compose next page requests. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSource#paginationRules
   */
  readonly paginationRules?: RestSourcePaginationRules;

  /**
   * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSource#requestBody
   */
  readonly requestBody?: RestSourceRequestBody;

  /**
   * The time to await before sending next page request. 
   *
   * @schema #/definitions/RestSource#requestInterval
   */
  readonly requestInterval?: RestSourceRequestInterval;

  /**
   * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RestSource#requestMethod
   */
  readonly requestMethod?: RestSourceRequestMethod;

  /**
   * @schema #/definitions/RestSource#type
   */
  readonly type: RestSourceType;

}

/**
 * A copy activity file system source.
 *
 * @schema #/definitions/FileSystemSource
 */
export interface FileSystemSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/FileSystemSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/FileSystemSource#recursive
   */
  readonly recursive?: FileSystemSourceRecursive;

  /**
   * @schema #/definitions/FileSystemSource#type
   */
  readonly type: FileSystemSourceType;

}

/**
 * A copy activity HDFS source.
 *
 * @schema #/definitions/HdfsSource
 */
export interface HdfsSource {
  /**
   * Distcp settings.
   *
   * @schema #/definitions/HdfsSource#distcpSettings
   */
  readonly distcpSettings?: DistcpSettings;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/HdfsSource#recursive
   */
  readonly recursive?: HdfsSourceRecursive;

  /**
   * @schema #/definitions/HdfsSource#type
   */
  readonly type: HdfsSourceType;

}

/**
 * A copy activity Azure Data Explorer (Kusto) source.
 *
 * @schema #/definitions/AzureDataExplorerSource
 */
export interface AzureDataExplorerSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/AzureDataExplorerSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * The name of the Boolean option that controls whether truncation is applied to result-sets that go beyond a certain row-count limit.
   *
   * @schema #/definitions/AzureDataExplorerSource#noTruncation
   */
  readonly noTruncation?: AzureDataExplorerSourceNoTruncation;

  /**
   * Database query. Should be a Kusto Query Language (KQL) query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataExplorerSource#query
   */
  readonly query: AzureDataExplorerSourceQuery;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..
   *
   * @schema #/definitions/AzureDataExplorerSource#queryTimeout
   */
  readonly queryTimeout?: AzureDataExplorerSourceQueryTimeout;

  /**
   * @schema #/definitions/AzureDataExplorerSource#type
   */
  readonly type: AzureDataExplorerSourceType;

}

/**
 * A copy activity Oracle source.
 *
 * @schema #/definitions/OracleSource
 */
export interface OracleSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/OracleSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Oracle reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleSource#oracleReaderQuery
   */
  readonly oracleReaderQuery?: OracleSourceOracleReaderQuery;

  /**
   * The partition mechanism that will be used for Oracle read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/OracleSource#partitionOption
   */
  readonly partitionOption?: OracleSourcePartitionOption;

  /**
   * The settings that will be leveraged for Oracle source partitioning.
   *
   * @schema #/definitions/OracleSource#partitionSettings
   */
  readonly partitionSettings?: OraclePartitionSettings;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/OracleSource#queryTimeout
   */
  readonly queryTimeout?: OracleSourceQueryTimeout;

  /**
   * @schema #/definitions/OracleSource#type
   */
  readonly type: OracleSourceType;

}

/**
 * A copy activity source for web page table.
 *
 * @schema #/definitions/WebSource
 */
export interface WebSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/WebSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * @schema #/definitions/WebSource#type
   */
  readonly type: WebSourceType;

}

/**
 * A copy activity source for a MongoDB database.
 *
 * @schema #/definitions/MongoDbSource
 */
export interface MongoDbSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/MongoDbSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbSource#query
   */
  readonly query?: MongoDbSourceQuery;

  /**
   * @schema #/definitions/MongoDbSource#type
   */
  readonly type: MongoDbSourceType;

}

/**
 * A copy activity source for a MongoDB Atlas database.
 *
 * @schema #/definitions/MongoDbAtlasSource
 */
export interface MongoDbAtlasSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/MongoDbAtlasSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Specifies the number of documents to return in each batch of the response from MongoDB Atlas instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/MongoDbAtlasSource#batchSize
   */
  readonly batchSize?: MongoDbAtlasSourceBatchSize;

  /**
   * Cursor methods for Mongodb query
   *
   * @schema #/definitions/MongoDbAtlasSource#cursorMethods
   */
  readonly cursorMethods?: MongoDbCursorMethodsProperties;

  /**
   * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbAtlasSource#filter
   */
  readonly filter?: MongoDbAtlasSourceFilter;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/MongoDbAtlasSource#queryTimeout
   */
  readonly queryTimeout?: MongoDbAtlasSourceQueryTimeout;

  /**
   * @schema #/definitions/MongoDbAtlasSource#type
   */
  readonly type: MongoDbAtlasSourceType;

}

/**
 * A copy activity source for a MongoDB database.
 *
 * @schema #/definitions/MongoDbV2Source
 */
export interface MongoDbV2Source {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/MongoDbV2Source#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/MongoDbV2Source#batchSize
   */
  readonly batchSize?: MongoDbV2SourceBatchSize;

  /**
   * Cursor methods for Mongodb query
   *
   * @schema #/definitions/MongoDbV2Source#cursorMethods
   */
  readonly cursorMethods?: MongoDbCursorMethodsProperties;

  /**
   * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbV2Source#filter
   */
  readonly filter?: MongoDbV2SourceFilter;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/MongoDbV2Source#queryTimeout
   */
  readonly queryTimeout?: MongoDbV2SourceQueryTimeout;

  /**
   * @schema #/definitions/MongoDbV2Source#type
   */
  readonly type: MongoDbV2SourceType;

}

/**
 * A copy activity source for a CosmosDB (MongoDB API) database.
 *
 * @schema #/definitions/CosmosDbMongoDbApiSource
 */
export interface CosmosDbMongoDbApiSource {
  /**
   * Specifies the additional columns to be added to source data. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/CosmosDbMongoDbApiSource#additionalColumns
   */
  readonly additionalColumns?: AdditionalColumns[];

  /**
   * Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/CosmosDbMongoDbApiSource#batchSize
   */
  readonly batchSize?: CosmosDbMongoDbApiSourceBatchSize;

  /**
   * Cursor methods for Mongodb query
   *
   * @schema #/definitions/CosmosDbMongoDbApiSource#cursorMethods
   */
  readonly cursorMethods?: MongoDbCursorMethodsProperties;

  /**
   * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CosmosDbMongoDbApiSource#filter
   */
  readonly filter?: CosmosDbMongoDbApiSourceFilter;

  /**
   * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/CosmosDbMongoDbApiSource#queryTimeout
   */
  readonly queryTimeout?: CosmosDbMongoDbApiSourceQueryTimeout;

  /**
   * @schema #/definitions/CosmosDbMongoDbApiSource#type
   */
  readonly type: CosmosDbMongoDbApiSourceType;

}

/**
 * A copy activity source for an Office 365 service.
 *
 * @schema #/definitions/Office365Source
 */
export interface Office365Source {
  /**
   * The groups containing all the users. Type: array of strings (or Expression with resultType array of strings).
   *
   * @schema #/definitions/Office365Source#allowedGroups
   */
  readonly allowedGroups?: Office365SourceAllowedGroups;

  /**
   * The Column to apply the <paramref name="StartTime"/> and <paramref name="EndTime"/>. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365Source#dateFilterColumn
   */
  readonly dateFilterColumn?: Office365SourceDateFilterColumn;

  /**
   * End time of the requested range for this dataset. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365Source#endTime
   */
  readonly endTime?: Office365SourceEndTime;

  /**
   * The columns to be read out from the Office 365 table. Type: array of objects (or Expression with resultType array of objects). Example: [ { "name": "Id" }, { "name": "CreatedDateTime" } ]
   *
   * @schema #/definitions/Office365Source#outputColumns
   */
  readonly outputColumns?: Office365SourceOutputColumns;

  /**
   * Start time of the requested range for this dataset. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365Source#startTime
   */
  readonly startTime?: Office365SourceStartTime;

  /**
   * @schema #/definitions/Office365Source#type
   */
  readonly type: Office365SourceType;

  /**
   * The user scope uri. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Office365Source#userScopeFilterUri
   */
  readonly userScopeFilterUri?: Office365SourceUserScopeFilterUri;

}

/**
 * A copy activity Azure Data Lake source.
 *
 * @schema #/definitions/AzureDataLakeStoreSource
 */
export interface AzureDataLakeStoreSource {
  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureDataLakeStoreSource#recursive
   */
  readonly recursive?: AzureDataLakeStoreSourceRecursive;

  /**
   * @schema #/definitions/AzureDataLakeStoreSource#type
   */
  readonly type: AzureDataLakeStoreSourceType;

}

/**
 * A copy activity Azure BlobFS source.
 *
 * @schema #/definitions/AzureBlobFSSource
 */
export interface AzureBlobFsSource {
  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureBlobFSSource#recursive
   */
  readonly recursive?: AzureBlobFsSourceRecursive;

  /**
   * Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AzureBlobFSSource#skipHeaderLineCount
   */
  readonly skipHeaderLineCount?: AzureBlobFsSourceSkipHeaderLineCount;

  /**
   * Treat empty as null. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/AzureBlobFSSource#treatEmptyAsNull
   */
  readonly treatEmptyAsNull?: AzureBlobFsSourceTreatEmptyAsNull;

  /**
   * @schema #/definitions/AzureBlobFSSource#type
   */
  readonly type: AzureBlobFsSourceType;

}

/**
 * A copy activity source for an HTTP file.
 *
 * @schema #/definitions/HttpSource
 */
export interface HttpSource {
  /**
   * Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/HttpSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: HttpSourceHttpRequestTimeout;

  /**
   * @schema #/definitions/HttpSource#type
   */
  readonly type: HttpSourceType;

}

/**
 * A copy activity snowflake source.
 *
 * @schema #/definitions/SnowflakeSource
 */
export interface SnowflakeSource {
  /**
   * Snowflake export command settings.
   *
   * @schema #/definitions/SnowflakeSource#exportSettings
   */
  readonly exportSettings?: SnowflakeExportCopyCommand;

  /**
   * Snowflake Sql query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SnowflakeSource#query
   */
  readonly query?: SnowflakeSourceQuery;

  /**
   * @schema #/definitions/SnowflakeSource#type
   */
  readonly type: SnowflakeSourceType;

}

/**
 * A copy activity Azure Databricks Delta Lake source.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeSource
 */
export interface AzureDatabricksDeltaLakeSource {
  /**
   * Azure Databricks Delta Lake export command settings.
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeSource#exportSettings
   */
  readonly exportSettings?: AzureDatabricksDeltaLakeExportCommand;

  /**
   * Azure Databricks Delta Lake Sql query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeSource#query
   */
  readonly query?: AzureDatabricksDeltaLakeSourceQuery;

  /**
   * @schema #/definitions/AzureDatabricksDeltaLakeSource#type
   */
  readonly type: AzureDatabricksDeltaLakeSourceType;

}

/**
 * A copy activity source for sharePoint online list source.
 *
 * @schema #/definitions/SharePointOnlineListSource
 */
export interface SharePointOnlineListSource {
  /**
   * The wait time to get a response from SharePoint Online. Default value is 5 minutes (00:05:00). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/SharePointOnlineListSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: SharePointOnlineListSourceHttpRequestTimeout;

  /**
   * The OData query to filter the data in SharePoint Online list. For example, "$top=1". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SharePointOnlineListSource#query
   */
  readonly query?: SharePointOnlineListSourceQuery;

  /**
   * @schema #/definitions/SharePointOnlineListSource#type
   */
  readonly type: SharePointOnlineListSourceType;

}

/**
 * @schema #/definitions/stagingSettingsAdditionalProperties
 */
export interface StagingSettingsAdditionalProperties {
}

/**
 * Specifies whether to use compression when copying data via an interim staging. Default value is false. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/stagingSettingsEnableCompression
 */
export interface StagingSettingsEnableCompression {
}

/**
 * The path to storage for storing the interim data. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/stagingSettingsPath
 */
export interface StagingSettingsPath {
}

/**
 * @schema #/definitions/integrationRuntimeReferenceParameters
 */
export interface IntegrationRuntimeReferenceParameters {
}

export enum IntegrationRuntimeReferenceType {
  INTEGRATION_RUNTIME_REFERENCE = 'IntegrationRuntimeReference',
}

/**
 * Domain for windows authentication.
 *
 * @schema #/definitions/ssisExecutionCredentialDomain
 */
export interface SsisExecutionCredentialDomain {
}

/**
 * UseName for windows authentication.
 *
 * @schema #/definitions/ssisExecutionCredentialUserName
 */
export interface SsisExecutionCredentialUserName {
}

/**
 * The SSIS package execution log path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisLogLocationLogPath
 */
export interface SsisLogLocationLogPath {
}

export enum SsisLogLocationType {
  FILE = 'File',
}

/**
 * SSIS package execution log location properties.
 *
 * @schema #/definitions/SSISLogLocationTypeProperties
 */
export interface SsisLogLocationTypeProperties {
  /**
   * SSIS access credential.
   *
   * @schema #/definitions/SSISLogLocationTypeProperties#accessCredential
   */
  readonly accessCredential?: SsisAccessCredential;

  /**
   * Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/SSISLogLocationTypeProperties#logRefreshInterval
   */
  readonly logRefreshInterval?: SsisLogLocationTypePropertiesLogRefreshInterval;

}

/**
 * The SSIS package path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisPackageLocationPackagePath
 */
export interface SsisPackageLocationPackagePath {
}

export enum SsisPackageLocationType {
  SSISDB = 'SSISDB',
  FILE = 'File',
  INLINE_PACKAGE = 'InlinePackage',
  PACKAGE_STORE = 'PackageStore',
}

/**
 * SSIS package location properties.
 *
 * @schema #/definitions/SSISPackageLocationTypeProperties
 */
export interface SsisPackageLocationTypeProperties {
  /**
   * SSIS access credential.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#accessCredential
   */
  readonly accessCredential?: SsisAccessCredential;

  /**
   * The embedded child package list.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#childPackages
   */
  readonly childPackages?: SsisChildPackage[];

  /**
   * SSIS access credential.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#configurationAccessCredential
   */
  readonly configurationAccessCredential?: SsisAccessCredential;

  /**
   * The configuration file of the package execution. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#configurationPath
   */
  readonly configurationPath?: SsisPackageLocationTypePropertiesConfigurationPath;

  /**
   * The embedded package content. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#packageContent
   */
  readonly packageContent?: SsisPackageLocationTypePropertiesPackageContent;

  /**
   * The embedded package last modified date.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#packageLastModifiedDate
   */
  readonly packageLastModifiedDate?: string;

  /**
   * The package name.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#packageName
   */
  readonly packageName?: string;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SSISPackageLocationTypeProperties#packagePassword
   */
  readonly packagePassword?: SecretBase;

}

/**
 * Azure blob read settings.
 *
 * @schema #/definitions/AzureBlobStorageReadSettings
 */
export interface AzureBlobStorageReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureBlobStorageReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AzureBlobStorageReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#fileListPath
   */
  readonly fileListPath?: AzureBlobStorageReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AzureBlobStorageReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AzureBlobStorageReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AzureBlobStorageReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the Azure Blob name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#prefix
   */
  readonly prefix?: AzureBlobStorageReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureBlobStorageReadSettings#recursive
   */
  readonly recursive?: AzureBlobStorageReadSettingsRecursive;

  /**
   * @schema #/definitions/AzureBlobStorageReadSettings#type
   */
  readonly type: AzureBlobStorageReadSettingsType;

  /**
   * Azure blob wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AzureBlobStorageReadSettingsWildcardFileName;

  /**
   * Azure blob wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobStorageReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AzureBlobStorageReadSettingsWildcardFolderPath;

}

/**
 * Azure blobFS read settings.
 *
 * @schema #/definitions/AzureBlobFSReadSettings
 */
export interface AzureBlobFsReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureBlobFSReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AzureBlobFsReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AzureBlobFSReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#fileListPath
   */
  readonly fileListPath?: AzureBlobFsReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AzureBlobFsReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AzureBlobFsReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AzureBlobFsReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureBlobFSReadSettings#recursive
   */
  readonly recursive?: AzureBlobFsReadSettingsRecursive;

  /**
   * @schema #/definitions/AzureBlobFSReadSettings#type
   */
  readonly type: AzureBlobFsReadSettingsType;

  /**
   * Azure blobFS wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AzureBlobFsReadSettingsWildcardFileName;

  /**
   * Azure blobFS wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureBlobFSReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AzureBlobFsReadSettingsWildcardFolderPath;

}

/**
 * Azure data lake store read settings.
 *
 * @schema #/definitions/AzureDataLakeStoreReadSettings
 */
export interface AzureDataLakeStoreReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureDataLakeStoreReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AzureDataLakeStoreReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#fileListPath
   */
  readonly fileListPath?: AzureDataLakeStoreReadSettingsFileListPath;

  /**
   * Lists files after the value (exclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#listAfter
   */
  readonly listAfter?: AzureDataLakeStoreReadSettingsListAfter;

  /**
   * Lists files before the value (inclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#listBefore
   */
  readonly listBefore?: AzureDataLakeStoreReadSettingsListBefore;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AzureDataLakeStoreReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AzureDataLakeStoreReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AzureDataLakeStoreReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureDataLakeStoreReadSettings#recursive
   */
  readonly recursive?: AzureDataLakeStoreReadSettingsRecursive;

  /**
   * @schema #/definitions/AzureDataLakeStoreReadSettings#type
   */
  readonly type: AzureDataLakeStoreReadSettingsType;

  /**
   * ADLS wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AzureDataLakeStoreReadSettingsWildcardFileName;

  /**
   * ADLS wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDataLakeStoreReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AzureDataLakeStoreReadSettingsWildcardFolderPath;

}

/**
 * Amazon S3 read settings.
 *
 * @schema #/definitions/AmazonS3ReadSettings
 */
export interface AmazonS3ReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AmazonS3ReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AmazonS3ReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AmazonS3ReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#fileListPath
   */
  readonly fileListPath?: AmazonS3ReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AmazonS3ReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AmazonS3ReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AmazonS3ReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#prefix
   */
  readonly prefix?: AmazonS3ReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AmazonS3ReadSettings#recursive
   */
  readonly recursive?: AmazonS3ReadSettingsRecursive;

  /**
   * @schema #/definitions/AmazonS3ReadSettings#type
   */
  readonly type: AmazonS3ReadSettingsType;

  /**
   * AmazonS3 wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AmazonS3ReadSettingsWildcardFileName;

  /**
   * AmazonS3 wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3ReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AmazonS3ReadSettingsWildcardFolderPath;

}

/**
 * File server read settings.
 *
 * @schema #/definitions/FileServerReadSettings
 */
export interface FileServerReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/FileServerReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: FileServerReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/FileServerReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#fileFilter
   */
  readonly fileFilter?: FileServerReadSettingsFileFilter;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#fileListPath
   */
  readonly fileListPath?: FileServerReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: FileServerReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: FileServerReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: FileServerReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/FileServerReadSettings#recursive
   */
  readonly recursive?: FileServerReadSettingsRecursive;

  /**
   * @schema #/definitions/FileServerReadSettings#type
   */
  readonly type: FileServerReadSettingsType;

  /**
   * FileServer wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: FileServerReadSettingsWildcardFileName;

  /**
   * FileServer wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FileServerReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: FileServerReadSettingsWildcardFolderPath;

}

/**
 * Azure File Storage read settings.
 *
 * @schema #/definitions/AzureFileStorageReadSettings
 */
export interface AzureFileStorageReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureFileStorageReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AzureFileStorageReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AzureFileStorageReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#fileListPath
   */
  readonly fileListPath?: AzureFileStorageReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AzureFileStorageReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AzureFileStorageReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AzureFileStorageReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the Azure File name starting from root path. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#prefix
   */
  readonly prefix?: AzureFileStorageReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AzureFileStorageReadSettings#recursive
   */
  readonly recursive?: AzureFileStorageReadSettingsRecursive;

  /**
   * @schema #/definitions/AzureFileStorageReadSettings#type
   */
  readonly type: AzureFileStorageReadSettingsType;

  /**
   * Azure File Storage wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AzureFileStorageReadSettingsWildcardFileName;

  /**
   * Azure File Storage wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureFileStorageReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AzureFileStorageReadSettingsWildcardFolderPath;

}

/**
 * Amazon S3 Compatible read settings.
 *
 * @schema #/definitions/AmazonS3CompatibleReadSettings
 */
export interface AmazonS3CompatibleReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AmazonS3CompatibleReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: AmazonS3CompatibleReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#fileListPath
   */
  readonly fileListPath?: AmazonS3CompatibleReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: AmazonS3CompatibleReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: AmazonS3CompatibleReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: AmazonS3CompatibleReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the S3 Compatible object name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#prefix
   */
  readonly prefix?: AmazonS3CompatibleReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/AmazonS3CompatibleReadSettings#recursive
   */
  readonly recursive?: AmazonS3CompatibleReadSettingsRecursive;

  /**
   * @schema #/definitions/AmazonS3CompatibleReadSettings#type
   */
  readonly type: AmazonS3CompatibleReadSettingsType;

  /**
   * Amazon S3 Compatible wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: AmazonS3CompatibleReadSettingsWildcardFileName;

  /**
   * Amazon S3 Compatible wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonS3CompatibleReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: AmazonS3CompatibleReadSettingsWildcardFolderPath;

}

/**
 * Oracle Cloud Storage read settings.
 *
 * @schema #/definitions/OracleCloudStorageReadSettings
 */
export interface OracleCloudStorageReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/OracleCloudStorageReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: OracleCloudStorageReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#fileListPath
   */
  readonly fileListPath?: OracleCloudStorageReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: OracleCloudStorageReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: OracleCloudStorageReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: OracleCloudStorageReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the Oracle Cloud Storage object name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#prefix
   */
  readonly prefix?: OracleCloudStorageReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/OracleCloudStorageReadSettings#recursive
   */
  readonly recursive?: OracleCloudStorageReadSettingsRecursive;

  /**
   * @schema #/definitions/OracleCloudStorageReadSettings#type
   */
  readonly type: OracleCloudStorageReadSettingsType;

  /**
   * Oracle Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: OracleCloudStorageReadSettingsWildcardFileName;

  /**
   * Oracle Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleCloudStorageReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: OracleCloudStorageReadSettingsWildcardFolderPath;

}

/**
 * Google Cloud Storage read settings.
 *
 * @schema #/definitions/GoogleCloudStorageReadSettings
 */
export interface GoogleCloudStorageReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/GoogleCloudStorageReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: GoogleCloudStorageReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#fileListPath
   */
  readonly fileListPath?: GoogleCloudStorageReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: GoogleCloudStorageReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: GoogleCloudStorageReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: GoogleCloudStorageReadSettingsPartitionRootPath;

  /**
   * The prefix filter for the Google Cloud Storage object name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#prefix
   */
  readonly prefix?: GoogleCloudStorageReadSettingsPrefix;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/GoogleCloudStorageReadSettings#recursive
   */
  readonly recursive?: GoogleCloudStorageReadSettingsRecursive;

  /**
   * @schema #/definitions/GoogleCloudStorageReadSettings#type
   */
  readonly type: GoogleCloudStorageReadSettingsType;

  /**
   * Google Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: GoogleCloudStorageReadSettingsWildcardFileName;

  /**
   * Google Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleCloudStorageReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: GoogleCloudStorageReadSettingsWildcardFolderPath;

}

/**
 * Ftp read settings.
 *
 * @schema #/definitions/FtpReadSettings
 */
export interface FtpReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/FtpReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: FtpReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/FtpReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpReadSettings#fileListPath
   */
  readonly fileListPath?: FtpReadSettingsFileListPath;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: FtpReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/FtpReadSettings#recursive
   */
  readonly recursive?: FtpReadSettingsRecursive;

  /**
   * @schema #/definitions/FtpReadSettings#type
   */
  readonly type: FtpReadSettingsType;

  /**
   * Specify whether to use binary transfer mode for FTP stores.
   *
   * @schema #/definitions/FtpReadSettings#useBinaryTransfer
   */
  readonly useBinaryTransfer?: boolean;

  /**
   * Ftp wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: FtpReadSettingsWildcardFileName;

  /**
   * Ftp wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/FtpReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: FtpReadSettingsWildcardFolderPath;

}

/**
 * Sftp read settings.
 *
 * @schema #/definitions/SftpReadSettings
 */
export interface SftpReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/SftpReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: SftpReadSettingsDeleteFilesAfterCompletion;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/SftpReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#fileListPath
   */
  readonly fileListPath?: SftpReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: SftpReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: SftpReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: SftpReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/SftpReadSettings#recursive
   */
  readonly recursive?: SftpReadSettingsRecursive;

  /**
   * @schema #/definitions/SftpReadSettings#type
   */
  readonly type: SftpReadSettingsType;

  /**
   * Sftp wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: SftpReadSettingsWildcardFileName;

  /**
   * Sftp wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: SftpReadSettingsWildcardFolderPath;

}

/**
 * Sftp read settings.
 *
 * @schema #/definitions/HttpReadSettings
 */
export interface HttpReadSettings {
  /**
   * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpReadSettings#additionalHeaders
   */
  readonly additionalHeaders?: HttpReadSettingsAdditionalHeaders;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/HttpReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: HttpReadSettingsPartitionRootPath;

  /**
   * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpReadSettings#requestBody
   */
  readonly requestBody?: HttpReadSettingsRequestBody;

  /**
   * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HttpReadSettings#requestMethod
   */
  readonly requestMethod?: HttpReadSettingsRequestMethod;

  /**
   * Specifies the timeout for a HTTP client to get HTTP response from HTTP server.
   *
   * @schema #/definitions/HttpReadSettings#requestTimeout
   */
  readonly requestTimeout?: HttpReadSettingsRequestTimeout;

  /**
   * @schema #/definitions/HttpReadSettings#type
   */
  readonly type: HttpReadSettingsType;

}

/**
 * HDFS read settings.
 *
 * @schema #/definitions/HdfsReadSettings
 */
export interface HdfsReadSettings {
  /**
   * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
   *
   * @default false. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/HdfsReadSettings#deleteFilesAfterCompletion
   */
  readonly deleteFilesAfterCompletion?: HdfsReadSettingsDeleteFilesAfterCompletion;

  /**
   * Distcp settings.
   *
   * @schema #/definitions/HdfsReadSettings#distcpSettings
   */
  readonly distcpSettings?: DistcpSettings;

  /**
   * Indicates whether to enable partition discovery.
   *
   * @schema #/definitions/HdfsReadSettings#enablePartitionDiscovery
   */
  readonly enablePartitionDiscovery?: boolean;

  /**
   * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#fileListPath
   */
  readonly fileListPath?: HdfsReadSettingsFileListPath;

  /**
   * The end of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#modifiedDatetimeEnd
   */
  readonly modifiedDatetimeEnd?: HdfsReadSettingsModifiedDatetimeEnd;

  /**
   * The start of file's modified datetime. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#modifiedDatetimeStart
   */
  readonly modifiedDatetimeStart?: HdfsReadSettingsModifiedDatetimeStart;

  /**
   * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#partitionRootPath
   */
  readonly partitionRootPath?: HdfsReadSettingsPartitionRootPath;

  /**
   * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
   *
   * @default true. Type: boolean (or Expression with resultType boolean).
   * @schema #/definitions/HdfsReadSettings#recursive
   */
  readonly recursive?: HdfsReadSettingsRecursive;

  /**
   * @schema #/definitions/HdfsReadSettings#type
   */
  readonly type: HdfsReadSettingsType;

  /**
   * HDFS wildcardFileName. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#wildcardFileName
   */
  readonly wildcardFileName?: HdfsReadSettingsWildcardFileName;

  /**
   * HDFS wildcardFolderPath. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HdfsReadSettings#wildcardFolderPath
   */
  readonly wildcardFolderPath?: HdfsReadSettingsWildcardFolderPath;

}

/**
 * Delimited text read settings.
 *
 * @schema #/definitions/DelimitedTextReadSettings
 */
export interface DelimitedTextReadSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/DelimitedTextReadSettings#additionalProperties
   */
  readonly additionalProperties?: DelimitedTextReadSettingsAdditionalProperties;

  /**
   * Compression read settings.
   *
   * @schema #/definitions/DelimitedTextReadSettings#compressionProperties
   */
  readonly compressionProperties?: CompressionReadSettings;

  /**
   * Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/DelimitedTextReadSettings#skipLineCount
   */
  readonly skipLineCount?: DelimitedTextReadSettingsSkipLineCount;

  /**
   * @schema #/definitions/DelimitedTextReadSettings#type
   */
  readonly type: DelimitedTextReadSettingsType;

}

/**
 * Json read settings.
 *
 * @schema #/definitions/JsonReadSettings
 */
export interface JsonReadSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/JsonReadSettings#additionalProperties
   */
  readonly additionalProperties?: JsonReadSettingsAdditionalProperties;

  /**
   * Compression read settings.
   *
   * @schema #/definitions/JsonReadSettings#compressionProperties
   */
  readonly compressionProperties?: CompressionReadSettings;

  /**
   * @schema #/definitions/JsonReadSettings#type
   */
  readonly type: JsonReadSettingsType;

}

/**
 * Xml read settings.
 *
 * @schema #/definitions/XmlReadSettings
 */
export interface XmlReadSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/XmlReadSettings#additionalProperties
   */
  readonly additionalProperties?: XmlReadSettingsAdditionalProperties;

  /**
   * Compression read settings.
   *
   * @schema #/definitions/XmlReadSettings#compressionProperties
   */
  readonly compressionProperties?: CompressionReadSettings;

  /**
   * Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/XmlReadSettings#detectDataType
   */
  readonly detectDataType?: XmlReadSettingsDetectDataType;

  /**
   * Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: "{"http://www.example.com/xml":"prefix"}" Type: object (or Expression with resultType object).
   *
   * @schema #/definitions/XmlReadSettings#namespacePrefixes
   */
  readonly namespacePrefixes?: XmlReadSettingsNamespacePrefixes;

  /**
   * Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/XmlReadSettings#namespaces
   */
  readonly namespaces?: XmlReadSettingsNamespaces;

  /**
   * @schema #/definitions/XmlReadSettings#type
   */
  readonly type: XmlReadSettingsType;

  /**
   * Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/XmlReadSettings#validationMode
   */
  readonly validationMode?: XmlReadSettingsValidationMode;

}

/**
 * Binary read settings.
 *
 * @schema #/definitions/BinaryReadSettings
 */
export interface BinaryReadSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/BinaryReadSettings#additionalProperties
   */
  readonly additionalProperties?: BinaryReadSettingsAdditionalProperties;

  /**
   * Compression read settings.
   *
   * @schema #/definitions/BinaryReadSettings#compressionProperties
   */
  readonly compressionProperties?: CompressionReadSettings;

  /**
   * @schema #/definitions/BinaryReadSettings#type
   */
  readonly type: BinaryReadSettingsType;

}

/**
 * Compute type of the cluster which will execute data flow job. Possible values include: 'General', 'MemoryOptimized', 'ComputeOptimized'. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/executeDataFlowActivityTypePropertiesComputeComputeType
 */
export interface ExecuteDataFlowActivityTypePropertiesComputeComputeType {
}

/**
 * Core count of the cluster which will execute data flow job. Supported values are: 8, 16, 32, 48, 80, 144 and 272. Type: integer (or Expression with resultType integer)
 *
 * @schema #/definitions/executeDataFlowActivityTypePropertiesComputeCoreCount
 */
export interface ExecuteDataFlowActivityTypePropertiesComputeCoreCount {
}

/**
 * @schema #/definitions/dataFlowReferenceAdditionalProperties
 */
export interface DataFlowReferenceAdditionalProperties {
}

/**
 * Reference data flow parameters from dataset.
 *
 * @schema #/definitions/dataFlowReferenceDatasetParameters
 */
export interface DataFlowReferenceDatasetParameters {
}

export enum DataFlowReferenceType {
  DATA_FLOW_REFERENCE = 'DataFlowReference',
}

/**
 * Folder path for staging blob. Type: string (or Expression with resultType string)
 *
 * @schema #/definitions/dataFlowStagingInfoFolderPath
 */
export interface DataFlowStagingInfoFolderPath {
}

/**
 * @schema #/definitions/recurrenceScheduleAdditionalProperties
 */
export interface RecurrenceScheduleAdditionalProperties {
}

/**
 * The recurrence schedule occurrence.
 *
 * @schema #/definitions/RecurrenceScheduleOccurrence
 */
export interface RecurrenceScheduleOccurrence {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/RecurrenceScheduleOccurrence#additionalProperties
   */
  readonly additionalProperties?: RecurrenceScheduleOccurrenceAdditionalProperties;

  /**
   * The day of the week.
   *
   * @schema #/definitions/RecurrenceScheduleOccurrence#day
   */
  readonly day?: RecurrenceScheduleOccurrenceDay;

  /**
   * The occurrence.
   *
   * @schema #/definitions/RecurrenceScheduleOccurrence#occurrence
   */
  readonly occurrence?: number;

}

export enum RecurrenceScheduleWeekDays {
  SUNDAY = 'Sunday',
  MONDAY = 'Monday',
  TUESDAY = 'Tuesday',
  WEDNESDAY = 'Wednesday',
  THURSDAY = 'Thursday',
  FRIDAY = 'Friday',
  SATURDAY = 'Saturday',
}

/**
 * The server name of data source access.
 *
 * @schema #/definitions/cmdkeySetupTypePropertiesTargetName
 */
export interface CmdkeySetupTypePropertiesTargetName {
}

/**
 * The user name of data source access.
 *
 * @schema #/definitions/cmdkeySetupTypePropertiesUserName
 */
export interface CmdkeySetupTypePropertiesUserName {
}

/**
 * Specifies whether to enable reliable logging. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/copyActivityLogSettingsEnableReliableLogging
 */
export interface CopyActivityLogSettingsEnableReliableLogging {
}

/**
 * Gets or sets the log level, support: Info, Warning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/copyActivityLogSettingsLogLevel
 */
export interface CopyActivityLogSettingsLogLevel {
}

/**
 * The path to storage for storing detailed logs of activity execution. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/logLocationSettingsPath
 */
export interface LogLocationSettingsPath {
}

/**
 * Delimited text write settings.
 *
 * @schema #/definitions/DelimitedTextWriteSettings
 */
export interface DelimitedTextWriteSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/DelimitedTextWriteSettings#additionalProperties
   */
  readonly additionalProperties?: DelimitedTextWriteSettingsAdditionalProperties;

  /**
   * The file extension used to create the files. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextWriteSettings#fileExtension
   */
  readonly fileExtension: DelimitedTextWriteSettingsFileExtension;

  /**
   * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DelimitedTextWriteSettings#fileNamePrefix
   */
  readonly fileNamePrefix?: DelimitedTextWriteSettingsFileNamePrefix;

  /**
   * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/DelimitedTextWriteSettings#maxRowsPerFile
   */
  readonly maxRowsPerFile?: DelimitedTextWriteSettingsMaxRowsPerFile;

  /**
   * Indicates whether string values should always be enclosed with quotes. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/DelimitedTextWriteSettings#quoteAllText
   */
  readonly quoteAllText?: DelimitedTextWriteSettingsQuoteAllText;

}

/**
 * Connector write settings.
 *
 * @schema #/definitions/StoreWriteSettings
 */
export class StoreWriteSettings {
  public static fromSftpWriteSettings(value: SftpWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  public static fromAzureBlobStorageWriteSettings(value: AzureBlobStorageWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  public static fromAzureBlobFsWriteSettings(value: AzureBlobFsWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  public static fromAzureDataLakeStoreWriteSettings(value: AzureDataLakeStoreWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  public static fromFileServerWriteSettings(value: FileServerWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  public static fromAzureFileStorageWriteSettings(value: AzureFileStorageWriteSettings): StoreWriteSettings {
    return new StoreWriteSettings(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum DelimitedTextSinkType {
  DELIMITED_TEXT_SINK = 'DelimitedTextSink',
}

/**
 * Json write settings.
 *
 * @schema #/definitions/JsonWriteSettings
 */
export interface JsonWriteSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/JsonWriteSettings#additionalProperties
   */
  readonly additionalProperties?: JsonWriteSettingsAdditionalProperties;

  /**
   * File pattern of JSON. This setting controls the way a collection of JSON objects will be treated. The default value is 'setOfObjects'. It is case-sensitive.
   *
   * @schema #/definitions/JsonWriteSettings#filePattern
   */
  readonly filePattern?: JsonWriteSettingsFilePattern;

}

export enum JsonSinkType {
  JSON_SINK = 'JsonSink',
}

/**
 * Orc write settings.
 *
 * @schema #/definitions/OrcWriteSettings
 */
export interface OrcWriteSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/OrcWriteSettings#additionalProperties
   */
  readonly additionalProperties?: OrcWriteSettingsAdditionalProperties;

  /**
   * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OrcWriteSettings#fileNamePrefix
   */
  readonly fileNamePrefix?: OrcWriteSettingsFileNamePrefix;

  /**
   * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/OrcWriteSettings#maxRowsPerFile
   */
  readonly maxRowsPerFile?: OrcWriteSettingsMaxRowsPerFile;

}

export enum OrcSinkType {
  ORC_SINK = 'OrcSink',
}

/**
 * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSinkAdditionalHeaders
 */
export interface RestSinkAdditionalHeaders {
}

/**
 * Http Compression Type to Send data in compressed format with Optimal Compression Level, Default is None. And The Only Supported option is Gzip. 
 *
 * @default None. And The Only Supported option is Gzip. 
 * @schema #/definitions/restSinkHttpCompressionType
 */
export interface RestSinkHttpCompressionType {
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/restSinkHttpRequestTimeout
 */
export interface RestSinkHttpRequestTimeout {
}

/**
 * The time to await before sending next request, in milliseconds 
 *
 * @schema #/definitions/restSinkRequestInterval
 */
export interface RestSinkRequestInterval {
}

/**
 * The HTTP method used to call the RESTful API. The default is POST. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSinkRequestMethod
 */
export interface RestSinkRequestMethod {
}

export enum RestSinkType {
  REST_SINK = 'RestSink',
}

/**
 * A query to execute before starting the copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlSinkPreCopyScript
 */
export interface AzurePostgreSqlSinkPreCopyScript {
}

export enum AzurePostgreSqlSinkType {
  AZURE_POSTGRE_SQL_SINK = 'AzurePostgreSqlSink',
}

/**
 * A query to execute before starting the copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMySqlSinkPreCopyScript
 */
export interface AzureMySqlSinkPreCopyScript {
}

export enum AzureMySqlSinkType {
  AZURE_MY_SQL_SINK = 'AzureMySqlSink',
}

/**
 * Azure Databricks Delta Lake import command settings.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeImportCommand
 */
export interface AzureDatabricksDeltaLakeImportCommand {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeImportCommand#additionalProperties
   */
  readonly additionalProperties?: AzureDatabricksDeltaLakeImportCommandAdditionalProperties;

  /**
   * Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeImportCommand#dateFormat
   */
  readonly dateFormat?: AzureDatabricksDeltaLakeImportCommandDateFormat;

  /**
   * Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeImportCommand#timestampFormat
   */
  readonly timestampFormat?: AzureDatabricksDeltaLakeImportCommandTimestampFormat;

}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeSinkPreCopyScript
 */
export interface AzureDatabricksDeltaLakeSinkPreCopyScript {
}

export enum AzureDatabricksDeltaLakeSinkType {
  AZURE_DATABRICKS_DELTA_LAKE_SINK = 'AzureDatabricksDeltaLakeSink',
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/sapCloudForCustomerSinkHttpRequestTimeout
 */
export interface SapCloudForCustomerSinkHttpRequestTimeout {
}

export enum SapCloudForCustomerSinkType {
  SAP_CLOUD_FOR_CUSTOMER_SINK = 'SapCloudForCustomerSink',
}

export enum SapCloudForCustomerSinkWriteBehavior {
  INSERT = 'Insert',
  UPDATE = 'Update',
}

export enum AzureQueueSinkType {
  AZURE_QUEUE_SINK = 'AzureQueueSink',
}

/**
 * Azure Table default partition key value. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableSinkAzureTableDefaultPartitionKeyValue
 */
export interface AzureTableSinkAzureTableDefaultPartitionKeyValue {
}

/**
 * Azure Table insert type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableSinkAzureTableInsertType
 */
export interface AzureTableSinkAzureTableInsertType {
}

/**
 * Azure Table partition key name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableSinkAzureTablePartitionKeyName
 */
export interface AzureTableSinkAzureTablePartitionKeyName {
}

/**
 * Azure Table row key name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableSinkAzureTableRowKeyName
 */
export interface AzureTableSinkAzureTableRowKeyName {
}

export enum AzureTableSinkType {
  AZURE_TABLE_SINK = 'AzureTableSink',
}

/**
 * Avro write settings.
 *
 * @schema #/definitions/AvroWriteSettings
 */
export interface AvroWriteSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/AvroWriteSettings#additionalProperties
   */
  readonly additionalProperties?: AvroWriteSettingsAdditionalProperties;

  /**
   * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AvroWriteSettings#fileNamePrefix
   */
  readonly fileNamePrefix?: AvroWriteSettingsFileNamePrefix;

  /**
   * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AvroWriteSettings#maxRowsPerFile
   */
  readonly maxRowsPerFile?: AvroWriteSettingsMaxRowsPerFile;

  /**
   * Top level record name in write result, which is required in AVRO spec.
   *
   * @schema #/definitions/AvroWriteSettings#recordName
   */
  readonly recordName?: string;

  /**
   * Record namespace in the write result.
   *
   * @schema #/definitions/AvroWriteSettings#recordNamespace
   */
  readonly recordNamespace?: string;

}

export enum AvroSinkType {
  AVRO_SINK = 'AvroSink',
}

/**
 * Parquet write settings.
 *
 * @schema #/definitions/ParquetWriteSettings
 */
export interface ParquetWriteSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/ParquetWriteSettings#additionalProperties
   */
  readonly additionalProperties?: ParquetWriteSettingsAdditionalProperties;

  /**
   * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ParquetWriteSettings#fileNamePrefix
   */
  readonly fileNamePrefix?: ParquetWriteSettingsFileNamePrefix;

  /**
   * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/ParquetWriteSettings#maxRowsPerFile
   */
  readonly maxRowsPerFile?: ParquetWriteSettingsMaxRowsPerFile;

}

export enum ParquetSinkType {
  PARQUET_SINK = 'ParquetSink',
}

export enum BinarySinkType {
  BINARY_SINK = 'BinarySink',
}

/**
 * Blob writer add header. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/blobSinkBlobWriterAddHeader
 */
export interface BlobSinkBlobWriterAddHeader {
}

/**
 * Blob writer date time format. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/blobSinkBlobWriterDateTimeFormat
 */
export interface BlobSinkBlobWriterDateTimeFormat {
}

/**
 * Blob writer overwrite files. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/blobSinkBlobWriterOverwriteFiles
 */
export interface BlobSinkBlobWriterOverwriteFiles {
}

/**
 * The type of copy behavior for copy sink.
 *
 * @schema #/definitions/blobSinkCopyBehavior
 */
export interface BlobSinkCopyBehavior {
}

export enum BlobSinkType {
  BLOB_SINK = 'BlobSink',
}

/**
 * The type of copy behavior for copy sink.
 *
 * @schema #/definitions/fileSystemSinkCopyBehavior
 */
export interface FileSystemSinkCopyBehavior {
}

export enum FileSystemSinkType {
  FILE_SYSTEM_SINK = 'FileSystemSink',
}

/**
 * Nested properties separator. Default is . (dot). Type: string (or Expression with resultType string).
 *
 * @default dot). Type: string (or Expression with resultType string).
 * @schema #/definitions/documentDbCollectionSinkNestingSeparator
 */
export interface DocumentDbCollectionSinkNestingSeparator {
}

export enum DocumentDbCollectionSinkType {
  DOCUMENT_DB_COLLECTION_SINK = 'DocumentDbCollectionSink',
}

/**
 * Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.
 *
 * @schema #/definitions/documentDbCollectionSinkWriteBehavior
 */
export interface DocumentDbCollectionSinkWriteBehavior {
}

export enum CosmosDbSqlApiSinkType {
  COSMOS_DB_SQL_API_SINK = 'CosmosDbSqlApiSink',
}

/**
 * Describes how to write data to Azure Cosmos DB. Type: string (or Expression with resultType string). Allowed values: insert and upsert.
 *
 * @schema #/definitions/cosmosDbSqlApiSinkWriteBehavior
 */
export interface CosmosDbSqlApiSinkWriteBehavior {
}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSinkPreCopyScript
 */
export interface SqlSinkPreCopyScript {
}

/**
 * SQL writer stored procedure name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSinkSqlWriterStoredProcedureName
 */
export interface SqlSinkSqlWriterStoredProcedureName {
}

/**
 * SQL writer table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSinkSqlWriterTableType
 */
export interface SqlSinkSqlWriterTableType {
}

/**
 * @schema #/definitions/sqlSinkStoredProcedureParameters
 */
export interface SqlSinkStoredProcedureParameters {
}

/**
 * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSinkStoredProcedureTableTypeParameterName
 */
export interface SqlSinkStoredProcedureTableTypeParameterName {
}

/**
 * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSinkTableOption
 */
export interface SqlSinkTableOption {
}

export enum SqlSinkType {
  SQL_SINK = 'SqlSink',
}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSinkPreCopyScript
 */
export interface SqlServerSinkPreCopyScript {
}

/**
 * SQL writer stored procedure name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSinkSqlWriterStoredProcedureName
 */
export interface SqlServerSinkSqlWriterStoredProcedureName {
}

/**
 * SQL writer table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSinkSqlWriterTableType
 */
export interface SqlServerSinkSqlWriterTableType {
}

/**
 * @schema #/definitions/sqlServerSinkStoredProcedureParameters
 */
export interface SqlServerSinkStoredProcedureParameters {
}

/**
 * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSinkStoredProcedureTableTypeParameterName
 */
export interface SqlServerSinkStoredProcedureTableTypeParameterName {
}

/**
 * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSinkTableOption
 */
export interface SqlServerSinkTableOption {
}

export enum SqlServerSinkType {
  SQL_SERVER_SINK = 'SqlServerSink',
}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSinkPreCopyScript
 */
export interface AzureSqlSinkPreCopyScript {
}

/**
 * SQL writer stored procedure name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSinkSqlWriterStoredProcedureName
 */
export interface AzureSqlSinkSqlWriterStoredProcedureName {
}

/**
 * SQL writer table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSinkSqlWriterTableType
 */
export interface AzureSqlSinkSqlWriterTableType {
}

/**
 * @schema #/definitions/azureSqlSinkStoredProcedureParameters
 */
export interface AzureSqlSinkStoredProcedureParameters {
}

/**
 * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSinkStoredProcedureTableTypeParameterName
 */
export interface AzureSqlSinkStoredProcedureTableTypeParameterName {
}

/**
 * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSinkTableOption
 */
export interface AzureSqlSinkTableOption {
}

export enum AzureSqlSinkType {
  AZURE_SQL_SINK = 'AzureSqlSink',
}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSinkPreCopyScript
 */
export interface SqlMiSinkPreCopyScript {
}

/**
 * SQL writer stored procedure name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSinkSqlWriterStoredProcedureName
 */
export interface SqlMiSinkSqlWriterStoredProcedureName {
}

/**
 * SQL writer table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSinkSqlWriterTableType
 */
export interface SqlMiSinkSqlWriterTableType {
}

/**
 * @schema #/definitions/sqlMiSinkStoredProcedureParameters
 */
export interface SqlMiSinkStoredProcedureParameters {
}

/**
 * The stored procedure parameter name of the table type. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSinkStoredProcedureTableTypeParameterName
 */
export interface SqlMiSinkStoredProcedureTableTypeParameterName {
}

/**
 * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSinkTableOption
 */
export interface SqlMiSinkTableOption {
}

export enum SqlMiSinkType {
  SQL_MI_SINK = 'SqlMISink',
}

/**
 * Indicates to use Copy Command to copy data into SQL Data Warehouse. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sqlDwSinkAllowCopyCommand
 */
export interface SqlDwSinkAllowCopyCommand {
}

/**
 * Indicates to use PolyBase to copy data into SQL Data Warehouse when applicable. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sqlDwSinkAllowPolyBase
 */
export interface SqlDwSinkAllowPolyBase {
}

/**
 * DW Copy Command settings.
 *
 * @schema #/definitions/DWCopyCommandSettings
 */
export interface DwCopyCommandSettings {
  /**
   * Additional options directly passed to SQL DW in Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalOptions": { "MAXERRORS": "1000", "DATEFORMAT": "'ymd'" }
   *
   * @schema #/definitions/DWCopyCommandSettings#additionalOptions
   */
  readonly additionalOptions?: DwCopyCommandSettingsAdditionalOptions;

  /**
   * Specifies the default values for each target column in SQL DW. The default values in the property overwrite the DEFAULT constraint set in the DB, and identity column cannot have a default value. Type: array of objects (or Expression with resultType array of objects).
   *
   * @schema #/definitions/DWCopyCommandSettings#defaultValues
   */
  readonly defaultValues?: DwCopyCommandDefaultValue[];

}

/**
 * PolyBase settings.
 *
 * @schema #/definitions/PolybaseSettings
 */
export interface PolybaseSettings {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/PolybaseSettings#additionalProperties
   */
  readonly additionalProperties?: PolybaseSettingsAdditionalProperties;

  /**
   * Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
   *
   * @schema #/definitions/PolybaseSettings#rejectSampleValue
   */
  readonly rejectSampleValue?: PolybaseSettingsRejectSampleValue;

  /**
   * Reject type.
   *
   * @schema #/definitions/PolybaseSettings#rejectType
   */
  readonly rejectType?: PolybaseSettingsRejectType;

  /**
   * Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
   *
   * @schema #/definitions/PolybaseSettings#rejectValue
   */
  readonly rejectValue?: PolybaseSettingsRejectValue;

  /**
   * Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/PolybaseSettings#useTypeDefault
   */
  readonly useTypeDefault?: PolybaseSettingsUseTypeDefault;

}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlDwSinkPreCopyScript
 */
export interface SqlDwSinkPreCopyScript {
}

/**
 * The option to handle sink table, such as autoCreate. For now only 'autoCreate' value is supported. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlDwSinkTableOption
 */
export interface SqlDwSinkTableOption {
}

export enum SqlDwSinkType {
  SQL_DW_SINK = 'SqlDWSink',
}

/**
 * Snowflake import command settings.
 *
 * @schema #/definitions/SnowflakeImportCopyCommand
 */
export interface SnowflakeImportCopyCommand {
  /**
   * Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalCopyOptions": { "DATE_FORMAT": "MM/DD/YYYY", "TIME_FORMAT": "'HH24:MI:SS.FF'" }
   *
   * @schema #/definitions/SnowflakeImportCopyCommand#additionalCopyOptions
   */
  readonly additionalCopyOptions?: SnowflakeImportCopyCommandAdditionalCopyOptions;

  /**
   * Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalFormatOptions": { "FORCE": "TRUE", "LOAD_UNCERTAIN_FILES": "'FALSE'" }
   *
   * @schema #/definitions/SnowflakeImportCopyCommand#additionalFormatOptions
   */
  readonly additionalFormatOptions?: SnowflakeImportCopyCommandAdditionalFormatOptions;

  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/SnowflakeImportCopyCommand#additionalProperties
   */
  readonly additionalProperties?: SnowflakeImportCopyCommandAdditionalProperties;

}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/snowflakeSinkPreCopyScript
 */
export interface SnowflakeSinkPreCopyScript {
}

export enum SnowflakeSinkType {
  SNOWFLAKE_SINK = 'SnowflakeSink',
}

/**
 * SQL pre-copy script. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleSinkPreCopyScript
 */
export interface OracleSinkPreCopyScript {
}

export enum OracleSinkType {
  ORACLE_SINK = 'OracleSink',
}

/**
 * The type of copy behavior for copy sink.
 *
 * @schema #/definitions/azureDataLakeStoreSinkCopyBehavior
 */
export interface AzureDataLakeStoreSinkCopyBehavior {
}

/**
 * Single File Parallel.
 *
 * @schema #/definitions/azureDataLakeStoreSinkEnableAdlsSingleFileParallel
 */
export interface AzureDataLakeStoreSinkEnableAdlsSingleFileParallel {
}

export enum AzureDataLakeStoreSinkType {
  AZURE_DATA_LAKE_STORE_SINK = 'AzureDataLakeStoreSink',
}

/**
 * The type of copy behavior for copy sink.
 *
 * @schema #/definitions/azureBlobFsSinkCopyBehavior
 */
export interface AzureBlobFsSinkCopyBehavior {
}

export enum AzureBlobFsSinkType {
  AZURE_BLOB_FS_SINK = 'AzureBlobFSSink',
}

export enum AzureSearchIndexSinkType {
  AZURE_SEARCH_INDEX_SINK = 'AzureSearchIndexSink',
}

export enum AzureSearchIndexSinkWriteBehavior {
  MERGE = 'Merge',
  UPLOAD = 'Upload',
}

/**
 * A query to execute before starting the copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcSinkPreCopyScript
 */
export interface OdbcSinkPreCopyScript {
}

export enum OdbcSinkType {
  ODBC_SINK = 'OdbcSink',
}

/**
 * A query to execute before starting the copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixSinkPreCopyScript
 */
export interface InformixSinkPreCopyScript {
}

export enum InformixSinkType {
  INFORMIX_SINK = 'InformixSink',
}

/**
 * A query to execute before starting the copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessSinkPreCopyScript
 */
export interface MicrosoftAccessSinkPreCopyScript {
}

export enum MicrosoftAccessSinkType {
  MICROSOFT_ACCESS_SINK = 'MicrosoftAccessSink',
}

/**
 * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsSinkAlternateKeyName
 */
export interface DynamicsSinkAlternateKeyName {
}

/**
 * The flag indicating whether ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/dynamicsSinkIgnoreNullValues
 */
export interface DynamicsSinkIgnoreNullValues {
}

export enum DynamicsSinkType {
  DYNAMICS_SINK = 'DynamicsSink',
}

export enum DynamicsSinkWriteBehavior {
  UPSERT = 'Upsert',
}

/**
 * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmSinkAlternateKeyName
 */
export interface DynamicsCrmSinkAlternateKeyName {
}

/**
 * The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/dynamicsCrmSinkIgnoreNullValues
 */
export interface DynamicsCrmSinkIgnoreNullValues {
}

export enum DynamicsCrmSinkType {
  DYNAMICS_CRM_SINK = 'DynamicsCrmSink',
}

export enum DynamicsCrmSinkWriteBehavior {
  UPSERT = 'Upsert',
}

/**
 * The logical name of the alternate key which will be used when upserting records. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsSinkAlternateKeyName
 */
export interface CommonDataServiceForAppsSinkAlternateKeyName {
}

/**
 * The flag indicating whether to ignore null values from input dataset (except key fields) during write operation. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/commonDataServiceForAppsSinkIgnoreNullValues
 */
export interface CommonDataServiceForAppsSinkIgnoreNullValues {
}

export enum CommonDataServiceForAppsSinkType {
  COMMON_DATA_SERVICE_FOR_APPS_SINK = 'CommonDataServiceForAppsSink',
}

export enum CommonDataServiceForAppsSinkWriteBehavior {
  UPSERT = 'Upsert',
}

/**
 * If set to true, any aggregation will be skipped. Default is false. Type: boolean.
 *
 * @default false. Type: boolean.
 * @schema #/definitions/azureDataExplorerSinkFlushImmediately
 */
export interface AzureDataExplorerSinkFlushImmediately {
}

/**
 * An explicit column mapping description provided in a json format. Type: string.
 *
 * @schema #/definitions/azureDataExplorerSinkIngestionMappingAsJson
 */
export interface AzureDataExplorerSinkIngestionMappingAsJson {
}

/**
 * A name of a pre-created csv mapping that was defined on the target Kusto table. Type: string.
 *
 * @schema #/definitions/azureDataExplorerSinkIngestionMappingName
 */
export interface AzureDataExplorerSinkIngestionMappingName {
}

export enum AzureDataExplorerSinkType {
  AZURE_DATA_EXPLORER_SINK = 'AzureDataExplorerSink',
}

/**
 * The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceSinkExternalIdFieldName
 */
export interface SalesforceSinkExternalIdFieldName {
}

/**
 * The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/salesforceSinkIgnoreNullValues
 */
export interface SalesforceSinkIgnoreNullValues {
}

export enum SalesforceSinkType {
  SALESFORCE_SINK = 'SalesforceSink',
}

export enum SalesforceSinkWriteBehavior {
  INSERT = 'Insert',
  UPSERT = 'Upsert',
}

/**
 * The name of the external ID field for upsert operation. Default value is 'Id' column. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudSinkExternalIdFieldName
 */
export interface SalesforceServiceCloudSinkExternalIdFieldName {
}

/**
 * The flag indicating whether or not to ignore null values from input dataset (except key fields) during write operation. Default value is false. If set it to true, it means ADF will leave the data in the destination object unchanged when doing upsert/update operation and insert defined default value when doing insert operation, versus ADF will update the data in the destination object to NULL when doing upsert/update operation and insert NULL value when doing insert operation. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/salesforceServiceCloudSinkIgnoreNullValues
 */
export interface SalesforceServiceCloudSinkIgnoreNullValues {
}

export enum SalesforceServiceCloudSinkType {
  SALESFORCE_SERVICE_CLOUD_SINK = 'SalesforceServiceCloudSink',
}

export enum SalesforceServiceCloudSinkWriteBehavior {
  INSERT = 'Insert',
  UPSERT = 'Upsert',
}

export enum MongoDbAtlasSinkType {
  MONGO_DB_ATLAS_SINK = 'MongoDbAtlasSink',
}

/**
 * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbAtlasSinkWriteBehavior
 */
export interface MongoDbAtlasSinkWriteBehavior {
}

export enum MongoDbV2SinkType {
  "MongoDbV2SinkType_MONGO_DB_V2_SINK" = 'MongoDbV2Sink',
}

/**
 * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbV2SinkWriteBehavior
 */
export interface MongoDbV2SinkWriteBehavior {
}

export enum CosmosDbMongoDbApiSinkType {
  COSMOS_DB_MONGO_DB_API_SINK = 'CosmosDbMongoDbApiSink',
}

/**
 * Specifies whether the document with same key to be overwritten (upsert) rather than throw exception (insert). The default value is "insert". Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbMongoDbApiSinkWriteBehavior
 */
export interface CosmosDbMongoDbApiSinkWriteBehavior {
}

/**
 * Specify the column name and value of additional columns.
 *
 * @schema #/definitions/AdditionalColumns
 */
export interface AdditionalColumns {
  /**
   * Additional column name. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AdditionalColumns#name
   */
  readonly name?: AdditionalColumnsName;

  /**
   * Additional column value. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AdditionalColumns#value
   */
  readonly value?: AdditionalColumnsValue;

}

export enum AvroSourceType {
  AVRO_SOURCE = 'AvroSource',
}

export enum ExcelSourceType {
  EXCEL_SOURCE = 'ExcelSource',
}

export enum ParquetSourceType {
  PARQUET_SOURCE = 'ParquetSource',
}

export enum DelimitedTextSourceType {
  DELIMITED_TEXT_SOURCE = 'DelimitedTextSource',
}

export enum JsonSourceType {
  JSON_SOURCE = 'JsonSource',
}

export enum XmlSourceType {
  XML_SOURCE = 'XmlSource',
}

export enum OrcSourceType {
  ORC_SOURCE = 'OrcSource',
}

export enum BinarySourceType {
  BINARY_SOURCE = 'BinarySource',
}

/**
 * A copy activity Azure Table source.
 *
 * @schema #/definitions/AzureTableSource
 */
export interface AzureTableSource {
  /**
   * Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/AzureTableSource#azureTableSourceIgnoreTableNotFound
   */
  readonly azureTableSourceIgnoreTableNotFound?: AzureTableSourceAzureTableSourceIgnoreTableNotFound;

  /**
   * Azure Table source query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureTableSource#azureTableSourceQuery
   */
  readonly azureTableSourceQuery?: AzureTableSourceAzureTableSourceQuery;

  /**
   * @schema #/definitions/AzureTableSource#type
   */
  readonly type: AzureTableSourceType;

}

/**
 * A copy activity source for Informix.
 *
 * @schema #/definitions/InformixSource
 */
export interface InformixSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/InformixSource#query
   */
  readonly query?: InformixSourceQuery;

  /**
   * @schema #/definitions/InformixSource#type
   */
  readonly type: InformixSourceType;

}

/**
 * A copy activity source for Db2 databases.
 *
 * @schema #/definitions/Db2Source
 */
export interface Db2Source {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/Db2Source#query
   */
  readonly query?: Db2SourceQuery;

  /**
   * @schema #/definitions/Db2Source#type
   */
  readonly type: Db2SourceType;

}

/**
 * A copy activity source for ODBC databases.
 *
 * @schema #/definitions/OdbcSource
 */
export interface OdbcSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OdbcSource#query
   */
  readonly query?: OdbcSourceQuery;

  /**
   * @schema #/definitions/OdbcSource#type
   */
  readonly type: OdbcSourceType;

}

/**
 * A copy activity source for MySQL databases.
 *
 * @schema #/definitions/MySqlSource
 */
export interface MySqlSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MySqlSource#query
   */
  readonly query?: MySqlSourceQuery;

  /**
   * @schema #/definitions/MySqlSource#type
   */
  readonly type: MySqlSourceType;

}

/**
 * A copy activity source for PostgreSQL databases.
 *
 * @schema #/definitions/PostgreSqlSource
 */
export interface PostgreSqlSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PostgreSqlSource#query
   */
  readonly query?: PostgreSqlSourceQuery;

  /**
   * @schema #/definitions/PostgreSqlSource#type
   */
  readonly type: PostgreSqlSourceType;

}

/**
 * A copy activity source for Sybase databases.
 *
 * @schema #/definitions/SybaseSource
 */
export interface SybaseSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SybaseSource#query
   */
  readonly query?: SybaseSourceQuery;

  /**
   * @schema #/definitions/SybaseSource#type
   */
  readonly type: SybaseSourceType;

}

/**
 * A copy activity source for SapBW server via MDX.
 *
 * @schema #/definitions/SapBwSource
 */
export interface SapBwSource {
  /**
   * MDX query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapBwSource#query
   */
  readonly query?: SapBwSourceQuery;

  /**
   * @schema #/definitions/SapBwSource#type
   */
  readonly type: SapBwSourceType;

}

/**
 * A copy activity Salesforce source.
 *
 * @schema #/definitions/SalesforceSource
 */
export interface SalesforceSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceSource#query
   */
  readonly query?: SalesforceSourceQuery;

  /**
   * The read behavior for the operation. Default is Query.
   *
   * @default Query.
   * @schema #/definitions/SalesforceSource#readBehavior
   */
  readonly readBehavior?: SalesforceSourceReadBehavior;

  /**
   * @schema #/definitions/SalesforceSource#type
   */
  readonly type: SalesforceSourceType;

}

/**
 * A copy activity source for SAP Cloud for Customer source.
 *
 * @schema #/definitions/SapCloudForCustomerSource
 */
export interface SapCloudForCustomerSource {
  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/SapCloudForCustomerSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: SapCloudForCustomerSourceHttpRequestTimeout;

  /**
   * SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapCloudForCustomerSource#query
   */
  readonly query?: SapCloudForCustomerSourceQuery;

  /**
   * @schema #/definitions/SapCloudForCustomerSource#type
   */
  readonly type: SapCloudForCustomerSourceType;

}

/**
 * A copy activity source for SAP ECC source.
 *
 * @schema #/definitions/SapEccSource
 */
export interface SapEccSource {
  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/SapEccSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: SapEccSourceHttpRequestTimeout;

  /**
   * SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapEccSource#query
   */
  readonly query?: SapEccSourceQuery;

  /**
   * @schema #/definitions/SapEccSource#type
   */
  readonly type: SapEccSourceType;

}

/**
 * A copy activity source for SAP HANA source.
 *
 * @schema #/definitions/SapHanaSource
 */
export interface SapHanaSource {
  /**
   * The packet size of data read from SAP HANA. Type: integer(or Expression with resultType integer).
   *
   * @schema #/definitions/SapHanaSource#packetSize
   */
  readonly packetSize?: SapHanaSourcePacketSize;

  /**
   * The partition mechanism that will be used for SAP HANA read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "SapHanaDynamicRange". 
   *
   * @schema #/definitions/SapHanaSource#partitionOption
   */
  readonly partitionOption?: SapHanaSourcePartitionOption;

  /**
   * The settings that will be leveraged for SAP HANA source partitioning.
   *
   * @schema #/definitions/SapHanaSource#partitionSettings
   */
  readonly partitionSettings?: SapHanaPartitionSettings;

  /**
   * SAP HANA Sql query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaSource#query
   */
  readonly query?: SapHanaSourceQuery;

  /**
   * @schema #/definitions/SapHanaSource#type
   */
  readonly type: SapHanaSourceType;

}

/**
 * A copy activity source for SAP Business Warehouse Open Hub Destination source.
 *
 * @schema #/definitions/SapOpenHubSource
 */
export interface SapOpenHubSource {
  /**
   * The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
   *
   * @schema #/definitions/SapOpenHubSource#baseRequestId
   */
  readonly baseRequestId?: SapOpenHubSourceBaseRequestId;

  /**
   * Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubSource#customRfcReadTableFunctionModule
   */
  readonly customRfcReadTableFunctionModule?: SapOpenHubSourceCustomRfcReadTableFunctionModule;

  /**
   * Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SapOpenHubSource#excludeLastRequest
   */
  readonly excludeLastRequest?: SapOpenHubSourceExcludeLastRequest;

  /**
   * The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapOpenHubSource#sapDataColumnDelimiter
   */
  readonly sapDataColumnDelimiter?: SapOpenHubSourceSapDataColumnDelimiter;

  /**
   * @schema #/definitions/SapOpenHubSource#type
   */
  readonly type: SapOpenHubSourceType;

}

/**
 * A copy activity source for SAP Table source.
 *
 * @schema #/definitions/SapTableSource
 */
export interface SapTableSource {
  /**
   * Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/SapTableSource#batchSize
   */
  readonly batchSize?: SapTableSourceBatchSize;

  /**
   * Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableSource#customRfcReadTableFunctionModule
   */
  readonly customRfcReadTableFunctionModule?: SapTableSourceCustomRfcReadTableFunctionModule;

  /**
   * The partition mechanism that will be used for SAP table read in parallel. Possible values include: "None", "PartitionOnInt", "PartitionOnCalendarYear", "PartitionOnCalendarMonth", "PartitionOnCalendarDate", "PartitionOnTime".
   *
   * @schema #/definitions/SapTableSource#partitionOption
   */
  readonly partitionOption?: SapTableSourcePartitionOption;

  /**
   * The settings that will be leveraged for SAP table source partitioning.
   *
   * @schema #/definitions/SapTableSource#partitionSettings
   */
  readonly partitionSettings?: SapTablePartitionSettings;

  /**
   * The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableSource#rfcTableFields
   */
  readonly rfcTableFields?: SapTableSourceRfcTableFields;

  /**
   * The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableSource#rfcTableOptions
   */
  readonly rfcTableOptions?: SapTableSourceRfcTableOptions;

  /**
   * The number of rows to be retrieved. Type: integer(or Expression with resultType integer).
   *
   * @schema #/definitions/SapTableSource#rowCount
   */
  readonly rowCount?: SapTableSourceRowCount;

  /**
   * The number of rows that will be skipped. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/SapTableSource#rowSkips
   */
  readonly rowSkips?: SapTableSourceRowSkips;

  /**
   * The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTableSource#sapDataColumnDelimiter
   */
  readonly sapDataColumnDelimiter?: SapTableSourceSapDataColumnDelimiter;

  /**
   * @schema #/definitions/SapTableSource#type
   */
  readonly type: SapTableSourceType;

}

/**
 * A copy activity SQL source.
 *
 * @schema #/definitions/SqlSource
 */
export interface SqlSource {
  /**
   * Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSource#isolationLevel
   */
  readonly isolationLevel?: SqlSourceIsolationLevel;

  /**
   * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/SqlSource#partitionOption
   */
  readonly partitionOption?: SqlSourcePartitionOption;

  /**
   * The settings that will be leveraged for Sql source partitioning.
   *
   * @schema #/definitions/SqlSource#partitionSettings
   */
  readonly partitionSettings?: SqlPartitionSettings;

  /**
   * SQL reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSource#sqlReaderQuery
   */
  readonly sqlReaderQuery?: SqlSourceSqlReaderQuery;

  /**
   * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlSource#sqlReaderStoredProcedureName
   */
  readonly sqlReaderStoredProcedureName?: SqlSourceSqlReaderStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
   *
   * @schema #/definitions/SqlSource#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlSourceStoredProcedureParameters;

  /**
   * @schema #/definitions/SqlSource#type
   */
  readonly type: SqlSourceType;

}

/**
 * A copy activity SQL server source.
 *
 * @schema #/definitions/SqlServerSource
 */
export interface SqlServerSource {
  /**
   * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/SqlServerSource#partitionOption
   */
  readonly partitionOption?: SqlServerSourcePartitionOption;

  /**
   * The settings that will be leveraged for Sql source partitioning.
   *
   * @schema #/definitions/SqlServerSource#partitionSettings
   */
  readonly partitionSettings?: SqlPartitionSettings;

  /**
   * Which additional types to produce.
   *
   * @schema #/definitions/SqlServerSource#produceAdditionalTypes
   */
  readonly produceAdditionalTypes?: SqlServerSourceProduceAdditionalTypes;

  /**
   * SQL reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSource#sqlReaderQuery
   */
  readonly sqlReaderQuery?: SqlServerSourceSqlReaderQuery;

  /**
   * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlServerSource#sqlReaderStoredProcedureName
   */
  readonly sqlReaderStoredProcedureName?: SqlServerSourceSqlReaderStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
   *
   * @schema #/definitions/SqlServerSource#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlServerSourceStoredProcedureParameters;

  /**
   * @schema #/definitions/SqlServerSource#type
   */
  readonly type: SqlServerSourceType;

}

/**
 * A copy activity Azure SQL source.
 *
 * @schema #/definitions/AzureSqlSource
 */
export interface AzureSqlSource {
  /**
   * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/AzureSqlSource#partitionOption
   */
  readonly partitionOption?: AzureSqlSourcePartitionOption;

  /**
   * The settings that will be leveraged for Sql source partitioning.
   *
   * @schema #/definitions/AzureSqlSource#partitionSettings
   */
  readonly partitionSettings?: SqlPartitionSettings;

  /**
   * Which additional types to produce.
   *
   * @schema #/definitions/AzureSqlSource#produceAdditionalTypes
   */
  readonly produceAdditionalTypes?: AzureSqlSourceProduceAdditionalTypes;

  /**
   * SQL reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSource#sqlReaderQuery
   */
  readonly sqlReaderQuery?: AzureSqlSourceSqlReaderQuery;

  /**
   * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureSqlSource#sqlReaderStoredProcedureName
   */
  readonly sqlReaderStoredProcedureName?: AzureSqlSourceSqlReaderStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
   *
   * @schema #/definitions/AzureSqlSource#storedProcedureParameters
   */
  readonly storedProcedureParameters?: AzureSqlSourceStoredProcedureParameters;

  /**
   * @schema #/definitions/AzureSqlSource#type
   */
  readonly type: AzureSqlSourceType;

}

/**
 * A copy activity Azure SQL Managed Instance source.
 *
 * @schema #/definitions/SqlMISource
 */
export interface SqlMiSource {
  /**
   * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/SqlMISource#partitionOption
   */
  readonly partitionOption?: SqlMiSourcePartitionOption;

  /**
   * The settings that will be leveraged for Sql source partitioning.
   *
   * @schema #/definitions/SqlMISource#partitionSettings
   */
  readonly partitionSettings?: SqlPartitionSettings;

  /**
   * Which additional types to produce.
   *
   * @schema #/definitions/SqlMISource#produceAdditionalTypes
   */
  readonly produceAdditionalTypes?: SqlMiSourceProduceAdditionalTypes;

  /**
   * SQL reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISource#sqlReaderQuery
   */
  readonly sqlReaderQuery?: SqlMiSourceSqlReaderQuery;

  /**
   * Name of the stored procedure for a Azure SQL Managed Instance source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlMISource#sqlReaderStoredProcedureName
   */
  readonly sqlReaderStoredProcedureName?: SqlMiSourceSqlReaderStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}".
   *
   * @schema #/definitions/SqlMISource#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlMiSourceStoredProcedureParameters;

  /**
   * @schema #/definitions/SqlMISource#type
   */
  readonly type: SqlMiSourceType;

}

/**
 * A copy activity SQL Data Warehouse source.
 *
 * @schema #/definitions/SqlDWSource
 */
export interface SqlDwSource {
  /**
   * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
   *
   * @schema #/definitions/SqlDWSource#partitionOption
   */
  readonly partitionOption?: SqlDwSourcePartitionOption;

  /**
   * The settings that will be leveraged for Sql source partitioning.
   *
   * @schema #/definitions/SqlDWSource#partitionSettings
   */
  readonly partitionSettings?: SqlPartitionSettings;

  /**
   * SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlDWSource#sqlReaderQuery
   */
  readonly sqlReaderQuery?: SqlDwSourceSqlReaderQuery;

  /**
   * Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlDWSource#sqlReaderStoredProcedureName
   */
  readonly sqlReaderStoredProcedureName?: SqlDwSourceSqlReaderStoredProcedureName;

  /**
   * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
   *
   * @schema #/definitions/SqlDWSource#storedProcedureParameters
   */
  readonly storedProcedureParameters?: SqlDwSourceStoredProcedureParameters;

  /**
   * @schema #/definitions/SqlDWSource#type
   */
  readonly type: SqlDwSourceType;

}

/**
 * A copy activity Azure MySQL source.
 *
 * @schema #/definitions/AzureMySqlSource
 */
export interface AzureMySqlSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMySqlSource#query
   */
  readonly query?: AzureMySqlSourceQuery;

  /**
   * @schema #/definitions/AzureMySqlSource#type
   */
  readonly type: AzureMySqlSourceType;

}

/**
 * A copy activity Teradata source.
 *
 * @schema #/definitions/TeradataSource
 */
export interface TeradataSource {
  /**
   * The partition mechanism that will be used for teradata read in parallel. Possible values include: "None", "Hash", "DynamicRange".
   *
   * @schema #/definitions/TeradataSource#partitionOption
   */
  readonly partitionOption?: TeradataSourcePartitionOption;

  /**
   * The settings that will be leveraged for teradata source partitioning.
   *
   * @schema #/definitions/TeradataSource#partitionSettings
   */
  readonly partitionSettings?: TeradataPartitionSettings;

  /**
   * Teradata query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataSource#query
   */
  readonly query?: TeradataSourceQuery;

  /**
   * @schema #/definitions/TeradataSource#type
   */
  readonly type: TeradataSourceType;

}

/**
 * A copy activity source for a Cassandra database.
 *
 * @schema #/definitions/CassandraSource
 */
export interface CassandraSource {
  /**
   * The consistency level specifies how many Cassandra servers must respond to a read request before returning data to the client application. Cassandra checks the specified number of Cassandra servers for data to satisfy the read request. Must be one of cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It is case-insensitive.
   *
   * @schema #/definitions/CassandraSource#consistencyLevel
   */
  readonly consistencyLevel?: CassandraSourceConsistencyLevel;

  /**
   * Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CassandraSource#query
   */
  readonly query?: CassandraSourceQuery;

  /**
   * @schema #/definitions/CassandraSource#type
   */
  readonly type: CassandraSourceType;

}

/**
 * A copy activity Amazon Marketplace Web Service source.
 *
 * @schema #/definitions/AmazonMWSSource
 */
export interface AmazonMwsSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonMWSSource#query
   */
  readonly query?: AmazonMwsSourceQuery;

  /**
   * @schema #/definitions/AmazonMWSSource#type
   */
  readonly type: AmazonMwsSourceType;

}

/**
 * A copy activity Azure PostgreSQL source.
 *
 * @schema #/definitions/AzurePostgreSqlSource
 */
export interface AzurePostgreSqlSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzurePostgreSqlSource#query
   */
  readonly query?: AzurePostgreSqlSourceQuery;

  /**
   * @schema #/definitions/AzurePostgreSqlSource#type
   */
  readonly type: AzurePostgreSqlSourceType;

}

/**
 * A copy activity Concur Service source.
 *
 * @schema #/definitions/ConcurSource
 */
export interface ConcurSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ConcurSource#query
   */
  readonly query?: ConcurSourceQuery;

  /**
   * @schema #/definitions/ConcurSource#type
   */
  readonly type: ConcurSourceType;

}

/**
 * A copy activity Couchbase server source.
 *
 * @schema #/definitions/CouchbaseSource
 */
export interface CouchbaseSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/CouchbaseSource#query
   */
  readonly query?: CouchbaseSourceQuery;

  /**
   * @schema #/definitions/CouchbaseSource#type
   */
  readonly type: CouchbaseSourceType;

}

/**
 * A copy activity Drill server source.
 *
 * @schema #/definitions/DrillSource
 */
export interface DrillSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DrillSource#query
   */
  readonly query?: DrillSourceQuery;

  /**
   * @schema #/definitions/DrillSource#type
   */
  readonly type: DrillSourceType;

}

/**
 * A copy activity Eloqua server source.
 *
 * @schema #/definitions/EloquaSource
 */
export interface EloquaSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/EloquaSource#query
   */
  readonly query?: EloquaSourceQuery;

  /**
   * @schema #/definitions/EloquaSource#type
   */
  readonly type: EloquaSourceType;

}

/**
 * A copy activity Google BigQuery service source.
 *
 * @schema #/definitions/GoogleBigQuerySource
 */
export interface GoogleBigQuerySource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleBigQuerySource#query
   */
  readonly query?: GoogleBigQuerySourceQuery;

  /**
   * @schema #/definitions/GoogleBigQuerySource#type
   */
  readonly type: GoogleBigQuerySourceType;

}

/**
 * A copy activity Greenplum Database source.
 *
 * @schema #/definitions/GreenplumSource
 */
export interface GreenplumSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GreenplumSource#query
   */
  readonly query?: GreenplumSourceQuery;

  /**
   * @schema #/definitions/GreenplumSource#type
   */
  readonly type: GreenplumSourceType;

}

/**
 * A copy activity HBase server source.
 *
 * @schema #/definitions/HBaseSource
 */
export interface HBaseSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HBaseSource#query
   */
  readonly query?: HBaseSourceQuery;

  /**
   * @schema #/definitions/HBaseSource#type
   */
  readonly type: HBaseSourceType;

}

/**
 * A copy activity Hive Server source.
 *
 * @schema #/definitions/HiveSource
 */
export interface HiveSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HiveSource#query
   */
  readonly query?: HiveSourceQuery;

  /**
   * @schema #/definitions/HiveSource#type
   */
  readonly type: HiveSourceType;

}

/**
 * A copy activity Hubspot Service source.
 *
 * @schema #/definitions/HubspotSource
 */
export interface HubspotSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/HubspotSource#query
   */
  readonly query?: HubspotSourceQuery;

  /**
   * @schema #/definitions/HubspotSource#type
   */
  readonly type: HubspotSourceType;

}

/**
 * A copy activity Impala server source.
 *
 * @schema #/definitions/ImpalaSource
 */
export interface ImpalaSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ImpalaSource#query
   */
  readonly query?: ImpalaSourceQuery;

  /**
   * @schema #/definitions/ImpalaSource#type
   */
  readonly type: ImpalaSourceType;

}

/**
 * A copy activity Jira Service source.
 *
 * @schema #/definitions/JiraSource
 */
export interface JiraSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/JiraSource#query
   */
  readonly query?: JiraSourceQuery;

  /**
   * @schema #/definitions/JiraSource#type
   */
  readonly type: JiraSourceType;

}

/**
 * A copy activity Magento server source.
 *
 * @schema #/definitions/MagentoSource
 */
export interface MagentoSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MagentoSource#query
   */
  readonly query?: MagentoSourceQuery;

  /**
   * @schema #/definitions/MagentoSource#type
   */
  readonly type: MagentoSourceType;

}

/**
 * A copy activity MariaDB server source.
 *
 * @schema #/definitions/MariaDBSource
 */
export interface MariaDbSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MariaDBSource#query
   */
  readonly query?: MariaDbSourceQuery;

  /**
   * @schema #/definitions/MariaDBSource#type
   */
  readonly type: MariaDbSourceType;

}

/**
 * A copy activity Azure MariaDB source.
 *
 * @schema #/definitions/AzureMariaDBSource
 */
export interface AzureMariaDbSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureMariaDBSource#query
   */
  readonly query?: AzureMariaDbSourceQuery;

  /**
   * @schema #/definitions/AzureMariaDBSource#type
   */
  readonly type: AzureMariaDbSourceType;

}

/**
 * A copy activity Marketo server source.
 *
 * @schema #/definitions/MarketoSource
 */
export interface MarketoSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MarketoSource#query
   */
  readonly query?: MarketoSourceQuery;

  /**
   * @schema #/definitions/MarketoSource#type
   */
  readonly type: MarketoSourceType;

}

/**
 * A copy activity Paypal Service source.
 *
 * @schema #/definitions/PaypalSource
 */
export interface PaypalSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PaypalSource#query
   */
  readonly query?: PaypalSourceQuery;

  /**
   * @schema #/definitions/PaypalSource#type
   */
  readonly type: PaypalSourceType;

}

/**
 * A copy activity Phoenix server source.
 *
 * @schema #/definitions/PhoenixSource
 */
export interface PhoenixSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PhoenixSource#query
   */
  readonly query?: PhoenixSourceQuery;

  /**
   * @schema #/definitions/PhoenixSource#type
   */
  readonly type: PhoenixSourceType;

}

/**
 * A copy activity Presto server source.
 *
 * @schema #/definitions/PrestoSource
 */
export interface PrestoSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/PrestoSource#query
   */
  readonly query?: PrestoSourceQuery;

  /**
   * @schema #/definitions/PrestoSource#type
   */
  readonly type: PrestoSourceType;

}

/**
 * A copy activity QuickBooks server source.
 *
 * @schema #/definitions/QuickBooksSource
 */
export interface QuickBooksSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/QuickBooksSource#query
   */
  readonly query?: QuickBooksSourceQuery;

  /**
   * @schema #/definitions/QuickBooksSource#type
   */
  readonly type: QuickBooksSourceType;

}

/**
 * A copy activity ServiceNow server source.
 *
 * @schema #/definitions/ServiceNowSource
 */
export interface ServiceNowSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ServiceNowSource#query
   */
  readonly query?: ServiceNowSourceQuery;

  /**
   * @schema #/definitions/ServiceNowSource#type
   */
  readonly type: ServiceNowSourceType;

}

/**
 * A copy activity Shopify Service source.
 *
 * @schema #/definitions/ShopifySource
 */
export interface ShopifySource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ShopifySource#query
   */
  readonly query?: ShopifySourceQuery;

  /**
   * @schema #/definitions/ShopifySource#type
   */
  readonly type: ShopifySourceType;

}

/**
 * A copy activity Spark Server source.
 *
 * @schema #/definitions/SparkSource
 */
export interface SparkSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SparkSource#query
   */
  readonly query?: SparkSourceQuery;

  /**
   * @schema #/definitions/SparkSource#type
   */
  readonly type: SparkSourceType;

}

/**
 * A copy activity Square Service source.
 *
 * @schema #/definitions/SquareSource
 */
export interface SquareSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SquareSource#query
   */
  readonly query?: SquareSourceQuery;

  /**
   * @schema #/definitions/SquareSource#type
   */
  readonly type: SquareSourceType;

}

/**
 * A copy activity Xero Service source.
 *
 * @schema #/definitions/XeroSource
 */
export interface XeroSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/XeroSource#query
   */
  readonly query?: XeroSourceQuery;

  /**
   * @schema #/definitions/XeroSource#type
   */
  readonly type: XeroSourceType;

}

/**
 * A copy activity Zoho server source.
 *
 * @schema #/definitions/ZohoSource
 */
export interface ZohoSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ZohoSource#query
   */
  readonly query?: ZohoSourceQuery;

  /**
   * @schema #/definitions/ZohoSource#type
   */
  readonly type: ZohoSourceType;

}

/**
 * A copy activity Netezza source.
 *
 * @schema #/definitions/NetezzaSource
 */
export interface NetezzaSource {
  /**
   * The partition mechanism that will be used for Netezza read in parallel. Possible values include: "None", "DataSlice", "DynamicRange".
   *
   * @schema #/definitions/NetezzaSource#partitionOption
   */
  readonly partitionOption?: NetezzaSourcePartitionOption;

  /**
   * The settings that will be leveraged for Netezza source partitioning.
   *
   * @schema #/definitions/NetezzaSource#partitionSettings
   */
  readonly partitionSettings?: NetezzaPartitionSettings;

  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaSource#query
   */
  readonly query?: NetezzaSourceQuery;

  /**
   * @schema #/definitions/NetezzaSource#type
   */
  readonly type: NetezzaSourceType;

}

/**
 * A copy activity Vertica source.
 *
 * @schema #/definitions/VerticaSource
 */
export interface VerticaSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/VerticaSource#query
   */
  readonly query?: VerticaSourceQuery;

  /**
   * @schema #/definitions/VerticaSource#type
   */
  readonly type: VerticaSourceType;

}

/**
 * A copy activity Salesforce Marketing Cloud source.
 *
 * @schema #/definitions/SalesforceMarketingCloudSource
 */
export interface SalesforceMarketingCloudSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SalesforceMarketingCloudSource#query
   */
  readonly query?: SalesforceMarketingCloudSourceQuery;

  /**
   * @schema #/definitions/SalesforceMarketingCloudSource#type
   */
  readonly type: SalesforceMarketingCloudSourceType;

}

/**
 * A copy activity Responsys source.
 *
 * @schema #/definitions/ResponsysSource
 */
export interface ResponsysSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/ResponsysSource#query
   */
  readonly query?: ResponsysSourceQuery;

  /**
   * @schema #/definitions/ResponsysSource#type
   */
  readonly type: ResponsysSourceType;

}

/**
 * A copy activity Dynamics AX source.
 *
 * @schema #/definitions/DynamicsAXSource
 */
export interface DynamicsAxSource {
  /**
   * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
   *
   * @schema #/definitions/DynamicsAXSource#httpRequestTimeout
   */
  readonly httpRequestTimeout?: DynamicsAxSourceHttpRequestTimeout;

  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DynamicsAXSource#query
   */
  readonly query?: DynamicsAxSourceQuery;

  /**
   * @schema #/definitions/DynamicsAXSource#type
   */
  readonly type: DynamicsAxSourceType;

}

/**
 * A copy activity Oracle Service Cloud source.
 *
 * @schema #/definitions/OracleServiceCloudSource
 */
export interface OracleServiceCloudSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OracleServiceCloudSource#query
   */
  readonly query?: OracleServiceCloudSourceQuery;

  /**
   * @schema #/definitions/OracleServiceCloudSource#type
   */
  readonly type: OracleServiceCloudSourceType;

}

/**
 * A copy activity Google AdWords service source.
 *
 * @schema #/definitions/GoogleAdWordsSource
 */
export interface GoogleAdWordsSource {
  /**
   * A query to retrieve data from source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/GoogleAdWordsSource#query
   */
  readonly query?: GoogleAdWordsSourceQuery;

  /**
   * @schema #/definitions/GoogleAdWordsSource#type
   */
  readonly type: GoogleAdWordsSourceType;

}

/**
 * A copy activity source for Amazon Redshift Source.
 *
 * @schema #/definitions/AmazonRedshiftSource
 */
export interface AmazonRedshiftSource {
  /**
   * Database query. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AmazonRedshiftSource#query
   */
  readonly query?: AmazonRedshiftSourceQuery;

  /**
   * The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
   *
   * @schema #/definitions/AmazonRedshiftSource#redshiftUnloadSettings
   */
  readonly redshiftUnloadSettings?: RedshiftUnloadSettings;

  /**
   * @schema #/definitions/AmazonRedshiftSource#type
   */
  readonly type: AmazonRedshiftSourceType;

}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/blobSourceRecursive
 */
export interface BlobSourceRecursive {
}

/**
 * Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/blobSourceSkipHeaderLineCount
 */
export interface BlobSourceSkipHeaderLineCount {
}

/**
 * Treat empty as null. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/blobSourceTreatEmptyAsNull
 */
export interface BlobSourceTreatEmptyAsNull {
}

export enum BlobSourceType {
  BLOB_SOURCE = 'BlobSource',
}

/**
 * Nested properties separator. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/documentDbCollectionSourceNestingSeparator
 */
export interface DocumentDbCollectionSourceNestingSeparator {
}

/**
 * Documents query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/documentDbCollectionSourceQuery
 */
export interface DocumentDbCollectionSourceQuery {
}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/documentDbCollectionSourceQueryTimeout
 */
export interface DocumentDbCollectionSourceQueryTimeout {
}

export enum DocumentDbCollectionSourceType {
  DOCUMENT_DB_COLLECTION_SOURCE = 'DocumentDbCollectionSource',
}

/**
 * Whether detect primitive values as datetime values. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/cosmosDbSqlApiSourceDetectDatetime
 */
export interface CosmosDbSqlApiSourceDetectDatetime {
}

/**
 * Page size of the result. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/cosmosDbSqlApiSourcePageSize
 */
export interface CosmosDbSqlApiSourcePageSize {
}

/**
 * Preferred regions. Type: array of strings (or Expression with resultType array of strings).
 *
 * @schema #/definitions/cosmosDbSqlApiSourcePreferredRegions
 */
export interface CosmosDbSqlApiSourcePreferredRegions {
}

/**
 * SQL API query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbSqlApiSourceQuery
 */
export interface CosmosDbSqlApiSourceQuery {
}

export enum CosmosDbSqlApiSourceType {
  COSMOS_DB_SQL_API_SOURCE = 'CosmosDbSqlApiSource',
}

/**
 * FetchXML is a proprietary query language that is used in Microsoft Dynamics (online & on-premises). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsSourceQuery
 */
export interface DynamicsSourceQuery {
}

export enum DynamicsSourceType {
  DYNAMICS_SOURCE = 'DynamicsSource',
}

/**
 * FetchXML is a proprietary query language that is used in Microsoft Dynamics CRM (online & on-premises). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsCrmSourceQuery
 */
export interface DynamicsCrmSourceQuery {
}

export enum DynamicsCrmSourceType {
  DYNAMICS_CRM_SOURCE = 'DynamicsCrmSource',
}

/**
 * FetchXML is a proprietary query language that is used in Microsoft Common Data Service for Apps (online & on-premises). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/commonDataServiceForAppsSourceQuery
 */
export interface CommonDataServiceForAppsSourceQuery {
}

export enum CommonDataServiceForAppsSourceType {
  COMMON_DATA_SERVICE_FOR_APPS_SOURCE = 'CommonDataServiceForAppsSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/relationalSourceQuery
 */
export interface RelationalSourceQuery {
}

export enum RelationalSourceType {
  RELATIONAL_SOURCE = 'RelationalSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/microsoftAccessSourceQuery
 */
export interface MicrosoftAccessSourceQuery {
}

export enum MicrosoftAccessSourceType {
  MICROSOFT_ACCESS_SOURCE = 'MicrosoftAccessSource',
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/oDataSourceHttpRequestTimeout
 */
export interface ODataSourceHttpRequestTimeout {
}

/**
 * OData query. For example, "$top=1". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oDataSourceQuery
 */
export interface ODataSourceQuery {
}

export enum ODataSourceType {
  O_DATA_SOURCE = 'ODataSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceServiceCloudSourceQuery
 */
export interface SalesforceServiceCloudSourceQuery {
}

export enum SalesforceServiceCloudSourceReadBehavior {
  QUERY = 'Query',
  QUERY_ALL = 'QueryAll',
}

export enum SalesforceServiceCloudSourceType {
  SALESFORCE_SERVICE_CLOUD_SOURCE = 'SalesforceServiceCloudSource',
}

/**
 * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSourceAdditionalHeaders
 */
export interface RestSourceAdditionalHeaders {
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:01:40. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/restSourceHttpRequestTimeout
 */
export interface RestSourceHttpRequestTimeout {
}

/**
 * The pagination rules to compose next page requests. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSourcePaginationRules
 */
export interface RestSourcePaginationRules {
}

/**
 * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSourceRequestBody
 */
export interface RestSourceRequestBody {
}

/**
 * The time to await before sending next page request. 
 *
 * @schema #/definitions/restSourceRequestInterval
 */
export interface RestSourceRequestInterval {
}

/**
 * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/restSourceRequestMethod
 */
export interface RestSourceRequestMethod {
}

export enum RestSourceType {
  REST_SOURCE = 'RestSource',
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/fileSystemSourceRecursive
 */
export interface FileSystemSourceRecursive {
}

export enum FileSystemSourceType {
  FILE_SYSTEM_SOURCE = 'FileSystemSource',
}

/**
 * Distcp settings.
 *
 * @schema #/definitions/DistcpSettings
 */
export interface DistcpSettings {
  /**
   * Specifies the Distcp options. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DistcpSettings#distcpOptions
   */
  readonly distcpOptions?: DistcpSettingsDistcpOptions;

  /**
   * Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DistcpSettings#resourceManagerEndpoint
   */
  readonly resourceManagerEndpoint: DistcpSettingsResourceManagerEndpoint;

  /**
   * Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/DistcpSettings#tempScriptPath
   */
  readonly tempScriptPath: DistcpSettingsTempScriptPath;

}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/hdfsSourceRecursive
 */
export interface HdfsSourceRecursive {
}

export enum HdfsSourceType {
  HDFS_SOURCE = 'HdfsSource',
}

/**
 * The name of the Boolean option that controls whether truncation is applied to result-sets that go beyond a certain row-count limit.
 *
 * @schema #/definitions/azureDataExplorerSourceNoTruncation
 */
export interface AzureDataExplorerSourceNoTruncation {
}

/**
 * Database query. Should be a Kusto Query Language (KQL) query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataExplorerSourceQuery
 */
export interface AzureDataExplorerSourceQuery {
}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..
 *
 * @schema #/definitions/azureDataExplorerSourceQueryTimeout
 */
export interface AzureDataExplorerSourceQueryTimeout {
}

export enum AzureDataExplorerSourceType {
  AZURE_DATA_EXPLORER_SOURCE = 'AzureDataExplorerSource',
}

/**
 * Oracle reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleSourceOracleReaderQuery
 */
export interface OracleSourceOracleReaderQuery {
}

/**
 * The partition mechanism that will be used for Oracle read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/oracleSourcePartitionOption
 */
export interface OracleSourcePartitionOption {
}

/**
 * The settings that will be leveraged for Oracle source partitioning.
 *
 * @schema #/definitions/OraclePartitionSettings
 */
export interface OraclePartitionSettings {
  /**
   * The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OraclePartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: OraclePartitionSettingsPartitionColumnName;

  /**
   * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OraclePartitionSettings#partitionLowerBound
   */
  readonly partitionLowerBound?: OraclePartitionSettingsPartitionLowerBound;

  /**
   * Names of the physical partitions of Oracle table. 
   *
   * @schema #/definitions/OraclePartitionSettings#partitionNames
   */
  readonly partitionNames?: OraclePartitionSettingsPartitionNames;

  /**
   * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/OraclePartitionSettings#partitionUpperBound
   */
  readonly partitionUpperBound?: OraclePartitionSettingsPartitionUpperBound;

}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/oracleSourceQueryTimeout
 */
export interface OracleSourceQueryTimeout {
}

export enum OracleSourceType {
  ORACLE_SOURCE = 'OracleSource',
}

export enum WebSourceType {
  WEB_SOURCE = 'WebSource',
}

/**
 * Database query. Should be a SQL-92 query expression. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbSourceQuery
 */
export interface MongoDbSourceQuery {
}

export enum MongoDbSourceType {
  MONGO_DB_SOURCE = 'MongoDbSource',
}

/**
 * Specifies the number of documents to return in each batch of the response from MongoDB Atlas instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/mongoDbAtlasSourceBatchSize
 */
export interface MongoDbAtlasSourceBatchSize {
}

/**
 * Cursor methods for Mongodb query
 *
 * @schema #/definitions/MongoDbCursorMethodsProperties
 */
export interface MongoDbCursorMethodsProperties {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/MongoDbCursorMethodsProperties#additionalProperties
   */
  readonly additionalProperties?: MongoDbCursorMethodsPropertiesAdditionalProperties;

  /**
   * Specifies the maximum number of documents the server returns. limit() is analogous to the LIMIT statement in a SQL database. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/MongoDbCursorMethodsProperties#limit
   */
  readonly limit?: MongoDbCursorMethodsPropertiesLimit;

  /**
   * Specifies the fields to return in the documents that match the query filter. To return all fields in the matching documents, omit this parameter. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbCursorMethodsProperties#project
   */
  readonly project?: MongoDbCursorMethodsPropertiesProject;

  /**
   * Specifies the how many documents skipped and where MongoDB begins returning results. This approach may be useful in implementing paginated results. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/MongoDbCursorMethodsProperties#skip
   */
  readonly skip?: MongoDbCursorMethodsPropertiesSkip;

  /**
   * Specifies the order in which the query returns matching documents. Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/MongoDbCursorMethodsProperties#sort
   */
  readonly sort?: MongoDbCursorMethodsPropertiesSort;

}

/**
 * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbAtlasSourceFilter
 */
export interface MongoDbAtlasSourceFilter {
}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/mongoDbAtlasSourceQueryTimeout
 */
export interface MongoDbAtlasSourceQueryTimeout {
}

export enum MongoDbAtlasSourceType {
  MONGO_DB_ATLAS_SOURCE = 'MongoDbAtlasSource',
}

/**
 * Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/mongoDbV2SourceBatchSize
 */
export interface MongoDbV2SourceBatchSize {
}

/**
 * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbV2SourceFilter
 */
export interface MongoDbV2SourceFilter {
}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/mongoDbV2SourceQueryTimeout
 */
export interface MongoDbV2SourceQueryTimeout {
}

export enum MongoDbV2SourceType {
  "MongoDbV2SourceType_MONGO_DB_V2_SOURCE" = 'MongoDbV2Source',
}

/**
 * Specifies the number of documents to return in each batch of the response from MongoDB instance. In most cases, modifying the batch size will not affect the user or the application. This property's main purpose is to avoid hit the limitation of response size. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/cosmosDbMongoDbApiSourceBatchSize
 */
export interface CosmosDbMongoDbApiSourceBatchSize {
}

/**
 * Specifies selection filter using query operators. To return all documents in a collection, omit this parameter or pass an empty document ({}). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cosmosDbMongoDbApiSourceFilter
 */
export interface CosmosDbMongoDbApiSourceFilter {
}

/**
 * Query timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/cosmosDbMongoDbApiSourceQueryTimeout
 */
export interface CosmosDbMongoDbApiSourceQueryTimeout {
}

export enum CosmosDbMongoDbApiSourceType {
  COSMOS_DB_MONGO_DB_API_SOURCE = 'CosmosDbMongoDbApiSource',
}

/**
 * The groups containing all the users. Type: array of strings (or Expression with resultType array of strings).
 *
 * @schema #/definitions/office365SourceAllowedGroups
 */
export interface Office365SourceAllowedGroups {
}

/**
 * The Column to apply the <paramref name="StartTime"/> and <paramref name="EndTime"/>. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365SourceDateFilterColumn
 */
export interface Office365SourceDateFilterColumn {
}

/**
 * End time of the requested range for this dataset. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365SourceEndTime
 */
export interface Office365SourceEndTime {
}

/**
 * The columns to be read out from the Office 365 table. Type: array of objects (or Expression with resultType array of objects). Example: [ { "name": "Id" }, { "name": "CreatedDateTime" } ]
 *
 * @schema #/definitions/office365SourceOutputColumns
 */
export interface Office365SourceOutputColumns {
}

/**
 * Start time of the requested range for this dataset. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365SourceStartTime
 */
export interface Office365SourceStartTime {
}

export enum Office365SourceType {
  "Office365SourceType_OFFICE365_SOURCE" = 'Office365Source',
}

/**
 * The user scope uri. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/office365SourceUserScopeFilterUri
 */
export interface Office365SourceUserScopeFilterUri {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureDataLakeStoreSourceRecursive
 */
export interface AzureDataLakeStoreSourceRecursive {
}

export enum AzureDataLakeStoreSourceType {
  AZURE_DATA_LAKE_STORE_SOURCE = 'AzureDataLakeStoreSource',
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureBlobFsSourceRecursive
 */
export interface AzureBlobFsSourceRecursive {
}

/**
 * Number of header lines to skip from each blob. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/azureBlobFsSourceSkipHeaderLineCount
 */
export interface AzureBlobFsSourceSkipHeaderLineCount {
}

/**
 * Treat empty as null. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/azureBlobFsSourceTreatEmptyAsNull
 */
export interface AzureBlobFsSourceTreatEmptyAsNull {
}

export enum AzureBlobFsSourceType {
  AZURE_BLOB_FS_SOURCE = 'AzureBlobFSSource',
}

/**
 * Specifies the timeout for a HTTP client to get HTTP response from HTTP server. The default value is equivalent to System.Net.HttpWebRequest.Timeout. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/httpSourceHttpRequestTimeout
 */
export interface HttpSourceHttpRequestTimeout {
}

export enum HttpSourceType {
  HTTP_SOURCE = 'HttpSource',
}

/**
 * Snowflake export command settings.
 *
 * @schema #/definitions/SnowflakeExportCopyCommand
 */
export interface SnowflakeExportCopyCommand {
  /**
   * Additional copy options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalCopyOptions": { "DATE_FORMAT": "MM/DD/YYYY", "TIME_FORMAT": "'HH24:MI:SS.FF'" }
   *
   * @schema #/definitions/SnowflakeExportCopyCommand#additionalCopyOptions
   */
  readonly additionalCopyOptions?: SnowflakeExportCopyCommandAdditionalCopyOptions;

  /**
   * Additional format options directly passed to snowflake Copy Command. Type: key value pairs (value should be string type) (or Expression with resultType object). Example: "additionalFormatOptions": { "OVERWRITE": "TRUE", "MAX_FILE_SIZE": "'FALSE'" }
   *
   * @schema #/definitions/SnowflakeExportCopyCommand#additionalFormatOptions
   */
  readonly additionalFormatOptions?: SnowflakeExportCopyCommandAdditionalFormatOptions;

  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/SnowflakeExportCopyCommand#additionalProperties
   */
  readonly additionalProperties?: SnowflakeExportCopyCommandAdditionalProperties;

}

/**
 * Snowflake Sql query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/snowflakeSourceQuery
 */
export interface SnowflakeSourceQuery {
}

export enum SnowflakeSourceType {
  SNOWFLAKE_SOURCE = 'SnowflakeSource',
}

/**
 * Azure Databricks Delta Lake export command settings.
 *
 * @schema #/definitions/AzureDatabricksDeltaLakeExportCommand
 */
export interface AzureDatabricksDeltaLakeExportCommand {
  /**
   * Unmatched properties from the message are deserialized this collection
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeExportCommand#additionalProperties
   */
  readonly additionalProperties?: AzureDatabricksDeltaLakeExportCommandAdditionalProperties;

  /**
   * Specify the date format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeExportCommand#dateFormat
   */
  readonly dateFormat?: AzureDatabricksDeltaLakeExportCommandDateFormat;

  /**
   * Specify the timestamp format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/AzureDatabricksDeltaLakeExportCommand#timestampFormat
   */
  readonly timestampFormat?: AzureDatabricksDeltaLakeExportCommandTimestampFormat;

}

/**
 * Azure Databricks Delta Lake Sql query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeSourceQuery
 */
export interface AzureDatabricksDeltaLakeSourceQuery {
}

export enum AzureDatabricksDeltaLakeSourceType {
  AZURE_DATABRICKS_DELTA_LAKE_SOURCE = 'AzureDatabricksDeltaLakeSource',
}

/**
 * The wait time to get a response from SharePoint Online. Default value is 5 minutes (00:05:00). Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/sharePointOnlineListSourceHttpRequestTimeout
 */
export interface SharePointOnlineListSourceHttpRequestTimeout {
}

/**
 * The OData query to filter the data in SharePoint Online list. For example, "$top=1". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sharePointOnlineListSourceQuery
 */
export interface SharePointOnlineListSourceQuery {
}

export enum SharePointOnlineListSourceType {
  SHARE_POINT_ONLINE_LIST_SOURCE = 'SharePointOnlineListSource',
}

/**
 * SSIS access credential.
 *
 * @schema #/definitions/SSISAccessCredential
 */
export interface SsisAccessCredential {
  /**
   * Domain for windows authentication.
   *
   * @schema #/definitions/SSISAccessCredential#domain
   */
  readonly domain: SsisAccessCredentialDomain;

  /**
   * The base definition of a secret type.
   *
   * @schema #/definitions/SSISAccessCredential#password
   */
  readonly password: SecretBase;

  /**
   * UseName for windows authentication.
   *
   * @schema #/definitions/SSISAccessCredential#userName
   */
  readonly userName: SsisAccessCredentialUserName;

}

/**
 * Specifies the interval to refresh log. The default interval is 5 minutes. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/ssisLogLocationTypePropertiesLogRefreshInterval
 */
export interface SsisLogLocationTypePropertiesLogRefreshInterval {
}

/**
 * SSIS embedded child package.
 *
 * @schema #/definitions/SSISChildPackage
 */
export interface SsisChildPackage {
  /**
   * Content for embedded child package. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISChildPackage#packageContent
   */
  readonly packageContent: SsisChildPackagePackageContent;

  /**
   * Last modified date for embedded child package.
   *
   * @schema #/definitions/SSISChildPackage#packageLastModifiedDate
   */
  readonly packageLastModifiedDate?: string;

  /**
   * Name for embedded child package.
   *
   * @schema #/definitions/SSISChildPackage#packageName
   */
  readonly packageName?: string;

  /**
   * Path for embedded child package. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SSISChildPackage#packagePath
   */
  readonly packagePath: SsisChildPackagePackagePath;

}

/**
 * The configuration file of the package execution. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisPackageLocationTypePropertiesConfigurationPath
 */
export interface SsisPackageLocationTypePropertiesConfigurationPath {
}

/**
 * The embedded package content. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisPackageLocationTypePropertiesPackageContent
 */
export interface SsisPackageLocationTypePropertiesPackageContent {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureBlobStorageReadSettingsDeleteFilesAfterCompletion
 */
export interface AzureBlobStorageReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsFileListPath
 */
export interface AzureBlobStorageReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsModifiedDatetimeEnd
 */
export interface AzureBlobStorageReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsModifiedDatetimeStart
 */
export interface AzureBlobStorageReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsPartitionRootPath
 */
export interface AzureBlobStorageReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the Azure Blob name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsPrefix
 */
export interface AzureBlobStorageReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureBlobStorageReadSettingsRecursive
 */
export interface AzureBlobStorageReadSettingsRecursive {
}

export enum AzureBlobStorageReadSettingsType {
  AZURE_BLOB_STORAGE_READ_SETTINGS = 'AzureBlobStorageReadSettings',
}

/**
 * Azure blob wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsWildcardFileName
 */
export interface AzureBlobStorageReadSettingsWildcardFileName {
}

/**
 * Azure blob wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobStorageReadSettingsWildcardFolderPath
 */
export interface AzureBlobStorageReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureBlobFsReadSettingsDeleteFilesAfterCompletion
 */
export interface AzureBlobFsReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsFileListPath
 */
export interface AzureBlobFsReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsModifiedDatetimeEnd
 */
export interface AzureBlobFsReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsModifiedDatetimeStart
 */
export interface AzureBlobFsReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsPartitionRootPath
 */
export interface AzureBlobFsReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureBlobFsReadSettingsRecursive
 */
export interface AzureBlobFsReadSettingsRecursive {
}

export enum AzureBlobFsReadSettingsType {
  AZURE_BLOB_FS_READ_SETTINGS = 'AzureBlobFSReadSettings',
}

/**
 * Azure blobFS wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsWildcardFileName
 */
export interface AzureBlobFsReadSettingsWildcardFileName {
}

/**
 * Azure blobFS wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureBlobFsReadSettingsWildcardFolderPath
 */
export interface AzureBlobFsReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureDataLakeStoreReadSettingsDeleteFilesAfterCompletion
 */
export interface AzureDataLakeStoreReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsFileListPath
 */
export interface AzureDataLakeStoreReadSettingsFileListPath {
}

/**
 * Lists files after the value (exclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsListAfter
 */
export interface AzureDataLakeStoreReadSettingsListAfter {
}

/**
 * Lists files before the value (inclusive) based on file/folder names’ lexicographical order. Applies under the folderPath in data set, and filter files/sub-folders under the folderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsListBefore
 */
export interface AzureDataLakeStoreReadSettingsListBefore {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsModifiedDatetimeEnd
 */
export interface AzureDataLakeStoreReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsModifiedDatetimeStart
 */
export interface AzureDataLakeStoreReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsPartitionRootPath
 */
export interface AzureDataLakeStoreReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureDataLakeStoreReadSettingsRecursive
 */
export interface AzureDataLakeStoreReadSettingsRecursive {
}

export enum AzureDataLakeStoreReadSettingsType {
  AZURE_DATA_LAKE_STORE_READ_SETTINGS = 'AzureDataLakeStoreReadSettings',
}

/**
 * ADLS wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsWildcardFileName
 */
export interface AzureDataLakeStoreReadSettingsWildcardFileName {
}

/**
 * ADLS wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDataLakeStoreReadSettingsWildcardFolderPath
 */
export interface AzureDataLakeStoreReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/amazonS3ReadSettingsDeleteFilesAfterCompletion
 */
export interface AmazonS3ReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsFileListPath
 */
export interface AmazonS3ReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsModifiedDatetimeEnd
 */
export interface AmazonS3ReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsModifiedDatetimeStart
 */
export interface AmazonS3ReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsPartitionRootPath
 */
export interface AmazonS3ReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the S3 object name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsPrefix
 */
export interface AmazonS3ReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/amazonS3ReadSettingsRecursive
 */
export interface AmazonS3ReadSettingsRecursive {
}

export enum AmazonS3ReadSettingsType {
  "AmazonS3ReadSettingsType_AMAZON_S3_READ_SETTINGS" = 'AmazonS3ReadSettings',
}

/**
 * AmazonS3 wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsWildcardFileName
 */
export interface AmazonS3ReadSettingsWildcardFileName {
}

/**
 * AmazonS3 wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3ReadSettingsWildcardFolderPath
 */
export interface AmazonS3ReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/fileServerReadSettingsDeleteFilesAfterCompletion
 */
export interface FileServerReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Specify a filter to be used to select a subset of files in the folderPath rather than all files. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsFileFilter
 */
export interface FileServerReadSettingsFileFilter {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsFileListPath
 */
export interface FileServerReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsModifiedDatetimeEnd
 */
export interface FileServerReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsModifiedDatetimeStart
 */
export interface FileServerReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsPartitionRootPath
 */
export interface FileServerReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/fileServerReadSettingsRecursive
 */
export interface FileServerReadSettingsRecursive {
}

export enum FileServerReadSettingsType {
  FILE_SERVER_READ_SETTINGS = 'FileServerReadSettings',
}

/**
 * FileServer wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsWildcardFileName
 */
export interface FileServerReadSettingsWildcardFileName {
}

/**
 * FileServer wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/fileServerReadSettingsWildcardFolderPath
 */
export interface FileServerReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureFileStorageReadSettingsDeleteFilesAfterCompletion
 */
export interface AzureFileStorageReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsFileListPath
 */
export interface AzureFileStorageReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsModifiedDatetimeEnd
 */
export interface AzureFileStorageReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsModifiedDatetimeStart
 */
export interface AzureFileStorageReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsPartitionRootPath
 */
export interface AzureFileStorageReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the Azure File name starting from root path. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsPrefix
 */
export interface AzureFileStorageReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/azureFileStorageReadSettingsRecursive
 */
export interface AzureFileStorageReadSettingsRecursive {
}

export enum AzureFileStorageReadSettingsType {
  AZURE_FILE_STORAGE_READ_SETTINGS = 'AzureFileStorageReadSettings',
}

/**
 * Azure File Storage wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsWildcardFileName
 */
export interface AzureFileStorageReadSettingsWildcardFileName {
}

/**
 * Azure File Storage wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureFileStorageReadSettingsWildcardFolderPath
 */
export interface AzureFileStorageReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/amazonS3CompatibleReadSettingsDeleteFilesAfterCompletion
 */
export interface AmazonS3CompatibleReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsFileListPath
 */
export interface AmazonS3CompatibleReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsModifiedDatetimeEnd
 */
export interface AmazonS3CompatibleReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsModifiedDatetimeStart
 */
export interface AmazonS3CompatibleReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsPartitionRootPath
 */
export interface AmazonS3CompatibleReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the S3 Compatible object name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsPrefix
 */
export interface AmazonS3CompatibleReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/amazonS3CompatibleReadSettingsRecursive
 */
export interface AmazonS3CompatibleReadSettingsRecursive {
}

export enum AmazonS3CompatibleReadSettingsType {
  "AmazonS3CompatibleReadSettingsType_AMAZON_S3_COMPATIBLE_READ_SETTINGS" = 'AmazonS3CompatibleReadSettings',
}

/**
 * Amazon S3 Compatible wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsWildcardFileName
 */
export interface AmazonS3CompatibleReadSettingsWildcardFileName {
}

/**
 * Amazon S3 Compatible wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonS3CompatibleReadSettingsWildcardFolderPath
 */
export interface AmazonS3CompatibleReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/oracleCloudStorageReadSettingsDeleteFilesAfterCompletion
 */
export interface OracleCloudStorageReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsFileListPath
 */
export interface OracleCloudStorageReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsModifiedDatetimeEnd
 */
export interface OracleCloudStorageReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsModifiedDatetimeStart
 */
export interface OracleCloudStorageReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsPartitionRootPath
 */
export interface OracleCloudStorageReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the Oracle Cloud Storage object name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsPrefix
 */
export interface OracleCloudStorageReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/oracleCloudStorageReadSettingsRecursive
 */
export interface OracleCloudStorageReadSettingsRecursive {
}

export enum OracleCloudStorageReadSettingsType {
  ORACLE_CLOUD_STORAGE_READ_SETTINGS = 'OracleCloudStorageReadSettings',
}

/**
 * Oracle Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsWildcardFileName
 */
export interface OracleCloudStorageReadSettingsWildcardFileName {
}

/**
 * Oracle Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleCloudStorageReadSettingsWildcardFolderPath
 */
export interface OracleCloudStorageReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/googleCloudStorageReadSettingsDeleteFilesAfterCompletion
 */
export interface GoogleCloudStorageReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsFileListPath
 */
export interface GoogleCloudStorageReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsModifiedDatetimeEnd
 */
export interface GoogleCloudStorageReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsModifiedDatetimeStart
 */
export interface GoogleCloudStorageReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsPartitionRootPath
 */
export interface GoogleCloudStorageReadSettingsPartitionRootPath {
}

/**
 * The prefix filter for the Google Cloud Storage object name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsPrefix
 */
export interface GoogleCloudStorageReadSettingsPrefix {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/googleCloudStorageReadSettingsRecursive
 */
export interface GoogleCloudStorageReadSettingsRecursive {
}

export enum GoogleCloudStorageReadSettingsType {
  GOOGLE_CLOUD_STORAGE_READ_SETTINGS = 'GoogleCloudStorageReadSettings',
}

/**
 * Google Cloud Storage wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsWildcardFileName
 */
export interface GoogleCloudStorageReadSettingsWildcardFileName {
}

/**
 * Google Cloud Storage wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleCloudStorageReadSettingsWildcardFolderPath
 */
export interface GoogleCloudStorageReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/ftpReadSettingsDeleteFilesAfterCompletion
 */
export interface FtpReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpReadSettingsFileListPath
 */
export interface FtpReadSettingsFileListPath {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpReadSettingsPartitionRootPath
 */
export interface FtpReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/ftpReadSettingsRecursive
 */
export interface FtpReadSettingsRecursive {
}

export enum FtpReadSettingsType {
  FTP_READ_SETTINGS = 'FtpReadSettings',
}

/**
 * Ftp wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpReadSettingsWildcardFileName
 */
export interface FtpReadSettingsWildcardFileName {
}

/**
 * Ftp wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ftpReadSettingsWildcardFolderPath
 */
export interface FtpReadSettingsWildcardFolderPath {
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/sftpReadSettingsDeleteFilesAfterCompletion
 */
export interface SftpReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsFileListPath
 */
export interface SftpReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsModifiedDatetimeEnd
 */
export interface SftpReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsModifiedDatetimeStart
 */
export interface SftpReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsPartitionRootPath
 */
export interface SftpReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/sftpReadSettingsRecursive
 */
export interface SftpReadSettingsRecursive {
}

export enum SftpReadSettingsType {
  SFTP_READ_SETTINGS = 'SftpReadSettings',
}

/**
 * Sftp wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsWildcardFileName
 */
export interface SftpReadSettingsWildcardFileName {
}

/**
 * Sftp wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpReadSettingsWildcardFolderPath
 */
export interface SftpReadSettingsWildcardFolderPath {
}

/**
 * The additional HTTP headers in the request to the RESTful API. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpReadSettingsAdditionalHeaders
 */
export interface HttpReadSettingsAdditionalHeaders {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpReadSettingsPartitionRootPath
 */
export interface HttpReadSettingsPartitionRootPath {
}

/**
 * The HTTP request body to the RESTful API if requestMethod is POST. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpReadSettingsRequestBody
 */
export interface HttpReadSettingsRequestBody {
}

/**
 * The HTTP method used to call the RESTful API. The default is GET. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/httpReadSettingsRequestMethod
 */
export interface HttpReadSettingsRequestMethod {
}

/**
 * Specifies the timeout for a HTTP client to get HTTP response from HTTP server.
 *
 * @schema #/definitions/httpReadSettingsRequestTimeout
 */
export interface HttpReadSettingsRequestTimeout {
}

export enum HttpReadSettingsType {
  HTTP_READ_SETTINGS = 'HttpReadSettings',
}

/**
 * Indicates whether the source files need to be deleted after copy completion. Default is false. Type: boolean (or Expression with resultType boolean).
 *
 * @default false. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/hdfsReadSettingsDeleteFilesAfterCompletion
 */
export interface HdfsReadSettingsDeleteFilesAfterCompletion {
}

/**
 * Point to a text file that lists each file (relative path to the path configured in the dataset) that you want to copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsFileListPath
 */
export interface HdfsReadSettingsFileListPath {
}

/**
 * The end of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsModifiedDatetimeEnd
 */
export interface HdfsReadSettingsModifiedDatetimeEnd {
}

/**
 * The start of file's modified datetime. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsModifiedDatetimeStart
 */
export interface HdfsReadSettingsModifiedDatetimeStart {
}

/**
 * Specify the root path where partition discovery starts from. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsPartitionRootPath
 */
export interface HdfsReadSettingsPartitionRootPath {
}

/**
 * If true, files under the folder path will be read recursively. Default is true. Type: boolean (or Expression with resultType boolean).
 *
 * @default true. Type: boolean (or Expression with resultType boolean).
 * @schema #/definitions/hdfsReadSettingsRecursive
 */
export interface HdfsReadSettingsRecursive {
}

export enum HdfsReadSettingsType {
  HDFS_READ_SETTINGS = 'HdfsReadSettings',
}

/**
 * HDFS wildcardFileName. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsWildcardFileName
 */
export interface HdfsReadSettingsWildcardFileName {
}

/**
 * HDFS wildcardFolderPath. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hdfsReadSettingsWildcardFolderPath
 */
export interface HdfsReadSettingsWildcardFolderPath {
}

/**
 * @schema #/definitions/delimitedTextReadSettingsAdditionalProperties
 */
export interface DelimitedTextReadSettingsAdditionalProperties {
}

/**
 * Compression read settings.
 *
 * @schema #/definitions/CompressionReadSettings
 */
export class CompressionReadSettings {
  public static fromZipDeflateReadSettings(value: ZipDeflateReadSettings): CompressionReadSettings {
    return new CompressionReadSettings(value);
  }
  public static fromTarReadSettings(value: TarReadSettings): CompressionReadSettings {
    return new CompressionReadSettings(value);
  }
  public static fromTarGZipReadSettings(value: TarGZipReadSettings): CompressionReadSettings {
    return new CompressionReadSettings(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * Indicates the number of non-empty rows to skip when reading data from input files. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/delimitedTextReadSettingsSkipLineCount
 */
export interface DelimitedTextReadSettingsSkipLineCount {
}

export enum DelimitedTextReadSettingsType {
  DELIMITED_TEXT_READ_SETTINGS = 'DelimitedTextReadSettings',
}

/**
 * @schema #/definitions/jsonReadSettingsAdditionalProperties
 */
export interface JsonReadSettingsAdditionalProperties {
}

export enum JsonReadSettingsType {
  JSON_READ_SETTINGS = 'JsonReadSettings',
}

/**
 * @schema #/definitions/xmlReadSettingsAdditionalProperties
 */
export interface XmlReadSettingsAdditionalProperties {
}

/**
 * Indicates whether type detection is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/xmlReadSettingsDetectDataType
 */
export interface XmlReadSettingsDetectDataType {
}

/**
 * Namespace uri to prefix mappings to override the prefixes in column names when namespace is enabled, if no prefix is defined for a namespace uri, the prefix of xml element/attribute name in the xml data file will be used. Example: "{"http://www.example.com/xml":"prefix"}" Type: object (or Expression with resultType object).
 *
 * @schema #/definitions/xmlReadSettingsNamespacePrefixes
 */
export interface XmlReadSettingsNamespacePrefixes {
}

/**
 * Indicates whether namespace is enabled when reading the xml files. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/xmlReadSettingsNamespaces
 */
export interface XmlReadSettingsNamespaces {
}

export enum XmlReadSettingsType {
  XML_READ_SETTINGS = 'XmlReadSettings',
}

/**
 * Indicates what validation method is used when reading the xml files. Allowed values: 'none', 'xsd', or 'dtd'. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/xmlReadSettingsValidationMode
 */
export interface XmlReadSettingsValidationMode {
}

/**
 * @schema #/definitions/binaryReadSettingsAdditionalProperties
 */
export interface BinaryReadSettingsAdditionalProperties {
}

export enum BinaryReadSettingsType {
  BINARY_READ_SETTINGS = 'BinaryReadSettings',
}

/**
 * @schema #/definitions/recurrenceScheduleOccurrenceAdditionalProperties
 */
export interface RecurrenceScheduleOccurrenceAdditionalProperties {
}

export enum RecurrenceScheduleOccurrenceDay {
  SUNDAY = 'Sunday',
  MONDAY = 'Monday',
  TUESDAY = 'Tuesday',
  WEDNESDAY = 'Wednesday',
  THURSDAY = 'Thursday',
  FRIDAY = 'Friday',
  SATURDAY = 'Saturday',
}

/**
 * @schema #/definitions/delimitedTextWriteSettingsAdditionalProperties
 */
export interface DelimitedTextWriteSettingsAdditionalProperties {
}

/**
 * The file extension used to create the files. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextWriteSettingsFileExtension
 */
export interface DelimitedTextWriteSettingsFileExtension {
}

/**
 * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/delimitedTextWriteSettingsFileNamePrefix
 */
export interface DelimitedTextWriteSettingsFileNamePrefix {
}

/**
 * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/delimitedTextWriteSettingsMaxRowsPerFile
 */
export interface DelimitedTextWriteSettingsMaxRowsPerFile {
}

/**
 * Indicates whether string values should always be enclosed with quotes. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/delimitedTextWriteSettingsQuoteAllText
 */
export interface DelimitedTextWriteSettingsQuoteAllText {
}

/**
 * Sftp write settings.
 *
 * @schema #/definitions/SftpWriteSettings
 */
export interface SftpWriteSettings {
  /**
   * Specifies the timeout for writing each chunk to SFTP server. Default value: 01:00:00 (one hour). Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SftpWriteSettings#operationTimeout
   */
  readonly operationTimeout?: SftpWriteSettingsOperationTimeout;

  /**
   * @schema #/definitions/SftpWriteSettings#type
   */
  readonly type: SftpWriteSettingsType;

  /**
   * Upload to temporary file(s) and rename. Disable this option if your SFTP server doesn't support rename operation. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/SftpWriteSettings#useTempFileRename
   */
  readonly useTempFileRename?: SftpWriteSettingsUseTempFileRename;

}

/**
 * Azure blob write settings.
 *
 * @schema #/definitions/AzureBlobStorageWriteSettings
 */
export interface AzureBlobStorageWriteSettings {
  /**
   * Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AzureBlobStorageWriteSettings#blockSizeInMB
   */
  readonly blockSizeInMB?: AzureBlobStorageWriteSettingsBlockSizeInMb;

  /**
   * @schema #/definitions/AzureBlobStorageWriteSettings#type
   */
  readonly type: AzureBlobStorageWriteSettingsType;

}

/**
 * Azure blobFS write settings.
 *
 * @schema #/definitions/AzureBlobFSWriteSettings
 */
export interface AzureBlobFsWriteSettings {
  /**
   * Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AzureBlobFSWriteSettings#blockSizeInMB
   */
  readonly blockSizeInMB?: AzureBlobFsWriteSettingsBlockSizeInMb;

  /**
   * @schema #/definitions/AzureBlobFSWriteSettings#type
   */
  readonly type: AzureBlobFsWriteSettingsType;

}

/**
 * Azure data lake store write settings.
 *
 * @schema #/definitions/AzureDataLakeStoreWriteSettings
 */
export interface AzureDataLakeStoreWriteSettings {
  /**
   * Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of "2018-12-01T05:00:00Z". Default value is NULL. Type: integer (or Expression with resultType integer).
   *
   * @schema #/definitions/AzureDataLakeStoreWriteSettings#expiryDateTime
   */
  readonly expiryDateTime?: AzureDataLakeStoreWriteSettingsExpiryDateTime;

  /**
   * @schema #/definitions/AzureDataLakeStoreWriteSettings#type
   */
  readonly type: AzureDataLakeStoreWriteSettingsType;

}

/**
 * File server write settings.
 *
 * @schema #/definitions/FileServerWriteSettings
 */
export interface FileServerWriteSettings {
  /**
   * @schema #/definitions/FileServerWriteSettings#type
   */
  readonly type: FileServerWriteSettingsType;

}

/**
 * Azure File Storage write settings.
 *
 * @schema #/definitions/AzureFileStorageWriteSettings
 */
export interface AzureFileStorageWriteSettings {
  /**
   * @schema #/definitions/AzureFileStorageWriteSettings#type
   */
  readonly type: AzureFileStorageWriteSettingsType;

}

/**
 * @schema #/definitions/jsonWriteSettingsAdditionalProperties
 */
export interface JsonWriteSettingsAdditionalProperties {
}

export enum JsonWriteSettingsFilePattern {
  SET_OF_OBJECTS = 'setOfObjects',
  ARRAY_OF_OBJECTS = 'arrayOfObjects',
}

/**
 * @schema #/definitions/orcWriteSettingsAdditionalProperties
 */
export interface OrcWriteSettingsAdditionalProperties {
}

/**
 * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/orcWriteSettingsFileNamePrefix
 */
export interface OrcWriteSettingsFileNamePrefix {
}

/**
 * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/orcWriteSettingsMaxRowsPerFile
 */
export interface OrcWriteSettingsMaxRowsPerFile {
}

/**
 * @schema #/definitions/azureDatabricksDeltaLakeImportCommandAdditionalProperties
 */
export interface AzureDatabricksDeltaLakeImportCommandAdditionalProperties {
}

/**
 * Specify the date format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeImportCommandDateFormat
 */
export interface AzureDatabricksDeltaLakeImportCommandDateFormat {
}

/**
 * Specify the timestamp format for csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeImportCommandTimestampFormat
 */
export interface AzureDatabricksDeltaLakeImportCommandTimestampFormat {
}

/**
 * @schema #/definitions/avroWriteSettingsAdditionalProperties
 */
export interface AvroWriteSettingsAdditionalProperties {
}

/**
 * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/avroWriteSettingsFileNamePrefix
 */
export interface AvroWriteSettingsFileNamePrefix {
}

/**
 * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/avroWriteSettingsMaxRowsPerFile
 */
export interface AvroWriteSettingsMaxRowsPerFile {
}

/**
 * @schema #/definitions/parquetWriteSettingsAdditionalProperties
 */
export interface ParquetWriteSettingsAdditionalProperties {
}

/**
 * Specifies the file name pattern <fileNamePrefix>_<fileIndex>.<fileExtension> when copy from non-file based store without partitionOptions. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/parquetWriteSettingsFileNamePrefix
 */
export interface ParquetWriteSettingsFileNamePrefix {
}

/**
 * Limit the written file's row count to be smaller than or equal to the specified count. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/parquetWriteSettingsMaxRowsPerFile
 */
export interface ParquetWriteSettingsMaxRowsPerFile {
}

/**
 * @schema #/definitions/dwCopyCommandSettingsAdditionalOptions
 */
export interface DwCopyCommandSettingsAdditionalOptions {
}

/**
 * Default value.
 *
 * @schema #/definitions/DWCopyCommandDefaultValue
 */
export interface DwCopyCommandDefaultValue {
  /**
   * Column name. Type: object (or Expression with resultType string).
   *
   * @schema #/definitions/DWCopyCommandDefaultValue#columnName
   */
  readonly columnName?: DwCopyCommandDefaultValueColumnName;

  /**
   * The default value of the column. Type: object (or Expression with resultType string).
   *
   * @schema #/definitions/DWCopyCommandDefaultValue#defaultValue
   */
  readonly defaultValue?: DwCopyCommandDefaultValueDefaultValue;

}

/**
 * @schema #/definitions/polybaseSettingsAdditionalProperties
 */
export interface PolybaseSettingsAdditionalProperties {
}

/**
 * Determines the number of rows to attempt to retrieve before the PolyBase recalculates the percentage of rejected rows. Type: integer (or Expression with resultType integer), minimum: 0.
 *
 * @schema #/definitions/polybaseSettingsRejectSampleValue
 */
export interface PolybaseSettingsRejectSampleValue {
}

export enum PolybaseSettingsRejectType {
  VALUE = 'value',
  PERCENTAGE = 'percentage',
}

/**
 * Specifies the value or the percentage of rows that can be rejected before the query fails. Type: number (or Expression with resultType number), minimum: 0.
 *
 * @schema #/definitions/polybaseSettingsRejectValue
 */
export interface PolybaseSettingsRejectValue {
}

/**
 * Specifies how to handle missing values in delimited text files when PolyBase retrieves data from the text file. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/polybaseSettingsUseTypeDefault
 */
export interface PolybaseSettingsUseTypeDefault {
}

/**
 * @schema #/definitions/snowflakeImportCopyCommandAdditionalCopyOptions
 */
export interface SnowflakeImportCopyCommandAdditionalCopyOptions {
}

/**
 * @schema #/definitions/snowflakeImportCopyCommandAdditionalFormatOptions
 */
export interface SnowflakeImportCopyCommandAdditionalFormatOptions {
}

/**
 * @schema #/definitions/snowflakeImportCopyCommandAdditionalProperties
 */
export interface SnowflakeImportCopyCommandAdditionalProperties {
}

/**
 * Additional column name. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/additionalColumnsName
 */
export interface AdditionalColumnsName {
}

/**
 * Additional column value. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/additionalColumnsValue
 */
export interface AdditionalColumnsValue {
}

/**
 * Azure Table source ignore table not found. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/azureTableSourceAzureTableSourceIgnoreTableNotFound
 */
export interface AzureTableSourceAzureTableSourceIgnoreTableNotFound {
}

/**
 * Azure Table source query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureTableSourceAzureTableSourceQuery
 */
export interface AzureTableSourceAzureTableSourceQuery {
}

export enum AzureTableSourceType {
  AZURE_TABLE_SOURCE = 'AzureTableSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/informixSourceQuery
 */
export interface InformixSourceQuery {
}

export enum InformixSourceType {
  INFORMIX_SOURCE = 'InformixSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/db2SourceQuery
 */
export interface Db2SourceQuery {
}

export enum Db2SourceType {
  "Db2SourceType_DB2_SOURCE" = 'Db2Source',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/odbcSourceQuery
 */
export interface OdbcSourceQuery {
}

export enum OdbcSourceType {
  ODBC_SOURCE = 'OdbcSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mySqlSourceQuery
 */
export interface MySqlSourceQuery {
}

export enum MySqlSourceType {
  MY_SQL_SOURCE = 'MySqlSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/postgreSqlSourceQuery
 */
export interface PostgreSqlSourceQuery {
}

export enum PostgreSqlSourceType {
  POSTGRE_SQL_SOURCE = 'PostgreSqlSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sybaseSourceQuery
 */
export interface SybaseSourceQuery {
}

export enum SybaseSourceType {
  SYBASE_SOURCE = 'SybaseSource',
}

/**
 * MDX query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapBwSourceQuery
 */
export interface SapBwSourceQuery {
}

export enum SapBwSourceType {
  SAP_BW_SOURCE = 'SapBwSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceSourceQuery
 */
export interface SalesforceSourceQuery {
}

export enum SalesforceSourceReadBehavior {
  QUERY = 'Query',
  QUERY_ALL = 'QueryAll',
}

export enum SalesforceSourceType {
  SALESFORCE_SOURCE = 'SalesforceSource',
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/sapCloudForCustomerSourceHttpRequestTimeout
 */
export interface SapCloudForCustomerSourceHttpRequestTimeout {
}

/**
 * SAP Cloud for Customer OData query. For example, "$top=1". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapCloudForCustomerSourceQuery
 */
export interface SapCloudForCustomerSourceQuery {
}

export enum SapCloudForCustomerSourceType {
  SAP_CLOUD_FOR_CUSTOMER_SOURCE = 'SapCloudForCustomerSource',
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/sapEccSourceHttpRequestTimeout
 */
export interface SapEccSourceHttpRequestTimeout {
}

/**
 * SAP ECC OData query. For example, "$top=1". Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapEccSourceQuery
 */
export interface SapEccSourceQuery {
}

export enum SapEccSourceType {
  SAP_ECC_SOURCE = 'SapEccSource',
}

/**
 * The packet size of data read from SAP HANA. Type: integer(or Expression with resultType integer).
 *
 * @schema #/definitions/sapHanaSourcePacketSize
 */
export interface SapHanaSourcePacketSize {
}

/**
 * The partition mechanism that will be used for SAP HANA read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "SapHanaDynamicRange". 
 *
 * @schema #/definitions/sapHanaSourcePartitionOption
 */
export interface SapHanaSourcePartitionOption {
}

/**
 * The settings that will be leveraged for SAP HANA source partitioning.
 *
 * @schema #/definitions/SapHanaPartitionSettings
 */
export interface SapHanaPartitionSettings {
  /**
   * The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapHanaPartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: SapHanaPartitionSettingsPartitionColumnName;

}

/**
 * SAP HANA Sql query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaSourceQuery
 */
export interface SapHanaSourceQuery {
}

export enum SapHanaSourceType {
  SAP_HANA_SOURCE = 'SapHanaSource',
}

/**
 * The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved. The default value is 0. Type: integer (or Expression with resultType integer ).
 *
 * @schema #/definitions/sapOpenHubSourceBaseRequestId
 */
export interface SapOpenHubSourceBaseRequestId {
}

/**
 * Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubSourceCustomRfcReadTableFunctionModule
 */
export interface SapOpenHubSourceCustomRfcReadTableFunctionModule {
}

/**
 * Whether to exclude the records of the last request. The default value is true. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sapOpenHubSourceExcludeLastRequest
 */
export interface SapOpenHubSourceExcludeLastRequest {
}

/**
 * The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapOpenHubSourceSapDataColumnDelimiter
 */
export interface SapOpenHubSourceSapDataColumnDelimiter {
}

export enum SapOpenHubSourceType {
  SAP_OPEN_HUB_SOURCE = 'SapOpenHubSource',
}

/**
 * Specifies the maximum number of rows that will be retrieved at a time when retrieving data from SAP Table. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/sapTableSourceBatchSize
 */
export interface SapTableSourceBatchSize {
}

/**
 * Specifies the custom RFC function module that will be used to read data from SAP Table. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableSourceCustomRfcReadTableFunctionModule
 */
export interface SapTableSourceCustomRfcReadTableFunctionModule {
}

/**
 * The partition mechanism that will be used for SAP table read in parallel. Possible values include: "None", "PartitionOnInt", "PartitionOnCalendarYear", "PartitionOnCalendarMonth", "PartitionOnCalendarDate", "PartitionOnTime".
 *
 * @schema #/definitions/sapTableSourcePartitionOption
 */
export interface SapTableSourcePartitionOption {
}

/**
 * The settings that will be leveraged for SAP table source partitioning.
 *
 * @schema #/definitions/SapTablePartitionSettings
 */
export interface SapTablePartitionSettings {
  /**
   * The maximum value of partitions the table will be split into. Type: integer (or Expression with resultType string).
   *
   * @schema #/definitions/SapTablePartitionSettings#maxPartitionsNumber
   */
  readonly maxPartitionsNumber?: SapTablePartitionSettingsMaxPartitionsNumber;

  /**
   * The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTablePartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: SapTablePartitionSettingsPartitionColumnName;

  /**
   * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTablePartitionSettings#partitionLowerBound
   */
  readonly partitionLowerBound?: SapTablePartitionSettingsPartitionLowerBound;

  /**
   * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SapTablePartitionSettings#partitionUpperBound
   */
  readonly partitionUpperBound?: SapTablePartitionSettingsPartitionUpperBound;

}

/**
 * The fields of the SAP table that will be retrieved. For example, column0, column1. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableSourceRfcTableFields
 */
export interface SapTableSourceRfcTableFields {
}

/**
 * The options for the filtering of the SAP Table. For example, COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableSourceRfcTableOptions
 */
export interface SapTableSourceRfcTableOptions {
}

/**
 * The number of rows to be retrieved. Type: integer(or Expression with resultType integer).
 *
 * @schema #/definitions/sapTableSourceRowCount
 */
export interface SapTableSourceRowCount {
}

/**
 * The number of rows that will be skipped. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/sapTableSourceRowSkips
 */
export interface SapTableSourceRowSkips {
}

/**
 * The single character that will be used as delimiter passed to SAP RFC as well as splitting the output data retrieved. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTableSourceSapDataColumnDelimiter
 */
export interface SapTableSourceSapDataColumnDelimiter {
}

export enum SapTableSourceType {
  SAP_TABLE_SOURCE = 'SapTableSource',
}

/**
 * Specifies the transaction locking behavior for the SQL source. Allowed values: ReadCommitted/ReadUncommitted/RepeatableRead/Serializable/Snapshot. The default value is ReadCommitted. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSourceIsolationLevel
 */
export interface SqlSourceIsolationLevel {
}

/**
 * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/sqlSourcePartitionOption
 */
export interface SqlSourcePartitionOption {
}

/**
 * The settings that will be leveraged for Sql source partitioning.
 *
 * @schema #/definitions/SqlPartitionSettings
 */
export interface SqlPartitionSettings {
  /**
   * The name of the column in integer or datetime type that will be used for proceeding partitioning. If not specified, the primary key of the table is auto-detected and used as the partition column. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlPartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: SqlPartitionSettingsPartitionColumnName;

  /**
   * The minimum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlPartitionSettings#partitionLowerBound
   */
  readonly partitionLowerBound?: SqlPartitionSettingsPartitionLowerBound;

  /**
   * The maximum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/SqlPartitionSettings#partitionUpperBound
   */
  readonly partitionUpperBound?: SqlPartitionSettingsPartitionUpperBound;

}

/**
 * SQL reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSourceSqlReaderQuery
 */
export interface SqlSourceSqlReaderQuery {
}

/**
 * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlSourceSqlReaderStoredProcedureName
 */
export interface SqlSourceSqlReaderStoredProcedureName {
}

/**
 * @schema #/definitions/sqlSourceStoredProcedureParameters
 */
export interface SqlSourceStoredProcedureParameters {
}

export enum SqlSourceType {
  SQL_SOURCE = 'SqlSource',
}

/**
 * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/sqlServerSourcePartitionOption
 */
export interface SqlServerSourcePartitionOption {
}

/**
 * Which additional types to produce.
 *
 * @schema #/definitions/sqlServerSourceProduceAdditionalTypes
 */
export interface SqlServerSourceProduceAdditionalTypes {
}

/**
 * SQL reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSourceSqlReaderQuery
 */
export interface SqlServerSourceSqlReaderQuery {
}

/**
 * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlServerSourceSqlReaderStoredProcedureName
 */
export interface SqlServerSourceSqlReaderStoredProcedureName {
}

/**
 * @schema #/definitions/sqlServerSourceStoredProcedureParameters
 */
export interface SqlServerSourceStoredProcedureParameters {
}

export enum SqlServerSourceType {
  SQL_SERVER_SOURCE = 'SqlServerSource',
}

/**
 * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/azureSqlSourcePartitionOption
 */
export interface AzureSqlSourcePartitionOption {
}

/**
 * Which additional types to produce.
 *
 * @schema #/definitions/azureSqlSourceProduceAdditionalTypes
 */
export interface AzureSqlSourceProduceAdditionalTypes {
}

/**
 * SQL reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSourceSqlReaderQuery
 */
export interface AzureSqlSourceSqlReaderQuery {
}

/**
 * Name of the stored procedure for a SQL Database source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureSqlSourceSqlReaderStoredProcedureName
 */
export interface AzureSqlSourceSqlReaderStoredProcedureName {
}

/**
 * @schema #/definitions/azureSqlSourceStoredProcedureParameters
 */
export interface AzureSqlSourceStoredProcedureParameters {
}

export enum AzureSqlSourceType {
  AZURE_SQL_SOURCE = 'AzureSqlSource',
}

/**
 * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/sqlMiSourcePartitionOption
 */
export interface SqlMiSourcePartitionOption {
}

/**
 * Which additional types to produce.
 *
 * @schema #/definitions/sqlMiSourceProduceAdditionalTypes
 */
export interface SqlMiSourceProduceAdditionalTypes {
}

/**
 * SQL reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSourceSqlReaderQuery
 */
export interface SqlMiSourceSqlReaderQuery {
}

/**
 * Name of the stored procedure for a Azure SQL Managed Instance source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlMiSourceSqlReaderStoredProcedureName
 */
export interface SqlMiSourceSqlReaderStoredProcedureName {
}

/**
 * @schema #/definitions/sqlMiSourceStoredProcedureParameters
 */
export interface SqlMiSourceStoredProcedureParameters {
}

export enum SqlMiSourceType {
  SQL_MI_SOURCE = 'SqlMISource',
}

/**
 * The partition mechanism that will be used for Sql read in parallel. Possible values include: "None", "PhysicalPartitionsOfTable", "DynamicRange".
 *
 * @schema #/definitions/sqlDwSourcePartitionOption
 */
export interface SqlDwSourcePartitionOption {
}

/**
 * SQL Data Warehouse reader query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlDwSourceSqlReaderQuery
 */
export interface SqlDwSourceSqlReaderQuery {
}

/**
 * Name of the stored procedure for a SQL Data Warehouse source. This cannot be used at the same time as SqlReaderQuery. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlDwSourceSqlReaderStoredProcedureName
 */
export interface SqlDwSourceSqlReaderStoredProcedureName {
}

/**
 * Value and type setting for stored procedure parameters. Example: "{Parameter1: {value: "1", type: "int"}}". Type: object (or Expression with resultType object), itemType: StoredProcedureParameter.
 *
 * @schema #/definitions/sqlDwSourceStoredProcedureParameters
 */
export interface SqlDwSourceStoredProcedureParameters {
}

export enum SqlDwSourceType {
  SQL_DW_SOURCE = 'SqlDWSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMySqlSourceQuery
 */
export interface AzureMySqlSourceQuery {
}

export enum AzureMySqlSourceType {
  AZURE_MY_SQL_SOURCE = 'AzureMySqlSource',
}

/**
 * The partition mechanism that will be used for teradata read in parallel. Possible values include: "None", "Hash", "DynamicRange".
 *
 * @schema #/definitions/teradataSourcePartitionOption
 */
export interface TeradataSourcePartitionOption {
}

/**
 * The settings that will be leveraged for teradata source partitioning.
 *
 * @schema #/definitions/TeradataPartitionSettings
 */
export interface TeradataPartitionSettings {
  /**
   * The name of the column that will be used for proceeding range or hash partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataPartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: TeradataPartitionSettingsPartitionColumnName;

  /**
   * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataPartitionSettings#partitionLowerBound
   */
  readonly partitionLowerBound?: TeradataPartitionSettingsPartitionLowerBound;

  /**
   * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/TeradataPartitionSettings#partitionUpperBound
   */
  readonly partitionUpperBound?: TeradataPartitionSettingsPartitionUpperBound;

}

/**
 * Teradata query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataSourceQuery
 */
export interface TeradataSourceQuery {
}

export enum TeradataSourceType {
  TERADATA_SOURCE = 'TeradataSource',
}

export enum CassandraSourceConsistencyLevel {
  ALL = 'ALL',
  EACH_QUORUM = 'EACH_QUORUM',
  QUORUM = 'QUORUM',
  LOCAL_QUORUM = 'LOCAL_QUORUM',
  ONE = 'ONE',
  TWO = 'TWO',
  THREE = 'THREE',
  LOCAL_ONE = 'LOCAL_ONE',
  SERIAL = 'SERIAL',
  LOCAL_SERIAL = 'LOCAL_SERIAL',
}

/**
 * Database query. Should be a SQL-92 query expression or Cassandra Query Language (CQL) command. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/cassandraSourceQuery
 */
export interface CassandraSourceQuery {
}

export enum CassandraSourceType {
  CASSANDRA_SOURCE = 'CassandraSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonMwsSourceQuery
 */
export interface AmazonMwsSourceQuery {
}

export enum AmazonMwsSourceType {
  AMAZON_MWS_SOURCE = 'AmazonMWSSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azurePostgreSqlSourceQuery
 */
export interface AzurePostgreSqlSourceQuery {
}

export enum AzurePostgreSqlSourceType {
  AZURE_POSTGRE_SQL_SOURCE = 'AzurePostgreSqlSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/concurSourceQuery
 */
export interface ConcurSourceQuery {
}

export enum ConcurSourceType {
  CONCUR_SOURCE = 'ConcurSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/couchbaseSourceQuery
 */
export interface CouchbaseSourceQuery {
}

export enum CouchbaseSourceType {
  COUCHBASE_SOURCE = 'CouchbaseSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/drillSourceQuery
 */
export interface DrillSourceQuery {
}

export enum DrillSourceType {
  DRILL_SOURCE = 'DrillSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/eloquaSourceQuery
 */
export interface EloquaSourceQuery {
}

export enum EloquaSourceType {
  ELOQUA_SOURCE = 'EloquaSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleBigQuerySourceQuery
 */
export interface GoogleBigQuerySourceQuery {
}

export enum GoogleBigQuerySourceType {
  GOOGLE_BIG_QUERY_SOURCE = 'GoogleBigQuerySource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/greenplumSourceQuery
 */
export interface GreenplumSourceQuery {
}

export enum GreenplumSourceType {
  GREENPLUM_SOURCE = 'GreenplumSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hBaseSourceQuery
 */
export interface HBaseSourceQuery {
}

export enum HBaseSourceType {
  H_BASE_SOURCE = 'HBaseSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hiveSourceQuery
 */
export interface HiveSourceQuery {
}

export enum HiveSourceType {
  HIVE_SOURCE = 'HiveSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/hubspotSourceQuery
 */
export interface HubspotSourceQuery {
}

export enum HubspotSourceType {
  HUBSPOT_SOURCE = 'HubspotSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/impalaSourceQuery
 */
export interface ImpalaSourceQuery {
}

export enum ImpalaSourceType {
  IMPALA_SOURCE = 'ImpalaSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/jiraSourceQuery
 */
export interface JiraSourceQuery {
}

export enum JiraSourceType {
  JIRA_SOURCE = 'JiraSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/magentoSourceQuery
 */
export interface MagentoSourceQuery {
}

export enum MagentoSourceType {
  MAGENTO_SOURCE = 'MagentoSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mariaDbSourceQuery
 */
export interface MariaDbSourceQuery {
}

export enum MariaDbSourceType {
  MARIA_DB_SOURCE = 'MariaDBSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureMariaDbSourceQuery
 */
export interface AzureMariaDbSourceQuery {
}

export enum AzureMariaDbSourceType {
  AZURE_MARIA_DB_SOURCE = 'AzureMariaDBSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/marketoSourceQuery
 */
export interface MarketoSourceQuery {
}

export enum MarketoSourceType {
  MARKETO_SOURCE = 'MarketoSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/paypalSourceQuery
 */
export interface PaypalSourceQuery {
}

export enum PaypalSourceType {
  PAYPAL_SOURCE = 'PaypalSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/phoenixSourceQuery
 */
export interface PhoenixSourceQuery {
}

export enum PhoenixSourceType {
  PHOENIX_SOURCE = 'PhoenixSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/prestoSourceQuery
 */
export interface PrestoSourceQuery {
}

export enum PrestoSourceType {
  PRESTO_SOURCE = 'PrestoSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/quickBooksSourceQuery
 */
export interface QuickBooksSourceQuery {
}

export enum QuickBooksSourceType {
  QUICK_BOOKS_SOURCE = 'QuickBooksSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/serviceNowSourceQuery
 */
export interface ServiceNowSourceQuery {
}

export enum ServiceNowSourceType {
  SERVICE_NOW_SOURCE = 'ServiceNowSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/shopifySourceQuery
 */
export interface ShopifySourceQuery {
}

export enum ShopifySourceType {
  SHOPIFY_SOURCE = 'ShopifySource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sparkSourceQuery
 */
export interface SparkSourceQuery {
}

export enum SparkSourceType {
  SPARK_SOURCE = 'SparkSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/squareSourceQuery
 */
export interface SquareSourceQuery {
}

export enum SquareSourceType {
  SQUARE_SOURCE = 'SquareSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/xeroSourceQuery
 */
export interface XeroSourceQuery {
}

export enum XeroSourceType {
  XERO_SOURCE = 'XeroSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/zohoSourceQuery
 */
export interface ZohoSourceQuery {
}

export enum ZohoSourceType {
  ZOHO_SOURCE = 'ZohoSource',
}

/**
 * The partition mechanism that will be used for Netezza read in parallel. Possible values include: "None", "DataSlice", "DynamicRange".
 *
 * @schema #/definitions/netezzaSourcePartitionOption
 */
export interface NetezzaSourcePartitionOption {
}

/**
 * The settings that will be leveraged for Netezza source partitioning.
 *
 * @schema #/definitions/NetezzaPartitionSettings
 */
export interface NetezzaPartitionSettings {
  /**
   * The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaPartitionSettings#partitionColumnName
   */
  readonly partitionColumnName?: NetezzaPartitionSettingsPartitionColumnName;

  /**
   * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaPartitionSettings#partitionLowerBound
   */
  readonly partitionLowerBound?: NetezzaPartitionSettingsPartitionLowerBound;

  /**
   * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/NetezzaPartitionSettings#partitionUpperBound
   */
  readonly partitionUpperBound?: NetezzaPartitionSettingsPartitionUpperBound;

}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaSourceQuery
 */
export interface NetezzaSourceQuery {
}

export enum NetezzaSourceType {
  NETEZZA_SOURCE = 'NetezzaSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/verticaSourceQuery
 */
export interface VerticaSourceQuery {
}

export enum VerticaSourceType {
  VERTICA_SOURCE = 'VerticaSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/salesforceMarketingCloudSourceQuery
 */
export interface SalesforceMarketingCloudSourceQuery {
}

export enum SalesforceMarketingCloudSourceType {
  SALESFORCE_MARKETING_CLOUD_SOURCE = 'SalesforceMarketingCloudSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/responsysSourceQuery
 */
export interface ResponsysSourceQuery {
}

export enum ResponsysSourceType {
  RESPONSYS_SOURCE = 'ResponsysSource',
}

/**
 * The timeout (TimeSpan) to get an HTTP response. It is the timeout to get a response, not the timeout to read response data. Default value: 00:05:00. Type: string (or Expression with resultType string), pattern: ((\d+)\.)?(\d\d):(60|([0-5][0-9])):(60|([0-5][0-9])).
 *
 * @schema #/definitions/dynamicsAxSourceHttpRequestTimeout
 */
export interface DynamicsAxSourceHttpRequestTimeout {
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/dynamicsAxSourceQuery
 */
export interface DynamicsAxSourceQuery {
}

export enum DynamicsAxSourceType {
  DYNAMICS_AX_SOURCE = 'DynamicsAXSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oracleServiceCloudSourceQuery
 */
export interface OracleServiceCloudSourceQuery {
}

export enum OracleServiceCloudSourceType {
  ORACLE_SERVICE_CLOUD_SOURCE = 'OracleServiceCloudSource',
}

/**
 * A query to retrieve data from source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/googleAdWordsSourceQuery
 */
export interface GoogleAdWordsSourceQuery {
}

export enum GoogleAdWordsSourceType {
  GOOGLE_AD_WORDS_SOURCE = 'GoogleAdWordsSource',
}

/**
 * Database query. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/amazonRedshiftSourceQuery
 */
export interface AmazonRedshiftSourceQuery {
}

/**
 * The Amazon S3 settings needed for the interim Amazon S3 when copying from Amazon Redshift with unload. With this, data from Amazon Redshift source will be unloaded into S3 first and then copied into the targeted sink from the interim S3.
 *
 * @schema #/definitions/RedshiftUnloadSettings
 */
export interface RedshiftUnloadSettings {
  /**
   * The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
   *
   * @schema #/definitions/RedshiftUnloadSettings#bucketName
   */
  readonly bucketName: RedshiftUnloadSettingsBucketName;

  /**
   * Linked service reference type.
   *
   * @schema #/definitions/RedshiftUnloadSettings#s3LinkedServiceName
   */
  readonly s3LinkedServiceName: LinkedServiceReference;

}

export enum AmazonRedshiftSourceType {
  AMAZON_REDSHIFT_SOURCE = 'AmazonRedshiftSource',
}

/**
 * Specifies the Distcp options. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/distcpSettingsDistcpOptions
 */
export interface DistcpSettingsDistcpOptions {
}

/**
 * Specifies the Yarn ResourceManager endpoint. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/distcpSettingsResourceManagerEndpoint
 */
export interface DistcpSettingsResourceManagerEndpoint {
}

/**
 * Specifies an existing folder path which will be used to store temp Distcp command script. The script file is generated by ADF and will be removed after Copy job finished. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/distcpSettingsTempScriptPath
 */
export interface DistcpSettingsTempScriptPath {
}

/**
 * The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oraclePartitionSettingsPartitionColumnName
 */
export interface OraclePartitionSettingsPartitionColumnName {
}

/**
 * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oraclePartitionSettingsPartitionLowerBound
 */
export interface OraclePartitionSettingsPartitionLowerBound {
}

/**
 * Names of the physical partitions of Oracle table. 
 *
 * @schema #/definitions/oraclePartitionSettingsPartitionNames
 */
export interface OraclePartitionSettingsPartitionNames {
}

/**
 * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/oraclePartitionSettingsPartitionUpperBound
 */
export interface OraclePartitionSettingsPartitionUpperBound {
}

/**
 * @schema #/definitions/mongoDbCursorMethodsPropertiesAdditionalProperties
 */
export interface MongoDbCursorMethodsPropertiesAdditionalProperties {
}

/**
 * Specifies the maximum number of documents the server returns. limit() is analogous to the LIMIT statement in a SQL database. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/mongoDbCursorMethodsPropertiesLimit
 */
export interface MongoDbCursorMethodsPropertiesLimit {
}

/**
 * Specifies the fields to return in the documents that match the query filter. To return all fields in the matching documents, omit this parameter. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbCursorMethodsPropertiesProject
 */
export interface MongoDbCursorMethodsPropertiesProject {
}

/**
 * Specifies the how many documents skipped and where MongoDB begins returning results. This approach may be useful in implementing paginated results. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/mongoDbCursorMethodsPropertiesSkip
 */
export interface MongoDbCursorMethodsPropertiesSkip {
}

/**
 * Specifies the order in which the query returns matching documents. Type: string (or Expression with resultType string). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/mongoDbCursorMethodsPropertiesSort
 */
export interface MongoDbCursorMethodsPropertiesSort {
}

/**
 * @schema #/definitions/snowflakeExportCopyCommandAdditionalCopyOptions
 */
export interface SnowflakeExportCopyCommandAdditionalCopyOptions {
}

/**
 * @schema #/definitions/snowflakeExportCopyCommandAdditionalFormatOptions
 */
export interface SnowflakeExportCopyCommandAdditionalFormatOptions {
}

/**
 * @schema #/definitions/snowflakeExportCopyCommandAdditionalProperties
 */
export interface SnowflakeExportCopyCommandAdditionalProperties {
}

/**
 * @schema #/definitions/azureDatabricksDeltaLakeExportCommandAdditionalProperties
 */
export interface AzureDatabricksDeltaLakeExportCommandAdditionalProperties {
}

/**
 * Specify the date format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeExportCommandDateFormat
 */
export interface AzureDatabricksDeltaLakeExportCommandDateFormat {
}

/**
 * Specify the timestamp format for the csv in Azure Databricks Delta Lake Copy. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/azureDatabricksDeltaLakeExportCommandTimestampFormat
 */
export interface AzureDatabricksDeltaLakeExportCommandTimestampFormat {
}

/**
 * Domain for windows authentication.
 *
 * @schema #/definitions/ssisAccessCredentialDomain
 */
export interface SsisAccessCredentialDomain {
}

/**
 * UseName for windows authentication.
 *
 * @schema #/definitions/ssisAccessCredentialUserName
 */
export interface SsisAccessCredentialUserName {
}

/**
 * Content for embedded child package. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisChildPackagePackageContent
 */
export interface SsisChildPackagePackageContent {
}

/**
 * Path for embedded child package. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/ssisChildPackagePackagePath
 */
export interface SsisChildPackagePackagePath {
}

/**
 * The ZipDeflate compression read settings.
 *
 * @schema #/definitions/ZipDeflateReadSettings
 */
export interface ZipDeflateReadSettings {
  /**
   * Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/ZipDeflateReadSettings#preserveZipFileNameAsFolder
   */
  readonly preserveZipFileNameAsFolder?: ZipDeflateReadSettingsPreserveZipFileNameAsFolder;

  /**
   * @schema #/definitions/ZipDeflateReadSettings#type
   */
  readonly type: ZipDeflateReadSettingsType;

}

/**
 * The Tar compression read settings.
 *
 * @schema #/definitions/TarReadSettings
 */
export interface TarReadSettings {
  /**
   * Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/TarReadSettings#preserveCompressionFileNameAsFolder
   */
  readonly preserveCompressionFileNameAsFolder?: TarReadSettingsPreserveCompressionFileNameAsFolder;

  /**
   * @schema #/definitions/TarReadSettings#type
   */
  readonly type: TarReadSettingsType;

}

/**
 * The TarGZip compression read settings.
 *
 * @schema #/definitions/TarGZipReadSettings
 */
export interface TarGZipReadSettings {
  /**
   * Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
   *
   * @schema #/definitions/TarGZipReadSettings#preserveCompressionFileNameAsFolder
   */
  readonly preserveCompressionFileNameAsFolder?: TarGZipReadSettingsPreserveCompressionFileNameAsFolder;

  /**
   * @schema #/definitions/TarGZipReadSettings#type
   */
  readonly type: TarGZipReadSettingsType;

}

/**
 * Specifies the timeout for writing each chunk to SFTP server. Default value: 01:00:00 (one hour). Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sftpWriteSettingsOperationTimeout
 */
export interface SftpWriteSettingsOperationTimeout {
}

export enum SftpWriteSettingsType {
  SFTP_WRITE_SETTINGS = 'SftpWriteSettings',
}

/**
 * Upload to temporary file(s) and rename. Disable this option if your SFTP server doesn't support rename operation. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/sftpWriteSettingsUseTempFileRename
 */
export interface SftpWriteSettingsUseTempFileRename {
}

/**
 * Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/azureBlobStorageWriteSettingsBlockSizeInMb
 */
export interface AzureBlobStorageWriteSettingsBlockSizeInMb {
}

export enum AzureBlobStorageWriteSettingsType {
  AZURE_BLOB_STORAGE_WRITE_SETTINGS = 'AzureBlobStorageWriteSettings',
}

/**
 * Indicates the block size(MB) when writing data to blob. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/azureBlobFsWriteSettingsBlockSizeInMb
 */
export interface AzureBlobFsWriteSettingsBlockSizeInMb {
}

export enum AzureBlobFsWriteSettingsType {
  AZURE_BLOB_FS_WRITE_SETTINGS = 'AzureBlobFSWriteSettings',
}

/**
 * Specifies the expiry time of the written files. The time is applied to the UTC time zone in the format of "2018-12-01T05:00:00Z". Default value is NULL. Type: integer (or Expression with resultType integer).
 *
 * @schema #/definitions/azureDataLakeStoreWriteSettingsExpiryDateTime
 */
export interface AzureDataLakeStoreWriteSettingsExpiryDateTime {
}

export enum AzureDataLakeStoreWriteSettingsType {
  AZURE_DATA_LAKE_STORE_WRITE_SETTINGS = 'AzureDataLakeStoreWriteSettings',
}

export enum FileServerWriteSettingsType {
  FILE_SERVER_WRITE_SETTINGS = 'FileServerWriteSettings',
}

export enum AzureFileStorageWriteSettingsType {
  AZURE_FILE_STORAGE_WRITE_SETTINGS = 'AzureFileStorageWriteSettings',
}

/**
 * Column name. Type: object (or Expression with resultType string).
 *
 * @schema #/definitions/dwCopyCommandDefaultValueColumnName
 */
export interface DwCopyCommandDefaultValueColumnName {
}

/**
 * The default value of the column. Type: object (or Expression with resultType string).
 *
 * @schema #/definitions/dwCopyCommandDefaultValueDefaultValue
 */
export interface DwCopyCommandDefaultValueDefaultValue {
}

/**
 * The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapHanaPartitionSettingsPartitionColumnName
 */
export interface SapHanaPartitionSettingsPartitionColumnName {
}

/**
 * The maximum value of partitions the table will be split into. Type: integer (or Expression with resultType string).
 *
 * @schema #/definitions/sapTablePartitionSettingsMaxPartitionsNumber
 */
export interface SapTablePartitionSettingsMaxPartitionsNumber {
}

/**
 * The name of the column that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTablePartitionSettingsPartitionColumnName
 */
export interface SapTablePartitionSettingsPartitionColumnName {
}

/**
 * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTablePartitionSettingsPartitionLowerBound
 */
export interface SapTablePartitionSettingsPartitionLowerBound {
}

/**
 * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sapTablePartitionSettingsPartitionUpperBound
 */
export interface SapTablePartitionSettingsPartitionUpperBound {
}

/**
 * The name of the column in integer or datetime type that will be used for proceeding partitioning. If not specified, the primary key of the table is auto-detected and used as the partition column. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlPartitionSettingsPartitionColumnName
 */
export interface SqlPartitionSettingsPartitionColumnName {
}

/**
 * The minimum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlPartitionSettingsPartitionLowerBound
 */
export interface SqlPartitionSettingsPartitionLowerBound {
}

/**
 * The maximum value of the partition column for partition range splitting. This value is used to decide the partition stride, not for filtering the rows in table. All rows in the table or query result will be partitioned and copied. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/sqlPartitionSettingsPartitionUpperBound
 */
export interface SqlPartitionSettingsPartitionUpperBound {
}

/**
 * The name of the column that will be used for proceeding range or hash partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataPartitionSettingsPartitionColumnName
 */
export interface TeradataPartitionSettingsPartitionColumnName {
}

/**
 * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataPartitionSettingsPartitionLowerBound
 */
export interface TeradataPartitionSettingsPartitionLowerBound {
}

/**
 * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/teradataPartitionSettingsPartitionUpperBound
 */
export interface TeradataPartitionSettingsPartitionUpperBound {
}

/**
 * The name of the column in integer type that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaPartitionSettingsPartitionColumnName
 */
export interface NetezzaPartitionSettingsPartitionColumnName {
}

/**
 * The minimum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaPartitionSettingsPartitionLowerBound
 */
export interface NetezzaPartitionSettingsPartitionLowerBound {
}

/**
 * The maximum value of column specified in partitionColumnName that will be used for proceeding range partitioning. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/netezzaPartitionSettingsPartitionUpperBound
 */
export interface NetezzaPartitionSettingsPartitionUpperBound {
}

/**
 * The bucket of the interim Amazon S3 which will be used to store the unloaded data from Amazon Redshift source. The bucket must be in the same region as the Amazon Redshift source. Type: string (or Expression with resultType string).
 *
 * @schema #/definitions/redshiftUnloadSettingsBucketName
 */
export interface RedshiftUnloadSettingsBucketName {
}

/**
 * Preserve the zip file name as folder path. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/zipDeflateReadSettingsPreserveZipFileNameAsFolder
 */
export interface ZipDeflateReadSettingsPreserveZipFileNameAsFolder {
}

export enum ZipDeflateReadSettingsType {
  ZIP_DEFLATE_READ_SETTINGS = 'ZipDeflateReadSettings',
}

/**
 * Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/tarReadSettingsPreserveCompressionFileNameAsFolder
 */
export interface TarReadSettingsPreserveCompressionFileNameAsFolder {
}

export enum TarReadSettingsType {
  TAR_READ_SETTINGS = 'TarReadSettings',
}

/**
 * Preserve the compression file name as folder path. Type: boolean (or Expression with resultType boolean).
 *
 * @schema #/definitions/tarGZipReadSettingsPreserveCompressionFileNameAsFolder
 */
export interface TarGZipReadSettingsPreserveCompressionFileNameAsFolder {
}

export enum TarGZipReadSettingsType {
  TAR_G_ZIP_READ_SETTINGS = 'TarGZipReadSettings',
}

