// generated by armkit
import { ArmResource } from '@yetics/armkit-core';
import { Construct } from 'constructs';

/**
 * Microsoft.ServiceBus/namespaces
 *
 * @schema Microsoft.ServiceBus.namespaces
 */
export class Namespaces extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/AuthorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules
 */
export class NamespacesAuthorizationRules extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_AuthorizationRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesAuthorizationRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_AuthorizationRules',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs
 *
 * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs
 */
export class NamespacesDisasterRecoveryConfigs extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesDisasterRecoveryConfigsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_disasterRecoveryConfigs',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/migrationConfigurations
 *
 * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations
 */
export class NamespacesMigrationConfigurations extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_migrationConfigurations" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesMigrationConfigurationsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_migrationConfigurations',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/networkRuleSets
 *
 * @schema Microsoft.ServiceBus.namespaces_networkRuleSets
 */
export class NamespacesNetworkRuleSets extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_networkRuleSets" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesNetworkRuleSetsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_networkRuleSets',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/queues
 *
 * @schema Microsoft.ServiceBus.namespaces_queues
 */
export class NamespacesQueues extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_queues" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesQueuesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_queues',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/queues/authorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules
 */
export class NamespacesQueuesAuthorizationRules extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_queues_authorizationRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesQueuesAuthorizationRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_queues_authorizationRules',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/topics
 *
 * @schema Microsoft.ServiceBus.namespaces_topics
 */
export class NamespacesTopics extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_topics" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesTopicsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_topics',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/topics/authorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules
 */
export class NamespacesTopicsAuthorizationRules extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_topics_authorizationRules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesTopicsAuthorizationRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_topics_authorizationRules',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions
 */
export class NamespacesTopicsSubscriptions extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_topics_subscriptions" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesTopicsSubscriptionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_topics_subscriptions',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions/rules
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules
 */
export class NamespacesTopicsSubscriptionsRules extends ArmResource {
  /**
   * Defines a "Microsoft.ServiceBus.namespaces_topics_subscriptions_rules" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: NamespacesTopicsSubscriptionsRulesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'namespaces_topics_subscriptions_rules',
    });
  }
}

/**
 * Microsoft.ServiceBus/namespaces
 *
 * @schema Microsoft.ServiceBus.namespaces
 */
export interface NamespacesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesApiVersion;

  /**
   * The Geo-location where the resource lives
   *
   * @schema Microsoft.ServiceBus.namespaces#location
   */
  readonly location: string;

  /**
   * The namespace name.
   *
   * @schema Microsoft.ServiceBus.namespaces#name
   */
  readonly name: string;

  /**
   * Properties of the namespace.
   *
   * @schema Microsoft.ServiceBus.namespaces#properties
   */
  readonly properties: SbNamespaceProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces#resources
   */
  readonly resources?: MicrosoftServiceBusNamespacesResources[];

  /**
   * SKU of the namespace.
   *
   * @schema Microsoft.ServiceBus.namespaces#sku
   */
  readonly sku?: SbSku;

  /**
   * Resource tags
   *
   * @schema Microsoft.ServiceBus.namespaces#tags
   */
  readonly tags?: MicrosoftServiceBusNamespacesTags;

  /**
   * @schema Microsoft.ServiceBus.namespaces#type
   */
  readonly type: MicrosoftServiceBusNamespacesType;

}

/**
 * Microsoft.ServiceBus/namespaces/AuthorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules
 */
export interface NamespacesAuthorizationRulesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesAuthorizationRulesApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_AuthorizationRules#type
   */
  readonly type: MicrosoftServiceBusNamespacesAuthorizationRulesType;

}

/**
 * Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs
 *
 * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs
 */
export interface NamespacesDisasterRecoveryConfigsOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesDisasterRecoveryConfigsApiVersion;

  /**
   * The Disaster Recovery configuration name
   *
   * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs#name
   */
  readonly name: string;

  /**
   * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
   *
   * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs#properties
   */
  readonly properties: ArmDisasterRecoveryProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_disasterRecoveryConfigs#type
   */
  readonly type: MicrosoftServiceBusNamespacesDisasterRecoveryConfigsType;

}

/**
 * Microsoft.ServiceBus/namespaces/migrationConfigurations
 *
 * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations
 */
export interface NamespacesMigrationConfigurationsOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesMigrationConfigurationsApiVersion;

  /**
   * The configuration name. Should always be "$default".
   *
   * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations#name
   */
  readonly name: MicrosoftServiceBusNamespacesMigrationConfigurationsNamePattern;

  /**
   * Properties required to the Create Migration Configuration
   *
   * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations#properties
   */
  readonly properties: MigrationConfigPropertiesProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_migrationConfigurations#type
   */
  readonly type: MicrosoftServiceBusNamespacesMigrationConfigurationsType;

}

/**
 * Microsoft.ServiceBus/namespaces/networkRuleSets
 *
 * @schema Microsoft.ServiceBus.namespaces_networkRuleSets
 */
export interface NamespacesNetworkRuleSetsOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_networkRuleSets#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesNetworkRuleSetsApiVersion;

  /**
   * @schema Microsoft.ServiceBus.namespaces_networkRuleSets#name
   */
  readonly name: MicrosoftServiceBusNamespacesNetworkRuleSetsNamePattern;

  /**
   * NetworkRuleSet properties
   *
   * @schema Microsoft.ServiceBus.namespaces_networkRuleSets#properties
   */
  readonly properties: NetworkRuleSetProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_networkRuleSets#type
   */
  readonly type: MicrosoftServiceBusNamespacesNetworkRuleSetsType;

}

/**
 * Microsoft.ServiceBus/namespaces/queues
 *
 * @schema Microsoft.ServiceBus.namespaces_queues
 */
export interface NamespacesQueuesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_queues#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesQueuesApiVersion;

  /**
   * The queue name.
   *
   * @schema Microsoft.ServiceBus.namespaces_queues#name
   */
  readonly name: string;

  /**
   * The Queue Properties definition.
   *
   * @schema Microsoft.ServiceBus.namespaces_queues#properties
   */
  readonly properties: SbQueueProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_queues#resources
   */
  readonly resources?: NamespacesQueuesAuthorizationRulesChildResource[];

  /**
   * @schema Microsoft.ServiceBus.namespaces_queues#type
   */
  readonly type: MicrosoftServiceBusNamespacesQueuesType;

}

/**
 * Microsoft.ServiceBus/namespaces/queues/authorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules
 */
export interface NamespacesQueuesAuthorizationRulesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesQueuesAuthorizationRulesApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_queues_authorizationRules#type
   */
  readonly type: MicrosoftServiceBusNamespacesQueuesAuthorizationRulesType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics
 *
 * @schema Microsoft.ServiceBus.namespaces_topics
 */
export interface NamespacesTopicsOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_topics#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesTopicsApiVersion;

  /**
   * The topic name.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics#name
   */
  readonly name: string;

  /**
   * The Topic Properties definition.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics#properties
   */
  readonly properties: SbTopicProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics#resources
   */
  readonly resources?: MicrosoftServiceBusNamespacesTopicsResources[];

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics#type
   */
  readonly type: MicrosoftServiceBusNamespacesTopicsType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics/authorizationRules
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules
 */
export interface NamespacesTopicsAuthorizationRulesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesTopicsAuthorizationRulesApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_authorizationRules#type
   */
  readonly type: MicrosoftServiceBusNamespacesTopicsAuthorizationRulesType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions
 */
export interface NamespacesTopicsSubscriptionsOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesTopicsSubscriptionsApiVersion;

  /**
   * The subscription name.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions#name
   */
  readonly name: string;

  /**
   * Description of Subscription Resource.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions#properties
   */
  readonly properties: SbSubscriptionProperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions#resources
   */
  readonly resources?: NamespacesTopicsSubscriptionsRulesChildResource[];

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions#type
   */
  readonly type: MicrosoftServiceBusNamespacesTopicsSubscriptionsType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions/rules
 *
 * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules
 */
export interface NamespacesTopicsSubscriptionsRulesOptions {
  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules#apiVersion
   */
  readonly apiVersion?: MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesApiVersion;

  /**
   * The rule name.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules#name
   */
  readonly name: string;

  /**
   * Description of Rule Resource.
   *
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules#properties
   */
  readonly properties: Ruleproperties;

  /**
   * @schema Microsoft.ServiceBus.namespaces_topics_subscriptions_rules#type
   */
  readonly type: MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesType;

}

export enum MicrosoftServiceBusNamespacesApiVersion {
  "MicrosoftServiceBusNamespacesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * Properties of the namespace.
 *
 * @schema #/definitions/SBNamespaceProperties
 */
export interface SbNamespaceProperties {
}

/**
 * @schema MicrosoftServiceBusNamespacesResources
 */
export class MicrosoftServiceBusNamespacesResources {
  public static fromNamespacesAuthorizationRulesChildResource(value: NamespacesAuthorizationRulesChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  public static fromNamespacesNetworkRuleSetsChildResource(value: NamespacesNetworkRuleSetsChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  public static fromNamespacesQueuesChildResource(value: NamespacesQueuesChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  public static fromNamespacesTopicsChildResource(value: NamespacesTopicsChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  public static fromNamespacesDisasterRecoveryConfigsChildResource(value: NamespacesDisasterRecoveryConfigsChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  public static fromNamespacesMigrationConfigurationsChildResource(value: NamespacesMigrationConfigurationsChildResource): MicrosoftServiceBusNamespacesResources {
    return new MicrosoftServiceBusNamespacesResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

/**
 * SKU of the namespace.
 *
 * @schema #/definitions/SBSku
 */
export interface SbSku {
  /**
   * The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.
   *
   * @schema #/definitions/SBSku#capacity
   */
  readonly capacity?: number;

  /**
   * Name of this SKU.
   *
   * @schema #/definitions/SBSku#name
   */
  readonly name: SbSkuName;

  /**
   * The billing tier of this particular SKU.
   *
   * @schema #/definitions/SBSku#tier
   */
  readonly tier?: SbSkuTier;

}

/**
 * @schema MicrosoftServiceBusNamespacesTags
 */
export interface MicrosoftServiceBusNamespacesTags {
}

export enum MicrosoftServiceBusNamespacesType {
  "MicrosoftServiceBusNamespacesType_MICROSOFT_SERVICE_BUS_NAMESPACES" = 'Microsoft.ServiceBus/namespaces',
}

export enum MicrosoftServiceBusNamespacesAuthorizationRulesApiVersion {
  "MicrosoftServiceBusNamespacesAuthorizationRulesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * AuthorizationRule properties.
 *
 * @schema #/definitions/SBAuthorizationRuleProperties
 */
export interface SbAuthorizationRuleProperties {
  /**
   * The rights associated with the rule.
   *
   * @schema #/definitions/SBAuthorizationRuleProperties#rights
   */
  readonly rights: SbAuthorizationRulePropertiesRights[];

}

export enum MicrosoftServiceBusNamespacesAuthorizationRulesType {
  "MicrosoftServiceBusNamespacesAuthorizationRulesType_MICROSOFT_SERVICE_BUS_NAMESPACES_AUTHORIZATION_RULES" = 'Microsoft.ServiceBus/namespaces/AuthorizationRules',
}

export enum MicrosoftServiceBusNamespacesDisasterRecoveryConfigsApiVersion {
  "MicrosoftServiceBusNamespacesDisasterRecoveryConfigsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
 *
 * @schema #/definitions/ArmDisasterRecoveryProperties
 */
export interface ArmDisasterRecoveryProperties {
  /**
   * Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
   *
   * @schema #/definitions/ArmDisasterRecoveryProperties#alternateName
   */
  readonly alternateName?: string;

  /**
   * ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing
   *
   * @schema #/definitions/ArmDisasterRecoveryProperties#partnerNamespace
   */
  readonly partnerNamespace?: string;

}

export enum MicrosoftServiceBusNamespacesDisasterRecoveryConfigsType {
  "MicrosoftServiceBusNamespacesDisasterRecoveryConfigsType_MICROSOFT_SERVICE_BUS_NAMESPACES_DISASTER_RECOVERY_CONFIGS" = 'Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs',
}

export enum MicrosoftServiceBusNamespacesMigrationConfigurationsApiVersion {
  "MicrosoftServiceBusNamespacesMigrationConfigurationsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * @schema MicrosoftServiceBusNamespacesMigrationConfigurationsName
 */
export class MicrosoftServiceBusNamespacesMigrationConfigurationsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * Properties required to the Create Migration Configuration
 *
 * @schema #/definitions/MigrationConfigPropertiesProperties
 */
export interface MigrationConfigPropertiesProperties {
  /**
   * Name to access Standard Namespace after migration
   *
   * @schema #/definitions/MigrationConfigPropertiesProperties#postMigrationName
   */
  readonly postMigrationName: string;

  /**
   * Existing premium Namespace ARM Id name which has no entities, will be used for migration
   *
   * @schema #/definitions/MigrationConfigPropertiesProperties#targetNamespace
   */
  readonly targetNamespace: string;

}

export enum MicrosoftServiceBusNamespacesMigrationConfigurationsType {
  "MicrosoftServiceBusNamespacesMigrationConfigurationsType_MICROSOFT_SERVICE_BUS_NAMESPACES_MIGRATION_CONFIGURATIONS" = 'Microsoft.ServiceBus/namespaces/migrationConfigurations',
}

export enum MicrosoftServiceBusNamespacesNetworkRuleSetsApiVersion {
  "MicrosoftServiceBusNamespacesNetworkRuleSetsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * @schema MicrosoftServiceBusNamespacesNetworkRuleSetsName
 */
export class MicrosoftServiceBusNamespacesNetworkRuleSetsNamePattern {
  public static pattern(value: string): string {
    return value;
  }
}

/**
 * NetworkRuleSet properties
 *
 * @schema #/definitions/NetworkRuleSetProperties
 */
export interface NetworkRuleSetProperties {
  /**
   * Default Action for Network Rule Set.
   *
   * @schema #/definitions/NetworkRuleSetProperties#defaultAction
   */
  readonly defaultAction?: NetworkRuleSetPropertiesDefaultAction;

  /**
   * List of IpRules
   *
   * @schema #/definitions/NetworkRuleSetProperties#ipRules
   */
  readonly ipRules?: NwRuleSetIpRules[];

  /**
   * List VirtualNetwork Rules
   *
   * @schema #/definitions/NetworkRuleSetProperties#virtualNetworkRules
   */
  readonly virtualNetworkRules?: NwRuleSetVirtualNetworkRules[];

}

export enum MicrosoftServiceBusNamespacesNetworkRuleSetsType {
  "MicrosoftServiceBusNamespacesNetworkRuleSetsType_MICROSOFT_SERVICE_BUS_NAMESPACES_NETWORK_RULE_SETS" = 'Microsoft.ServiceBus/namespaces/networkRuleSets',
}

export enum MicrosoftServiceBusNamespacesQueuesApiVersion {
  "MicrosoftServiceBusNamespacesQueuesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * The Queue Properties definition.
 *
 * @schema #/definitions/SBQueueProperties
 */
export interface SbQueueProperties {
  /**
   * ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.
   *
   * @schema #/definitions/SBQueueProperties#autoDeleteOnIdle
   */
  readonly autoDeleteOnIdle?: string;

  /**
   * A value that indicates whether this queue has dead letter support when a message expires.
   *
   * @schema #/definitions/SBQueueProperties#deadLetteringOnMessageExpiration
   */
  readonly deadLetteringOnMessageExpiration?: boolean;

  /**
   * ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
   *
   * @schema #/definitions/SBQueueProperties#defaultMessageTimeToLive
   */
  readonly defaultMessageTimeToLive?: string;

  /**
   * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
   *
   * @schema #/definitions/SBQueueProperties#duplicateDetectionHistoryTimeWindow
   */
  readonly duplicateDetectionHistoryTimeWindow?: string;

  /**
   * Value that indicates whether server-side batched operations are enabled.
   *
   * @schema #/definitions/SBQueueProperties#enableBatchedOperations
   */
  readonly enableBatchedOperations?: boolean;

  /**
   * A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.
   *
   * @schema #/definitions/SBQueueProperties#enableExpress
   */
  readonly enableExpress?: boolean;

  /**
   * A value that indicates whether the queue is to be partitioned across multiple message brokers.
   *
   * @schema #/definitions/SBQueueProperties#enablePartitioning
   */
  readonly enablePartitioning?: boolean;

  /**
   * Queue/Topic name to forward the Dead Letter message
   *
   * @schema #/definitions/SBQueueProperties#forwardDeadLetteredMessagesTo
   */
  readonly forwardDeadLetteredMessagesTo?: string;

  /**
   * Queue/Topic name to forward the messages
   *
   * @schema #/definitions/SBQueueProperties#forwardTo
   */
  readonly forwardTo?: string;

  /**
   * ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.
   *
   * @schema #/definitions/SBQueueProperties#lockDuration
   */
  readonly lockDuration?: string;

  /**
   * The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.
   *
   * @schema #/definitions/SBQueueProperties#maxDeliveryCount
   */
  readonly maxDeliveryCount?: number;

  /**
   * The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.
   *
   * @default 1024.
   * @schema #/definitions/SBQueueProperties#maxSizeInMegabytes
   */
  readonly maxSizeInMegabytes?: number;

  /**
   * A value indicating if this queue requires duplicate detection.
   *
   * @schema #/definitions/SBQueueProperties#requiresDuplicateDetection
   */
  readonly requiresDuplicateDetection?: boolean;

  /**
   * A value that indicates whether the queue supports the concept of sessions.
   *
   * @schema #/definitions/SBQueueProperties#requiresSession
   */
  readonly requiresSession?: boolean;

  /**
   * Enumerates the possible values for the status of a messaging entity.
   *
   * @schema #/definitions/SBQueueProperties#status
   */
  readonly status?: SbQueuePropertiesStatus;

}

/**
 * Microsoft.ServiceBus/namespaces/queues/authorizationRules
 *
 * @schema #/definitions/namespaces_queues_authorizationRules_childResource
 */
export interface NamespacesQueuesAuthorizationRulesChildResource {
  /**
   * @schema #/definitions/namespaces_queues_authorizationRules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesQueuesAuthorizationRulesChildResourceApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema #/definitions/namespaces_queues_authorizationRules_childResource#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema #/definitions/namespaces_queues_authorizationRules_childResource#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema #/definitions/namespaces_queues_authorizationRules_childResource#type
   */
  readonly type: NamespacesQueuesAuthorizationRulesChildResourceType;

}

export enum MicrosoftServiceBusNamespacesQueuesType {
  "MicrosoftServiceBusNamespacesQueuesType_MICROSOFT_SERVICE_BUS_NAMESPACES_QUEUES" = 'Microsoft.ServiceBus/namespaces/queues',
}

export enum MicrosoftServiceBusNamespacesQueuesAuthorizationRulesApiVersion {
  "MicrosoftServiceBusNamespacesQueuesAuthorizationRulesApiVersion_2017_04_01" = '2017-04-01',
}

export enum MicrosoftServiceBusNamespacesQueuesAuthorizationRulesType {
  "MicrosoftServiceBusNamespacesQueuesAuthorizationRulesType_MICROSOFT_SERVICE_BUS_NAMESPACES_QUEUES_AUTHORIZATION_RULES" = 'Microsoft.ServiceBus/namespaces/queues/authorizationRules',
}

export enum MicrosoftServiceBusNamespacesTopicsApiVersion {
  "MicrosoftServiceBusNamespacesTopicsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * The Topic Properties definition.
 *
 * @schema #/definitions/SBTopicProperties
 */
export interface SbTopicProperties {
  /**
   * ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
   *
   * @schema #/definitions/SBTopicProperties#autoDeleteOnIdle
   */
  readonly autoDeleteOnIdle?: string;

  /**
   * ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
   *
   * @schema #/definitions/SBTopicProperties#defaultMessageTimeToLive
   */
  readonly defaultMessageTimeToLive?: string;

  /**
   * ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
   *
   * @schema #/definitions/SBTopicProperties#duplicateDetectionHistoryTimeWindow
   */
  readonly duplicateDetectionHistoryTimeWindow?: string;

  /**
   * Value that indicates whether server-side batched operations are enabled.
   *
   * @schema #/definitions/SBTopicProperties#enableBatchedOperations
   */
  readonly enableBatchedOperations?: boolean;

  /**
   * Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.
   *
   * @schema #/definitions/SBTopicProperties#enableExpress
   */
  readonly enableExpress?: boolean;

  /**
   * Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.
   *
   * @schema #/definitions/SBTopicProperties#enablePartitioning
   */
  readonly enablePartitioning?: boolean;

  /**
   * Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.
   *
   * @default 1024.
   * @schema #/definitions/SBTopicProperties#maxSizeInMegabytes
   */
  readonly maxSizeInMegabytes?: number;

  /**
   * Value indicating if this topic requires duplicate detection.
   *
   * @schema #/definitions/SBTopicProperties#requiresDuplicateDetection
   */
  readonly requiresDuplicateDetection?: boolean;

  /**
   * Enumerates the possible values for the status of a messaging entity.
   *
   * @schema #/definitions/SBTopicProperties#status
   */
  readonly status?: SbTopicPropertiesStatus;

  /**
   * Value that indicates whether the topic supports ordering.
   *
   * @schema #/definitions/SBTopicProperties#supportOrdering
   */
  readonly supportOrdering?: boolean;

}

/**
 * @schema MicrosoftServiceBusNamespacesTopicsResources
 */
export class MicrosoftServiceBusNamespacesTopicsResources {
  public static fromNamespacesTopicsAuthorizationRulesChildResource(value: NamespacesTopicsAuthorizationRulesChildResource): MicrosoftServiceBusNamespacesTopicsResources {
    return new MicrosoftServiceBusNamespacesTopicsResources(value);
  }
  public static fromNamespacesTopicsSubscriptionsChildResource(value: NamespacesTopicsSubscriptionsChildResource): MicrosoftServiceBusNamespacesTopicsResources {
    return new MicrosoftServiceBusNamespacesTopicsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftServiceBusNamespacesTopicsType {
  "MicrosoftServiceBusNamespacesTopicsType_MICROSOFT_SERVICE_BUS_NAMESPACES_TOPICS" = 'Microsoft.ServiceBus/namespaces/topics',
}

export enum MicrosoftServiceBusNamespacesTopicsAuthorizationRulesApiVersion {
  "MicrosoftServiceBusNamespacesTopicsAuthorizationRulesApiVersion_2017_04_01" = '2017-04-01',
}

export enum MicrosoftServiceBusNamespacesTopicsAuthorizationRulesType {
  "MicrosoftServiceBusNamespacesTopicsAuthorizationRulesType_MICROSOFT_SERVICE_BUS_NAMESPACES_TOPICS_AUTHORIZATION_RULES" = 'Microsoft.ServiceBus/namespaces/topics/authorizationRules',
}

export enum MicrosoftServiceBusNamespacesTopicsSubscriptionsApiVersion {
  "MicrosoftServiceBusNamespacesTopicsSubscriptionsApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * Description of Subscription Resource.
 *
 * @schema #/definitions/SBSubscriptionProperties
 */
export interface SbSubscriptionProperties {
  /**
   * ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.
   *
   * @schema #/definitions/SBSubscriptionProperties#autoDeleteOnIdle
   */
  readonly autoDeleteOnIdle?: string;

  /**
   * Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.
   *
   * @schema #/definitions/SBSubscriptionProperties#deadLetteringOnFilterEvaluationExceptions
   */
  readonly deadLetteringOnFilterEvaluationExceptions?: boolean;

  /**
   * Value that indicates whether a subscription has dead letter support when a message expires.
   *
   * @schema #/definitions/SBSubscriptionProperties#deadLetteringOnMessageExpiration
   */
  readonly deadLetteringOnMessageExpiration?: boolean;

  /**
   * ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
   *
   * @schema #/definitions/SBSubscriptionProperties#defaultMessageTimeToLive
   */
  readonly defaultMessageTimeToLive?: string;

  /**
   * ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.
   *
   * @schema #/definitions/SBSubscriptionProperties#duplicateDetectionHistoryTimeWindow
   */
  readonly duplicateDetectionHistoryTimeWindow?: string;

  /**
   * Value that indicates whether server-side batched operations are enabled.
   *
   * @schema #/definitions/SBSubscriptionProperties#enableBatchedOperations
   */
  readonly enableBatchedOperations?: boolean;

  /**
   * Queue/Topic name to forward the Dead Letter message
   *
   * @schema #/definitions/SBSubscriptionProperties#forwardDeadLetteredMessagesTo
   */
  readonly forwardDeadLetteredMessagesTo?: string;

  /**
   * Queue/Topic name to forward the messages
   *
   * @schema #/definitions/SBSubscriptionProperties#forwardTo
   */
  readonly forwardTo?: string;

  /**
   * ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.
   *
   * @schema #/definitions/SBSubscriptionProperties#lockDuration
   */
  readonly lockDuration?: string;

  /**
   * Number of maximum deliveries.
   *
   * @schema #/definitions/SBSubscriptionProperties#maxDeliveryCount
   */
  readonly maxDeliveryCount?: number;

  /**
   * Value indicating if a subscription supports the concept of sessions.
   *
   * @schema #/definitions/SBSubscriptionProperties#requiresSession
   */
  readonly requiresSession?: boolean;

  /**
   * Enumerates the possible values for the status of a messaging entity.
   *
   * @schema #/definitions/SBSubscriptionProperties#status
   */
  readonly status?: SbSubscriptionPropertiesStatus;

}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions/rules
 *
 * @schema #/definitions/namespaces_topics_subscriptions_rules_childResource
 */
export interface NamespacesTopicsSubscriptionsRulesChildResource {
  /**
   * @schema #/definitions/namespaces_topics_subscriptions_rules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesTopicsSubscriptionsRulesChildResourceApiVersion;

  /**
   * The rule name.
   *
   * @schema #/definitions/namespaces_topics_subscriptions_rules_childResource#name
   */
  readonly name: string;

  /**
   * Description of Rule Resource.
   *
   * @schema #/definitions/namespaces_topics_subscriptions_rules_childResource#properties
   */
  readonly properties: Ruleproperties;

  /**
   * @schema #/definitions/namespaces_topics_subscriptions_rules_childResource#type
   */
  readonly type: NamespacesTopicsSubscriptionsRulesChildResourceType;

}

export enum MicrosoftServiceBusNamespacesTopicsSubscriptionsType {
  "MicrosoftServiceBusNamespacesTopicsSubscriptionsType_MICROSOFT_SERVICE_BUS_NAMESPACES_TOPICS_SUBSCRIPTIONS" = 'Microsoft.ServiceBus/namespaces/topics/subscriptions',
}

export enum MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesApiVersion {
  "MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesApiVersion_2017_04_01" = '2017-04-01',
}

/**
 * Description of Rule Resource.
 *
 * @schema #/definitions/Ruleproperties
 */
export interface Ruleproperties {
  /**
   * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
   *
   * @schema #/definitions/Ruleproperties#action
   */
  readonly action?: Action;

  /**
   * Represents the correlation filter expression.
   *
   * @schema #/definitions/Ruleproperties#correlationFilter
   */
  readonly correlationFilter?: CorrelationFilter;

  /**
   * Filter type that is evaluated against a BrokeredMessage.
   *
   * @schema #/definitions/Ruleproperties#filterType
   */
  readonly filterType?: RulepropertiesFilterType;

  /**
   * Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
   *
   * @schema #/definitions/Ruleproperties#sqlFilter
   */
  readonly sqlFilter?: SqlFilter;

}

export enum MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesType {
  "MicrosoftServiceBusNamespacesTopicsSubscriptionsRulesType_MICROSOFT_SERVICE_BUS_NAMESPACES_TOPICS_SUBSCRIPTIONS_RULES" = 'Microsoft.ServiceBus/namespaces/topics/subscriptions/rules',
}

/**
 * Microsoft.ServiceBus/namespaces/AuthorizationRules
 *
 * @schema #/definitions/namespaces_AuthorizationRules_childResource
 */
export interface NamespacesAuthorizationRulesChildResource {
  /**
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesAuthorizationRulesChildResourceApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema #/definitions/namespaces_AuthorizationRules_childResource#type
   */
  readonly type: NamespacesAuthorizationRulesChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/networkRuleSets
 *
 * @schema #/definitions/namespaces_networkRuleSets_childResource
 */
export interface NamespacesNetworkRuleSetsChildResource {
  /**
   * @schema #/definitions/namespaces_networkRuleSets_childResource#apiVersion
   */
  readonly apiVersion: NamespacesNetworkRuleSetsChildResourceApiVersion;

  /**
   * @schema #/definitions/namespaces_networkRuleSets_childResource#name
   */
  readonly name: NamespacesNetworkRuleSetsChildResourceName;

  /**
   * NetworkRuleSet properties
   *
   * @schema #/definitions/namespaces_networkRuleSets_childResource#properties
   */
  readonly properties: NetworkRuleSetProperties;

  /**
   * @schema #/definitions/namespaces_networkRuleSets_childResource#type
   */
  readonly type: NamespacesNetworkRuleSetsChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/queues
 *
 * @schema #/definitions/namespaces_queues_childResource
 */
export interface NamespacesQueuesChildResource {
  /**
   * @schema #/definitions/namespaces_queues_childResource#apiVersion
   */
  readonly apiVersion: NamespacesQueuesChildResourceApiVersion;

  /**
   * The queue name.
   *
   * @schema #/definitions/namespaces_queues_childResource#name
   */
  readonly name: string;

  /**
   * The Queue Properties definition.
   *
   * @schema #/definitions/namespaces_queues_childResource#properties
   */
  readonly properties: SbQueueProperties;

  /**
   * @schema #/definitions/namespaces_queues_childResource#type
   */
  readonly type: NamespacesQueuesChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics
 *
 * @schema #/definitions/namespaces_topics_childResource
 */
export interface NamespacesTopicsChildResource {
  /**
   * @schema #/definitions/namespaces_topics_childResource#apiVersion
   */
  readonly apiVersion: NamespacesTopicsChildResourceApiVersion;

  /**
   * The topic name.
   *
   * @schema #/definitions/namespaces_topics_childResource#name
   */
  readonly name: string;

  /**
   * The Topic Properties definition.
   *
   * @schema #/definitions/namespaces_topics_childResource#properties
   */
  readonly properties: SbTopicProperties;

  /**
   * @schema #/definitions/namespaces_topics_childResource#type
   */
  readonly type: NamespacesTopicsChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs
 *
 * @schema #/definitions/namespaces_disasterRecoveryConfigs_childResource
 */
export interface NamespacesDisasterRecoveryConfigsChildResource {
  /**
   * @schema #/definitions/namespaces_disasterRecoveryConfigs_childResource#apiVersion
   */
  readonly apiVersion: NamespacesDisasterRecoveryConfigsChildResourceApiVersion;

  /**
   * The Disaster Recovery configuration name
   *
   * @schema #/definitions/namespaces_disasterRecoveryConfigs_childResource#name
   */
  readonly name: string;

  /**
   * Properties required to the Create Or Update Alias(Disaster Recovery configurations)
   *
   * @schema #/definitions/namespaces_disasterRecoveryConfigs_childResource#properties
   */
  readonly properties: ArmDisasterRecoveryProperties;

  /**
   * @schema #/definitions/namespaces_disasterRecoveryConfigs_childResource#type
   */
  readonly type: NamespacesDisasterRecoveryConfigsChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/migrationConfigurations
 *
 * @schema #/definitions/namespaces_migrationConfigurations_childResource
 */
export interface NamespacesMigrationConfigurationsChildResource {
  /**
   * @schema #/definitions/namespaces_migrationConfigurations_childResource#apiVersion
   */
  readonly apiVersion: NamespacesMigrationConfigurationsChildResourceApiVersion;

  /**
   * The configuration name. Should always be "$default".
   *
   * @schema #/definitions/namespaces_migrationConfigurations_childResource#name
   */
  readonly name: NamespacesMigrationConfigurationsChildResourceName;

  /**
   * Properties required to the Create Migration Configuration
   *
   * @schema #/definitions/namespaces_migrationConfigurations_childResource#properties
   */
  readonly properties: MigrationConfigPropertiesProperties;

  /**
   * @schema #/definitions/namespaces_migrationConfigurations_childResource#type
   */
  readonly type: NamespacesMigrationConfigurationsChildResourceType;

}

export enum SbSkuName {
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
}

export enum SbSkuTier {
  BASIC = 'Basic',
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
}

export enum SbAuthorizationRulePropertiesRights {
  MANAGE = 'Manage',
  SEND = 'Send',
  LISTEN = 'Listen',
}

export enum NetworkRuleSetPropertiesDefaultAction {
  ALLOW = 'Allow',
  DENY = 'Deny',
}

/**
 * Description of NetWorkRuleSet - IpRules resource.
 *
 * @schema #/definitions/NWRuleSetIpRules
 */
export interface NwRuleSetIpRules {
  /**
   * The IP Filter Action.
   *
   * @schema #/definitions/NWRuleSetIpRules#action
   */
  readonly action?: NwRuleSetIpRulesAction;

  /**
   * IP Mask
   *
   * @schema #/definitions/NWRuleSetIpRules#ipMask
   */
  readonly ipMask?: string;

}

/**
 * Description of VirtualNetworkRules - NetworkRules resource.
 *
 * @schema #/definitions/NWRuleSetVirtualNetworkRules
 */
export interface NwRuleSetVirtualNetworkRules {
  /**
   * Value that indicates whether to ignore missing VNet Service Endpoint
   *
   * @schema #/definitions/NWRuleSetVirtualNetworkRules#ignoreMissingVnetServiceEndpoint
   */
  readonly ignoreMissingVnetServiceEndpoint?: boolean;

  /**
   * Properties supplied for Subnet
   *
   * @schema #/definitions/NWRuleSetVirtualNetworkRules#subnet
   */
  readonly subnet?: Subnet;

}

export enum SbQueuePropertiesStatus {
  ACTIVE = 'Active',
  DISABLED = 'Disabled',
  RESTORING = 'Restoring',
  SEND_DISABLED = 'SendDisabled',
  RECEIVE_DISABLED = 'ReceiveDisabled',
  CREATING = 'Creating',
  DELETING = 'Deleting',
  RENAMING = 'Renaming',
  UNKNOWN = 'Unknown',
}

export enum NamespacesQueuesAuthorizationRulesChildResourceApiVersion {
  "NamespacesQueuesAuthorizationRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesQueuesAuthorizationRulesChildResourceType {
  AUTHORIZATION_RULES = 'authorizationRules',
}

export enum SbTopicPropertiesStatus {
  ACTIVE = 'Active',
  DISABLED = 'Disabled',
  RESTORING = 'Restoring',
  SEND_DISABLED = 'SendDisabled',
  RECEIVE_DISABLED = 'ReceiveDisabled',
  CREATING = 'Creating',
  DELETING = 'Deleting',
  RENAMING = 'Renaming',
  UNKNOWN = 'Unknown',
}

/**
 * Microsoft.ServiceBus/namespaces/topics/authorizationRules
 *
 * @schema #/definitions/namespaces_topics_authorizationRules_childResource
 */
export interface NamespacesTopicsAuthorizationRulesChildResource {
  /**
   * @schema #/definitions/namespaces_topics_authorizationRules_childResource#apiVersion
   */
  readonly apiVersion: NamespacesTopicsAuthorizationRulesChildResourceApiVersion;

  /**
   * The authorization rule name.
   *
   * @schema #/definitions/namespaces_topics_authorizationRules_childResource#name
   */
  readonly name: string;

  /**
   * AuthorizationRule properties.
   *
   * @schema #/definitions/namespaces_topics_authorizationRules_childResource#properties
   */
  readonly properties: SbAuthorizationRuleProperties;

  /**
   * @schema #/definitions/namespaces_topics_authorizationRules_childResource#type
   */
  readonly type: NamespacesTopicsAuthorizationRulesChildResourceType;

}

/**
 * Microsoft.ServiceBus/namespaces/topics/subscriptions
 *
 * @schema #/definitions/namespaces_topics_subscriptions_childResource
 */
export interface NamespacesTopicsSubscriptionsChildResource {
  /**
   * @schema #/definitions/namespaces_topics_subscriptions_childResource#apiVersion
   */
  readonly apiVersion: NamespacesTopicsSubscriptionsChildResourceApiVersion;

  /**
   * The subscription name.
   *
   * @schema #/definitions/namespaces_topics_subscriptions_childResource#name
   */
  readonly name: string;

  /**
   * Description of Subscription Resource.
   *
   * @schema #/definitions/namespaces_topics_subscriptions_childResource#properties
   */
  readonly properties: SbSubscriptionProperties;

  /**
   * @schema #/definitions/namespaces_topics_subscriptions_childResource#type
   */
  readonly type: NamespacesTopicsSubscriptionsChildResourceType;

}

export enum SbSubscriptionPropertiesStatus {
  ACTIVE = 'Active',
  DISABLED = 'Disabled',
  RESTORING = 'Restoring',
  SEND_DISABLED = 'SendDisabled',
  RECEIVE_DISABLED = 'ReceiveDisabled',
  CREATING = 'Creating',
  DELETING = 'Deleting',
  RENAMING = 'Renaming',
  UNKNOWN = 'Unknown',
}

export enum NamespacesTopicsSubscriptionsRulesChildResourceApiVersion {
  "NamespacesTopicsSubscriptionsRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesTopicsSubscriptionsRulesChildResourceType {
  RULES = 'rules',
}

/**
 * Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.
 *
 * @schema #/definitions/Action
 */
export interface Action {
  /**
   * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
   *
   * @schema #/definitions/Action#compatibilityLevel
   */
  readonly compatibilityLevel?: number;

  /**
   * Value that indicates whether the rule action requires preprocessing.
   *
   * @schema #/definitions/Action#requiresPreprocessing
   */
  readonly requiresPreprocessing?: boolean;

  /**
   * SQL expression. e.g. MyProperty='ABC'
   *
   * @schema #/definitions/Action#sqlExpression
   */
  readonly sqlExpression?: string;

}

/**
 * Represents the correlation filter expression.
 *
 * @schema #/definitions/CorrelationFilter
 */
export interface CorrelationFilter {
  /**
   * Content type of the message.
   *
   * @schema #/definitions/CorrelationFilter#contentType
   */
  readonly contentType?: string;

  /**
   * Identifier of the correlation.
   *
   * @schema #/definitions/CorrelationFilter#correlationId
   */
  readonly correlationId?: string;

  /**
   * Application specific label.
   *
   * @schema #/definitions/CorrelationFilter#label
   */
  readonly label?: string;

  /**
   * Identifier of the message.
   *
   * @schema #/definitions/CorrelationFilter#messageId
   */
  readonly messageId?: string;

  /**
   * dictionary object for custom filters
   *
   * @schema #/definitions/CorrelationFilter#properties
   */
  readonly properties?: CorrelationFilterProperties;

  /**
   * Address of the queue to reply to.
   *
   * @schema #/definitions/CorrelationFilter#replyTo
   */
  readonly replyTo?: string;

  /**
   * Session identifier to reply to.
   *
   * @schema #/definitions/CorrelationFilter#replyToSessionId
   */
  readonly replyToSessionId?: string;

  /**
   * Value that indicates whether the rule action requires preprocessing.
   *
   * @schema #/definitions/CorrelationFilter#requiresPreprocessing
   */
  readonly requiresPreprocessing?: boolean;

  /**
   * Session identifier.
   *
   * @schema #/definitions/CorrelationFilter#sessionId
   */
  readonly sessionId?: string;

  /**
   * Address to send to.
   *
   * @schema #/definitions/CorrelationFilter#to
   */
  readonly to?: string;

}

export enum RulepropertiesFilterType {
  SQL_FILTER = 'SqlFilter',
  CORRELATION_FILTER = 'CorrelationFilter',
}

/**
 * Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.
 *
 * @schema #/definitions/SqlFilter
 */
export interface SqlFilter {
  /**
   * This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.
   *
   * @schema #/definitions/SqlFilter#compatibilityLevel
   */
  readonly compatibilityLevel?: number;

  /**
   * Value that indicates whether the rule action requires preprocessing.
   *
   * @schema #/definitions/SqlFilter#requiresPreprocessing
   */
  readonly requiresPreprocessing?: boolean;

  /**
   * The SQL expression. e.g. MyProperty='ABC'
   *
   * @schema #/definitions/SqlFilter#sqlExpression
   */
  readonly sqlExpression?: string;

}

export enum NamespacesAuthorizationRulesChildResourceApiVersion {
  "NamespacesAuthorizationRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesAuthorizationRulesChildResourceType {
  AUTHORIZATION_RULES = 'AuthorizationRules',
}

export enum NamespacesNetworkRuleSetsChildResourceApiVersion {
  "NamespacesNetworkRuleSetsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesNetworkRuleSetsChildResourceName {
  DEFAULT = 'default',
}

export enum NamespacesNetworkRuleSetsChildResourceType {
  NETWORK_RULE_SETS = 'networkRuleSets',
}

export enum NamespacesQueuesChildResourceApiVersion {
  "NamespacesQueuesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesQueuesChildResourceType {
  QUEUES = 'queues',
}

export enum NamespacesTopicsChildResourceApiVersion {
  "NamespacesTopicsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesTopicsChildResourceType {
  TOPICS = 'topics',
}

export enum NamespacesDisasterRecoveryConfigsChildResourceApiVersion {
  "NamespacesDisasterRecoveryConfigsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesDisasterRecoveryConfigsChildResourceType {
  DISASTER_RECOVERY_CONFIGS = 'disasterRecoveryConfigs',
}

export enum NamespacesMigrationConfigurationsChildResourceApiVersion {
  "NamespacesMigrationConfigurationsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesMigrationConfigurationsChildResourceName {
  "NamespacesMigrationConfigurationsChildResourceName_DEFAULT" = '$default',
}

export enum NamespacesMigrationConfigurationsChildResourceType {
  MIGRATION_CONFIGURATIONS = 'migrationConfigurations',
}

export enum NwRuleSetIpRulesAction {
  ALLOW = 'Allow',
}

/**
 * Properties supplied for Subnet
 *
 * @schema #/definitions/Subnet
 */
export interface Subnet {
  /**
   * Resource ID of Virtual Network Subnet
   *
   * @schema #/definitions/Subnet#id
   */
  readonly id: string;

}

export enum NamespacesTopicsAuthorizationRulesChildResourceApiVersion {
  "NamespacesTopicsAuthorizationRulesChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesTopicsAuthorizationRulesChildResourceType {
  AUTHORIZATION_RULES = 'authorizationRules',
}

export enum NamespacesTopicsSubscriptionsChildResourceApiVersion {
  "NamespacesTopicsSubscriptionsChildResourceApiVersion_2017_04_01" = '2017-04-01',
}

export enum NamespacesTopicsSubscriptionsChildResourceType {
  SUBSCRIPTIONS = 'subscriptions',
}

/**
 * @schema #/definitions/correlationFilterProperties
 */
export interface CorrelationFilterProperties {
}

